{
  "version": 3,
  "sources": ["../src/commons/performance-logger.ts", "../src/player/constants.ts", "../src/utils/stringUtils.ts", "../package.json", "../src/commons/config.ts", "../src/lib/coralogix-logger.ts", "../src/lib/coralogix-winston.transport.ts", "../src/commons/logger.ts", "../src/errors.ts", "../src/utils/promiseUtils.ts", "../src/commons/httpRequestCounters.ts", "../src/commons/httpRequest.ts", "../src/utils/fsUtils.ts", "../src/commons/constants.ts", "../src/utils/argsUtils.ts", "../src/utils/timeUtils.ts", "../src/utils/mobileUtils.ts", "../src/utils/performanceUtils.ts", "../src/utils/index.ts", "../src/commons/mockNetworkRuleFileSchema.json", "../src/commons/runnerFileCache.ts", "../src/commons/logUtils.ts", "../src/commons/requireWithFallback.ts", "../src/commons/npmWrapper.ts", "../src/commons/featureFlagsService.ts", "../src/commons/chromedriverWrapper.ts", "../src/commons/prepareRunnerAndTestimStartUtils.ts", "../src/chromiumInstaller.ts", "../src/commons/testimCustomToken.ts", "../src/services/gridService.ts", "../src/services/branchService.ts", "../src/commons/testimAnalytics.ts", "../src/cli/isCiRun.ts", "../src/services/analyticsService.ts", "../src/reports/reporterUtils.ts", "../src/reports/debugReporter.ts", "../src/commons/featureAvailabilityService.ts", "../src/reports/consoleReporter.ts", "../src/reports/junitReporter.ts", "../src/reports/teamCityReporter.ts", "../src/reports/jsonReporter.ts", "../src/commons/chrome-launcher.ts", "../src/reports/chromeReporter.ts", "../src/reports/reporter.ts", "../src/services/concurrencyCompanyService.ts", "../src/processHandler.ts", "../src/commons/lazyRequire.ts", "../src/coverage/SummaryToObjectReport.ts", "../src/coverage/jsCoverage.ts", "../src/commons/SeleniumPerfStats.ts", "../src/services/localRCASaver.ts", "../src/OverrideTestDataBuilder.ts", "../src/testRunStatus.ts", "../src/runOptionsUtils.ts", "../src/services/lambdatestService.ts", "../src/commons/testimDesiredCapabilitiesBuilder.ts", "../src/player/webDriverUtils.ts", "../src/player/scripts/isElementDisplayed.ts", "../src/player/WebdriverioWebDriverApi.ts", "../src/commons/getSessionPlayerRequire.ts", "../src/player/stepActions/scripts/doubleClick.ts", "../src/player/stepActions/scripts/focusElement.ts", "../src/player/webdriver.ts", "../src/services/labFeaturesService.ts", "../src/agent/routers/cliJsCode/service.ts", "../src/stepPlayers/cliJsStepPlayback.ts", "../src/stepPlayers/nodePackageStepPlayback.ts", "../src/stepPlayers/remoteStepPlayback.ts", "../src/commons/preloadTests.ts", "../src/commons/socket/socketService.ts", "../src/commons/socket/baseSocketServiceSocketIO.ts", "../src/commons/socket/remoteStepServiceSocketIO.ts", "../src/commons/socket/remoteStepService.ts", "../src/commons/socket/testResultServiceSocketIO.ts", "../src/commons/socket/testResultService.ts", "../src/testRunHandler.ts", "../src/executionQueue.ts", "../src/runners/runnerUtils.ts", "../src/workers/workerUtils.ts", "../src/workers/BaseWorker.ts", "../src/player/utils/windowUtils.ts", "../src/player/utils/cookieUtils.ts", "../src/player/utils/screenshotUtils.ts", "../src/player/utils/imageCaptureUtils.ts", "../src/player/services/tabService.ts", "../src/player/services/portSelector.ts", "../src/player/utils/stepActionUtils.ts", "../src/player/services/frameLocator.ts", "../src/commons/detectDebugger.ts", "../src/player/stepActions/stepAction.ts", "../src/player/stepActions/locateStepAction.ts", "../src/player/stepActions/scripts/scroll.ts", "../src/player/stepActions/scrollStepAction.ts", "../src/player/stepActions/scripts/html5dragAction.ts", "../src/player/stepActions/scripts/html5dragActionV2.ts", "../src/player/stepActions/scripts/doClick.ts", "../src/player/stepActions/scripts/doDragPath.ts", "../src/player/stepActions/mouseStepAction.ts", "../src/player/stepActions/textValidationStepAction.ts", "../src/player/stepActions/evaluateExpressionStepAction.ts", "../src/player/stepActions/scripts/setText.ts", "../src/player/stepActions/textStepAction.ts", "../src/player/stepActions/scripts/runCode.ts", "../src/player/stepActions/baseJsStepAction.ts", "../src/player/stepActions/jsCodeStepAction.ts", "../src/player/stepActions/jsConditionStepAction.ts", "../src/player/stepActions/specialKeyStepAction.ts", "../src/player/stepActions/keyboardShortcutStepAction.ts", "../src/player/stepActions/scripts/selectOption.ts", "../src/player/stepActions/selectOptionStepAction.ts", "../src/player/stepActions/submitStepAction.ts", "../src/player/stepActions/hoverStepAction.ts", "../src/player/stepActions/scripts/wheel.ts", "../src/player/stepActions/wheelStepAction.ts", "../src/player/stepActions/scripts/dropEvent.ts", "../src/player/stepActions/dropFileStepAction.ts", "../src/inputFileUtils.ts", "../src/player/stepActions/inputFileStepAction.ts", "../src/player/stepActions/navigationStepAction.ts", "../src/player/stepActions/sleepStepAction.ts", "../src/player/stepActions/RefreshStepAction.ts", "../src/player/stepActions/apiStepAction.ts", "../src/player/stepActions/extractTextStepAction.ts", "../src/player/utils/eyeSdkService.ts", "../src/player/stepActions/pixelValidationStepAction.ts", "../src/player/stepActions/baseCliJsStepAction.ts", "../src/player/stepActions/cliJsStepAction.ts", "../src/player/stepActions/cliConditionStepAction.ts", "../src/player/stepActions/nodePackageStepAction.ts", "../src/player/stepActions/extensionOnlyStepAction.ts", "../src/player/stepActions/sfdcStepAction.ts", "../src/player/stepActions/sfdcRecordedStepAction.ts", "../src/player/stepActions/sfdcInternalTestStepAction.ts", "../src/player/stepActions/stepActionRegistrar.ts", "../src/player/services/playbackTimeoutCalculator.ts", "../src/player/seleniumTestPlayer.ts", "../src/workers/WorkerSelenium.ts", "../src/services/mobileGridService.ts", "../src/commons/appiumCapabilitiesBuilder.ts", "../src/player/services/tabServiceMock.ts", "../src/player/utils/mobileStepActionUtils.ts", "../src/player/services/mobileFrameLocatorMock.ts", "../src/player/appiumTestPlayer.ts", "../src/utils/tmaUtils.ts", "../src/workers/WorkerLocalTma.ts", "../src/workers/WorkerAppium.ts", "../src/player/extensionTestPlayer.ts", "../src/utils/network.ts", "../src/cdpTestRunner.ts", "../src/player/chromeLauncherTestPlayer.ts", "../src/workers/WorkerExtension.ts", "../src/workers/WorkerExtensionSingleBrowser.ts", "../src/runners/WorkerManager.ts", "../src/utils/color.ts", "../src/runners/TestPlanRunner.ts", "../src/commons/testimServicesApi.ts", "../src/testimNpmDriver.ts", "../src/commons/initializeUserWithAuth.ts", "../src/commons/prepareRunner.ts", "../src/runOptionsAgentFlow.ts", "../src/commons/secretsUtils.ts", "../src/credentialsManager.ts", "../src/runOptions.ts", "../src/commons/testimNgrok.ts", "../src/commons/testimCloudflare.ts", "../src/commons/testimTunnel.ts", "../src/runner.ts", "../src/agent/routers/general/index.ts", "../src/agent/routers/cliJsCode/router.ts", "../src/agent/routers/cliJsCode/index.ts", "../src/agent/routers/index.ts", "../src/agent/server.ts", "../src/cliAgentMode.ts", "../src/cli.ts", "../src/commons/xhr2.ts", "../src/polyfills/index.ts", "../src/cli/onExit.ts", "../src/cli/writeStackTrace.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\nconst MEASURE_TESTIM_CLI_PERFORMANCE = process.env.MEASURE_TESTIM_CLI_PERFORMANCE;\nconst epoch = Date.now();\nlet last = Date.now();\n\nexport function log(...args: any[]) {\n    if (!MEASURE_TESTIM_CLI_PERFORMANCE) {\n        return;\n    }\n    const time = Date.now();\n    console.log(`${time - epoch}\\t\\t\\t${time - last}\\t\\t\\t`, ...args);\n    last = time;\n}\n\nexport function measure(fn: () => void, fnName?: string) {\n    if (!MEASURE_TESTIM_CLI_PERFORMANCE) {\n        return;\n    }\n    const start = Date.now();\n    try {\n        fn();\n    } finally {\n        console.log(fnName || fn.name, 'took', Date.now() - start);\n    }\n}\n", "export const W3C_ELEMENT_ID = 'element-6066-11e4-a52e-4f735466cecf';\nexport const EDGE_CHROMIUM_MIN_VERSION = 79;\n", "export function guid(length = 16): string {\n    const a = 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        const index = Math.floor((Math.random() * (a.length)));\n        result += a[index];\n    }\n    return result;\n}\n\nexport function getTestUrl(editorUrl: string, projectId: string, testId: string, resultId?: string | null, branch?: string | null) {\n    let testUrl = '';\n    branch = branch ? encodeURIComponent(branch) : 'master';\n    if (projectId && testId) {\n        testUrl = `${editorUrl}/#/project/${projectId}/branch/${branch}/test/${testId}`;\n        if (resultId) {\n            testUrl += `?result-id=${resultId}`;\n        }\n    }\n    return testUrl;\n}\n\nexport function buildBasicHeader(userName: string, password: string) {\n    const userAndPasswordBase64 = Buffer.from(`${userName}:${password}`).toString('base64');\n    return `Basic ${userAndPasswordBase64}`;\n}\n\nexport function isURL(path: string) {\n    const legacyPattern = /^(https?:\\/\\/)/i;\n\n    // https://gist.github.com/dperini/729294 (validator.js based on).\n    const pattern = new RegExp(\n        '^' +\n        // protocol identifier (optional)\n        // short syntax // still required\n        '(?:(?:(?:https?|ftp):)?\\\\/\\\\/)' +\n        // user:pass BasicAuth (optional)\n        '(?:\\\\S+(?::\\\\S*)?@)?' +\n        '(?:' +\n        // IP address exclusion\n        // private & local networks\n        '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n        '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n        '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n        // IP address dotted notation octets\n        // excludes loopback network 0.0.0.0\n        // excludes reserved space >= 224.0.0.0\n        // excludes network & broadcast addresses\n        // (first & last IP address of each class)\n        '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n        '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n        '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n        '|' +\n        // host & domain names, may end with dot\n        // can be replaced by a shortest alternative\n        // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n        '(?:' +\n        '(?:' +\n        '[a-z0-9\\\\u00a1-\\\\uffff]' +\n        '[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}' +\n        ')?' +\n        '[a-z0-9\\\\u00a1-\\\\uffff]\\\\.' +\n        ')+' +\n        // TLD identifier name, may end with dot\n        '(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)' +\n        ')' +\n        // port number (optional)\n        '(?::\\\\d{2,5})?' +\n        // resource path (optional)\n        '(?:[/?#]\\\\S*)?' +\n        '$', 'i',\n    );\n\n    return legacyPattern.test(path) || pattern.test(path);\n}\n", "{\n  \"name\": \"@testim/testim-cli\",\n  \"version\": \"4.10.22\",\n  \"description\": \"Command line interface for running Testing on your CI\",\n  \"author\": \"Oren Rubin\",\n  \"contributors\": [\n    {\n      \"name\": \"Oren Rubin\",\n      \"email\": \"oren@testim.io\"\n    }\n  ],\n  \"bugs\": {\n    \"email\": \"info@testim.io\"\n  },\n  \"devDependencies\": {\n    \"@types/istanbul-lib-report\": \"3.0.3\",\n    \"@types/istanbul-reports\": \"3.0.4\",\n    \"@types/memory-fs\": \"0.3.3\",\n    \"@types/ms\": \"0.7.31\",\n    \"@types/node\": \"20.17.9\",\n    \"@types/node-fetch\": \"2.6.12\",\n    \"@types/promise-queue\": \"2.2.0\",\n    \"@types/prompts\": \"2.4.2\",\n    \"@types/selenium-webdriver\": \"4.0.9\",\n    \"@types/superagent-proxy\": \"3.0.4\",\n    \"@types/test-exclude\": \"6.0.0\",\n    \"@types/ua-parser-js\": \"0.7.39\",\n    \"@types/validate-npm-package-name\": \"3.0.3\",\n    \"bundle-deps\": \"1.0.0\",\n    \"esbuild\": \"0.17.10\",\n    \"glob\": \"7.2.0\",\n    \"proxyquire\": \"2.1.3\",\n    \"sinon\": \"9.0.2\",\n    \"sinon-chai\": \"3.7.0\",\n    \"ts-node\": \"9.1.1\",\n    \"tsconfig-paths\": \"3.12.0\"\n  },\n  \"lazyDependencies\": {\n    \"ngrok\": \"4.3.3\",\n    \"v8-to-istanbul\": \"9.1.0\",\n    \"istanbul-lib-coverage\": \"3.2.0\",\n    \"@bcoe/v8-coverage\": \"0.2.3\",\n    \"convert-source-map\": \"1.7.0\",\n    \"multer\": \"2.0.1\"\n  },\n  \"dependencies\": {\n    \"@applitools/eyes-sdk-core\": \"13.11.34-legacy.1\",\n    \"@applitools/spec-driver-webdriverio\": \"1.4.29\",\n    \"@segment/analytics-node\": \"2.1.3\",\n    \"@types/unzip-stream\": \"0.3.4\",\n    \"ajv\": \"6.12.6\",\n    \"body-parser\": \"1.20.3\",\n    \"chalk\": \"4.1.2\",\n    \"chrome-launcher\": \"0.15.0\",\n    \"commander\": \"10.0.0\",\n    \"compression\": \"1.7.4\",\n    \"cors\": \"2.8.5\",\n    \"data-uri-to-buffer\": \"2.0.2\",\n    \"dayjs\": \"1.11.8\",\n    \"eventsource\": \"3.0.6\",\n    \"express\": \"4.21.2\",\n    \"fkill\": \"7.2.1\",\n    \"form-data\": \"3.0.0\",\n    \"https-proxy-agent\": \"7.0.2\",\n    \"istanbul-lib-report\": \"3.0.0\",\n    \"istanbul-reports\": \"3.1.5\",\n    \"jimp\": \"1.1.4\",\n    \"jsonwebtoken\": \"9.0.0\",\n    \"linkedom\": \"0.18.0\",\n    \"lodash\": \"4.17.21\",\n    \"memory-fs\": \"0.5.0\",\n    \"ms\": \"2.1.2\",\n    \"node-fetch\": \"2.7.0\",\n    \"npm\": \"10.5.0\",\n    \"object-hash\": \"3.0.0\",\n    \"ora\": \"5.4.1\",\n    \"p-limit\": \"4.0.0\",\n    \"p-retry\": \"4.6.2\",\n    \"pako\": \"1.0.11\",\n    \"portfinder\": \"1.0.28\",\n    \"promise-queue\": \"2.2.5\",\n    \"prompts\": \"2.4.2\",\n    \"proxy-agent\": \"6.3.1\",\n    \"rox-node\": \"5.4.12\",\n    \"semver\": \"7.6.0\",\n    \"serialize-error\": \"7.0.1\",\n    \"socket.io-client\": \"4.8.0\",\n    \"source-map-support\": \"0.5.19\",\n    \"superagent\": \"9.0.1\",\n    \"superagent-proxy\": \"3.0.0\",\n    \"test-exclude\": \"7.0.0\",\n    \"ua-parser-js\": \"0.7.39\",\n    \"unzip-stream\": \"0.3.4\",\n    \"uuid\": \"11.0.5\",\n    \"validate-npm-package-name\": \"3.0.0\",\n    \"webdriverio\": \"8.44.1\",\n    \"winston\": \"3.11.0\",\n    \"winston-transport\": \"4.6.0\",\n    \"ws\": \"8.17.1\",\n    \"xml2js\": \"0.6.2\",\n    \"yaml\": \"2.2.2\"\n  },\n  \"peerDependencies\": {\n    \"vitest\": \"*\"\n  },\n  \"license\": \"Proprietary\",\n  \"bin\": {\n    \"testim\": \"cli.js\"\n  },\n  \"scripts\": {\n    \"start\": \"ts-node-transpile-only ./src/cli\",\n    \"test\": \"yarn test:vitest && yarn test:mocha\",\n    \"test:mocha\": \"yarn test:pattern './src/**/*.test.[jt]s'\",\n    \"test:vitest\": \"vitest\",\n    \"test:pattern\": \"IS_UNIT_TEST=1 ../../node_modules/mocha/bin/_mocha --timeout 2000 --exit --recursive --watch-files 'src' -r ts-node/register/transpile-only -r tsconfig-paths/register --reporter mocha-multi-reporters --reporter-options configFile=mochaReporterConfig.js\",\n    \"test:cov\": \"nyc --reporter=lcov --reporter=text yarn test\",\n    \"prepare-version\": \"rm -rf ./deploy && mkdir -p deploy && tsx buildTool prepare-version-on-prem\",\n    \"self-test\": \"cd /tmp && DEBUG=self-test BUILD_MAX_MEMORY=4096 tsx $(echo $GITHUB_WORKSPACE)/apps/runner/scripts/selfTest.ts\",\n    \"type-check\": \"node ../../scripts/type-check.mjs tsconfig.json\",\n    \"deploy\": \"timeout 1800 yarn tsx ./scripts/deploy\"\n  },\n  \"engines\": {\n    \"node\": \">= 18.0.0\"\n  },\n  \"overrides\": {\n    \"xml2js\": \"0.6.2\",\n    \"node-fetch\": \"2.7.0\",\n    \"http-cache-semantics\": \"4.1.1\",\n    \"tough-cookie\": \"4.1.3\",\n    \"degenerator\": \"5.0.1\",\n    \"semver\": \"7.6.0\",\n    \"ip\": \"2.0.1\"\n  }\n}\n", "'use strict';\n\nlet _SERVICES_HOST = process.env.SERVICES_HOST || 'https://services.testim.io';\nconst canonicalBlobURL = 'https://testimstatic.blob.core.windows.net';\nconst canonicalEdgeUrl = 'https://tstresultfiles.azureedge.net';\nexport const DEFAULT_EDITOR_URL = 'https://app.testim.io';\nif (process.env.GATEWAY_URL) {\n    process.env.CORALOGIX_URL = `${process.env.GATEWAY_URL}/testim/coralogix/api/v1/logs`;\n    process.env.SERVICES_HOST = `${process.env.GATEWAY_URL}/testim/services`;\n    // set the services for the extension\n    process.env.EXTENSION_SERVICES_HOST = process.env.TUNNEL_GATEWAY ? process.env.SERVICES_HOST : _SERVICES_HOST;\n    _SERVICES_HOST = process.env.SERVICES_HOST;\n}\n\ntype TestimRegion = 'us-west-2' | 'eu-central-1';\nexport const TESTIM_REGION: TestimRegion = process.env.TESTIM_REGION as TestimRegion || 'us-west-2';\n\ntype TRunnerEnvironment = 'development' | 'staging' | 'production';\nexport const RUNNER_ENVIRONMENT: TRunnerEnvironment = process.env.RUNNER_ENVIRONMENT as TRunnerEnvironment || 'production';\n\nconst ENV_DOMAIN_SUFFIX = {\n    production: '',\n    staging: '.staging',\n    development: '.dev',\n};\nexport const EXTENSION_SP_S3_HOST = process.env.EXTENSION_SP_S3_HOST || `https://playback-components${ENV_DOMAIN_SUFFIX[RUNNER_ENVIRONMENT as unknown as keyof typeof ENV_DOMAIN_SUFFIX]}.testim.io`;\n\nexport const DISABLE_AGENT_ORIGIN_CHECK = parseInt(process.env.DISABLE_AGENT_ORIGIN_CHECK || '0', 10);\nexport const DISABLE_DEBUGGER_INFINITE_TIMEOUT = parseInt(process.env.DISABLE_DEBUGGER_INFINITE_TIMEOUT || '0', 10);\nexport const OVERRIDE_TIMEOUTS = parseInt(process.env.OVERRIDE_TIMEOUTS || '0', 10);\nexport const EDITOR_URL = process.env.EDITOR_URL;\nexport const WEBSOCKET_HOST = process.env.WEBSOCKET_HOST || `${_SERVICES_HOST}/ws`;\nexport const SERVICES_HOST = () => _SERVICES_HOST;\nexport const LOGGER_CONSOLE = parseInt(process.env.LOGGER_CONSOLE || '0', 10);\nexport const LOGGER_DEBUG = parseInt(process.env.LOGGER_DEBUG || '0', 10);\nexport const WEBDRIVER_DEBUG = parseInt(process.env.WEBDRIVER_DEBUG || '0', 10);\nexport const IS_ON_PREM = parseInt(process.env.IS_ON_PREM || '0', 10);\nexport const REQUESTS_QUEUE_SIZE = process.env.REQUESTS_QUEUE_SIZE ? parseInt(process.env.REQUESTS_QUEUE_SIZE, 10) : undefined;\nexport const DEBUG_MODE = parseInt(process.env.DEBUG_MODE || '0', 10);\nexport const TESTIM_CONCURRENT_WORKER_COUNT = process.env.TESTIM_CONCURRENT_WORKER_COUNT ? parseInt(process.env.TESTIM_CONCURRENT_WORKER_COUNT, 10) : null;\nexport const ROLLOUT_KEY = process.env.ROLLOUT_KEY || '5b5560729601aa6484276518';\nexport const CORALOGIX_PRIVATE_KEY = process.env.CORALOGIX_PRIVATE_KEY || 'd0eb01da-f966-1663-63c6-8871225d7c39'; // Hardcoded secret was approved by ProdSec;\nexport const DF_ENABLE_VIDEO = parseInt(process.env.DF_ENABLE_VIDEO || '0', 10);\nexport const APPIUM_VERSION = process.env.APPIUM_VERSION || '1.10.1';\nexport const GATEWAY_URL = process.env.GATEWAY_URL;\nexport const EXTENSION_SERVICES_HOST = () => process.env.EXTENSION_SERVICES_HOST || _SERVICES_HOST;\nexport const BLOB_URL = process.env.GATEWAY_URL ? `${process.env.GATEWAY_URL}/testim/blob` : canonicalBlobURL;\nexport const EDGE_URL = process.env.GATEWAY_URL ? `${process.env.GATEWAY_URL}/testim/edge` : canonicalEdgeUrl;\nexport const CANONICAL_BLOB_URL = canonicalBlobURL;\nexport const CANONICAL_EDGE_URL = canonicalEdgeUrl;\n\nexport const APP_UPLOAD_TIMEOUT = 5 * 60 * 1000;\nexport const MINIMUM_KNOWN_UPLOAD_SPEED_PER_SECONDS = 40;\n\nexport const HEADSPIN_MOBILE_API_BASE_URL = process.env.HEADSPIN_MOBILE_API_BASE_URL || 'https://api-dev.headspin.io';\n\n// Tricentis Device Cloud\nexport const TDC_MOBILE_API_BASE_URL = process.env.TDC_MOBILE_API_BASE_URL || 'https://api.tdc.tricentis-cloud.com';\n\nexport const HEADSPIN_TDC_DEVICES_API_PATH = process.env.HEADSPIN_TDC_DEVICES_API_PATH || 'v0';\nexport const HEADSPIN_TDC_APPS_API_PATH = process.env.HEADSPIN_TDC_APPS_API_PATH || 'v1';\n\n// Tricentis Virtual Cloud or Virtual Mobile Cloud (VMG)\nexport const TVC_MOBILE_API_URL = process.env.TVC_MOBILE_API_URL || 'https://api.waldo.com';\n\nexport const BROWSERSTACK_MOBILE_API_URL = process.env.BROWSERSTACK_APPS_API_URL || 'https://api-cloud.browserstack.com/app-automate';\n\nexport const P_CLOUDY_DEFAULT_TEST_DURATION = process.env.P_CLOUDY_DEFAULT_TEST_DURATION || 60;\nexport const P_CLOUDY_DEFAULT_ANDROID_DEVICE_NAME = process.env.P_CLOUDY_DEFAULT_ANDROID_DEVICE_NAME || 'samsung';\n\nexport const setServicesHost = (host: string) => {\n    _SERVICES_HOST = host;\n    process.env.SERVICES_HOST = host;\n    process.env.EXTENSION_SERVICES_HOST = process.env.TUNNEL_GATEWAY ? process.env.SERVICES_HOST : _SERVICES_HOST;\n};\n\n", "import superagent from 'superagent';\nimport * as config from '../commons/config';\n\nexport enum Severity {\n    debug = 1,\n    verbose = 2,\n    info = 3,\n    warning = 4,\n    error = 5,\n    critical = 6,\n}\n\nexport interface CoralogixLoggerOptions {\n    applicationName: string;\n    subsystemName: string;\n    flushIntervalMs?: number;\n    maxBufferedLogsCount?: number;\n}\n\nexport interface CoralogixLog {\n    severity: Severity;\n    text: string;\n    timestamp?: number;\n    hiResTimestamp?: number;\n    className?: string;\n    category?: string;\n    methodName?: string;\n    threadId?: string;\n}\n\nexport class CoralogixLogger {\n    private url: string;\n    private token: string;\n    private applicationName: string;\n    private subsystemName: string;\n    private flushIntervalMs: number;\n    private maxBufferedLogsCount: number;\n    private logs: CoralogixLog[] = [];\n    private interval: NodeJS.Timeout;\n    private proxy?: string;\n\n    constructor(options: CoralogixLoggerOptions) {\n        this.url = process.env.CORALOGIX_URL || 'https://ingress.coralogix.com/logs/v1/bulk';\n        this.token = config.CORALOGIX_PRIVATE_KEY;\n        this.applicationName = options.applicationName;\n        this.subsystemName = options.subsystemName;\n        this.flushIntervalMs = options.flushIntervalMs || 2000;\n        this.maxBufferedLogsCount = options.maxBufferedLogsCount || 50;\n        this.interval = setInterval(() => this.flushLogs(), this.flushIntervalMs);\n    }\n\n    addLog(log: CoralogixLog): void {\n        this.logs.push(log);\n        if (this.logs.length >= this.maxBufferedLogsCount) this.flushLogs();\n    }\n\n    setProxy(proxy: string): void {\n        this.proxy = proxy;\n    }\n\n    async waitForFlush(): Promise<void> {\n        clearInterval(this.interval);\n        await this.flushLogs();\n    }\n\n    private async flushLogs(): Promise<void> {\n        try {\n            if (this.logs.length === 0) return;\n\n            const body = {\n                applicationName: this.applicationName,\n                subsystemName: this.subsystemName,\n                logEntries: [...this.logs],\n            };\n\n            this.logs = [];\n\n            const request = superagent\n                .post(this.url)\n                .set('Content-Type', 'application/json; charset=UTF-8')\n                .set('Authorization', `Bearer ${this.token}`)\n                .send(body);\n\n            if (this.proxy) request.proxy(this.proxy);\n            await request;\n        } catch { /* a logger should never throw or crash the process */ }\n    }\n}\n", "import WinstonTransport from 'winston-transport';\nimport { CoralogixLogger, Severity, type CoralogixLog } from './coralogix-logger';\nimport type { LogEntry } from 'winston';\n\nexport interface CoralogixTransportOptions extends WinstonTransport.TransportStreamOptions {\n    category: string;\n}\n\nconst severityMap = {\n    debug: Severity.debug,\n    silly: Severity.verbose,\n    verbose: Severity.verbose,\n    silent: Severity.verbose,\n    info: Severity.info,\n    http: Severity.info,\n    warn: Severity.warning,\n    warning: Severity.warning,\n    error: Severity.error,\n    critical: Severity.critical,\n    crit: Severity.critical,\n} as const;\n\nconst errorProps = ['err', 'error', 'reason', 'e'];\n\nexport class CoralogixTransport extends WinstonTransport {\n    name: string;\n    private category: string;\n    private logger: CoralogixLogger;\n\n    constructor(options: CoralogixTransportOptions) {\n        super(options);\n        this.name = 'Coralogix Transport';\n        this.category = options.category;\n\n        this.logger = new CoralogixLogger({\n            applicationName: 'testim',\n            subsystemName: 'runner',\n        });\n    }\n\n    log(info: LogEntry, callback: (...args: unknown[]) => void): void {\n        const { category, level, message: msg, meta: infoMeta = {}, ...restMeta } = info;\n        const meta = { ...infoMeta, ...restMeta };\n\n        const log: CoralogixLog = {\n            severity: severityMap[level as keyof typeof severityMap],\n            text: msg,\n            category: category || this.category,\n        };\n\n        if (meta.className) log.className = meta.className;\n        if (meta.methodName) log.methodName = meta.methodName;\n        if (meta.threadId) log.threadId = meta.threadId;\n\n        delete meta.className;\n        delete meta.methodName;\n        delete meta.threadId;\n        delete meta.category;\n        delete meta.level;\n        delete meta.message;\n\n        let errorOverride = false;\n        if (infoMeta instanceof Error) {\n            errorOverride = true;\n            meta.msg = infoMeta.message + infoMeta.stack;\n            if (msg) meta.msg = `${msg}\\n${meta.msg}`;\n        }\n\n        for (const prop of errorProps) {\n            if (infoMeta[prop] instanceof Error) {\n                meta[prop] = {\n                    message: infoMeta[prop].message,\n                    stack: infoMeta[prop].stack,\n                    name: infoMeta[prop].name,\n                    type: (infoMeta[prop] as any).type,\n                    cause: infoMeta[prop].cause,\n                    ...(infoMeta[prop] as any),\n                };\n            }\n        }\n\n        if (Object.keys(meta).length > 0) {\n            if (msg && !errorOverride) meta.msg = msg;\n            log.text = JSON.stringify(meta);\n        }\n\n        this.logger.addLog(log);\n        callback(null, true);\n    }\n\n    setProxy(proxy: string): void {\n        this.logger.setProxy(proxy);\n    }\n\n    async waitForFlush(): Promise<void> {\n        return await this.logger.waitForFlush();\n    }\n}\n", "import * as os from 'node:os';\nimport * as winston from 'winston';\nimport * as config from './config';\nimport * as nodeUtils from 'node:util';\nimport chalk from 'chalk';\nimport dayjs from 'dayjs';\nimport { getRunnerVersion } from '../utils';\n\nconst hostname = os.hostname();\nconst runnerVersion = getRunnerVersion();\n\nfunction getStreamsAndWaitForFlushPromise() {\n    const transports: winston.transport[] = [];\n\n    let waitForFlush = () => Promise.resolve();\n    let setProxy = (proxy: string) => { /* noop */ };\n\n    if (!config.IS_ON_PREM) {\n        const { CoralogixTransport } = require('../lib/coralogix-winston.transport') as { CoralogixTransport: typeof import('../lib/coralogix-winston.transport').CoralogixTransport };\n\n        const loggerInstance = new CoralogixTransport({\n            category: 'ROOT',\n        });\n\n        transports.push(loggerInstance);\n        waitForFlush = () => loggerInstance.waitForFlush();\n        setProxy = (proxy: string) => loggerInstance.setProxy(proxy);\n    }\n\n    if (config.LOGGER_CONSOLE) {\n        const inspectOptions: nodeUtils.InspectOptions = { depth: 5, colors: true };\n        transports.push(new winston.transports.Console({\n            format: winston.format.combine(\n                winston.format.colorize({ all: true, colors: { info: 'blue', error: 'red', warning: 'yellow' } }),\n                winston.format.timestamp({ format: 'HH:mm:ss:SSS' }),\n                winston.format.printf(info => `[${info.timestamp}] ${info.level}\\t ${info.category}: ${info.message} ${nodeUtils.inspect(info.meta, inspectOptions)}`),\n            ),\n        }));\n    }\n\n    return [transports, waitForFlush, setProxy] as const;\n}\n\nconst inspectOptions: nodeUtils.InspectOptions = { depth: 5, colors: true };\nexport const sessionPlayerLoggerFormatter: typeof import('clickim/src/lib/logger').Logger['formatter'] = (level, message, data) => {\n    const date = `[${dayjs().format('HH:mm:ss:SSS')}]`;\n    const formattedMessage = nodeUtils.inspect(message, inspectOptions);\n    const formattedData = nodeUtils.inspect(data, inspectOptions);\n    return `${chalk.white(date)} ${chalk.reset()}SessionPlayer-${chalk.red(level)}\\t ${formattedMessage} ${formattedData}`;\n};\n\nconst [transports, waitForFlush, setProxy] = getStreamsAndWaitForFlushPromise();\nconst level = config.LOGGER_DEBUG ? 'debug' : 'info';\nconst defaultMeta = {\n    release: Boolean(global.meta?.IS_RELEASE),\n    branch: (global.meta?.IS_RELEASE && 'production') || (!global.meta?.IS_LOCAL && global.meta?.BRANCH_NAME) || 'local',\n};\n\nconst winstonMainLogger = winston.createLogger({\n    levels: winston.config.syslog.levels,\n    level,\n    transports,\n    defaultMeta: { name: 'runner', hostname, nodeVersion: process.version, runnerVersion, ...defaultMeta },\n});\n\nlet executionId: string | null | undefined = null;\nlet projectId: string | null | undefined = null;\n\nexport function setExecutionId(execId?: string | null) {\n    executionId = execId;\n}\n\nexport function setProjectId(projId?: string | null) {\n    projectId = projId;\n}\n\nexport function setProxyUri(proxyUri: string | undefined) {\n    if (config.IS_ON_PREM || !proxyUri) return;\n    setProxy(proxyUri);\n}\n\nfunction addExecutionMetadata(dataExecutionId?: string) {\n    return {\n        projectId,\n        time: new Date().toISOString(),\n        ...(executionId && !dataExecutionId && { executionId }),\n    };\n}\n\ntype Level = 'debug' | 'info' | 'warning' | 'error' | 'crit';\n\nclass Logger {\n    constructor(private readonly _logger: winston.Logger) {\n        this.debug = this.debug.bind(this);\n        this.info = this.info.bind(this);\n        this.warn = this.warn.bind(this);\n        this.error = this.error.bind(this);\n        this.fatal = this.fatal.bind(this);\n    }\n\n    debug(msg: string, data: object = {}) {\n        this.innerLog('debug', msg, data);\n    }\n\n    info(msg: string, data: object = {}) {\n        this.innerLog('info', msg, data);\n    }\n\n    warn(msg: string, data: object = {}) {\n        this.innerLog('warning', msg, data);\n    }\n\n    error(msg: string, data: object = {}) {\n        this.innerLog('error', msg, data);\n    }\n\n    fatal(msg: string, data: object = {}) {\n        this.innerLog('crit', msg, data);\n    }\n\n    private innerLog(logLevel: Level, msg: string, data: object = {}) {\n        const { executionId: dataExecutionId } = data as { [key: string]: any };\n        try {\n            this._logger.log(logLevel, { meta: data, message: msg, ...addExecutionMetadata(dataExecutionId) });\n        } catch (err) {\n            try {\n                this._logger.log('crit', { message: `failed to log message ${err.message}, ${err.stack}`, ...addExecutionMetadata(dataExecutionId) });\n            } catch { /* well what can we do */ }\n        }\n    }\n\n    waitForFlush() {\n        return waitForFlush();\n    }\n}\n\nexport function getLogger(loggerName: string) {\n    return new Logger(winstonMainLogger.child({ category: loggerName }));\n}\n", "import { AbortError as AbortPRetryError } from 'p-retry';\n\nexport class AbortError extends Error {\n    name = 'AbortError';\n    constructor(message = 'aborted') {\n        super(message);\n    }\n}\n\n/** NoArgsError - throws when arguments not passed to cli */\nexport class NoArgsError extends Error {\n    name = 'NoArgsError';\n}\n\n/** ArgError - throws when argument is invalid */\nexport class ArgError extends Error {\n    name = 'ArgError';\n}\n\nexport class StopRunOnError extends Error {\n    name = 'StopRunOnError';\n}\n\nexport class GetBrowserError extends Error {\n    constructor(err: string | Error, public readonly type?: string) {\n        super(err instanceof Error ? err.message : err, { cause: err });\n    }\n}\n\nexport class PageNotAvailableError extends AbortPRetryError {}\nexport class WebdriverCapabilitiesError extends AbortPRetryError {}\n\nexport class InvalidGridCredentials extends AbortPRetryError {}\n\nexport class TimeoutError extends Error {}\n\nexport class QuotaDepletedError extends Error {}\n\nexport class GridError extends Error {\n    name = 'GridError';\n\n    toString() {\n        return this.message;\n    }\n}\n\nexport class GridConcurrencyError extends GridError {\n    name = 'GridConcurrencyError';\n}\n\nexport class NpmPackageError extends Error {\n    name = 'NpmPackageError';\n}\n\nexport class SeleniumCrashError extends Error {\n    message = 'selenium driver crashed';\n    name = 'SeleniumCrashError';\n}\n\nexport class NpmPermissionsError extends Error {\n    constructor(public readonly path: string) {\n        super(`Testim had missing write access to ${path}`);\n    }\n}\n\nexport class IncompatibleNpmPackageError extends Error {\n    constructor(packageName: string) {\n        super(`Package for CLI action need to have a CommonJS export which the package ${packageName} does not have`);\n    }\n}\n\nexport class NotImplementedError extends Error {\n    constructor(descendant = false) {\n        let message = 'not implemented';\n        if (descendant) {\n            message = 'should be implemented on descendant';\n        }\n        super(message);\n    }\n}\n", "import { setTimeout } from 'timers/promises';\nimport { TimeoutError } from '../errors';\nimport { OVERRIDE_TIMEOUTS } from '../commons/config';\n\nexport function isPromise(obj: any): obj is Promise<any> {\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\n/** @param time in ms */\nexport function delay(time: number) {\n    return setTimeout<void>(time);\n}\n\n\nexport function promiseAbort<T>(promise: T | PromiseLike<T>, abortSignal: AbortSignal) {\n    const abortPromise = new Promise<never>((_, rej) => {\n        abortSignal.onabort = () => {\n            rej(abortSignal.reason);\n        };\n    });\n    return Promise.race([\n        promise,\n        abortPromise,\n    ]);\n}\n\nlet warnedAboutDebugger = false;\nexport function promiseTimeout<T>(promise: T | PromiseLike<T>, timeout: number, errMsg = 'Timeout Error') {\n    if (OVERRIDE_TIMEOUTS && !warnedAboutDebugger) {\n        warnedAboutDebugger = true;\n        // eslint-disable-next-line no-console\n        console.log('Debugger connected - timeouts were overridden to 10 minutes to improve debugging');\n    }\n    const timeoutErr = new TimeoutError(errMsg);\n    timeout = OVERRIDE_TIMEOUTS ? Number(OVERRIDE_TIMEOUTS) || 600_000 : timeout;\n    return Promise.race([\n        promise,\n        delay(timeout).then(() => { throw timeoutErr; }),\n    ]);\n}\n\nlet pLimit: typeof import('p-limit')['default'];\nexport async function promiseMap<T, U>(arr: ArrayLike<T> | Iterable<T>, handler: (item: T, index: number) => PromiseLike<U>, { concurrency }: { concurrency?: number } = {}) {\n    if (concurrency) {\n        pLimit ||= (await import('p-limit')).default;\n        const limit = pLimit(concurrency);\n        return await Promise.all(Array.from(arr, (item, index) => limit(() => handler(item, index))));\n    }\n    return await Promise.all(Array.from(arr, handler));\n}\n\nexport function promiseFromCallback<ErrT, T>(resolver: (callback: (err: ErrT, result?: T) => void) => void) {\n    return new Promise<T | undefined>((resolve, reject) => {\n        resolver((err, result) => {\n            if (err) {\n                return reject(err);\n            }\n            return resolve(result);\n        });\n    });\n}\n", "import * as _ from 'lodash';\nimport * as config from './config';\nimport { promises as dns } from 'dns';\nimport { getLogger } from './logger';\nimport { promiseMap } from '../utils/promiseUtils';\n\nconst logger = getLogger('http-request-counters');\n\nlet networkConnectivityTestFailed = false;\n\n/** Tests network connectivity with DNS resolution (a basic test for a 7 later stack parallel but essential to most HTTP requests) */\nconst testNetworkConnectivity = async () => {\n    if (config.IS_ON_PREM) {\n        return true;\n    }\n    const hostnames = ['www.google.com', 'www.facebook.com', 'www.microsoft.com', 'testim.io'];\n    try {\n        // If any of these domains resolve we consider the connectivity to be ok\n        const result = Boolean(await promiseMap(hostnames, host => dns.lookup(host)));\n        if (!result) {\n            networkConnectivityTestFailed = true;\n        }\n        return result;\n    } catch (e) {\n        logger.error('network connectivity test failed');\n        networkConnectivityTestFailed = true;\n        return false;\n    }\n};\nconst throttledTestNetworkConnectivity = _.throttle(testNetworkConnectivity, 10 * 1000);\n\n// we remove entries after 15 minutes, note that this isn't accurate because\n// we remove the \"fail\"/\"success\" 10 minutes after we add them (and not the \"call\")\n// this is fine since these values are an estimation and not an accurate representation\n// we poll them when a test fails - so values older than 15 minutes (10 minutes is\n// the default timeout) are hardly relevant.\nconst ttl = 60 * 1000 * 15;\n\nexport const makeCounters = () => {\n    const counters = {\n        call: new Map<string, number>(),\n        success: new Map<string, number>(),\n        fail: new Map<string, number>(),\n    };\n    function update(counter: Map<string, number>, key: string) {\n        const result = counter.get(key) || 0;\n        counter.set(key, result + 1);\n        setTimeout(() => {\n            const _result = counter.get(key) || 1;\n            counter.set(key, _result - 1);\n        }, ttl);\n    }\n    function wrapWithMonitoring<F extends(...arg: any) => PromiseLike<any>>(fn: F, name: string = fn.name) {\n        return async function<T = Awaited<ReturnType<F>>> (...args: Parameters<F>): Promise<T> {\n            update(counters.call, name);\n            try {\n                const result = await fn.call(null, ...args);\n                update(counters.success, name);\n                return result;\n            } catch (e) {\n                update(counters.fail, name);\n                if (!networkConnectivityTestFailed) {\n                    throttledTestNetworkConnectivity();\n                }\n                throw e;\n            }\n        };\n    }\n    async function isNetworkHealthy() {\n        if (networkConnectivityTestFailed || !(await testNetworkConnectivity())) {\n            return false;\n        }\n        const allFailed = _.sum([...counters.fail.values()]);\n        const allCalls = _.sum([...counters.call.values()]);\n        // we declare a test unhealthy network wise if\n        // 10% or more of requests (out of finished requests) failed\n        // note that the network can be unhealthy but the test would still pass\n        return allFailed < allCalls * 0.1;\n    }\n    isNetworkHealthy.counters = counters;\n    wrapWithMonitoring.counters = counters; // expose the counters used to the outside\n    wrapWithMonitoring.isNetworkHealthy = isNetworkHealthy;\n    wrapWithMonitoring.didNetworkConnectivityTestFail = () => networkConnectivityTestFailed;\n    return wrapWithMonitoring;\n};\n", "import superagent from 'superagent';\nimport { getLogger } from './logger';\nimport { makeCounters } from './httpRequestCounters';\n\nconst logger = getLogger('http-request');\nconst wrapWithMonitoring = makeCounters();\nconst DEFAULT_REQUEST_TIMEOUT = parseInt(process.env.DEFAULT_REQUEST_TIMEOUT || '0', 10) || 30_000; //30sec timeout\nconst DOWNLOAD_REQUEST_TIMEOUT = 60_000; //1min timeout\n\n// #region utilities\nfunction getCaFile() {\n    return global.caFileContent;\n}\n\nfunction binaryParser(res: superagent.Response, fn: (err: Error | null, body: any) => void) {\n    const data: Uint8Array[] = [];\n\n    res.on('data', (chunk) => {\n        data.push(chunk); // Append Buffer object\n    });\n    res.on('end', () => {\n        fn(null, Buffer.concat(data)); // Merge the chunks and return\n    });\n}\n\nfunction getProxy() {\n    // @ts-expect-error possibly need to extend the superagent types?\n    if (!superagent.Request.prototype.proxy && global.SuperagentProxy) {\n        global.SuperagentProxy(superagent);\n    }\n    return global.proxyUri;\n}\n\nconst logErrorAndRethrow = (logMsg: string, error: any, data?: object) => {\n    const response = error.response;\n    if (error.response instanceof superagent.Response && typeof response.toError === 'function') {\n        // This will give us status, method, body text, and a stack trace that doesn't suck without internal superagent stuff\n        error = error.response.toError();\n        error.requestHeaders = response?.header;\n        error.responseHeaders = response?.headers;\n    }\n    const logErrorAndRethrowStack = new Error('').stack;\n    logger.error(logMsg, { ...data, error, logErrorAndRethrowStack });\n    throw error;\n};\n\nfunction attachCaFileAndProxyToRequest(request: superagent.SuperAgentRequest, skipProxy = false) {\n    const caFile = getCaFile();\n    if (caFile) {\n        request.ca(caFile);\n    }\n\n    const proxy = !skipProxy && getProxy();\n    if (proxy) {\n        request.proxy(proxy);\n    }\n}\n// #endregion\n\nexport const deleteReq = wrapWithMonitoring(async (url: string, body: object = {}, headers: Record<string, string> = {}, timeout = DEFAULT_REQUEST_TIMEOUT) => {\n    try {\n        const request = superagent\n            .delete(url)\n            .send(body)\n            .timeout(timeout)\n            .set(headers);\n\n        attachCaFileAndProxyToRequest(request);\n\n        const res = await request;\n        if (res.type === 'text/plain') {\n            return res.text;\n        }\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to delete request', err, { url });\n    }\n});\n\nexport const post = wrapWithMonitoring(async ({ url, body, headers, timeout, retry }: { url: string; body: object; headers?: { [key: string]: any }; timeout?: number; retry?: number }) => {\n    try {\n        const res = await _post(url, body, headers, timeout, retry);\n        if (res.type === 'text/plain') {\n            return res.text;\n        }\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to post request', err, { url });\n    }\n});\n\nasync function _post(url: string, body: object, headers: Record<string, string> = {}, timeout = DEFAULT_REQUEST_TIMEOUT, retry = 0) {\n    const request = superagent\n        .post(url)\n        .send(body)\n        .timeout(timeout)\n        .set(headers);\n\n    attachCaFileAndProxyToRequest(request);\n\n    if (retry) {\n        request.retry(retry);\n    }\n\n    try {\n        return await request;\n    } catch (err) {\n        err.url = url;\n        err.originalRequestTimeout = timeout;\n        err.additionalSetHeaders = headers;\n        throw err;\n    }\n}\n\nexport interface Files { [fieldName: string]: { buffer: Buffer; fileName: string } }\nexport const postForm = wrapWithMonitoring(async (url: string, fields: { [fieldName: string]: any }, files: Files, headers: Record<string, string> = {}, timeout: number = DEFAULT_REQUEST_TIMEOUT) => {\n    const request = superagent\n        .post(url)\n        .type('form')\n        .timeout(timeout)\n        .set(headers);\n\n    request.field(fields);\n\n    Object.entries(files).forEach(([fileFormName, file]) => {\n        request.attach(fileFormName, file.buffer, file.fileName);\n    });\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        const res = await request;\n        if (res.type === 'text/plain') {\n            return res.text;\n        }\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to post request', err, { url });\n    }\n});\n\nasync function _get(url: string, query?: string | object, headers: Record<string, string> = {}, timeout = DEFAULT_REQUEST_TIMEOUT, { isBinary = false, skipProxy = false } = {}) {\n    const request = superagent\n        .get(url)\n        .query(query || {})\n        .timeout(timeout)\n        .set(headers);\n\n    if (isBinary) {\n        request.buffer(true);\n    }\n\n    attachCaFileAndProxyToRequest(request, skipProxy);\n\n    return await request;\n}\n\nexport const getText = wrapWithMonitoring(async (url: string, query?: string | object, headers?: Record<string, string>) => {\n    try {\n        const res = await _get(url, query, headers);\n        return res.text;\n    } catch (err) {\n        return logErrorAndRethrow('failed to getText request', err, { url, query });\n    }\n});\n\nexport const postText = wrapWithMonitoring(async ({ url, body, headers, timeout, retry }: { url: string; body: object; headers?: { [key: string]: any }; timeout?: number; retry?: number }) => {\n    try {\n        const res = await _post(url, body, headers, timeout, retry);\n        return res.text;\n    } catch (err) {\n        return logErrorAndRethrow('failed to post request', err, { url });\n    }\n});\n\nexport const get = wrapWithMonitoring(async (url: string, query?: string | object, headers?: Record<string, string>, timeout?: number, options?: { isBinary?: boolean; skipProxy?: boolean }) => {\n    try {\n        const res = await _get(url, query, headers, timeout, options);\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to get request', err, { url, query });\n    }\n});\n\nexport const getFullRes = wrapWithMonitoring((url: string, query?: string | object, headers?: Record<string, string>, timeout?: number) => _get(url, query, headers, timeout));\n\nexport const head = wrapWithMonitoring(async (url: string) => {\n    const request = superagent\n        .head(url)\n        .timeout(DEFAULT_REQUEST_TIMEOUT);\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        return await request;\n    } catch (err) {\n        return logErrorAndRethrow('failed to head request', err, { url });\n    }\n});\n\nexport const put = wrapWithMonitoring(async (url: string, body?: object, headers: Record<string, string> = {}, timeout: number = DEFAULT_REQUEST_TIMEOUT) => {\n    const request = superagent\n        .put(url)\n        .send(body)\n        .timeout(timeout)\n        .set(headers);\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        const res = await request;\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to put request', err, { url });\n    }\n});\n\nexport const download = wrapWithMonitoring(async (url: string) => {\n    logger.info('start to download', { url });\n\n    const request = superagent\n        .get(url)\n        .set('User-Agent', 'Testim.io')\n        .timeout(DOWNLOAD_REQUEST_TIMEOUT)\n        .buffer(true)\n        .parse(binaryParser);\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        const res = await request as Omit<superagent.Response, 'body'> & { body: Buffer };\n        logger.info('finished to download', { url });\n        return res;\n    } catch (err) {\n        return logErrorAndRethrow('failed to download', err, { url });\n    }\n});\n\nexport const isNetworkHealthy = wrapWithMonitoring.isNetworkHealthy;\nexport const didNetworkConnectivityTestFail = wrapWithMonitoring.didNetworkConnectivityTestFail;\n", "import * as path from 'node:path';\nimport * as stringUtils from './stringUtils';\nimport * as packageJson from '../../package.json';\nimport * as unzip from 'unzip-stream';\nimport pRetry from 'p-retry';\nimport { promises as fsPromises, statSync, createReadStream } from 'node:fs';\nimport type { PathLike } from 'node:fs';\n\nconst DOWNLOAD_RETRY = 3;\n\nexport function getCliLocation() {\n    let cliLocation;\n    if (!require.main) { // we're in a REPL\n        return process.cwd(); // fall back on the current working directory\n    }\n    if (require.main.filename.includes('/src') || require.main.filename.includes('\\\\src') || process.env.IS_UNIT_TEST) {\n        cliLocation = path.resolve(__dirname, '../../');\n    } else {\n        cliLocation = path.resolve(__dirname, !global.meta?.IS_LOCAL ? '' : '../');\n    }\n\n    return cliLocation;\n}\n\nexport const download = async (url: string) => {\n    // Lazily required to avoid circular dep (httpRequest requires logger which requires the utils to get the runnerVersion)\n    const httpRequest = await import('../commons/httpRequest');\n    return pRetry(() => httpRequest.download(url), { retries: DOWNLOAD_RETRY, factor: 1 });\n};\n\nexport const downloadAndSave = async (url: string, saveToLocation: PathLike) => {\n    const res = await download(url);\n    return fsPromises.writeFile(saveToLocation, res.body);\n};\n\nexport function getSourcePath(location: string, fileName?: string) {\n    if (stringUtils.isURL(location)) {\n        return fileName || path.join(process.cwd(), location.replace(/^.*[\\\\/]/, ''));\n    }\n\n    return fileName || path.basename(location);\n}\n\nexport const getSource = async (location: string, fileName: string) => {\n    const destFile = getSourcePath(location, fileName);\n    if (stringUtils.isURL(location)) {\n        return downloadAndSave(location, destFile);\n    }\n\n    return fsPromises.copyFile(location, destFile);\n};\n\nexport const getSourceAsBuffer = async (location: string) => {\n    if (stringUtils.isURL(location)) {\n        return download(location);\n    }\n    return fsPromises.readFile(location);\n};\n\nexport const unzipFile = async (srcZipFile: string, destZipPath: string) => {\n    return createReadStream(srcZipFile).pipe(unzip.Extract({ path: destZipPath }));\n};\n\nexport const getLocalFileSizeInMB = (fileLocation: PathLike) => {\n    const stats = statSync(fileLocation);\n    const fileSizeInBytes = stats.size;\n    return fileSizeInBytes / 1_000_000;\n};\n\nexport function getRunnerVersion() {\n    try {\n        // Lazy require this, since the version is set after the bundle was built\n        // eslint-disable-next-line import/no-dynamic-require\n        const pack = require(`${__dirname}${!global.meta?.IS_LOCAL ? '' : '..'}/package.json`) as typeof import('../../package.json');\n        return pack.version;\n    } catch {\n        return '';\n    }\n}\n\nexport function getEnginesVersion() {\n    try {\n        return packageJson.engines.node;\n    } catch {\n        return '';\n    }\n}\n\n/**\n * @param src Source directory to copy its contents\n * @param dest Target directory to copy to\n * @param createParentDirs Whether to create parent directories\n */\nexport async function copyDir(src: string, dest: string, createParentDirs = true) {\n    const dirents = await fsPromises.readdir(src, { withFileTypes: true });\n    await fsPromises.mkdir(dest, { recursive: createParentDirs });\n    for (const item of dirents) {\n        const srcPath = path.join(src, item.name);\n        const destPath = path.join(dest, item.name);\n        if (item.isDirectory()) {\n            await copyDir(srcPath, destPath);\n        } else {\n            await fsPromises.copyFile(srcPath, destPath);\n        }\n    }\n}\n\nexport async function doesPathExist(_path: string) {\n    try {\n        await fsPromises.access(_path);\n        return true;\n    } catch (err) {\n        if (err.code === 'ENOENT') {\n            return false;\n        }\n        // no permissions to check\n        throw err;\n    }\n}\n", "export const timeoutMessages = {\n    GET_BROWSER_TIMEOUT_MSG: 'get-browser-timeout',\n    TEST_START_TIMEOUT_MSG: 'test-start-timeout',\n    TEST_COMPLETE_TIMEOUT_MSG: 'test-complete-timeout',\n} as const;\nexport const testRunStatus = {\n    COMPLETED: 'completed',\n} as const;\n\nexport const runnerStatus = {\n    RUNNING: 'RUNNING',\n    SKIPPED: 'SKIPPED',\n    FINISHED: 'FINISHED',\n    ABORTED: 'ABORTED',\n    QUEUED: 'QUEUED',\n    TIMEOUT: 'TIMEOUT',\n} as const;\n\nexport const runnerTestStatus = {\n    PASSED: 'PASSED',\n    FAILED: 'FAILED',\n    ABORTED: 'ABORTED',\n    SKIPPED: 'SKIPPED',\n    QUEUED: 'QUEUED',\n    PENDING: 'PENDING',\n} as const;\n\nexport const testStatus = {\n    DRAFT: 'draft',\n    EVALUATING: 'evaluating',\n    ACTIVE: 'active',\n    QUARANTINE: 'quarantine',\n} as const;\nexport const gridMessages = {\n    NOT_FOUND: 'The specified grid is not available',\n    UNKNOWN: \"Test couldn't get browser - unknown error\",\n} as const;\n\nexport const mobileWeb = {\n    MOBILE_WEB_REMOTE_RUN_HEADER_SPACING: 50,\n} as const;\n\nexport const test = {\n    HIDDEN_PARAM: 'TST_HIDDEN_PARAM',\n} as const;\n\nexport const socketEventTypes = {\n    TEST_RESULT_CREATED: 'test-result-created',\n    TEST_RESULT_UPDATED: 'test-result-updated',\n    REMOTE_STEP_SAVED: 'remote-step-saved',\n} as const;\n\nexport const CLI_MODE = {\n    EXTENSION: 'extension',\n    SELENIUM: 'selenium',\n    APPIUM: 'appium',\n} as const;\n\nexport const gridTypes = {\n    TESTIM_ENTERPRISE: 'testimEnterprise',\n    TESTIM: 'testim',\n    TESTIM_PRIVATE: 'testimPrivate',\n    LAMBDATEST: 'lambdaTest',\n    TESTIM_LAMBDATEST: 'testimLambdaTest',\n    DEVICE_FARM: 'testimDF',\n    HYBRID: 'testimHybrid',\n    BROWSERSTACK: 'browserstack',\n    SAUCELABS: 'saucelabs',\n    TESTIM_HEADSPIN: 'testimHeadspin',\n    TESTIM_TDC: 'testimTDC',\n    TESTIM_TVC: 'testimTVC',\n    P_CLOUDY: 'pcloudy',\n} as const;\n\nexport type GridType = typeof gridTypes[keyof typeof gridTypes];\n\nexport const stepResult = {\n    SETUP_TIMEOUT: 'setup-timeout',\n    NETWORK_ERROR: 'network-error',\n    GRID_ERROR: 'grid-error',\n    SELENIUM_ERROR: 'selenium-error',\n    BROWSER_CLOSED: 'browser-closed',\n    MOBILE_SESSION_ERROR: 'mobile-session-error',\n    UNKNOWN_ERROR: 'unknown-error',\n} as const;\n\nexport const MOBILE_APP_SOURCE = {\n    FROM_LIBRARY: 'from-library',\n    FROM_DEVICE: 'from-device',\n} as const;\n\nexport const MOBILE_RUN_SKIP_REASON = {\n    APP_FROM_DEVICE: 'app-from-device',\n    VIRTUAL_BUILD: 'virtual-build',\n} as const;\n\nexport const APPIUM_SESSION_MESSAGE = {\n    APP_NOT_EXIST_ON_DEVICE: 'used to start the app doesn\\'t exist or cannot be launched',\n    APP_NEVER_STARTED: 'never started',\n    DEVICE_OS_VERSION_TOO_LOW: 'DeviceOSVersionTooLow',\n    TIMEOUT_ERROR: 'Timeout awaiting \\'request\\'',\n    SAUCELABS_APP_IS_NOT_INSTALLED: 'Original error: \\'app\\' option is required for reinstall',\n} as const;\n\nexport const X_HEADER_RUNNER_ID = 'X-Testim-Runner-ID';\n\nexport const REGION_CONFIG = {\n    TTL: 1000 * 60 * 60 * 24, // 24 hours\n    CACHE_FN_NAME: 'setRegionConfig',\n} as const;\n", "import { testStatus as testStatusConst } from '../commons/constants';\nimport type {\n    Options,\n    LoginModeOptions,\n    TunnelOptions,\n    RunnerOptions,\n    AgentModeOptions,\n    InstallLazyDepsOptions,\n} from '../runOptions';\n\nexport function getUniqBrowsers(options: RunnerOptions, testList: { runConfig?: { browserValue: string } }[]) {\n    if (options.browserstack?.browserName || options.saucelabs?.browserName) {\n        return [options.browser?.toLowerCase()];\n    }\n    if ((options.testConfigNames?.length || options.testConfigIds?.length || options.testPlan.length || options.testPlanIds.length) || !options.browser) {\n        return [...new Set(testList.map(t => t.runConfig?.browserValue))];\n    }\n\n    return [options.browser?.toLowerCase()];\n}\n\nexport const hasTestPlanFlag = (options: Partial<Pick<RunnerOptions, 'testPlan' | 'testPlanIds'>>) => Boolean(options.testPlan?.length || options.testPlanIds?.length);\n\nexport const isRemoteRun = (options: RunnerOptions) => Boolean(options.resultId && options.source === 'remote-run');\n\nexport const isQuarantineAndNotRemoteRun = (test: { testStatus?: string }, options: RunnerOptions) =>\n    test.testStatus === testStatusConst.QUARANTINE &&\n    !isRemoteRun(options) &&\n    !options.runQuarantinedTests;\n\nexport function getArgsOnRemoteRunFailure() {\n    const { argv: args } = process;\n    if (!args.includes('--remoteRunId')) {\n        return undefined;\n    }\n    return {\n        remoteRunId: args[args.indexOf('--remoteRunId') + 1],\n        projectId: args[args.indexOf('--project') + 1],\n        token: args[args.indexOf('--token') + 1],\n    };\n}\n\nexport const isLoginMode = (options: Options): options is LoginModeOptions => Boolean((options as any).loginMode);\n\nexport const isTunnelOnlyMode = (options: Options): options is TunnelOptions => Boolean((options as any).tunnelOnlyMode);\n\nexport const isCreatePrefetchedDataMode = (options: Options): options is RunnerOptions & { createPrefechedData: true } => Boolean((options as any).createPrefechedData);\n\nexport const isInstallLazyDepsMode = (options: Options): options is InstallLazyDepsOptions => Boolean((options as any).installLazyDepsMode);\n\nexport const isAgentMode = (options: Options): options is AgentModeOptions => Boolean((options as any).agentMode);\n\nexport const replaceArgsWithNoDashes = (args: string[], nonDashFlags: Set<string>) => {\n    args.forEach((arg, i) => {\n        if (nonDashFlags.has(arg)) {\n            args[i] = `--${arg}`;\n        }\n    });\n};\n\nexport const spreadObjectToArgs = (obj: Record<string, any>): string[] => {\n    const args: string[] = [];\n    Object.entries(obj).forEach(([key, value]) => {\n        if (value) {\n            args.push(`--${key}`, value);\n        }\n    });\n    return args;\n};\n", "import dayjs from 'dayjs';\nimport _duration from 'dayjs/plugin/duration';\n\ndayjs.extend(_duration);\n\nexport function getDuration(ms = 0) {\n    const duration = dayjs.duration(ms);\n    return duration.format('HH:mm:ss.SSS');\n}\n\nexport function getDurationSec(ms = 0) {\n    return dayjs.duration(ms).asSeconds();\n}\n", "import { gridTypes } from '../commons/constants';\nimport type { RunnerOptions } from '../runOptions';\nimport type { AndroidApp, iOSApp } from 'clickim/src/background/mobile/types';\nimport type { RawMobileAppVersion } from 'services/src/commons/mongo/models/mobileAppVersion';\n\nexport const isAppFromDevice = (nativeApp?: RawMobileAppVersion | iOSApp | AndroidApp): nativeApp is iOSApp | AndroidApp => {\n    if (!nativeApp || 'fileName' in nativeApp) {\n        return false;\n    }\n    return true;\n};\n\nexport const shouldBlockVirtualIosBuild = (nativeApp?: RawMobileAppVersion | iOSApp | AndroidApp, gridType?: string): nativeApp is RawMobileAppVersion => {\n    if (gridType === gridTypes.TESTIM_TVC) {\n        return false;\n    }\n\n    if (nativeApp) {\n        if (nativeApp.appMetadata && 'iOSSupportedTargetDevice' in nativeApp.appMetadata) {\n            return nativeApp.appMetadata.iOSSupportedTargetDevice === 'virtual';\n        }\n\n        if ('fileName' in nativeApp) {\n            return nativeApp.fileName!.endsWith('.app');\n        }\n    }\n    return false;\n};\n\n//works only if projectData is loaded\nexport const isMobileProject = (options: RunnerOptions) => options.projectData?.type === 'ios' || options.projectData?.type === 'android';\n\nexport const isTestimVirtualGrid = (gridType?: string) => gridType === gridTypes.TESTIM_TVC;\n\nexport const isAppFromDeviceDisabled = (featureFlagsService: typeof import('../commons/featureFlagsService').featureFlagsService, gridType?: string) =>\n    isTestimVirtualGrid(gridType) || !featureFlagsService.flags.allowAppFromDeviceRuns.isEnabled();\n", "const DEFAULT_MEMORY_USAGE_THRESHOLD = 4000; // log memory usage after reaching 4 GB\n\nexport function getMemorySnapshot(threshold = DEFAULT_MEMORY_USAGE_THRESHOLD) {\n    const memoryData = process.memoryUsage();\n    const formatMemoryUsage = (data: number) => Math.round(((data / 1024) / 1024) * 100) / 100;\n\n    return {\n        isOverThreshold: formatMemoryUsage(memoryData.rss) > threshold,\n        rss: `${formatMemoryUsage(memoryData.rss)} MB -> Resident Set Size - total memory allocated for the process execution`,\n        heapTotal: `${formatMemoryUsage(memoryData.heapTotal)} MB -> total size of the allocated heap`,\n        heapUsed: `${formatMemoryUsage(memoryData.heapUsed)} MB -> actual memory used during the execution`,\n        external: `${formatMemoryUsage(memoryData.external)} MB -> V8 external memory`,\n    };\n}\n\n", "/**\n * Please look at the different grid providers os and browser version support before changing:\n * LT - https://www.lambdatest.com/support/docs/supported-browsers-and-operating-systems-for-the-web-interface/#desktop-devices-for-selenium--browser-versions\n * BS - https://www.browserstack.com/list-of-browsers-and-platforms?product=automate\n * SAUCE - https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/\n */\nimport * as os from 'os';\nimport * as _ from 'lodash';\nimport * as path from 'path';\nimport { DOMParser } from 'linkedom';\nimport { W3C_ELEMENT_ID } from '../player/constants';\nimport type { RawTestResult } from 'services/src/commons/mongo/models/testResult';\nimport type { RunnerOptions } from 'src/runOptions';\n\n\nconst HOMEDIR = os.homedir();\nexport const TESTIM_BROWSER_DIR = path.join(HOMEDIR, '.testim-browser-profile');\n\nexport const OSS = [\n    { osName: 'Linux', bs: { os: 'LINUX' }, sl: { platform: 'Linux' }, lt: { platform: 'Linux' } },\n    { osName: 'Windows 11', bs: { os: 'WINDOWS', os_version: '11' }, sl: { platform: 'Windows 11' }, lt: { platform: 'Windows 11' } },\n    { osName: 'Windows 10', bs: { os: 'WINDOWS', os_version: '10' }, sl: { platform: 'Windows 10' }, lt: { platform: 'Windows 10' } },\n    { osName: 'Windows 8', bs: { os: 'WINDOWS', os_version: '8' }, sl: { platform: 'Windows 8' } },\n    { osName: 'Windows 8.1', bs: { os: 'WINDOWS', os_version: '8.1' }, sl: { platform: 'Windows 8.1' } },\n    { osName: 'Windows 7', bs: { os: 'WINDOWS', os_version: '7' }, sl: { platform: 'Windows 7' } },\n    { osName: 'Windows XP', bs: { os: 'WINDOWS', os_version: 'XP' }, sl: { platform: 'Windows XP' } },\n    { osName: 'macOS Sonoma', bs: { os: 'OS X', os_version: 'Sonoma', safari_version: '17' }, sl: {}, lt: { platform: 'macOS Sonoma', safari_version: '17' } },\n    {\n        osName: 'macOS Ventura',\n        bs: { os: 'OS X', os_version: 'Ventura', safari_version: '16.5' },\n        sl: { platform: 'macOS 13', safari_version: 'latest' },\n        lt: { platform: 'macOS Ventura', safari_version: '16' },\n    },\n    {\n        osName: 'macOS Monterey',\n        bs: { os: 'OS X', os_version: 'Monterey', safari_version: '15.6' },\n        sl: { platform: 'macOS 12', safari_version: 'latest' },\n        lt: { platform: 'macOS Monterey', safari_version: '15' },\n    },\n    { osName: 'macOS Big Sur', bs: { os: 'OS X', os_version: 'Big Sur', safari_version: '14.1' }, sl: { platform: 'macOS 11', safari_version: 'latest' } },\n    { osName: 'macOS Catalina', bs: { os: 'OS X', os_version: 'Catalina', safari_version: '13.1' }, sl: { platform: 'macOS 10.15', safari_version: 'latest' } },\n    { osName: 'macOS Mojave', bs: { os: 'OS X', os_version: 'Mojave', safari_version: '12.1' }, sl: { platform: 'macOS 10.14', safari_version: 'latest' } },\n    { osName: 'macOS High Sierra', bs: { os: 'OS X', os_version: 'High Sierra', safari_version: '11.1' }, sl: { platform: 'macOS 10.13', safari_version: 'latest' } },\n    { osName: 'macOS Sierra', bs: { os: 'OS X', os_version: 'Sierra', safari_version: '10.1' }, sl: { platform: 'macOS 10.12', safari_version: 'latest' } },\n    { osName: 'OS X El Capitan', bs: { os: 'OS X', os_version: 'El Capitan', safari_version: '9.1' }, sl: { platform: 'OS X 10.11', safari_version: 'latest' } },\n    { osName: 'OS X Yosemite', bs: { os: 'OS X', os_version: 'Yosemite', safari_version: '8' }, sl: { platform: 'OS X 10.10', safari_version: 'latest' } },\n    { osName: 'OS X Mavericks', bs: { os: 'OS X', os_version: 'Mavericks', safari_version: '7.1' }, sl: { platform: 'OS X 10.9', safari_version: 'latest' } },\n    { osName: 'OS X Mountain Lion', bs: { os: 'OS X', os_version: 'Mountain Lion', safari_version: '6.2' }, sl: { platform: 'OS X 10.8', safari_version: 'latest' } },\n    { osName: 'OS X Lion', bs: { os: 'OS X', os_version: 'Lion', safari_version: '6' }, sl: {} },\n    { osName: 'OS X Snow Leopard', bs: { os: 'OS X', os_version: 'Snow Leopard', safari_version: '5.1' }, sl: {} },\n\n    { osName: 'iOS', bs: { platform: 'MAC' }, sl: { platformName: 'iOS', appiumVersion: '1.6.4' } },\n    { osName: 'Android', bs: { platform: 'ANDROID' }, sl: { platformName: 'Android', appiumVersion: '1.6.4' } },\n];\n\nconst BROWSERS = [\n    { browserName: 'Chrome', bs: { browser: 'Chrome', browser_version: '112' }, sl: { browserName: 'chrome', version: '94.0' }, browserValue: 'chrome' },\n    { browserName: 'Firefox', bs: { browser: 'Firefox', browser_version: '89' }, sl: { browserName: 'firefox', version: '89.0' }, browserValue: 'firefox' },\n    { browserName: 'Safari', bs: { browser: 'Safari' }, sl: { browserName: 'safari' }, browserValue: 'safari' },\n    // eslint-disable-next-line max-len\n    { browserName: 'Edge Chromium', bs: { browser: 'Edge', browser_version: '112' }, sl: { browserName: 'MicrosoftEdge', version: '94' }, synonyms: ['edge-chromium'], browserValue: 'edge-chromium', seleniumName: 'MicrosoftEdge' },\n    { browserName: 'Browser', bs: {}, sl: { browserName: 'Browser' }, browserValue: 'browser' },\n    { browserName: 'Android', bs: { browserName: 'android' }, sl: {}, browserValue: 'android' },\n    { browserName: 'iPad', bs: { browserName: 'iPad' }, sl: {}, browserValue: 'ipad' },\n    { browserName: 'iPhone', bs: { browserName: 'iPhone' }, sl: {}, browserValue: 'iphone' },\n];\n\n\nexport function sanitizeNumberValue(val: string | number, defaultVal: number) {\n    const sanitizedValue = Number(val);\n    if (Number.isNaN(sanitizedValue) || sanitizedValue <= 0) {\n        return defaultVal;\n    }\n    return sanitizedValue;\n}\n\nexport function getBrowserInfo(browserValue: string) {\n    browserValue = browserValue.toLowerCase();\n    return BROWSERS.find((b) => b.browserValue === browserValue);\n}\n\nexport function getRunConfigByBrowserName(browser: string, saucelabs: RunnerOptions['saucelabs'] | undefined, browserstack: RunnerOptions['browserstack'] | undefined) {\n    browser = browser?.toLowerCase();\n    // @ts-expect-error the `.include(b.synonyms)` looks like a mistake, it cant be true\n    const selectedBrowser = BROWSERS.find(b => b.browserName.toLowerCase() === browser || browser.includes(b.synonyms)) || BROWSERS[0];\n\n    // BS and SL do not support Linux for newer browser, so use Windows instead.\n    let selectedOS = OSS.find(x => x.osName === 'Windows 10');\n    if (saucelabs) {\n        if (saucelabs.platform) {\n            selectedOS = OSS.find(o => (o.sl as { platform?: string }).platform === saucelabs.platform);\n        } else if (saucelabs.platformName) {\n            selectedOS = OSS.find(o => (o.sl as { platformName?: string }).platformName === saucelabs.platformName);\n        }\n    }\n    if (browserstack) {\n        if (browserstack.os_version) {\n            selectedOS = OSS.find(o => (o.bs as { os_version?: string }).os_version === browserstack.os_version);\n        } else if (browserstack.platform) {\n            selectedOS = OSS.find(o => (o.bs as { platform?: string }).platform === browserstack.platform);\n        }\n    }\n\n    return _.merge(selectedBrowser, selectedOS);\n}\n\nexport function getEnvironmentGitBranch() {\n    return process.env.GIT_BRANCH || process.env.CIRCLE_BRANCH || process.env.TRAVIS_BRANCH || process.env.CI_BRANCH;\n}\n\nexport function removePropertyFromObject(obj: object, propName: string, cmpFunction: (value: any, other: any) => boolean) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const prop in obj) {\n        if (Object.hasOwn(obj, prop)) {\n            if (cmpFunction(prop as any, propName)) {\n                delete obj[prop as keyof typeof obj];\n            } else if (typeof obj[prop as keyof typeof obj] === 'object') {\n                removePropertyFromObject(obj[prop as keyof typeof obj], propName, cmpFunction);\n            }\n        }\n    }\n}\n\nexport interface W3CElement { [W3C_ELEMENT_ID]: string }\nexport interface LegacyElement { ELEMENT: string }\nexport function extractElementId(element: W3CElement | LegacyElement) {\n    return (element as LegacyElement).ELEMENT || (element as W3CElement)[W3C_ELEMENT_ID];\n}\n\nexport function getPlanType(plan: { expireAt?: number; expireAT?: number; plan?: string }) {\n    plan ||= {};\n    const now = Date.now();\n    const expirationDate = plan.expireAt || plan.expireAT;\n\n    if (plan.plan !== 'free') {\n        return 'pro';\n    }\n    if (expirationDate) {\n        return expirationDate < now ? 'free' : 'trial';\n    }\n    return 'free';\n}\n\nexport const calcPercentile = (arr: number[], percentile: number) => {\n    if (arr.length === 0) return 0;\n    if (typeof percentile !== 'number') throw new TypeError('p must be a number');\n\n    arr = [...arr].sort((a, b) => a - b);\n\n    if (percentile <= 0) return arr[0];\n    if (percentile >= 100) return arr.at(-1);\n\n    const index = Math.ceil(arr.length * (percentile / 100)) - 1;\n    return arr[index];\n};\n\ninterface TestResultWithRetries extends RawTestResult {\n    retryTestResults: RawTestResult[];\n}\n\n// NOTE: This duplicates a function in services (stream-data/result/resultService.ts) since we can't share code between packages.\nexport function groupTestsByRetries(testResults: RawTestResult[] = []) {\n    return _.chain(testResults)\n        .groupBy((tr) => tr.originalTestResultId || tr.resultId)\n        .values()\n        // Should be flatMap\n        .reduce<RawTestResult[]>((all, current) => {\n            if (!current) {\n                return all;\n            }\n            if (current.length === 1) {\n                all.push(current[0]);\n                return all;\n            }\n            const sorted = current.slice().sort((a, b) => {\n                const aCount = (typeof a.retryCount === 'number' ? a.retryCount : 1);\n                const bCount = (typeof b.retryCount === 'number' ? b.retryCount : 1);\n                if (aCount === bCount) {\n                    return a.startTime - b.startTime;\n                }\n                return (a.retryCount ?? 0) - (b.retryCount ?? 0);\n            });\n            const last = _.cloneDeep(sorted.at(-1)) as TestResultWithRetries | undefined;\n            if (!last) {\n                return all;\n            }\n            last.retryTestResults = sorted;\n            all.push(last);\n            return all;\n        }, [])\n        .compact()\n        .value();\n}\n\nconst parser = new DOMParser();\n\nexport function unescapeHTML(html: string) {\n    const parsedDoc = parser.parseFromString(`<html><body>${html}</body></html>`, 'text/html') as any as Document;\n    return parsedDoc.documentElement.textContent;\n}\n\nexport function getLinksFromUnescapeHTML(html: string) {\n    const parsedDoc = parser.parseFromString(`<html><body>${html}</body></html>`, 'text/html') as any as Document;\n    return [...parsedDoc.getElementsByTagName('a')].map(a => a.href).filter(Boolean);\n}\n\nexport async function getCdpAddressForHost(browserInstanceHost: string, timeout?: number) {\n    // Lazily required to avoid circular dep (httpRequest requires logger which requires the utils to get the runnerVersion)\n    const httpRequest = await import('../commons/httpRequest');\n    try {\n        interface Response {\n            /** @example \"Chrome/81.0.4044.138\" */\n            Browser: string;\n            /** @example \"1.3\" */\n            'Protocol-Version': string;\n            /** @example \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\" */\n            'User-Agent': string;\n            /** @example \"8.1.307.32\" */\n            'V8-Version': string;\n            /** @example \"537.36 (@8c6c7ba89cc9453625af54f11fd83179e23450fa)\" */\n            'WebKit-Version': string;\n            /** @example \"ws://localhost:58938/devtools/browser/d4290379-ec08-4d03-a41a-ab9d9d4c36ac\" */\n            webSocketDebuggerUrl: string;\n        }\n        const debuggerAddress = await httpRequest.get<Response>(`http://${browserInstanceHost}/json/version`, undefined, undefined, timeout);\n        return debuggerAddress.webSocketDebuggerUrl;\n    } catch (e) {\n        throw new Error('unable to connect to devtools server');\n    }\n}\n\nexport * from './fsUtils';\nexport * from './argsUtils';\nexport * from './timeUtils';\nexport * from './stringUtils';\nexport * from './promiseUtils';\nexport * from './mobileUtils';\nexport * from './performanceUtils';\n\nexport type ValueOf<T> = T[keyof T];\nexport type AwaitedReturnType<T extends (...args: any) => any> = Awaited<ReturnType<T>>;\nexport type Falsy = false | undefined | null | '' | 0;\nexport type ExcludesFalseyTypeGuard = <T>(x: T | Falsy) => x is T;\n", "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"definitions\": {\n        \"request\": {\n            \"type\": \"object\",\n            \"required\": [\"url\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"url\": { \"type\": \"string\" },\n                \"method\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^GET$|^HEAD$|^POST$|^PUT$|^DELETE$|^CONNECT$|^OPTIONS$|^TRACE$|^PATCH$\"\n                }\n            }\n        },\n        \"header\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"value\"\n            ],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"cookie\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"value\"\n            ],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                },\n                \"path\": {\n                    \"type\": \"string\"\n                },\n                \"domain\": {\n                    \"type\": \"string\"\n                },\n                \"expires\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                \"httpOnly\": {\n                    \"type\": \"boolean\"\n                },\n                \"secure\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"response\": {\n            \"type\": \"object\",\n            \"required\": [\"status\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 100,\n                    \"exclusiveMaximum\": 600\n                },\n                \"headers\": {\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/definitions/header\" }\n                },\n                \"cookies\": {\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/definitions/cookie\" }\n                },\n                \"content\": {\n                    \"type\": \"object\",\n                    \"required\": [\"text\"],\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"text\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"redirectResponse\": {\n            \"type\": \"object\",\n            \"required\": [\"redirectUrl\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"redirectUrl\": { \"type\": \"string\" }\n            }\n        },\n        \"passthroughResponse\": {\n            \"type\": \"object\",\n            \"required\": [\"passthrough\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"passthrough\": { \"type\": \"boolean\", \"enum\": [ true ] }\n            }\n        },\n        \"entry\": {\n            \"type\": \"object\",\n            \"required\": [\"request\", \"response\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"request\": { \"$ref\": \"#/definitions/request\" },\n                \"response\": {\n                    \"oneOf\": [\n                        { \"$ref\": \"#/definitions/response\" },\n                        { \"$ref\": \"#/definitions/redirectResponse\" },\n                        { \"$ref\": \"#/definitions/passthroughResponse\" }\n                    ]\n                },\n                \"maxHits\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                }\n            }\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\"entries\"],\n    \"properties\": {\n        \"version\": { \"type\": \"string\", \"enum\": [\"1.2\", \"1.2.0\"] },\n        \"creator\": { \"type\": \"string\" },\n        \"entries\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/definitions/entry\" }\n        }\n    }\n}\n", "import * as fs from 'fs';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\nimport * as utils from '../utils';\nimport { debounce } from 'lodash';\nimport { getLogger } from './logger';\n\nconst logger = getLogger('local cache');\n\nlet cacheLocation = path.resolve(utils.getCliLocation(), 'testim-cache');\n\nlet encryptKeyResolve: undefined | ((value: string) => void);\nlet encryptAndSaveResolve: (value: { success: boolean; error?: any }) => void;\nlet cacheEnabled = true;\nlet cacheMissAllowed = true;\nlet waitingForSave = false;\n\nlet _encryptAndSavePromise = new Promise<{ success: boolean; error?: any }>(resolve => { encryptAndSaveResolve = resolve; });\nconst _encryptKeyPromise = new Promise<string>(resolve => { encryptKeyResolve = resolve; });\n\nconst THREE_HOURS = 1000 * 60 * 60 * 3;\n\nexport const getCacheFileLocation = () => path.resolve(path.resolve(cacheLocation, 'testim.cache'));\n\nasync function getLocalRunnerCache() {\n    try {\n        return await utils.promiseTimeout(\n            fs.promises.readFile(getCacheFileLocation()).then(async buffer => {\n                const key = await _encryptKeyPromise;\n                return decrypt(key, buffer);\n            }),\n            30_000,\n        );\n    } catch {\n        return {};\n    }\n}\n\nlet localRunnerCache = getLocalRunnerCache();\n\nconst encryptAndSave = debounce(async (object) => {\n    let error;\n    try {\n        const key = await _encryptKeyPromise;\n        const iv = crypto.randomBytes(16);\n        const objStr = JSON.stringify(object);\n        const keyBuffer = Buffer.from(key);\n        const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.concat([keyBuffer, Buffer.alloc(32)], 32), iv);\n        const result = Buffer.concat([iv, cipher.update(objStr), cipher.final()]);\n        const pathExists = await utils.doesPathExist(cacheLocation);\n        if (!pathExists) {\n            await fs.promises.mkdir(cacheLocation, { recursive: true });\n        }\n        await fs.promises.writeFile(getCacheFileLocation(), result);\n    } catch (err) {\n        logger.error('failed saving cache', { err });\n        error = err;\n    }\n    if (error) {\n        encryptAndSaveResolve({ success: false, error });\n    } else {\n        encryptAndSaveResolve({ success: true });\n    }\n}, 200);\n\nfunction decrypt(key: string, buffer: Buffer) {\n    const iv = buffer.slice(0, 16);\n    const encryptedText = buffer.slice(16);\n    const keyBuffer = Buffer.from(key);\n    const decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.concat([keyBuffer, Buffer.alloc(32)], 32), iv);\n    const decrypted = decipher.update(encryptedText);\n    // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n    return JSON.parse(Buffer.concat([decrypted, decipher.final()]));\n}\n\n/** argument-less memoize for functions with a global cache name} */\nexport function memoize<T>(fn: () => PromiseLike<T>, fnName: string, duration = THREE_HOURS, parameters: any = undefined) {\n    return async () => {\n        if (!cacheEnabled) {\n            return await fn();\n        }\n        const originalFnName = fnName;\n        if (parameters) {\n            fnName += JSON.stringify(parameters);\n        }\n        const cached = await get<T>(fnName);\n        if (cached) {\n            logger.debug('cache hit:', { fnName });\n            return cached;\n        }\n        logger.debug('cache miss:', { fnName });\n        if (!cacheMissAllowed) {\n            throw new Error(`Attempted to rebuild cache for ${originalFnName}. cache miss is not allowed with current run configuration`);\n        }\n        const value = await fn();\n        if (value) {\n            await set(fnName, value, duration);\n        }\n        return value;\n    };\n}\n\nexport async function get<T = any>(key: string) {\n    const obj = await localRunnerCache;\n    const valueExpiry = obj[key];\n    if (!valueExpiry) {\n        return undefined; // not in cache\n    }\n    const { value, expiry } = valueExpiry;\n    if (expiry < Date.now()) {\n        return undefined;\n    }\n    if (!value) {\n        return undefined;\n    }\n    return value as T;\n}\n\nexport async function set(key: string, value: any, ttl: number) {\n    if (waitingForSave) {\n        logger.error('calling set after waitForSave is not allowed', { key, ttl });\n        throw new Error('calling set after waitForSave is not allowed');\n    }\n    try {\n        const obj = await localRunnerCache;\n        obj[key] = { value, expiry: Date.now() + ttl };\n        _encryptAndSavePromise = new Promise(resolve => { encryptAndSaveResolve = resolve; });\n        encryptAndSave(obj);\n    } catch (e) {\n        logger.error('failed updating cache');\n    }\n}\n\nexport async function clear() {\n    const obj = await localRunnerCache;\n    Object.keys(obj).forEach(key => {\n        delete obj[key];\n    });\n}\n\nfunction setEnabled(enabled: boolean) {\n    cacheEnabled = enabled;\n}\n\nfunction _enableCacheMiss(enabled = true) {\n    cacheMissAllowed = enabled;\n}\n\nexport async function waitForSave() {\n    try {\n        waitingForSave = true;\n        return await _encryptAndSavePromise;\n    } finally {\n        waitingForSave = false;\n    }\n}\n\nexport function setCacheLocation(location: string) {\n    cacheLocation = location;\n    localRunnerCache = getLocalRunnerCache();\n}\n\nexport const setEncryptKey = encryptKeyResolve;\nexport const disable = setEnabled.bind(this, false);\nexport const enable = setEnabled.bind(this, true);\nexport const disableCacheMiss = () => _enableCacheMiss(false);\nexport const enableCacheMiss = () => _enableCacheMiss(true);\nexport const isEnabled = function () { return cacheEnabled; };\n", "import * as os from 'node:os';\nimport { getCliLocation } from '../utils';\n\nexport function additionalLogDetails() {\n    return {\n        cliLocation: getCliLocation(),\n        userInfo: os.userInfo(),\n        platform: os.platform(),\n        release: os.release(),\n    };\n}\n", "/* eslint-disable import/no-dynamic-require */\nimport * as path from 'path';\n\nfunction getMainPath(packageName: string) {\n    try {\n        return path.resolve(\n            path.dirname(require.resolve(`${packageName}/package.json`)),\n            require(`${packageName}/package.json`).main || '',\n        );\n    } catch (err) {\n        // If the package.json declares a export property which doesn't export the package file itself, this will attempt to fallback to the the exported \".\"\n        if (err.code === 'ERR_PACKAGE_PATH_NOT_EXPORTED') {\n            return require.resolve(packageName);\n        }\n        throw err;\n    }\n}\n\n/** Require with statCache issue workaround */\nexport function requireWithFallback(packageName: string) {\n    // Workaround for https://github.com/nodejs/node/issues/31803 statCache\n    const mainPath = getMainPath(packageName);\n\n    return require(mainPath);\n}\n", "import * as fs from 'fs';\nimport * as path from 'path';\nimport * as utils from '../utils';\nimport { promisify } from 'util';\nimport { spawn, exec as _exec } from 'child_process';\nimport { getLogger } from './logger';\nimport { additionalLogDetails } from './logUtils';\nimport { requireWithFallback } from './requireWithFallback';\nimport { IncompatibleNpmPackageError, NpmPackageError, NpmPermissionsError, TimeoutError } from '../errors';\n\nconst exec = promisify(_exec);\nconst logger = getLogger('cli-service');\n\nfunction getPathWithMissingPermissions(error: any) {\n    const pathRegex = /EACCES[^']+'(.+)'/;\n    const regexResult = pathRegex.exec(error);\n    if (regexResult === null) {\n        return false;\n    }\n    return regexResult[1];\n}\n\n// https://github.com/npm/arborist/pull/362\nfunction npmSevenAndEightMissingPermissions(error: any) {\n    return /The \"to\" argument must be of type string./.exec(error);\n}\n\nfunction checkForInstallationAccessError(error: any, defaultRoot: string, packageName?: string) {\n    const pathWithMissingPermissions = getPathWithMissingPermissions(error);\n    const npmEightMissingPermissions = npmSevenAndEightMissingPermissions(error);\n    if (pathWithMissingPermissions || npmEightMissingPermissions) {\n        logger.info('Failed to install package due to insufficient write access', {\n            ...additionalLogDetails(),\n            package: packageName,\n            path: pathWithMissingPermissions,\n        });\n        // eslint-disable-next-line no-console\n        console.error(`\n\nTestim failed installing the package ${packageName || ''} due to insufficient permissions.\nThis is probably due to an installation of @testim/testim-cli with sudo, and running it without sudo.\nTestim had missing write access to ${pathWithMissingPermissions || defaultRoot}\n\n`);\n        return true;\n    }\n    return false;\n}\n\nexport async function getLatestPackageVersion(packageName: string) {\n    const result = await exec(`npm view ${packageName} version`);\n    return result.stdout.trim();\n}\n\nexport function getPackageIfInstalledLocally(packageName: string) {\n    try {\n        // note: this code fails if require itself throws here\n        // rather than an ENOENT - but since lazy dependencies are all controlled\n        // by us that's probably fine.\n        return requireWithFallback(packageName);\n    } catch (err) {\n        return false;\n    }\n}\n\nexport async function isPackageInstalledInPath(rootPath: string, packageName: string) {\n    try {\n        return await utils.doesPathExist(path.join(rootPath, `./node_modules/${packageName}/package.json`));\n    } catch (error) {\n        return false;\n    }\n}\n\nexport function getLocallyInstalledPackageVersion(rootPath: string, packageName: string): string {\n    // eslint-disable-next-line import/no-dynamic-require\n    return require(path.join(rootPath, `./node_modules/${packageName}/package.json`)).version;\n}\n\nexport function extractCommonJsPathFromPackageJson(packageManifest: Record<string, unknown> | string): string | undefined {\n    if (typeof packageManifest === 'string' && packageManifest.endsWith('.cjs')) {\n        return packageManifest;\n    }\n\n    if (typeof packageManifest === 'object' && packageManifest !== null) {\n        for (const key of Object.keys(packageManifest).filter(key => key !== 'browser')) {\n            const pathFromManifest = extractCommonJsPathFromPackageJson(packageManifest[key] as Record<string, unknown> | string);\n\n            if (pathFromManifest) {\n                return pathFromManifest;\n            }\n        }\n    }\n\n    return undefined;\n}\n\nexport function getLocallyInstalledCommonJsPath(packagePath: string): string {\n    // eslint-disable-next-line import/no-dynamic-require\n    const packageManifest = require(path.join(packagePath, 'package.json'));\n\n    if (!('exports' in packageManifest)) {\n        return '';\n    }\n\n    // The package has an \"exports\" field, which mean it support multiple exports types. We need to find the commonjs export path and use that one as the package path as cli action support packages\n    // with common js export.\n    const commonJSExportPath = extractCommonJsPathFromPackageJson(packageManifest);\n\n    if (!commonJSExportPath) {\n        throw new IncompatibleNpmPackageError(packageManifest.name);\n    }\n\n    return commonJSExportPath;\n}\n\nexport async function installPackageLocally(rootPath: string, packageName: string, execOptions?: Parameters<typeof exec>[1]) {\n    // this is here because our shrinkwrap blocks our lazy deps for some reason\n    const oldShrinkwrap = path.join(rootPath, 'npm-shrinkwrap.json');\n    const newShrinkwrap = path.join(rootPath, 'npm-shrinkwrap-dummy.json');\n    let renamed = false;\n    try {\n        try {\n            if (await utils.doesPathExist(oldShrinkwrap)) {\n                await fs.promises.rename(oldShrinkwrap, newShrinkwrap);\n                renamed = true;\n            }\n        } catch (err) {\n            // ignore error\n        }\n        return await exec(`npm i ${packageName} --no-save --no-prune --prefer-offline --no-audit --progress=false`, { ...execOptions, cwd: rootPath }).catch(err => {\n            const accessError = checkForInstallationAccessError(err.stderr, rootPath, packageName);\n            if (accessError) {\n                throw new NpmPermissionsError(`${rootPath} Failed to install package: ${packageName} due to insufficient write access in directory`);\n            }\n            throw err;\n        });\n    } finally {\n        if (renamed) {\n            try {\n                await fs.promises.rename(newShrinkwrap, oldShrinkwrap);\n            } catch (err) {\n                // ignore error\n            }\n        }\n    }\n}\n\nconst localNpmLocation = path.resolve(require.resolve('npm').replace('index.js', ''), 'bin', 'npm-cli.js');\n\nexport function installPackages(prefix: string, packageNames: string[], proxyUri: string | undefined, timeoutMs: number, useCache = true) {\n    return new Promise<string>((resolve, reject) => {\n        const proxyFlag = proxyUri ? ['--proxy', proxyUri] : [];\n\n        const envVars = proxyUri ? { env: Object.assign(process.env, { HTTP_PROXY: proxyUri, HTTPS_PROXY: proxyUri }) } : {};\n\n        let stdout = '';\n        let stderr = '';\n\n        const options = [\n            '--no-save',\n            '--no-package-lock',\n            '--no-prune',\n            '--no-audit',\n            '--progress=false',\n        ];\n        if (useCache) {\n            options.push( '--prefer-offline');\n        }\n\n        const npmInstall = spawn('node', [localNpmLocation, 'i', '--prefix', prefix, ...options, ...packageNames, ...proxyFlag], envVars);\n        npmInstall.stderr.pipe(process.stderr);\n        npmInstall.stdout.pipe(process.stdout);\n\n        npmInstall.stdout.on('data', (data) => {\n            stdout += data;\n        });\n\n        npmInstall.stderr.on('data', (data) => {\n            stderr += data;\n        });\n\n        npmInstall.on('close', (code) => {\n            if (code) {\n                // This is a retry tor the installation because in some cases when using --prefer-offline flag it only checks the cache and not the registry\n                // so we need to retry the installation without the --prefer-offline flag to check in the registry before failing.\n                // If the retry succeeds we resolve the promise with the stdout or else we reject with the error\n                if (useCache) installPackages(prefix, packageNames, proxyUri, timeoutMs, false).then(resolve).catch(reject);\n                let errorString;\n                try {\n                    const packageNotInRegistryError = /npm ERR! 404 {2}'(.+)' is not in the npm registry/gm.exec(stderr)?.[1];\n                    const packageVersionNotFoundError = /No matching version found for (\\S+)@/gm.exec(stderr)?.[1];\n                    if (packageNotInRegistryError || packageVersionNotFoundError) {\n                        const packageName = packageVersionNotFoundError ?? packageNotInRegistryError;\n                        errorString = `404 Not Found - GET https://registry.npmjs.org/${packageName} - Not found`;\n                    } else {\n                        const accessError = checkForInstallationAccessError(stderr, localNpmLocation);\n                        if (accessError) {\n                            errorString = `insufficient write access in location ${localNpmLocation}`;\n                        } else {\n                            errorString = `Npm Installation closed with exit code ${code} with error: ${stderr}`;\n                        }\n                    }\n                } catch (err) {\n                    errorString = `Npm Install closed with exit code ${code}\\n stdout: ${stdout} stderr: ${stderr}`;\n                }\n\n                logger.info(`Npm Install closed with exit code ${code}`, { message: errorString, stderr });\n\n                reject(new NpmPackageError(errorString));\n            } else {\n                resolve(stdout);\n            }\n        });\n\n        setTimeout(() => {\n            try {\n                npmInstall.kill();\n            } finally {\n                reject(new TimeoutError());\n            }\n        }, timeoutMs);\n    });\n}\n\nexport async function getNpmVersion() {\n    try {\n        const result = await exec('npm -v');\n        return result.stdout.trim();\n    } catch {\n        return '';\n    }\n}\n", "import Rox from 'rox-node';\nimport { default as nodeFetch } from 'node-fetch';\nimport { EventSource, type FetchLike } from 'eventsource';\nimport { getLogger } from './logger';\nimport { promiseTimeout } from '../utils';\nimport { ROLLOUT_KEY as PROD_ROLLOUT_KEY, IS_ON_PREM, GATEWAY_URL } from './config';\n\nconst DEV_ROLLOUT_KEY = '5b5566db9601aa6484276524';\nconst logger = getLogger('FeatureFlagsService');\n\n// IS_UNIT_TEST = disable rollout if code run in unit test mode to ignore mocha process stuck on running\nconst USE_FEATURE_FLAGS = !IS_ON_PREM && !process.env.IS_UNIT_TEST && !GATEWAY_URL;\n\nconst FORCE_FETCH_TIMEOUT_MS = 20_000; // rollout sometimes takes up to 15 seconds to load\nconst SEC_IN_DAY = 60 * 60 * 24;\nconst LAB_FEATURE_FLAG_VALUES = ['labs', 'disabled', 'enabled'] as const;\n\ntype TCustomFetch = (url: string, options: any) => Promise<nodeFetch.Response>;\ntype TCustomEventSource = (url: string) => EventSource;\n\n/**\n * From CloudBees support, as of 2025-03-26:\n *\n * `fetchFunction` was made for a specific customer recently, and it's true that we didn't document any of this, but it's something  that it will be in future docs.\n *\n * The same is for `eventSourceImpl`, though it has been there for some time.\n *\n * Available as of `rox-node@5.4.12`.\n */\ntype RoxSetupOptions = Rox.RoxSetupOptions & {\n    fetchFunction?: TCustomFetch;\n    eventSourceImpl?: TCustomEventSource;\n};\n\nclass LabFeatureFlag extends Rox.RoxString { // RoxString is a direct replacement of the old Variant class\n    constructor(initialValue = 'disabled') {\n        super(initialValue, LAB_FEATURE_FLAG_VALUES);\n    }\n\n    getValue() {\n        const value = super.getValue() as typeof LAB_FEATURE_FLAG_VALUES[number];\n        if (!LAB_FEATURE_FLAG_VALUES.includes(value)) {\n            logger.warn('unexpected value for lab feature flag. Falling back to value \"labs\"', { featureFlagName: this.name, value });\n            return 'labs';\n        }\n\n        return value;\n    }\n}\n\nclass FeatureFlagsService {\n    public readonly flags;\n    constructor() {\n        this.flags = {\n            useNewWSCLI: new Rox.Flag(),\n            useSafariWebdriverVisibilityChecks: new Rox.Flag(),\n            useClickimVisibilityChecks: new Rox.Flag(),\n            runGetElementCodeInAut: new Rox.Flag(),\n            enableFrameSwitchOptimization: new Rox.Flag(),\n            maximumJsResultSize: new Rox.RoxNumber(2000 * 1024),\n            skipFileInputClicks: new Rox.Flag(),\n            errorMessageOnBadNetwork: new Rox.Flag(true),\n            warnOnBadNetwork: new Rox.Flag(false),\n            overrideAzureStorageUrl: new Rox.Flag(),\n            autoSaveDownloadFileFireFox: new Rox.Flag(true),\n            safariSelectOptionDispatchEventOnSelectElement: new Rox.Flag(true),\n            experimentalPreCodeCompilation: new Rox.Flag(true),\n            /** Enables using top level await inside custom actions */\n            experimentalAsyncCustomCode: new Rox.Flag(),\n            useSameBrowserForMultiTests: new LabFeatureFlag('labs'),\n            highSpeedMode: new LabFeatureFlag(),\n            usePortedHtml5DragDrop: new Rox.Flag(),\n            testNamesToBeforeSuiteHook: new Rox.Flag(),\n            addCustomCapabilities: new Rox.RoxString('{}'),\n            addCustomLTtunnelNTLMOptions: new Rox.RoxString('{}'),\n            LTNetworkCapabilities: new Rox.Flag(),\n            downloadToBase64: new Rox.Flag(),\n            publicGridURL: new Rox.RoxString('public-grid.testim.io'),\n            allowAppFromDeviceRuns: new Rox.Flag(true),\n            unsupportedCapsFields: new Rox.RoxString('[]'),\n            dontFocusOnInit: new Rox.Flag(),\n            /** @deprecated its not longer needed as we moved to Selenium 4 */\n            retryOnSeleniumHubError: new Rox.Flag(),\n            enableLambdaTestTunnelNTLM: new Rox.Flag(), // Adds support to NTLM authorization on LambdaTest tunnel\n            enableLambdaTestTunnelSkipUpgrade: new Rox.Flag(), // If LT released pre-release tunnel binary with fix for a bug, this flag will stop the script from downloading the latest stable binary\n            tdcHsPreventNetworkCapture: new Rox.Flag(),\n            headSpinTdcEnableFlagCapability: new Rox.Flag(),\n            enableBatchTDC: new Rox.Flag(),\n            enableBatchHeadSpin: new Rox.Flag(),\n            clearRunnerFileCache: new Rox.Flag(),\n            forceTurboModeIfNeeded: new Rox.Flag(),\n            /* @deprecated was never in use */\n            redisSlotManager: new Rox.Flag(),\n            tunnelBinaryNewVersion: new Rox.Flag(false),\n            encryptedCredentials: new Rox.Flag(),\n            computePackagePathFromPackageJsonExports: new Rox.Flag(),\n            sendExtensionOnEdgeNonLinux: new Rox.Flag(),\n            enableAppium2pCloudy: new Rox.Flag(),\n            reuseCliPkgInstallFolder: new Rox.Flag(),\n            getPublicIpFrom3rdPartyServices: new Rox.Flag(),\n            chromedriverCdnBinariesUrl: new Rox.RoxString(''), // If needed, supply an alternative URL for downloading the chromedriver binary\n            sfdcHybridCompany: new Rox.Flag(),\n            allowFixingAppIdStructure: new Rox.Flag(),\n            enableAppium2BrowserStack: new Rox.Flag(),\n            increaseTDCRequestTimeout: new Rox.Flag(),\n            accessTokenExpiryMargin: new Rox.RoxNumber(300 * 1000), // How much time before the token expires should we refresh it\n            useMV3Extension: new Rox.Flag(),\n            testimHeadlessExtensionDownloadUrl: new Rox.RoxString('', []),\n            applyMobileRestrictionFromDate: new Rox.RoxNumber(1723507200000), // Restrict mobile trial plans for companies created after specified date --- Tue Aug 13 2024 00:00:00\n            removeMobileTrialRestrictions: new Rox.Flag(),\n            appiumConnectionRetryCount: new Rox.RoxNumber(0),\n            // 120000 ms = 2 minutes\n            appiumConnectionRequestTimeout: new Rox.RoxNumber(120000),\n            DFBrowserVersion: new Rox.RoxString('latest', ['latest', 'latest-1', 'latest-2']),\n            DFAcceptInsecureOrigins: new Rox.RoxString('http://jsbin.testim.io'),\n            enableFixForCustomExtensionForLT: new Rox.Flag(false),\n            enableTestPlanAggregation: new Rox.Flag(),\n            secrets: new Rox.Flag(),\n            chromeArgsDisableFeatures: new Rox.RoxString(''), // comma separated list of additional features to disable in chrome using arg --disable-features\n        };\n        Rox.register('default', this.flags);\n    }\n\n    setProjectId(projectId: string) {\n        Rox.setCustomStringProperty('projectId', projectId);\n    }\n\n    setProjectType(projectType: string) {\n        Rox.setCustomStringProperty('projectType', projectType);\n    }\n\n    setCompanyProductType(productType: string) {\n        Rox.setCustomStringProperty('productType', productType);\n    }\n\n    setCompanyId(companyId: string) {\n        Rox.setCustomStringProperty('companyId', companyId);\n    }\n\n    setPlanType(planType: string) {\n        Rox.setCustomStringProperty('planType', planType);\n    }\n\n    setIsPOC(isPOC: boolean) {\n        Rox.setCustomBooleanProperty('isPOC', isPOC);\n    }\n\n    setIsStartUp(isStartUp: boolean) {\n        Rox.setCustomBooleanProperty('isStartUp', isStartUp);\n    }\n\n    setRunnerMode(mode: string) {\n        Rox.setCustomStringProperty('runnerMode', mode);\n    }\n\n    setRunnerEnvironment(mode: string) {\n        Rox.setCustomStringProperty('runnerEnvironment', mode);\n    }\n\n    /**\n     * Fetches the feature flags and configuration data from CloudBees.\n     * Accepts a `proxy` parameter so that the request can be sent through a proxy server - problem solved in `TES-24246`.\n     */\n    async fetch({ proxy }: { proxy?: string }) {\n        let proxyAgent = undefined;\n        let customFetch: TCustomFetch | undefined = undefined;\n        let customES: TCustomEventSource | undefined = undefined;\n\n        if (!USE_FEATURE_FLAGS) {\n            return undefined;\n        }\n\n        /**\n         * As instructed by CloudBees, if we want proxy support:\n         * 1. a custom `fetchFunction` must be provided,\n         * 2. a custom `eventSourceImpl` must be provided.\n         * 3. The `eventSourceImpl` must use the custom `fetchFunction` to have requests go through the `proxy`.\n         */\n        if (proxy) {\n            proxyAgent = require('https-proxy-agent').HttpsProxyAgent;\n            const proxyAgentInstance = proxy ? new proxyAgent(proxy) : undefined;\n\n            customFetch = (url: string, options: any) => {\n                return nodeFetch(url, { ...options, agent: proxyAgentInstance });\n            };\n\n            customES = function (url: string) {\n                return new EventSource(url, { fetch: customFetch as unknown as FetchLike });\n            };\n        }\n\n        const opts: RoxSetupOptions = {\n            fetchIntervalInSec: SEC_IN_DAY, // we don't actually want to refresh feature flags in the CLI,\n            fetchFunction: customFetch,\n            eventSourceImpl: customES,\n        };\n\n        // TODO: TES-17223 - set rollout key base on env\n        // const ROLLOUT_KEY = (global.meta?.IS_RELEASE || process.env.IS_CI_RUN) ? PROD_ROLLOUT_KEY : DEV_ROLLOUT_KEY;\n\n        // To work against dev FF, you need to set the key to the dev key, until TES-17223 is solved.\n        return promiseTimeout(Rox.setup(PROD_ROLLOUT_KEY, opts), FORCE_FETCH_TIMEOUT_MS)\n            .catch(err => logger.error('failed to get feature flag status', err));\n    }\n}\n\nexport type LabFeatureFlagType = LabFeatureFlag;\nexport const featureFlagsService = new FeatureFlagsService();\n", "import fkill from 'fkill';\nimport pRetry from 'p-retry';\nimport * as npmWrapper from './npmWrapper';\nimport * as httpRequest from './httpRequest';\nimport { getCliLocation, isURL } from '../utils';\nimport { requireWithFallback } from './requireWithFallback';\nimport { featureFlagsService } from './featureFlagsService';\n\nconst PACKAGE_NAME = 'chromedriver';\nconst DRIVER_PORT = 9515;\nconst DRIVER_BASE_URL = `http://localhost:${DRIVER_PORT}/wd/hub`;\nconst DEFAULT_DRIVER_ARGS = [\n    // Default port in chromeDriver package\n    `--port=${DRIVER_PORT}`,\n    // webdriverio expects a wd/hub (selenium-server like server endpoint)\n    '--url-base=/wd/hub',\n    // don't complain about driver version\n    '--disable-build-check',\n    // allow any ip to connect chrome driver\n    '--whitelisted-ips=0.0.0.0',\n    '--log-level=OFF', // instead we could try to log it somehow or at least have a flag to enable this\n];\n\n// [NOTE] This is a \"smart installation\":\n// By default chromedriver package, when installed, will search for an existing binary in the configured temp directory.\n// If found, and it is the correct version, it will simply copy it to your node_modules directory, and if not it will download the newer version.\nexport const install = async () => {\n    const customeBinariesUrl = featureFlagsService.flags.chromedriverCdnBinariesUrl.getValue();\n    const chromedriverCdnBinariesUrl = isURL(customeBinariesUrl) ? `--chromedriver_cdnbinariesurl=${customeBinariesUrl}` : '';\n    await npmWrapper.installPackageLocally(getCliLocation(), `${PACKAGE_NAME} --detect_chromedriver_version ${chromedriverCdnBinariesUrl}`);\n};\n\nexport const start = async () => {\n    // remove --inspect before starting chromedriver\n    process.env.NODE_OPTIONS = '';\n\n    // kill any localhost running chromedriver instance\n    await fkill(`:${DRIVER_PORT}`, { silent: true });\n\n    const chromedriver = requireWithFallback(PACKAGE_NAME);\n    await chromedriver.start(DEFAULT_DRIVER_ARGS, true);\n};\n\nexport const isReady = async ({ chromeBinaryLocation }: { chromeBinaryLocation?: string }) => {\n    // 100 attempts, every 30ms\n    await pRetry(async () => {\n        const statusResponse = await httpRequest.get(`${DRIVER_BASE_URL}/status`);\n        if (!statusResponse?.value?.ready) {\n            throw new Error('status failed');\n        }\n\n        const chromeOptions = {\n            ...(chromeBinaryLocation && { binary: chromeBinaryLocation }),\n        };\n        const sessionResponse = await httpRequest.post({\n            url: `${DRIVER_BASE_URL}/session`,\n            body: { desiredCapabilities: { browserName: 'chrome', chromeOptions } },\n            headers: { 'Content-Type': 'application/json' },\n        });\n        if (!sessionResponse || sessionResponse.status !== 0 || !sessionResponse.sessionId) {\n            throw new Error('create session failed');\n        }\n        await httpRequest.deleteReq(`${DRIVER_BASE_URL}/session/${sessionResponse.sessionId}`);\n    }, { retries: 99, factor: 1, minTimeout: 30 });\n};\n", "import ms from 'ms';\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport * as config from './config';\nimport * as localRunnerCache from './runnerFileCache';\nimport { serializeError } from 'serialize-error';\nimport { getLogger } from './logger';\nimport { additionalLogDetails } from './logUtils';\nimport { ArgError, NpmPermissionsError } from '../errors';\nimport {\n    getCliLocation,\n    isURL,\n    downloadAndSave,\n    getSource,\n    getLocalFileSizeInMB,\n    download,\n    unzipFile,\n    getSourcePath,\n    promiseMap,\n} from '../utils';\n\nconst logger = getLogger('prepare runner and testim start');\nconst MSEC_IN_HALF_DAY = ms('0.5 day');\nconst MAX_CUSTOM_EXT_SIZE_MB = 16;\nconst MAX_CUSTOM_SIZE_ERROR_MSG = `The size of the custom extension is more than ${MAX_CUSTOM_EXT_SIZE_MB}MB`;\n\n\nexport async function prepareCustomExtension(location: string, unlimitedSize = false) {\n    if (!location) {\n        return undefined;\n    }\n\n    if (isURL(location)) {\n        const destFile = path.join(process.cwd(), location.replace(/^.*[\\\\/]/, ''));\n        const contentLength = await getRemoteFileSizeInMB(location);\n        if (contentLength > MAX_CUSTOM_EXT_SIZE_MB && !unlimitedSize) {\n            throw new ArgError(MAX_CUSTOM_SIZE_ERROR_MSG);\n        }\n        await downloadAndSave(location, destFile);\n        return destFile;\n    }\n\n    const destFile = path.resolve(location);\n    if (!fs.existsSync(destFile)) {\n        throw new ArgError(`Failed to find custom extension in location: ${destFile}`);\n    }\n    const fileSize = getLocalFileSizeInMB(destFile);\n    if (fileSize > MAX_CUSTOM_EXT_SIZE_MB && !unlimitedSize) {\n        throw new ArgError(MAX_CUSTOM_SIZE_ERROR_MSG);\n    }\n    return destFile;\n}\n\nasync function getRemoteFileSizeInMB(url: string) {\n    const httpRequest = require('./httpRequest');\n    try {\n        const res = await httpRequest.head(url);\n        const contentLengthHeader = res.headers['content-length'];\n        const contentLengthBytes = contentLengthHeader ? parseInt(contentLengthHeader, 10) : 0;\n        return contentLengthBytes / 1000000;\n    } catch (err) {\n        logger.warn('failed to download custom extension', { err });\n        throw new ArgError(`Failed to download custom extension from location: ${url}`);\n    }\n}\n\nexport function prepareExtension(locations: string[]) {\n    logger.info('prepare extension', { locations });\n\n    const fullLocations = locations.map(location => ({ location, path: getSourcePath(location) }));\n    return localRunnerCache.memoize(\n        () => promiseMap(fullLocations, ({ location, path: _path }) => getSource(location, _path)),\n        'prepareExtension',\n        MSEC_IN_HALF_DAY,\n        fullLocations,\n    )();\n}\n\nexport async function prepareChromeDriver(userDetails: object = {}, driverOptions: { chromeBinaryLocation?: string } = {}, skipIsReadyCheck = false) {\n    const ora = require('ora') as typeof import('ora');\n    const spinner = ora('Starting Driver').start();\n    const chromedriverWrapper = await import('./chromedriverWrapper');\n\n    try {\n        await chromedriverWrapper.install();\n        await chromedriverWrapper.start();\n        if (!skipIsReadyCheck) {\n            await chromedriverWrapper.isReady(driverOptions);\n        }\n        spinner.succeed('Chrome Driver initiated successfully');\n    } catch (error) {\n        const errorMsg = 'Failed to initiate Chrome Driver';\n\n        if (!(error instanceof NpmPermissionsError)) { //NpmPermissionsError was printed and logged already\n            logger.error(errorMsg, {\n                ...userDetails,\n                ...additionalLogDetails(),\n                error: serializeError(error),\n            });\n            // eslint-disable-next-line no-console\n            console.log(`\n1. If you don't have Chrome, please install it from https://www.google.com/chrome.\n2. If Chrome is installed, please verify it's binary directory:\n    - installed where chromedriver expects it (see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver#requirements).\n    - exists in your PATH environment variables.\n3. Try adding --chrome-binary-location flag to Testim CLI specifying the exact location of chrome binary in your computer (e.g on Windows \"C:/Program Files/Google/Chrome/Application/chrome.exe\").\n4. You can always use a standalone Selenium grid and providing it's details with the --host and --port flags (see https://www.npmjs.com/package/selenium-standalone)`);\n        }\n\n        spinner.fail(errorMsg);\n        throw error;\n    }\n}\n\nasync function getPlayerVersion() {\n    const url = config.RUNNER_ENVIRONMENT === 'staging' ? `${config.EXTENSION_SP_S3_HOST}/Staging-LATEST_VERSION` : `${config.BLOB_URL}/extension/sessionPlayer_LATEST_RELEASE`;\n    const res = await download(url);\n    return res.body.toString('utf8');\n}\n\nfunction getDevPlayerS3Url() {\n    return `${config.EXTENSION_SP_S3_HOST}/dev-sessionPlayer.zip`;\n}\n\nasync function getPlayerLocation(location: string, canary?: boolean) {\n    if (!isURL(location) || (isURL(location) && canary) || config.IS_ON_PREM) {\n        return location;\n    }\n\n    const ver = await getPlayerVersion();\n    return `${location}-${ver}${config.RUNNER_ENVIRONMENT === 'staging' ? '.zip' : ''}`;\n}\n\nexport function getSessionPlayerFolder() {\n    const cliLocation = getCliLocation();\n\n    return path.resolve(cliLocation, 'testim-bin');\n}\n\nfunction getPlayerDestination() {\n    const testimAppData = getSessionPlayerFolder();\n\n    const playerDestination = path.resolve(testimAppData, 'sessionPlayer.zip');\n\n    return playerDestination;\n}\n\nasync function downloadAndUnzip(loc: string, playerFileName: string, isRetry = false): Promise<Awaited<ReturnType<typeof unzipFile>>> {\n    try {\n        await getSource(loc, playerFileName);\n        return await unzipFile(playerFileName, getSessionPlayerFolder());\n    } catch (err) {\n        if (isRetry) {\n            throw err;\n        }\n        return await downloadAndUnzip(loc, playerFileName, true);\n    }\n}\n\nexport async function preparePlayer(location: string, canary?: boolean) {\n    logger.info('prepare player', { location, canary });\n    const playerFileName = getPlayerDestination();\n    return localRunnerCache.memoize(\n        async () => {\n            const loc = config.RUNNER_ENVIRONMENT === 'development' ? getDevPlayerS3Url() : await getPlayerLocation(location, canary);\n            await downloadAndUnzip(loc, playerFileName);\n            // return a truthy value, so the caching has a value, and doesn't ignore\n            return {};\n        },\n        'preparePlayer',\n        MSEC_IN_HALF_DAY,\n        [location, canary, playerFileName],\n    )();\n}\n", "import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport ora from 'ora';\nimport { ArgError } from './errors';\nimport { downloadAndSave, unzipFile, TESTIM_BROWSER_DIR, doesPathExist } from './utils';\n\nexport const CHROMIUM_VERSION = '1000968'; // '973306' = 101.0.4899.0  '1000968' = 103.0.5046.0;\nconst DOWNLOAD_CHROME_FOLDER = path.join(TESTIM_BROWSER_DIR, `chrome-${CHROMIUM_VERSION}`);\n\nfunction getCurrentPlatform() {\n    const osType = os.type().toLowerCase();\n    if (osType === 'darwin') {\n        return os.arch() === 'arm' ? 'mac_arm' : 'mac';\n    }\n    if (osType === 'windows_nt') {\n        return os.arch() === 'x64' ? 'win64' : 'win32';\n    }\n    return 'linux';\n}\n\nexport async function downloadAndInstallChromium() {\n    /** Inspired by puppeteer's implementation https://github.com/puppeteer/puppeteer/blob/main/src/node/BrowserFetcher.ts#L45 */\n    const platform = getCurrentPlatform();\n\n    // example download url: https://storage.googleapis.com/chromium-browser-snapshots/Mac/1000968/chrome-mac.zip\n    const storageBaseUrl = 'https://storage.googleapis.com/chromium-browser-snapshots';\n    const platformFolder = {\n        linux: 'Linux_x64',\n        mac: 'Mac',\n        mac_arm: 'Mac_Arm', // eslint-disable-line camelcase\n        win32: 'Win',\n        win64: 'Win_x64',\n    };\n    if (!(platform in platformFolder)) {\n        throw new ArgError(`Unsupported platform: ${platform}`);\n    }\n    // Windows archive name changed at r591479.\n    const winArchiveName = parseInt(CHROMIUM_VERSION, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n    const platformArchiveName = {\n        linux: 'chrome-linux',\n        mac: 'chrome-mac',\n        mac_arm: 'chrome-mac', // eslint-disable-line camelcase\n        win32: winArchiveName,\n        win64: winArchiveName,\n    };\n    const binaryPaths = {\n        linux: 'chrome',\n        mac: 'Chromium.app/Contents/MacOS/Chromium',\n        mac_arm: 'Chromium.app/Contents/MacOS/Chromium', // eslint-disable-line camelcase\n        win32: 'chrome.exe',\n        win64: 'chrome.exe',\n    };\n    const downloadUrl = `${storageBaseUrl}/${platformFolder[platform]}/${CHROMIUM_VERSION}/${platformArchiveName[platform]}.zip`;\n    const downloadArchivePath = path.join(DOWNLOAD_CHROME_FOLDER, platformArchiveName[platform]);\n    const downloadedZipFile = `${downloadArchivePath}.zip`;\n    const binaryPath = path.join(downloadArchivePath, binaryPaths[platform]);\n\n    if (await doesPathExist(binaryPath)) {\n        return binaryPath;\n    }\n    if (!(await doesPathExist(downloadedZipFile))) {\n        const downloadSpinner = ora('Downloading Chromium').start();\n        try {\n            await fs.promises.mkdir(DOWNLOAD_CHROME_FOLDER);\n            await downloadAndSave(downloadUrl, downloadedZipFile);\n            // todo - We can add a failover here if the download fails if we host the file too\n        } catch (e) {\n            const errorMessage = `Failed to download Chromium: ${e.message}`;\n            downloadSpinner.fail(errorMessage);\n            throw new Error(errorMessage);\n        }\n        downloadSpinner.succeed();\n    }\n    const extractSpinner = ora('Extracting Chromium').start();\n    try {\n        await unzipFile(downloadedZipFile, DOWNLOAD_CHROME_FOLDER);\n    } catch (e) {\n        const errorMessage = `Failed to extract Chromium: ${e.message}`;\n        extractSpinner.fail(errorMessage);\n        throw new Error(errorMessage);\n    }\n    extractSpinner.succeed();\n    return binaryPath;\n}\n", "import * as config from './config';\nimport * as httpRequest from './httpRequest';\nimport * as localRunnerCache from './runnerFileCache';\nimport { ArgError } from '../errors';\nimport { getLogger } from './logger';\nimport { validateUserAccessKey, type InitializedUserWithAuth } from './testimServicesApi';\nimport { featureFlagsService } from './featureFlagsService';\n\nconst logger = getLogger('testim-custom-token');\n\nlet _serverToken: string | undefined;\nlet _serverTokenExp: number | undefined;\nlet _refreshToken: string | undefined;\nlet _ngrokToken: string | undefined;\nlet _isNgrokWhitelisted: boolean | undefined;\nlet _projectId: string | null = null;\nlet _token: string | null = null;\nlet _userAccessKey: string | undefined;\nlet _gridAccessWhitelistedIp: string | undefined;\nlet _initializedFromCache: boolean;\n\nconst FIVE_MIN_IN_MS = 5 * 60 * 1000;\n\nexport async function init(projectId: string, token: string) {\n    _projectId = projectId;\n    _token = token;\n    const tokenValue = await generateToken();\n    return tokenValue;\n}\n\nexport function initFromData(\n    authData: InitializedUserWithAuth['authData'],\n    optionsData: { projectId: string; token: string; userAccessKey?: string; publicIp: string | undefined; initializedFromCache: boolean },\n) {\n    _projectId = optionsData.projectId;\n    _token = optionsData.token;\n    _userAccessKey = optionsData.userAccessKey;\n    _serverToken = authData.token;\n    _serverTokenExp = getTokenExp(_serverToken);\n    _refreshToken = authData.refreshToken;\n    _ngrokToken = authData.ngrokToken;\n    _isNgrokWhitelisted = authData.isNgrokWhitelisted;\n    _gridAccessWhitelistedIp = optionsData.publicIp;\n    _initializedFromCache = optionsData.initializedFromCache;\n}\n\nfunction getTokenV3(projectId = _projectId, token = _token) {\n    return localRunnerCache.memoize(() => {\n        logger.info('request to get cli token from server');\n        return httpRequest.post<{ ngrokToken?: string; isNgrokWhitelisted?: boolean; refreshToken: string; token: string; uid: string }>({\n            url: `${config.SERVICES_HOST()}/auth/token`,\n            body: { projectId, token },\n        });\n    }, 'getTokenV3', FIVE_MIN_IN_MS * 10, { projectId, token })();\n}\n\nasync function refreshToken() {\n    logger.info('request to refresh JWT cli token from server');\n    const customToken = await httpRequest.post<{ token: string; refreshToken?: string }>({\n        url: `${config.SERVICES_HOST()}/auth/refreshToken`,\n        body: { token: _serverToken, refreshToken: _refreshToken },\n    });\n    _serverToken = customToken.token;\n    _serverTokenExp = getTokenExp(_serverToken);\n    if (customToken.refreshToken) {\n        _refreshToken = customToken.refreshToken;\n    }\n    return _serverToken;\n}\n\nasync function generateToken() {\n    try {\n        const customToken = await getTokenV3();\n        logger.info('successfully get cli token from server');\n        _serverToken = customToken.token;\n        _serverTokenExp = getTokenExp(_serverToken);\n        _refreshToken = customToken.refreshToken;\n        _ngrokToken = customToken.ngrokToken;\n        _isNgrokWhitelisted = customToken.isNgrokWhitelisted;\n        return _serverToken;\n    } catch (error) {\n        if (error.message.includes('Unauthorized')) {\n            throw new ArgError(\n                'Error trying to retrieve CLI token. ' +\n                'Your CLI token and project might not match. ' +\n                'Please make sure to pass `--project` and `--token` that' +\n                ' match to each other or make sure they match in your ~/.testim file.');\n        }\n        logger.error(`While trying to retrieve CLI token. caught error: ${error}`, { projectId: _projectId });\n        throw new ArgError(`While trying to retrieve CLI token, caught error: ${error}`);\n    }\n}\n\nfunction getTokenExp(token: string) {\n    const jwtLib = require('jsonwebtoken');\n    const jwt = jwtLib.decode(token);\n    return jwt.exp * 1000;\n}\n\nexport async function getCustomTokenV3() {\n    if (!_serverTokenExp) {\n        return generateToken();\n    }\n\n    const timeMargin = featureFlagsService.flags.accessTokenExpiryMargin.getValue();\n    // Refresh the token earlier than needed, to give clickim a chance to have more time to run, as it can't refresh it itself.\n    if (_serverTokenExp < (Date.now() + (4 * timeMargin))) {\n        try {\n            return await refreshToken();\n        } catch (err) {\n            logger.error('failed to refresh token, executing fallback', err);\n            return generateToken();\n        }\n    }\n    return _serverToken!;\n}\n\nexport function getRefreshToken() {\n    return _refreshToken;\n}\n\nexport interface TokenUserData { uid: string; ngrokToken?: string; isNgrokWhitelisted?: boolean }\nexport function getTokenV3UserData(): Partial<TokenUserData> {\n    if (_serverToken) {\n        const jwtLib = require('jsonwebtoken');\n        const data = jwtLib.decode(_serverToken);\n        return { uid: data.id, ngrokToken: _ngrokToken, isNgrokWhitelisted: _isNgrokWhitelisted };\n    }\n    return {};\n}\n\nexport async function getUserAccessKey() {\n    if (!_userAccessKey || !_projectId) {\n        return undefined;\n    }\n\n    const isValid = await validateUserAccessKey({ userAccessKey: _userAccessKey, projectId: _projectId });\n    if (isValid) {\n        return _userAccessKey;\n    }\n\n    const msg = `user access key \"${_userAccessKey}\" is invalid for project \"${_projectId}\"`;\n    throw new ArgError(msg);\n}\n\nexport function gridAccessWhitelistedIp() {\n    return _gridAccessWhitelistedIp;\n}\n\nexport function wasInitializedFromCache() {\n    return _initializedFromCache;\n}\n", "import * as _ from 'lodash';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport { getLogger } from '../commons/logger';\nimport { guid, hasTestPlanFlag, promiseMap } from '../utils';\nimport { gridMessages, gridTypes } from '../commons/constants';\nimport { GridError, ArgError, GridConcurrencyError } from '../errors';\nimport type { GridType } from '../commons/constants';\nimport type { AwaitedReturnType } from '../utils';\nimport type { RunnerOptions } from '../runOptions';\nimport type { CommonSharedOptions } from '../runner';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { LambdatestService } from './lambdatestService';\nimport type { RawTestPlan } from 'services/src/commons/mongo/models/testPlan';\nimport type { RawGrid, TunnelType } from 'services/src/commons/mongo/models/grid';\n\nconst logger = getLogger('grid-service');\n\ntype VendorType = 'testobject' | 'saucelabs' | 'perfecto' | 'hostAndPort';\nconst gridCache: Record<number, { gridId: string; companyId: string; slotId: string; browser: string; isSupportGrid?: boolean }> = {};\nconst urlExtractRegex = /(^(https?):\\/{2})?(.*)/;\nlet keepAliveTimer: NodeJS.Timeout | null = null;\n\nfunction extractProtocol(grid: GridSerializationInput) {\n    if (grid.protocol) {\n        return grid.protocol;\n    }\n\n    if ([gridTypes.TESTIM_PRIVATE, gridTypes.TESTIM, gridTypes.BROWSERSTACK, gridTypes.SAUCELABS].includes(grid.type as any) && grid.port === 443) {\n        return 'https';\n    }\n\n    if ([gridTypes.TESTIM_ENTERPRISE, gridTypes.TESTIM_LAMBDATEST, gridTypes.DEVICE_FARM].includes(grid.type as any)) {\n        const urlExtract = urlExtractRegex.exec(grid.host!);\n        return (urlExtract?.[2] as 'http') || 'https';\n    }\n\n    return '';\n}\n\nfunction extractHost(hostUrl?: string) {\n    const urlExtract = urlExtractRegex.exec(hostUrl!);\n    return urlExtract?.[3];\n}\n\ntype HybridGridProvider = AwaitedReturnType<typeof servicesApi.getHybridGridProvider>;\nexport type GridSerializationInput = RawGrid & Pick<HybridGridProvider['connectionDetails'], 'external'> & SerializedGrid;\nexport interface SerializedGrid {\n    mode?: string;\n    host?: string;\n    port?: number;\n    path?: string;\n    protocol?: string;\n    accessToken?: string;\n    slotId?: string;\n    gridId?: string;\n    tunnel?: TunnelType;\n    user?: string;\n    key?: string;\n    type?: GridType;\n    name?: string;\n    provider?: string;\n    tunnelUser?: string;\n    tunnelKey?: string;\n    androidToken?: string;\n    iosToken?: string;\n    apiUrl?: string;\n    isSupportGrid?: boolean;\n}\nfunction getSerializableObject(grid: GridSerializationInput): SerializedGrid {\n    const host = grid && extractHost(grid.host);\n    const port = grid.port;\n    const path = grid.path;\n    const protocol = grid && extractProtocol(grid);\n    const accessToken = grid.token;\n    const slotId = grid.slotId;\n    const tunnel = grid.hybrid?.tunnel;\n    const user = grid.external?.user;\n    const key = grid.external?.key;\n    const type = grid.type;\n    const tunnelUser = type === gridTypes.HYBRID ? (tunnel && grid.hybrid?.external?.[grid.hybrid.tunnel as keyof typeof grid.hybrid.external]?.user) : user;\n    const tunnelKey = type === gridTypes.HYBRID ? (tunnel && grid.hybrid?.external?.[grid.hybrid.tunnel as keyof typeof grid.hybrid.external]?.key) : key;\n    const name = grid.name;\n    const gridId = grid && (grid._id || grid.gridId);\n    const provider = grid.provider;\n    const androidToken = grid.mobileTokens?.androidToken;\n    const iosToken = grid.mobileTokens?.iosToken;\n    const apiUrl = grid.apiUrl;\n    const isSupportGrid = grid.isSupportGrid;\n\n    return {\n        host, port, path, protocol, accessToken, slotId, gridId, tunnel, user, key, type, name, provider, tunnelUser, tunnelKey, androidToken, iosToken, apiUrl, isSupportGrid,\n    };\n}\n\nexport const addItemToGridCache = (workerId: number, companyId: string, gridId: string, slotId: string, browser: string, isSupportGrid?: boolean) => {\n    gridCache[workerId] = { gridId, companyId, slotId, browser, isSupportGrid };\n};\n\ntype GridRes = { status: 'success'; grid: GridSerializationInput } | { status: 'error'; code: string };\nasync function handleGetGridResponse(projectId: string, companyId: string, workerId: number, browser: string, options: RunnerOptions, getFun: () => Promise<GridRes>) {\n    let res: Awaited<ReturnType<typeof getFun>>;\n    try {\n        res = await getFun();\n    } catch (err) {\n        logger.error('failed to get grid', { projectId, companyId, err });\n        throw new Error(gridMessages.UNKNOWN);\n    }\n    logger.info('get grid info', { ...res, projectId, companyId });\n    if (!res || (!['success', 'error'].includes(res.status))) {\n        logger.error('invalid response - get grid', { res });\n        throw new Error(gridMessages.UNKNOWN);\n    }\n\n    if (res.status === 'success') {\n        if (res.grid.mode === 'local') {\n            return { mode: 'local' };\n        }\n        if (res.grid?.mode === 'custom') {\n            Object.assign(res.grid, getOptionGrid(options));\n        }\n        const serGrid = getSerializableObject(res.grid);\n        addItemToGridCache(workerId, companyId, serGrid.gridId!, serGrid.slotId!, browser, serGrid.isSupportGrid);\n        return serGrid;\n    }\n\n    if (res.code === 'not-found') {\n        throw new GridError(gridMessages.NOT_FOUND);\n    }\n\n    if (res.code === 'no-available-slot') {\n        throw new GridConcurrencyError(`Failed to run test on ${browser} - concurrency limit reached`);\n    }\n\n    logger.error('invalid code error response - get grid', { res });\n    throw new GridError(gridMessages.UNKNOWN);\n}\n\n\nfunction getAllGrids(companyId: string) {\n    return servicesApi.getAllGrids(companyId);\n}\n\nasync function getGridDataByGridId(companyId: string, gridId: string, allGrids?: RawGrid[]) {\n    const grids = allGrids || await getAllGrids(companyId);\n    const grid = grids.find(g => g._id === gridId);\n    if (!grid) {\n        throw new ArgError(`Failed to find grid id: ${gridId}`);\n    }\n    return getSerializableObject(grid as GridSerializationInput);\n}\n\nasync function getGridDataByGridName(companyId: string, gridName: string, allGrids?: RawGrid[]) {\n    const grids = allGrids || await getAllGrids(companyId);\n    const grid = grids.find(g => (g.name || '').toLowerCase() === gridName.toLowerCase());\n    if (!grid) {\n        throw new ArgError(`Failed to find grid name: ${gridName}`);\n    }\n    return getSerializableObject(grid as GridSerializationInput);\n}\n\nexport async function releaseGridSlot(workerId: number, projectId: string) {\n    const gridData = gridCache[workerId];\n    if (!gridData) {\n        return;\n    }\n\n    const { slotId, gridId, browser, companyId, isSupportGrid } = gridData;\n    delete gridCache[workerId];\n\n    if (isSupportGrid) {\n        return;\n    }\n\n    if (!slotId) {\n        logger.warn('failed to find grid slot id', { projectId });\n        return;\n    }\n\n    logger.info('release slot id', { projectId, companyId, slotId, gridId, browser });\n    try {\n        await servicesApi.releaseGridSlot(companyId, projectId, slotId, gridId, browser);\n    } catch (err) {\n        logger.error('failed to release slot', { projectId, err });\n    }\n}\n\nasync function _keepAlive(projectId: string) {\n    const slots = Object.values(gridCache).filter(Boolean);\n\n    if (slots.length === 0) {\n        return;\n    }\n\n    if (slots[0].isSupportGrid) {\n        return;\n    }\n\n    logger.info('keep alive worker slots', { projectId, slots });\n    try {\n        await servicesApi.keepAliveGrid(projectId, slots);\n    } catch (err) {\n        logger.error('failed to update grid keep alive', { err, slots, projectId });\n    }\n}\n\nfunction startKeepAlive(projectId: string) {\n    const KEEP_ALIVE_INTERVAL = 10 * 1000;\n    keepAliveTimer = global.setInterval(_keepAlive, KEEP_ALIVE_INTERVAL, projectId);\n}\n\nasync function releaseAllSlots(projectId: string) {\n    const workerIds = Object.keys(gridCache);\n\n    if (!workerIds.length) {\n        return;\n    }\n\n    logger.warn('not all slots released before end runner flow', { projectId });\n    try {\n        await promiseMap(workerIds, workerId => releaseGridSlot(Number(workerId), projectId));\n    } catch (err) {\n        logger.error('failed to release all slots', { err, projectId });\n    }\n}\n\nasync function endKeepAlive(projectId: string) {\n    await releaseAllSlots(projectId);\n    clearInterval(keepAliveTimer!);\n}\nexport const keepAlive = {\n    start: startKeepAlive,\n    end: endKeepAlive,\n};\n\nfunction getVendorKeyFromOptions(type: VendorType, options: CommonSharedOptions) {\n    const { testobjectSauce, saucelabs } = options;\n    if (type === 'testobject') {\n        return testobjectSauce!.testobjectApiKey;\n    }\n    if (type === 'saucelabs') {\n        return saucelabs!.accessKey;\n    }\n    return undefined;\n}\n\nfunction getVendorUserFromOptions(type: VendorType, options: CommonSharedOptions) {\n    const { saucelabs } = options;\n    if (type === 'saucelabs') {\n        return saucelabs!.username;\n    }\n    return undefined;\n}\n\nfunction getOptionGrid(options: CommonSharedOptions): SerializedGrid {\n    const getGridType = () => {\n        if (!_.isEmpty(options.testobjectSauce)) {\n            return ('testobject' as any);\n        }\n\n        if (!_.isEmpty(options.saucelabs)) {\n            return 'saucelabs';\n        }\n\n        if (!_.isEmpty(options.perfecto)) {\n            return 'perfecto';\n        }\n\n        return 'hostAndPort';\n    };\n    const type = getGridType();\n    const { host, port, path, protocol } = options;\n    const key = getVendorKeyFromOptions(type, options);\n    const user = getVendorUserFromOptions(type, options);\n    return { host, port, path, protocol, type, user, key, gridId: guid() };\n}\n\nexport async function getTestPlanGridData(options: RunnerOptions, testPlanData: RawTestPlan) {\n    const companyId = options.company!.companyId;\n    return await getGridDataByGridId(companyId, testPlanData.gridId, options.allGrids);\n}\n\nexport async function getGridData(options: CommonSharedOptions): Promise<SerializedGrid | undefined> {\n    const { allGrids, company, host, useLocalChromeDriver, localTmaUrl, useChromeLauncher, gridId, grid } = options;\n    if (useLocalChromeDriver || useChromeLauncher || localTmaUrl) {\n        return { mode: 'local' };\n    }\n    if (host) {\n        return getOptionGrid(options);\n    }\n    const companyId = company?.companyId;\n    if (gridId) {\n        return getGridDataByGridId(companyId!, gridId, allGrids);\n    }\n    if (grid) {\n        return getGridDataByGridName(companyId!, grid, allGrids);\n    }\n    if (hasTestPlanFlag(options) || options.tunnelOnlyMode) {\n        logger.info('skipping getting grid, as it is set on test plan', { companyId });\n        return undefined;\n    }\n\n    throw new GridError('Missing host or grid configuration');\n}\n\nexport async function getGridSlot(browser: string, executionId: string, options: RunnerOptions, workerId: number, testResultId: string): Promise<SerializedGrid | { mode: string }> {\n    const { host, project: projectId, grid: gridName, gridId, localTmaUrl, useLocalChromeDriver, useChromeLauncher, company } = options;\n    const isRunningLocalMode = Boolean(useLocalChromeDriver || useChromeLauncher || localTmaUrl);\n\n    const companyId = company?.companyId;\n    const getSlot = () => servicesApi.getGridSlot({ projectId, companyId, browser, executionId, isRunningLocalMode, gridId, gridName, host, testResultId });\n    return handleGetGridResponse(projectId, companyId!, workerId, browser, options, getSlot);\n}\n\nexport const handleHybridOrVendorIfNeeded = async (\n    runnerOptions: Partial<RunnerOptions> = { },\n    gridInfo: Partial<SerializedGrid> = {},\n    testRunConfig: Partial<TestRunHandler['runConfig']> = {},\n    lambdatestService: Partial<LambdatestService> = {},\n    retryConfig: { maxRetries?: number; currentRetry?: number } = {},\n) => {\n    const { company: { companyId } = {} } = runnerOptions;\n    const { gridId, type } = gridInfo as SerializedGrid;\n    const browser = runnerOptions.browser || testRunConfig.browserValue;\n    const usingTunnel = Boolean(runnerOptions.tunnel);\n    const { maxRetries, currentRetry } = retryConfig;\n\n    if (!gridId || !type) {\n        return gridInfo;\n    }\n\n    if (type === gridTypes.TESTIM_LAMBDATEST || type === gridTypes.LAMBDATEST) {\n        await lambdatestService.enableIfNeeded?.(gridInfo, companyId!);\n    }\n\n    if (type !== gridTypes.HYBRID || !companyId || !browser || !maxRetries || !currentRetry) {\n        return gridInfo;\n    }\n\n    const response = await servicesApi.getHybridGridProvider({ companyId, gridId, maxRetries, currentRetry, browser, usingTunnel });\n    logger.info('handling hybrid grid', { response, companyId });\n    const gridData = getSerializableObject({ ...gridInfo, ...response.connectionDetails, provider: response.provider } as GridSerializationInput);\n    if (response.provider !== 'lambdatest') {\n        lambdatestService.disable?.();\n    }\n    if (response.provider === 'lambdatest') {\n        await lambdatestService.enableIfNeeded?.(gridData, companyId);\n    }\n\n    return gridData;\n};\n", "import { ArgError } from '../errors';\nimport type { InitializedUserWithAuth } from '../commons/testimServicesApi';\nimport type { RawBranchesData } from 'services/src/commons/mongo/models/branchesData';\n\nlet currentBranch: string | undefined;\n\nexport function getCurrentBranch() {\n    return currentBranch || 'master';\n}\n\nexport function setCurrentBranch(branchData: InitializedUserWithAuth['branchName'] = 'master', acknowledgeAutoDetect: boolean | string = 'false') {\n    if (typeof branchData !== 'string' && branchData?.branch && branchData.branch === 'master') {\n        currentBranch = 'master';\n        return;\n    }\n    if ((branchData as RawBranchesData)?.isArchived) {\n        throw new ArgError(`Branch ${(branchData as RawBranchesData).branch} is archived, run aborted.`);\n    }\n    if (branchData) {\n        currentBranch = (branchData as RawBranchesData).branch || branchData as string;\n        return;\n    }\n    currentBranch = acknowledgeAutoDetect ? 'master' : undefined;\n}\n\n", "import * as config from './config';\nimport { Analytics } from '@segment/analytics-node';\n\n/* segment.io */\nconst analytics = new Analytics({ writeKey: 'sJOSIGKa5x5rJEGsaOlCjrgozAf7FnVY', flushAt: 1 });\n\nconst anonymousId = require('crypto').randomBytes(20).toString('hex');\n\nexport function identify(data: Parameters<Analytics['identify']>[0]) {\n    if (config.IS_ON_PREM) {\n        return;\n    }\n    if (!data?.userId) {\n        data = { anonymousId };\n    }\n    analytics.identify(data);\n}\n\nexport function trackWithCIUser(eventName: string, properties?: any) {\n    return track('ci', eventName, properties);\n}\n\nexport function track(userId: string | null | undefined, eventName: string, properties: any) {\n    if (config.IS_ON_PREM) {\n        return;\n    }\n    const id = userId ? { userId } : { anonymousId };\n    analytics.track(Object.assign(id, {\n        event: eventName,\n        properties,\n    }));\n}\n", "// copied from https://github.com/watson/ci-info/blob/master/index.js\nexport const isCi = Boolean(\n    process.env.CI || // Travis CI, CircleCI, Cirrus CI, Gitlab CI, Appveyor, CodeShip, dsari\n    process.env.CONTINUOUS_INTEGRATION || // Travis CI, Cirrus CI\n    process.env.BUILD_NUMBER || // Jenkins, TeamCity\n    process.env.RUN_ID || // TaskCluster, dsari\n    false,\n);\n", "import * as analytics from '../commons/testimAnalytics';\nimport { isCi } from '../cli/isCiRun';\nimport type { getLogger } from '../commons/logger';\nimport type { LightweightSettings } from '../runOptions';\nimport type { CompanyPlanTypes } from 'services/src/commons/utils';\nimport type { ProjectType } from 'services/src/commons/mongo/types/DbProject';\n\nconst calcSource = (source: string, user?: string) => {\n    if (source !== 'cli' && source !== 'cli-local') {\n        return source;\n    }\n\n    if (isCi && user) {\n        return 'ci-with-user';\n    }\n\n    if (isCi) {\n        return 'ci';\n    }\n\n    if (user) {\n        return 'cli-with-user';\n    }\n\n    return source;\n};\n\nfunction setLightweightAnalytics(properties: { [key: string]: any }, lightweightMode?: LightweightSettings) {\n    if (lightweightMode?.type) {\n        properties[`${lightweightMode.type}Mode`] = true;\n    }\n    return properties;\n}\n\nexport function analyticsTestStart({\n    executionId,\n    projectId,\n    testId,\n    resultId,\n    ucid,\n    companyId,\n    companyName,\n    projectName,\n    companyPlan,\n    source,\n    user,\n    lightweightMode,\n    isStartUp,\n    projectType,\n    appSource,\n    gridType,\n}: Omit<AnalyticsParams, 'result' | 'logger'>) {\n    const properties = setLightweightAnalytics({\n        executionId,\n        projectId,\n        testId,\n        resultId,\n        ucid,\n        companyId,\n        companyName,\n        projectName,\n        companyPlan,\n        source: calcSource(source, user),\n        isStartUp,\n        projectType,\n        gridType,\n        ...(['android', 'ios'].includes(projectType!) && appSource && { appSource }),\n    }, lightweightMode);\n    analytics.trackWithCIUser('test-run-ci', properties);\n}\n\ninterface AnalyticsParams {\n    executionId: string;\n    projectId: string;\n    testId: string;\n    resultId: string;\n    result: any;\n    ucid: string;\n    companyId?: string;\n    companyName?: string;\n    projectName?: string;\n    companyPlan?: CompanyPlanTypes;\n    source: string;\n    user?: string;\n    lightweightMode?: LightweightSettings;\n    logger: ReturnType<typeof getLogger>;\n    isStartUp?: boolean;\n    projectType?: ProjectType;\n    appSource?: string;\n    gridType?: string;\n}\nexport function analyticsTestEnd({\n    executionId,\n    projectId,\n    testId,\n    resultId,\n    result,\n    ucid,\n    companyId,\n    companyName,\n    projectName,\n    companyPlan,\n    source,\n    user,\n    lightweightMode,\n    logger,\n    isStartUp,\n    projectType,\n    appSource,\n    gridType,\n}: AnalyticsParams) {\n    try {\n        const properties = setLightweightAnalytics({\n            executionId,\n            projectId,\n            testId,\n            resultId,\n            ucid,\n            companyId,\n            companyName,\n            projectName,\n            companyPlan,\n            mockNetworkEnabled: result.wasMockNetworkActivated,\n            source: calcSource(source, user),\n            isStartUp,\n            projectType,\n            gridType,\n            ...(['android', 'ios'].includes(projectType!) && appSource && { appSource }),\n        }, lightweightMode);\n\n        if (result.success) {\n            analytics.trackWithCIUser('test-run-ci-success', properties);\n            return;\n        }\n        analytics.trackWithCIUser('test-run-ci-fail', { ...properties, failureReason: result.failureReason });\n    } catch (err) {\n        logger.error('failed to update test end analytics', { err });\n    }\n}\n\nexport function analyticsExecsStart(analyticsProperties: { executionId: string; projectId: string }) {\n    analytics.trackWithCIUser('batch-run-ci', analyticsProperties);\n}\n", "import * as utils from '../utils';\nimport * as constants from '../commons/constants';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\n\nexport const isFailedTest = (testResult: TestRunStatusTestResult) => {\n    const { status, mobile } = testResult;\n    if (mobile?.isAppFromDevice || mobile?.isAppForIosVirtualDevice) {\n        return false;\n    }\n    return status === constants.runnerTestStatus.FAILED;\n};\n\nexport const isAbortedTest = (testResult: TestRunStatusTestResult) => {\n    const { status } = testResult;\n    return status === constants.runnerTestStatus.ABORTED;\n};\n\nexport const isPassedTest = (testResult: TestRunStatusTestResult) => {\n    const { status } = testResult;\n    return status === constants.runnerTestStatus.PASSED;\n};\n\nexport const isSkippedTest = (testResult: TestRunStatusTestResult) => testResult.runnerStatus === constants.runnerStatus.SKIPPED;\nexport const isEvaluatingTest = (testResult: TestRunStatusTestResult) => testResult.testStatus === constants.testStatus.EVALUATING;\n\ninterface TestResultsObj { [resultId: string]: TestRunStatusTestResult }\n\nexport const getSkippedCount = (testResults: TestResultsObj, options: RunnerOptions) => Object.values(testResults).filter(testResult =>\n    (isSkippedTest(testResult) &&\n    (utils.isQuarantineAndNotRemoteRun(testResult, options) || testResult.mobile?.isAppFromDevice || testResult.mobile?.isAppForIosVirtualDevice)),\n).length;\n\nexport const getFailureEvaluatingCount = (testResults: TestResultsObj) =>\n    Object.values(testResults).filter((testResult) => isFailedTest(testResult) && isEvaluatingTest(testResult)).length;\n\nexport const getFailedTests = (testResults: TestResultsObj) => Object.values(testResults).filter(isFailedTest);\n\nexport const getPassedTests = (testResults: TestResultsObj) => Object.values(testResults).filter(isPassedTest);\n\nexport const getAbortedTests = (testResults: TestResultsObj) => Object.values(testResults).filter(isAbortedTest);\n", "import _ from 'lodash';\nimport { getLogger } from '../commons/logger';\nimport { getPassedTests } from './reporterUtils';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nconst logger = getLogger('debug-reporter');\n\nconst optionsKeysToMask = [\n    'allGrids',\n    'authData',\n    'gridData',\n    'perfecto',\n    'projectData',\n    'runParams',\n    'testobjectSauce',\n    'token',\n    'userData',\n    'userParamsData',\n\n    'awsAccessKeyId',\n    'awsSecretAccessKey',\n] satisfies Array<(keyof RunnerOptions) | (string & {})>;\n\nexport class DebugReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions) {}\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number) {\n        logger.info('Test Started', { testId: test.testId, testName: test.name, resultId: test.resultId, workerId });\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number) {\n        const gridData = this.options.gridData || {};\n        const provider = gridData.provider;\n        const host = gridData.host;\n        const gridId = gridData.gridId;\n        const gridType = gridData.type;\n        const failedGetBrowserAttempts = gridData.failedGetBrowserAttempts;\n        logger.info('Test Finished', {\n            testId: test.testId,\n            testName: test.name,\n            resultId: test.resultId,\n            success: test.success,\n            duration: test.duration,\n            browser: this.options.browser,\n            companyId: this.options.company!.companyId,\n            grid: { provider, host, failedGetBrowserAttempts, id: gridId, type: gridType },\n            workerId,\n        });\n    }\n\n    private get sanitizedOptionsForLogging() {\n        return {\n            ..._.omit(this.options, optionsKeysToMask),\n            company: _.pick(this.options.company, ['companyId', 'name', 'planType']),\n            activePlan: this.options.company!.activePlan,\n        };\n    }\n\n    public onTestPlanStarted(beforeTests: ExecutionList, tests: ExecutionList, afterTests: ExecutionList, testPlanName: string, executionId: string, isAnonymous: boolean, configName: string | null) {\n        const args = stripTokenFromConsoleArguments(process.argv);\n\n        logger.info('Test Plan Started', {\n            executionId,\n            testPlanName,\n            isAnonymous,\n            configName,\n            options: this.sanitizedOptionsForLogging,\n            args,\n        });\n    }\n\n    public onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }, testPlanName: string, duration: number, executionId: string, isAnonymous: boolean) {\n        const passed = getPassedTests(testResults).length;\n        const failed = Object.keys(testResults).length - passed;\n\n        logger.info('Test Plan Finished', {\n            executionId,\n            testPlanName,\n            isAnonymous,\n            passed,\n            failed,\n            options: this.sanitizedOptionsForLogging,\n            duration,\n        });\n    }\n}\n\nfunction stripTokenFromConsoleArguments(args: string[]) {\n    const indexOfTokenFlag = args.indexOf('--token');\n\n    if (indexOfTokenFlag !== -1) {\n        try {\n            const newArgs = args.slice();\n            newArgs.splice(indexOfTokenFlag, 2);\n\n            return newArgs;\n        } catch (e) {\n            /* empty */\n        }\n    }\n\n    return args;\n}\n", "import { gridTypes } from './constants';\n\nclass FeatureAvailabilityService {\n    private _planType: 'free' | 'trial' | 'pro';\n    constructor() {\n        this._planType = 'free';\n    }\n\n    setPlanType(planType: FeatureAvailabilityService['_planType']) {\n        this._planType = planType;\n    }\n\n    get isTestStatusEnabled() {\n        return ['pro', 'trial'].includes(this._planType);\n    }\n\n    shouldShowFreeGridRunWarning(gridType: string | undefined) {\n        return this._planType !== 'pro' && gridType === gridTypes.DEVICE_FARM;\n    }\n}\n\nexport const featureAvailabilityService = new FeatureAvailabilityService();\n", "/* eslint-disable no-console */\nimport chalk from 'chalk';\nimport * as _ from 'lodash';\nimport * as utils from '../utils';\nimport * as constants from '../commons/constants';\nimport { featureAvailabilityService } from '../commons/featureAvailabilityService';\nimport {\n    getAbortedTests,\n    getFailedTests,\n    getPassedTests,\n    getFailureEvaluatingCount,\n    getSkippedCount,\n} from './reporterUtils';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\nconst colorize = { success: chalk.green, warn: chalk.yellow, error: chalk.red };\nconst { CLI_MODE } = constants;\nconst DEVICE = 'device';\n\nclass ConsoleReporter implements IReporter {\n    private readonly config;\n    constructor(private readonly options: RunnerOptions, private readonly branchToUse: string) {\n        this.config = {\n            showWorkerNames: options.parallel > 1, // we show worker names when there is more than one worker\n        };\n    }\n\n    private toWorkerIdPrefix(workerId: number) {\n        return this.config.showWorkerNames ? `W:${workerId}` : '';\n    }\n\n    private printWorkerDivider() {\n        console.log('-'.repeat(process.stdout.columns || 83));\n    }\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number) {\n        const testIdLabel = `(${test.testId})`;\n        const testUrlLabel = `url: ${chalk.underline(utils.getTestUrl(this.options.editorUrl!, this.options.project, test.testId, test.resultId, this.branchToUse))}`;\n        console.log(this.toWorkerIdPrefix(workerId), `Test \"${test.name}\" started ${testIdLabel} ${testUrlLabel}`.trim());\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number) {\n        const testStatus = test.success ? constants.runnerTestStatus.PASSED : constants.runnerTestStatus.FAILED;\n        const testIdLabel = `(${test.testId})`;\n        const color = colorize[test.success ? 'success' : 'error'];\n\n        console.log(color(this.toWorkerIdPrefix(workerId), `Test \"${test.name}\" finished status: ${testStatus} ${testIdLabel} duration: ${utils.getDuration(test.duration)}`));\n    }\n\n    private printAllFailedTests(failedTests: TestRunStatusTestResult[]) {\n        if (!failedTests.length) {\n            return;\n        }\n        const failedTestStrings = failedTests.map(failedTest => {\n            const testUrl = utils.getTestUrl(this.options.editorUrl!, this.options.project, failedTest.testId, failedTest.resultId, this.branchToUse);\n            return `${failedTest.name} : ${testUrl}`;\n        });\n        console.log(colorize.error('Failed runs are:'));\n        console.log(colorize.error(failedTestStrings.join('\\n\\r')));\n    }\n\n    public onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }, testPlanName: string, duration: number, executionId: string, isAnonymous: boolean) {\n        const failedTests = getFailedTests(testResults);\n        const passedTests = getPassedTests(testResults);\n        const abortedTests = getAbortedTests(testResults);\n\n        const passed = passedTests.length;\n        const aborted = abortedTests.length;\n        let failed = failedTests.length;\n        let failedEvaluatingString = '';\n        let skippedString = '';\n        if (featureAvailabilityService.isTestStatusEnabled) {\n            const failureEvaluatingCount = getFailureEvaluatingCount(testResults);\n            failedEvaluatingString = ` FAILED-EVALUATING: ${failureEvaluatingCount}`;\n            failed -= failureEvaluatingCount;\n\n            const skippedCount = getSkippedCount(testResults, this.options);\n            skippedString = ` SKIPPED: ${skippedCount}`;\n        }\n\n        const planName = this.buildTestPlanName(isAnonymous, testPlanName);\n\n        let message;\n        const color = colorize[failed ? 'error' : 'success'];\n        const executionStats = `PASSED: ${passed} FAILED: ${failed}${failedEvaluatingString} ABORTED: ${aborted}${skippedString} Duration: ${utils.getDuration(duration)}`;\n\n        if (planName.trim() === '' || planName.trim() === 'Anonymous') {\n            message = `Tests completed. ${executionStats} (Execution ID: ${executionId})`;\n        } else {\n            message = `Test plan${planName} completed ${executionStats} (${executionId})`;\n        }\n\n        this.printWorkerDivider();\n        console.log(color(message));\n        this.printWorkerDivider();\n\n        this.printAllFailedTests(failedTests);\n    }\n\n    private buildTestPlanName(isAnonymous: boolean, testPlanName: string) {\n        const suitesString = _.isEmpty(this.options.suites) ? '' : `Suite: ${this.options.suites}`;\n        const labelsString = _.isEmpty(this.options.label) ? '' : `Label: ${this.options.label}`;\n        const namesString = _.isEmpty(this.options.name) ? '' : `Name: ${this.options.name}`;\n        const testIdString = _.isEmpty(this.options.testId) ? '' : `Test Id: ${this.options.testId}`;\n        const name = [namesString, labelsString, suitesString, testIdString].filter(Boolean).join(', ');\n        return isAnonymous ? ` anonymous (${name})` : ` '${testPlanName}'`;\n    }\n\n    public onTestPlanStarted(\n        beforeTests: ExecutionList,\n        tests: ExecutionList,\n        afterTests: ExecutionList,\n        testPlanName: string,\n        executionId: string,\n        isAnonymous: boolean,\n        configName: string | null,\n    ) {\n        const writeTestList = (testList: TestWithCustomTestDataAndRunConfig[]) => {\n            testList.forEach((test, index) => {\n                const ds = test.testData?.index ? `- ${test.testData.index} / ${test.testData.total} Data set` : '';\n                const testIdLabel = `(${test.testId})`;\n                let suffix = '';\n\n                if (test.testOptimization) {\n                    suffix = ` [${test.testOptimization.reason}]`;\n                } else if (utils.isQuarantineAndNotRemoteRun(test, this.options)) {\n                    suffix = '-quarantine';\n                }\n\n                console.log('\\t', index + 1, ':', `${test.name}${suffix}`, testIdLabel, ds);\n            });\n        };\n        const configString = configName ? `config '${configName}'` : 'default configs';\n\n        const sfdcCredentialLog = this.options.sfdcCredential ? ` SfdcCredential: ${this.options.sfdcCredential}` : '';\n        const planStats = `${configString}, Project: ${this.options.project}, Branch: ${this.branchToUse}${sfdcCredentialLog}`;\n        console.log(`Run${this.buildTestPlanName(isAnonymous, testPlanName)} test plan with ${planStats} (${executionId})`);\n        this.printWorkerDivider();\n\n        if (beforeTests.length > 0) {\n            console.log('Before all:');\n            writeTestList(beforeTests as TestWithCustomTestDataAndRunConfig[]);\n        }\n\n        console.log('Test list:');\n        writeTestList(tests as TestWithCustomTestDataAndRunConfig[]);\n\n        if (afterTests.length > 0) {\n            console.log('After all:');\n            writeTestList(afterTests as TestWithCustomTestDataAndRunConfig[]);\n        }\n        this.printWorkerDivider();\n    }\n\n    public onGetSlot(workerId: number, browser: string) {\n        const gridNameOrId = this.options.grid || this.options.gridId;\n        const instanceType = this.options.mode === CLI_MODE.APPIUM ? DEVICE : browser;\n        if (gridNameOrId) {\n            console.log(this.toWorkerIdPrefix(workerId), `Get ${chalk.underline(instanceType)} slot from ${chalk.underline(gridNameOrId)}`);\n        }\n    }\n\n    public onGetSession(workerId: number, testName: string, mode: string) {\n        const instanceType = mode === CLI_MODE.APPIUM ? DEVICE : 'browser';\n        console.log(this.toWorkerIdPrefix(workerId), `Get ${instanceType} to run ${chalk.underline(testName)}`);\n    }\n\n    public onWaitToTestStart(workerId: number) {\n        console.log(this.toWorkerIdPrefix(workerId), 'Wait for test start');\n    }\n\n    public onWaitToTestComplete(workerId: number) {\n        console.log(this.toWorkerIdPrefix(workerId), 'Wait for test complete');\n    }\n\n    public onGetBrowserFailure(workerId: number, projectId: string, attempt: number) {\n        if (attempt !== 2) {\n            return; // we want to try 2 times before showing the message once\n        }\n        // heuristic, show the message on the same attempt\n        const gridNameOrId = this.options.grid || this.options.gridId;\n        const instanceType = this.options.mode === CLI_MODE.APPIUM ? 'device' : 'browser';\n        if (gridNameOrId) { // if the user passes a grid or a gridId - show those\n            console.log(colorize.warn(this.toWorkerIdPrefix(workerId), `It is taking us some time to get a ${instanceType} from the grid ${gridNameOrId}`));\n        } else if (this.options.useLocalChromeDriver) {\n            console.log(colorize.warn(this.toWorkerIdPrefix(workerId), 'We are having issues starting ChromeDriver for you locally'));\n        } else if (this.options.host) {\n            const gridType = this.options.mode === CLI_MODE.APPIUM ? 'Appium' : 'Selenium';\n            console.log(colorize.warn(this.toWorkerIdPrefix(workerId), `We are having issues reaching your ${gridType} grid at ${this.options.host}:${this.options.port || 4444}`));\n        } else {\n            // in other cases - print nothing\n        }\n    }\n}\n\nexport const Reporter = ConsoleReporter;\n", "/* eslint-disable no-console */\nimport * as xml2js from 'xml2js';\nimport * as utils from '../utils';\nimport { promises as fsPromises } from 'fs';\nimport { featureAvailabilityService } from '../commons/featureAvailabilityService';\nimport {\n    isAbortedTest,\n    isSkippedTest,\n    getFailedTests,\n    isFailedTest,\n    getFailureEvaluatingCount,\n    getSkippedCount,\n    getAbortedTests,\n} from './reporterUtils';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestPlanRunner } from '../runners/TestPlanRunner';\n\ntype TestPlanResult = Awaited<ReturnType<TestPlanRunner['runAnonymousTestPlan']>>;\n\nclass JunitReporter implements IReporter {\n    readonly classname: string;\n    constructor(private readonly options: RunnerOptions, private readonly branchToUse: string) {\n        this.classname = 'testim.io.test';\n        if (typeof options.reportFileClassname === 'string') {\n            this.classname = options.reportFileClassname;\n        }\n        if (options.reportFileClassname === true) {\n            this.classname = ''; // specific case for passing empty string which makes junit-viewer display test name\n        }\n    }\n\n    private async createResultsReport(testResults: TestPlanResult) {\n        const reportFile = this.options.reportFile;\n        const projectId = this.options.project;\n\n        const reportText = await report(this.options.editorUrl!, testResults, projectId, this.branchToUse, this.classname, this.options);\n        if (!reportFile) {\n            return undefined;\n        }\n        try {\n            await fsPromises.writeFile(reportFile, reportText);\n            console.log('JUnit XML file saved to', reportFile);\n            return testResults;\n        } catch (err) {\n            console.error('could not save report file', reportFile, err);\n            return testResults;\n        }\n    }\n\n    public async onAllTestPlansFinished(testPlanResults: TestPlanResult) {\n        await this.createResultsReport(testPlanResults);\n    }\n}\n\nfunction getPrintName(testResult: TestPlanResult[number]['results'][string]) {\n    const testData = testResult.testData || {};\n    const testDataNumber = typeof testData.total === 'number' && testData.total !== 1 ? ` - ${testData.index} / ${testData.total} Data set` : '';\n    return `${testResult.name}${testDataNumber}`;\n}\nfunction getVisitedUrlsList(testResult: TestPlanResult[number]['results'][string]) {\n    if (!testResult.visitedUrlsList) {\n        console.log('No URLs found:', 'Please contact our support team or remove the --urls flag from the CLI command');\n    }\n    const visitedUrls = testResult.visitedUrlsList || '';\n    return `${visitedUrls}`;\n}\nfunction getVisitedUrlsJson(testResult: TestPlanResult[number]['results'][string]) {\n    const visitedUrls = testResult.visitedUrlsJson || '';\n    return `${visitedUrls}`;\n}\nasync function report(editorUrl: string, testPlanResults: TestPlanResult, projectId: string, branch: string, classname: string, options: RunnerOptions) {\n    function createTestCaseObject(testResult: TestPlanResult[number]['results'][string]) {\n        const testResultUrl = utils.getTestUrl(editorUrl, projectId, testResult.testId, testResult.resultId, branch);\n        interface TestResultObject {\n            'system-out': string;\n            'visited-urls-list'?: string;\n            'visited-urls-json'?: string;\n            $: { name: string; classname: string; time: number; ownedBy: string; ownerEmail: string };\n            failure?: { $: { message: string } };\n            skipped?: {};\n        }\n        const testResultObject: TestResultObject = {\n            $: {\n                name: getPrintName(testResult),\n                classname,\n                time: utils.getDurationSec(testResult.duration),\n                ownedBy: testResult.testOwnerName,\n                ownerEmail: testResult.testOwnerEmail,\n            },\n            'system-out': testResultUrl,\n        };\n\n        if (isFailedTest(testResult) || isAbortedTest(testResult)) {\n            const prefixMessage = `Step Failed: ${testResult.failureReason || testResult.reason}`;\n            const message = isFailedTest(testResult) ? `${prefixMessage} More info at: ${testResultUrl}` : prefixMessage;\n            testResultObject.failure = {\n                $: {\n                    message,\n                },\n            };\n        }\n        if (isSkippedTest(testResult) && utils.isQuarantineAndNotRemoteRun(testResult, options) && featureAvailabilityService.isTestStatusEnabled) {\n            testResultObject.skipped = {};\n        }\n\n        if (options.urls) {\n            testResultObject['visited-urls-list'] = getVisitedUrlsList(testResult);\n            testResultObject['visited-urls-json'] = getVisitedUrlsJson(testResult);\n        }\n\n        return testResultObject;\n    }\n\n    function createTestSuiteObject(testPlanResult: TestPlanResult[number]) {\n        const { results, testPlanName, configName } = testPlanResult;\n        const testResults = results || {};\n        const suiteName = configName && testPlanName ? `${testPlanName} with config '${configName}'` : testPlanName;\n        interface TestSuiteAttributes { name: string; tests: number; failures: number; timestamp: string; skipped?: number; 'failure-evaluating'?: number }\n        const testSuiteAttributes: TestSuiteAttributes = {\n            name: suiteName || 'selenium run',\n            tests: getTestCount(testResults),\n            failures: getFailedCount(testResults),\n            timestamp: getSuiteTimestamp(testPlanResults),\n        };\n        if (featureAvailabilityService.isTestStatusEnabled) {\n            testSuiteAttributes.skipped = getSkippedCount(testResults, options);\n            const failureEvaluatingCount = getFailureEvaluatingCount(testResults);\n            testSuiteAttributes.failures -= failureEvaluatingCount;\n            testSuiteAttributes['failure-evaluating'] = failureEvaluatingCount;\n        }\n        return {\n            $: testSuiteAttributes,\n            testcase: Object.keys(testResults).map(resultId => createTestCaseObject(testResults[resultId])),\n        };\n    }\n\n    function getSuiteTimestamp(testResults: TestPlanResult[number]['results']) {\n        const startTimeArr = Object.keys(testResults).map(resultId => testResults[resultId].startTime);\n        const minTestStartTime = Math.min.apply(null, startTimeArr);\n        return minTestStartTime ? new Date(minTestStartTime).toISOString() : new Date().toISOString();\n    }\n\n    function getTestCount(testResults: TestPlanResult[number]['results']) {\n        return Object.keys(testResults).length;\n    }\n\n    function getFailedCount(testResults: TestPlanResult[number]['results']) {\n        return getFailedTests(testResults).length + getAbortedTests(testResults).length;\n    }\n\n    const testResultObject = {\n        testsuites: {\n            testsuite: testPlanResults.map(testPlanResult => createTestSuiteObject(testPlanResult)),\n        },\n    };\n\n\n    try {\n        const builder = new xml2js.Builder();\n        const jUnitXmlReporter = builder.buildObject(testResultObject);\n        return jUnitXmlReporter;\n    } catch (err) {\n        return createErrorjUnitReporter(err);\n    }\n}\n\nfunction createErrorjUnitReporter(err: Error) {\n    const builder = new xml2js.Builder();\n    const errorJunitObject = {\n        testsuites: {\n            testsuite: {\n                $: {\n                    name: 'selenium run',\n                    tests: 1,\n                    failure: 1,\n                    timestamp: Date.now(),\n                },\n                testcase: {\n                    $: {\n                        name: 'junit reporter generator failed',\n                        classname: 'testim.io.jUnitXmlReporter',\n                    },\n                    error: {\n                        $: {\n                            message: err.message,\n                        },\n                    },\n                },\n            },\n        },\n    };\n    return builder.buildObject(errorJunitObject);\n}\n\nexport const Reporter = JunitReporter;\n", "/* eslint-disable no-console */\nimport { getLogger } from '../commons/logger';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nconst logger = getLogger('team-city-reporter');\n\nfunction tidy(text: string | null | undefined) {\n    if (!text) {\n        return '';\n    }\n    return text\n        .replace(/\\|/g, '||')\n        .replace(/'/g, \"|'\")\n        .replace(/\\n/g, '|n')\n        .replace(/\\r/g, '|r')\n        .replace(/\\u0085/g, '|x')\n        .replace(/\\u2028/g, '|l')\n        .replace(/\\u2029/g, '|p')\n        .replace(/\\[/g, '|[')\n        .replace(/\\]/g, '|]');\n}\n\nclass TeamCityReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions) {\n    }\n\n    private getPrintName(test: TestRunStatusTestResult) {\n        const testConfig = test.config || {};\n        const testDataNumber = typeof testConfig.testDataTotal === 'number' ? ` - ${testConfig.testDataIndex} / ${testConfig.testDataTotal} Data set` : '';\n        const teamCityName = `${test.name} (${test.testId})${testDataNumber}`;\n        return tidy(teamCityName);\n    }\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number, isRerun?: boolean, resultId?: string) {\n        if (isRerun) {\n            logger.debug('skip report test started because is rerun');\n            return;\n        }\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testStarted name='${name}' captureStandardOutput='true' flowId='${resultId}']`);\n    }\n\n    public onTestFailed(test: TestRunStatusTestResult, failureReason: TestRunStatusTestResult['failureReason'], testurl: string, testId: string, isRerun: boolean, resultId: string) {\n        if (isRerun) {\n            logger.debug('skip report test failed because is rerun');\n            return;\n        }\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testFailed name='${name}' message='${tidy(failureReason)}' details='${tidy(testurl)}' flowId='${resultId}']`);\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number, isRerun?: boolean) {\n        if (isRerun) {\n            logger.debug('skip report test finished because is rerun');\n            return;\n        }\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testFinished name='${name}' duration='${test.duration}' flowId='${test.resultId}']`);\n    }\n\n    public onTestIgnored(workerId: number, test: TestRunStatusTestResult, message = 'ignore') {\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testIgnored name='${name}' message='${tidy(message)}']`);\n    }\n\n    onTestPlanStarted(beforeTests: ExecutionList, tests: ExecutionList, afterTests: ExecutionList, testPlanName: string) {\n        console.log(`##teamcity[testSuiteStarted name='${tidy(testPlanName)}']`);\n    }\n\n    onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }, testPlanName: string) {\n        console.log(`##teamcity[testSuiteFinished name='${tidy(testPlanName)}']`);\n    }\n}\n\nexport const Reporter = TeamCityReporter;\n", "import type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\n/* eslint-disable no-console */\nclass JsonReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions) {\n    }\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number) {\n        const event = {\n            name: 'testStarted',\n            data: {\n                test,\n                workerId,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number) {\n        const event = {\n            name: 'testFinished',\n            data: {\n                test,\n                workerId,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n\n    public onTestPlanStarted(beforeTests: ExecutionList, tests: ExecutionList, afterTests: ExecutionList, testPlanName: string, executionId: string) {\n        const event = {\n            name: 'suiteStarted',\n            data: {\n                projectId: this.options.project,\n                executionId,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n\n    public onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }) {\n        const event = {\n            name: 'suiteFinished',\n            data: {\n                testResults,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n}\n\nexport const Reporter = JsonReporter;\n", "import { exec } from 'child_process';\n\nexport function launchChrome(url: string) {\n    const { platform } = process;\n\n    if (platform === 'win32') {\n        exec(`start chrome ${url}`);\n    } else if (platform === 'darwin') {\n        exec(`open -a \"Google Chrome\" ${url}`);\n    } else if (platform === 'linux') {\n        exec(`google-chrome ${url}`);\n    }\n}\n", "import * as utils from '../utils';\nimport { launchChrome } from '../commons/chrome-launcher';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nclass ChromeReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions, private readonly branchToUse: string) {}\n\n    public onTestStarted(test: TestRunStatusTestResult) {\n        const testUrl = utils.getTestUrl(this.options.editorUrl!, this.options.project, test.testId, test.resultId, this.branchToUse);\n        return launchChrome(testUrl);\n    }\n}\n\nexport const Reporter = ChromeReporter;\n", "import { DebugReporter } from './debugReporter';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nclass Reporter implements Required<IReporter> {\n    reporters: IReporter[] = [];\n    onGetBrowserFailure = this.generateHook('onGetBrowserFailure');\n    onGetBrowserSuccess = this.generateHook('onGetBrowserSuccess');\n    onTestPlanStarted = this.generateHook('onTestPlanStarted');\n    onGetSlot = this.generateHook('onGetSlot');\n    onGetSession = this.generateHook('onGetSession');\n    onTestFinished = this.generateHook('onTestFinished');\n    onTestFailed = this.generateHook('onTestFailed');\n    onTestPassed = this.generateHook('onTestPassed');\n    onTestStarted = this.generateHook('onTestStarted');\n    onTestIgnored = this.generateHook('onTestIgnored');\n    onWaitToTestStart = this.generateHook('onWaitToTestStart');\n    onWaitToTestComplete = this.generateHook('onWaitToTestComplete');\n    onTestPlanFinished = this.generateHook('onTestPlanFinished', this.onTestPlanFinishedMutator);\n    onAllTestPlansFinished = this.generateHook('onAllTestPlansFinished', this.onAllTestPlansFinishedMutator);\n\n    public async setOptions(options: RunnerOptions, branchToUse: string) {\n        this.reporters = [];\n        const optReporters = options.reporters;\n        this.reporters.push(new DebugReporter(options));\n\n        if (optReporters === undefined || optReporters.length === 0) {\n            const { Reporter: ConsoleReporter } = await import('./consoleReporter');\n            this.reporters.push(new ConsoleReporter(options, branchToUse));\n            if (options?.reportFile !== undefined) {\n                const { Reporter: JunitReporter } = await import('./junitReporter');\n                this.reporters.push(new JunitReporter(options, branchToUse));\n            }\n        } else {\n            const reporterModules = await Promise.all([\n                optReporters.includes('teamcity') && import('./teamCityReporter'),\n                optReporters.includes('console') && import('./consoleReporter'),\n                optReporters.includes('junit') && import('./junitReporter'),\n                optReporters.includes('json') && import('./jsonReporter'),\n                optReporters.includes('chrome') && import('./chromeReporter'),\n            ]);\n            reporterModules.forEach((reporterModule) => {\n                if (!reporterModule) {\n                    return;\n                }\n                this.reporters.push(new reporterModule.Reporter(options, branchToUse));\n            });\n        }\n    }\n\n    private onTestPlanFinishedMutator(\n        testResults: { [resultId: string]: TestRunStatusTestResult },\n        testPlanName: string,\n        startTime: number,\n        executionId: string,\n        isAnonymous: boolean | undefined,\n    ) {\n        let results: { [resultId: string]: any } = {};\n\n        results = testResults;\n        const duration = Date.now() - (startTime || 0);\n        return [results, testPlanName, duration, executionId, isAnonymous] as Parameters<Required<IReporter>['onTestPlanFinished']>;\n    }\n\n    private onAllTestPlansFinishedMutator(testPlanResults: Parameters<Required<IReporter>['onAllTestPlansFinished']>[0]) {\n        return [testPlanResults] as Parameters<Required<IReporter>['onAllTestPlansFinished']>;\n    }\n\n    private generateHook<T extends keyof IReporter>(name: T, preHookMutator?: (...args: [...Parameters<Required<IReporter>[T]>]) => [...Parameters<Required<IReporter>[T]>]) {\n        return async (...args: [...Parameters<Required<IReporter>[T]>]) => {\n            const data = preHookMutator?.(...args);\n            for (const reporter of this.reporters) {\n                // @ts-expect-error TS is unable to figure out what is happening here\n                await reporter[name]?.(...(data || args));\n            }\n        };\n    }\n}\n\nexport const reporter = new Reporter();\n", "import * as servicesApi from '../commons/testimServicesApi';\nimport { getLogger } from '../commons/logger';\nimport { promiseMap } from '../utils';\nimport { gridMessages } from '../commons/constants';\nimport { GridError, GridConcurrencyError } from '../errors';\n\nconst logger = getLogger('slot-service');\n\nexport interface SerializedSlot {\n    slotId: string;\n    executionId: string;\n    testResultId: string;\n    lastKeepAlive: number;\n    source?: string;\n    type: 'execution' | 'authoring';\n    sessionUrl: string;\n}\n\nconst slotsCache: Record<number, Partial<SerializedSlot>> = {};\nlet keepAliveTimer: NodeJS.Timeout | null = null;\n\nexport const addItemToSlotsCache = (workerId: number, slot: Partial<SerializedSlot>) => {\n    slotsCache[workerId] = slot;\n};\n\nexport async function releaseCompanySlot(workerId: number, companyId: string, projectId: string) {\n    const slotData = slotsCache[workerId];\n    if (!slotData) {\n        return;\n    }\n\n    const { slotId } = slotData;\n    delete slotsCache[workerId];\n    if (!slotId) {\n        logger.warn('failed to find slot slot id', { companyId, workerId });\n        return;\n    }\n\n    logger.info('release slot id', { companyId, slotId });\n    try {\n        await servicesApi.releaseCompanySlot(companyId, projectId, slotId);\n    } catch (err) {\n        logger.error('failed to release slot', { companyId, err });\n    }\n}\n\nasync function _keepAlive(companyId: string, projectId: string) {\n    const slots = Object.values(slotsCache).filter(Boolean);\n\n    if (slots.length === 0) {\n        return;\n    }\n\n    logger.info('keep alive worker slots', { companyId, slots });\n    try {\n        await servicesApi.keepAliveCompanySlots(companyId, projectId, slots);\n    } catch (err) {\n        logger.error('failed to update slot keep alive', { err, slots, companyId });\n    }\n}\n\nfunction startKeepAlive(companyId: string, projectId: string) {\n    const KEEP_ALIVE_INTERVAL = 10 * 1000;\n    keepAliveTimer = global.setInterval(() => _keepAlive(companyId, projectId), KEEP_ALIVE_INTERVAL);\n}\n\nasync function releaseAllSlots(companyId: string, projectId: string) {\n    const workerIds = Object.keys(slotsCache);\n\n    if (!workerIds.length) {\n        return;\n    }\n\n    logger.warn('not all slots released before end runner flow', { companyId });\n    try {\n        await promiseMap(workerIds, workerId => releaseCompanySlot(Number(workerId), companyId, projectId));\n    } catch (err) {\n        logger.error('failed to release all slots', { err, companyId });\n    }\n}\n\nasync function endKeepAlive(companyId: string, projectId: string) {\n    await releaseAllSlots(companyId, projectId);\n    clearInterval(keepAliveTimer!);\n}\n\nexport const keepAlive = {\n    start: startKeepAlive,\n    end: endKeepAlive,\n};\n\n\nexport async function requestSlot(companyId: string, projectId: string, workerId: number) {\n    let res;\n    try {\n        res = await servicesApi.requestCompanySlot(companyId, projectId);\n    } catch (err) {\n        logger.error('failed to get slot', { companyId, err });\n        throw new Error(gridMessages.UNKNOWN);\n    }\n    logger.info('get slot info', { ...res, companyId });\n    if (!res || (!['success', 'error'].includes(res.status))) {\n        logger.error('invalid response - get slot', { res });\n        throw new Error(gridMessages.UNKNOWN);\n    }\n\n    if (res.status === 'success') {\n        addItemToSlotsCache(workerId, { slotId: res.slotId });\n        return res.slotId;\n    }\n\n    if (res.code === 'not-found') {\n        throw new GridError(gridMessages.NOT_FOUND);\n    }\n\n    if (res.code === 'no-available-slot') {\n        throw new GridConcurrencyError('Failed to run test - concurrency limit reached');\n    }\n\n    logger.error('invalid code error response - get slot', { res });\n    throw new GridError(gridMessages.UNKNOWN);\n}\n\nexport async function updateSlotDataCache(companyId: string, projectId: string, slotData: Partial<SerializedSlot>, workerId: number) {\n    const slot = slotsCache[workerId];\n    if (!slot) {\n        throw new Error('slot not found');\n    }\n    Object.assign(slot, slotData);\n    addItemToSlotsCache(workerId, slot);\n    await servicesApi.updateCompanySlot(companyId, projectId, slot);\n    logger.info('update slot data on server', { companyId, projectId, slotData });\n}\n", "/* eslint-disable no-console */\nimport { getLogger } from './commons/logger';\nimport { promiseTimeout, promiseMap } from './utils';\n\nconst logger = getLogger('process-handler');\nconst exitHooks: Array<() => void | PromiseLike<void>> = [];\n\nexport function registerProcessForCleanup(onExit: (e?: any) => void | PromiseLike<any>, _process = process) {\n    async function cleanup(err: any) {\n        // give cleanup and socket reports a chance to run\n        await promiseTimeout(promiseMap(exitHooks, async hook => hook()), 10000).catch(() => null);\n        onExit(err);\n    }\n    _process.on('uncaughtException', async (err) => {\n        logger.error('Caught exception', { err });\n        console.log('Uncaught exception');\n        if (err.message) {\n            console.log('Message =', err.message);\n        }\n        if ((err as any).reason) {\n            console.log('Reason =', (err as any).reason);\n        }\n        await cleanup(err);\n    });\n\n    _process.on('unhandledRejection', (reason) => {\n        // rollout manages promises incorrectly and generates unhandled rejections from within their code\n        logger.fatal('Caught unhandled promise rejection', reason as any);\n        //TODO(benji) - this is a pretty shitty way to detect this error since rollout can change their API endpoint\n        if ((reason as any)?.message?.includes('ENOTFOUND x-api.rollout.io')) {\n            // this is not a fatal error - we recover from this in feature-flags service\n            return;\n        }\n\n        throw reason;\n    });\n\n    _process.on('rejectionHandled', () => {\n        logger.error('Caught rejection handled');\n    });\n\n    _process.once('SIGTERM', () => {\n        const msg = 'Runner aborted - SIGTERM event';\n        const err = new Error(msg);\n        logger.error(msg);\n        cleanup(err);\n        throw err;\n    });\n\n    _process.once('SIGINT', () => {\n        const msg = 'Runner aborted - SIGINT event';\n        const err = new Error(msg);\n        logger.error(msg);\n        cleanup(err);\n        throw err;\n    });\n\n    // One time self-call is expected :(\n    _process.once('exit', (e) => {\n        onExit(e);\n    });\n}\n\nexport function registerExitHook(hook: () => void | PromiseLike<any>) {\n    exitHooks.push(hook);\n}\n\nexport function reset() {\n    exitHooks.splice(0, exitHooks.length);\n}\n", "import ora from 'ora';\nimport * as npmWrapper from './npmWrapper';\nimport { getLogger } from './logger';\nimport { getCliLocation } from '../utils';\nimport { lazyDependencies } from '../../package.json';\nimport { requireWithFallback } from './requireWithFallback';\n\nconst logger = getLogger('lazy-require');\nconst ongoingCalls = new Map();\n\nexport async function lazyRequire(dependency: string, options: { silent?: boolean } = {}) {\n    const packageLocally = npmWrapper.getPackageIfInstalledLocally(dependency);\n    if (packageLocally) {\n        return packageLocally;\n    }\n\n    let spinner;\n    if (!options.silent) {\n        spinner = ora(`Installing ${dependency} before first usage...`).start();\n    }\n\n    try {\n        const requiredModule = await memoizedLazyRequire(dependency);\n        if (spinner) {\n            spinner.succeed();\n        }\n        return requiredModule;\n    } catch (error) {\n        logger.warn('failed to install dependency lazily', { dependency, err: error });\n        const depVersionToInstall = getVersionOfLazyDep(dependency);\n        const depWithVersions = `${dependency}@${depVersionToInstall}`;\n\n        const removeGlobal = process.argv.includes('npx');\n        const globalFlag = removeGlobal ? '' : '-g ';\n        const errorMessage = `Installation of ${dependency} failed. This typically means you are running an out-of-date version of Node.js or NPM.` +\n        `Please manually install by running the following command: npm install ${globalFlag}${depWithVersions}`;\n\n        if (spinner) {\n            spinner.fail(errorMessage);\n        }\n\n        throw error;\n    }\n}\n\nasync function memoizedLazyRequire(identifier: string) {\n    if (ongoingCalls.has(identifier)) {\n        return ongoingCalls.get(identifier);\n    }\n\n    ongoingCalls.set(identifier, lazyRequireImpl(identifier));\n    ongoingCalls.get(identifier).catch(() => {\n        ongoingCalls.delete(identifier);\n    });\n\n    return ongoingCalls.get(identifier);\n}\n\nasync function lazyRequireImpl(dependency: string) {\n    const packageLocally = npmWrapper.getPackageIfInstalledLocally(dependency);\n\n    if (packageLocally) {\n        return packageLocally;\n    }\n\n    const depVersionToInstall = getVersionOfLazyDep(dependency);\n\n    const depWithVersions = `${dependency}@${depVersionToInstall}`;\n\n    await npmWrapper.installPackageLocally(getCliLocation(), depWithVersions);\n\n    return requireWithFallback(dependency);\n}\n\nexport async function installAllLazyDependencies() {\n    const allLazyDependencies = Object.keys(lazyDependencies);\n\n    for (const dep of allLazyDependencies) {\n        await lazyRequireImpl(dep);\n    }\n}\n\nfunction getVersionOfLazyDep(dependencyToFind: string) {\n    const depEntry = Object.entries(lazyDependencies)\n        .find(([dep]) => dep === dependencyToFind);\n\n    if (!depEntry) {\n        throw new Error('The given package name is not lazyDependencies');\n    }\n\n    return depEntry[1];\n}\n", "import { ReportBase } from 'istanbul-lib-report';\nimport type { ReportNode } from 'istanbul-lib-report';\n\nexport class SummaryToObjectReport extends ReportBase {\n    appendToObject: object;\n\n    constructor(opts?: { appendToObject?: object }) {\n        super();\n\n        opts ||= {};\n        this.appendToObject = opts.appendToObject || {};\n    }\n\n    onStart(node: ReportNode) {\n        const summary = node.getCoverageSummary(false);\n        this.appendToObject = Object.assign(this.appendToObject, summary.toJSON());\n    }\n}\n", "import ora from 'ora';\nimport dayjs from 'dayjs';\nimport TestExclude from 'test-exclude';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as reports from 'istanbul-reports';\nimport * as libReport from 'istanbul-lib-report';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport { ArgError } from '../errors';\nimport { promiseMap } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport { SummaryToObjectReport } from './SummaryToObjectReport';\nimport type { RawSourceMap } from 'source-map';\nimport type { ProcessCov } from '@bcoe/v8-coverage';\nimport type { CoverageMap, CoverageSummaryData } from 'istanbul-lib-coverage';\nimport type { RunnerOptions } from '../runOptions';\nimport type { RawTestResult } from 'services/src/commons/mongo/models/testResult';\nimport type { CDPMethodResponse } from 'clickim/src/background/cdp/CDPTypes';\n\ntype FunctionCoverage = CDPMethodResponse['Profiler.takePreciseCoverage']['result'][number]['functions'];\ntype SourceMapType = 'inline' | 'file';\ninterface SourceMap { sourcemap: RawSourceMap; toObject(): { sourcesContent: string[]; sources: string[] } }\ninterface CoverageReport { scriptId: string; text?: string; url: string; sourceUrl: string; hasSourceURL?: boolean; sourceMapType?: SourceMapType; functions: FunctionCoverage; hash: string }\nconst logger = getLogger('test-run-status');\n\nconst convertToURL = (_path: string): Partial<URL> => {\n    try {\n        return new URL(_path);\n    } catch (err) {\n        try {\n            return new URL(`file://${_path}`);\n        } catch (e) {\n            return {};\n        }\n    }\n};\n\nconst pathHasQueryParam = (_path: string) => {\n    const urlObj = convertToURL(_path);\n    return !!urlObj.search;\n};\n\nconst parsePath = (_path: string) => {\n    if (!_path) {\n        return '';\n    }\n    const urlObj = convertToURL(_path);\n    return urlObj.pathname!.substring(1);\n};\n\nconst excludePath = (codeCoverageInclude: string[], _path: string) => {\n    const pathname = parsePath(_path);\n    const exclude = new TestExclude({\n        relativePath: false,\n        include: codeCoverageInclude,\n    });\n\n    return !exclude.shouldInstrument(pathname);\n};\n\nconst removeAfterQuestionMark = (str: string) => str.substring(0, str.indexOf('?'));\n\nconst getSourceMap = async ({ source, sourceMapDir, sourceMapType }: { sourceMapType?: SourceMapType; source: string; sourceMapDir?: string }): Promise<SourceMap> => {\n    const convertSourceMap = await lazyRequire('convert-source-map');\n    if (sourceMapType === 'file' && !sourceMapDir) {\n        throw new ArgError('--code-coverage-source-map-path [path]');\n    }\n    return sourceMapDir ?\n        convertSourceMap.fromMapFileSource(source, sourceMapDir) :\n        convertSourceMap.fromSource(source);\n};\n\nconst rewritePath = (storagePath: string, fileUrl: string) => {\n    const parsedPath = path.resolve(storagePath, parsePath(fileUrl));\n    return `${parsedPath}.js`;\n};\n\nconst remapCoverage = async (options: RunnerOptions, storagePath: string, sourceMaps: { [url: string]: SourceMap }) => {\n    const { codeCoverageInclude } = options;\n    await promiseMap(Object.values(sourceMaps), async (sourceMap) => {\n        if (!sourceMap) {\n            return;\n        }\n        const sourceMapObject = sourceMap.toObject();\n        await promiseMap(sourceMapObject.sources, async (sourcePath, index) => {\n            if (excludePath(codeCoverageInclude, sourcePath)) {\n                return;\n            }\n            const parsedPath = rewritePath(storagePath, sourcePath);\n            await fs.promises.mkdir(path.parse(parsedPath).dir, { recursive: true });\n            await fs.promises.writeFile(parsedPath, sourceMapObject.sourcesContent[index]);\n        });\n    });\n};\n\nconst htmlReportLinkMapper: reports.LinkMapper = {\n    getPath(node) {\n        if (typeof node === 'string') {\n            return node;\n        }\n        let filePath = (node as any).getQualifiedName();\n        if ((node as any).isSummary()) {\n            if (filePath !== '') {\n                filePath += '/index.html';\n            } else {\n                filePath = 'index.html';\n            }\n        } else {\n            if (pathHasQueryParam(filePath)) {\n                filePath = removeAfterQuestionMark(filePath);\n            }\n            filePath += '.html';\n        }\n        return filePath;\n    },\n\n    relativePath(source, target) {\n        const targetPath = this.getPath(target);\n        const sourcePath = path.dirname(this.getPath(source));\n        return path.posix.relative(sourcePath, targetPath);\n    },\n\n    assetPath(node, name) {\n        return this.relativePath(this.getPath(node), name);\n    },\n};\n\nconst saveCoverageReports = async (options: RunnerOptions, coverageMap: CoverageMap, reportDir: string, tempJsDir: string) => {\n    const { codeCoverageReporter } = options;\n    const reportSummary = {};\n    const context = libReport.createContext({\n        dir: reportDir,\n        coverageMap,\n        watermarks: libReport.getDefaultWatermarks(),\n        sourceFinder: (filePath) => {\n            try {\n                const parsedPath = rewritePath(tempJsDir, filePath);\n                return fs.readFileSync(parsedPath, 'utf8');\n            } catch (ex) {\n                throw new Error(`Unable to lookup source: ${filePath} (${ex.message})`);\n            }\n        },\n    });\n\n    (new SummaryToObjectReport({ appendToObject: reportSummary })).execute(context);\n    if (Array.isArray(codeCoverageReporter)) {\n        codeCoverageReporter.forEach((reporter) => {\n            let cfg: Partial<reports.ProjectOptions | reports.HtmlOptions> = { projectRoot: '/' };\n            if (reporter === 'html') {\n                cfg = { linkMapper: htmlReportLinkMapper };\n            }\n            reports.create(reporter, cfg).execute(context);\n        });\n    }\n    return reportSummary as CoverageSummaryData;\n};\n\nconst convertV8ToIstanbul = async (options: RunnerOptions, { source, sourceMap, functions }: { sourceMap?: SourceMap; source: string; functions: ProcessCov['result'][number]['functions'] }) => {\n    const { codeCoverageInclude } = options;\n    if (!sourceMap || sourceMap.sourcemap.sources.length === 0) {\n        return undefined;\n    }\n    const v8toIstanbul = await lazyRequire('v8-to-istanbul') as typeof import('v8-to-istanbul');\n    const converter = v8toIstanbul('FAKE_PATH', 0, {\n        source,\n        sourceMap: sourceMap as any,\n    }, (_path) => excludePath(codeCoverageInclude, _path));\n    await converter.load();\n    converter.applyCoverage(functions);\n    return converter.toIstanbul();\n};\n\nconst collectAndMergeJsCoverageData = async (projectId: string, runId: string) => {\n    const DOWNLOAD_COVERAGE_DATA_CONCURRENCY = 20;\n    const { mergeProcessCovs } = await lazyRequire('@bcoe/v8-coverage') as typeof import('@bcoe/v8-coverage');\n    let mergedCoverages: ProcessCov = { result: [] };\n\n    const covUrlMap = new Map<string, { text: string; url: string; sourceMapType?: SourceMapType; hash: string }>();\n    const realDataRes = await servicesApi.getRealData(projectId, 'testResult', `runId=${runId}`);\n    const testResults = realDataRes.data.docs as unknown as RawTestResult[];\n\n    await promiseMap(\n        testResults.flatMap((testResult) => testResult.JSCoverageURLS || []),\n        async (coverageURL) => {\n            const data = await servicesApi.getS3Artifact<CoverageReport[]>(coverageURL, 90000);\n            await promiseMap(data, async (cov) => {\n                if (!covUrlMap.has(cov.url)) {\n                    let text = cov.text!;\n                    if (cov.sourceUrl) {\n                        // set temp value to reduce read S3 file\n                        covUrlMap.set(cov.url, 'TEMP' as any);\n                        text = await servicesApi.getS3ArtifactText(cov.sourceUrl);\n                    }\n                    covUrlMap.set(cov.url, {\n                        text,\n                        url: cov.url,\n                        sourceMapType: cov.sourceMapType,\n                        hash: cov.hash,\n                    });\n                }\n                delete cov.text;\n                mergedCoverages = mergeProcessCovs([mergedCoverages, { result: [cov] }]);\n            });\n        },\n        { concurrency: DOWNLOAD_COVERAGE_DATA_CONCURRENCY },\n    );\n\n    return { covUrlMap, mergedCoverages };\n};\n\nexport const calculateCoverage = async (options: RunnerOptions, branchToUse: string, numOfTests: number, runId: string) => {\n    if (!options.collectCodeCoverage) {\n        return undefined;\n    }\n    logger.info('start js coverage process');\n    const spinner = ora(`analyzing coverage for ${numOfTests} ${numOfTests === 1 ? 'test' : 'tests'}`).start();\n    const baseDir = path.resolve(options.codeCoverageReportPath || './coverage');\n    const tempJsDir = path.resolve(baseDir, `.js/${dayjs().format('DDMMYYYYHHmmss')}`);\n    const sourceMapDir = options.codeCoverageSourceMapPath ? path.resolve(options.codeCoverageSourceMapPath) : undefined;\n    try {\n        const [libCoverage, { mergedCoverages, covUrlMap }] = await Promise.all([\n            lazyRequire('istanbul-lib-coverage') as Promise<typeof import('istanbul-lib-coverage')>,\n            collectAndMergeJsCoverageData(options.project, runId),\n        ]);\n\n        if (mergedCoverages.result.length === 0) {\n            spinner.fail('Failed to report coverage information - js code coverage is empty');\n            return undefined;\n        }\n        logger.info('start js coverage merge and remap', { numOfFiles: covUrlMap.size, numMergedCoverages: mergedCoverages.result.length });\n        const coverageMap = libCoverage.createCoverageMap({});\n\n        const sourceMaps: { [url: string]: SourceMap } = {};\n        await promiseMap(mergedCoverages.result, async ({ url, functions }) => {\n            const { text: source, sourceMapType } = covUrlMap.get(url)!;\n\n            const sourceMap = await getSourceMap({ sourceMapType, source, sourceMapDir });\n            sourceMaps[url] = sourceMap;\n\n            const istanbulCoverage = await convertV8ToIstanbul(options, { source, sourceMap, functions });\n            coverageMap.merge(istanbulCoverage!);\n        });\n        await remapCoverage(options, tempJsDir, sourceMaps);\n        const coverageSummary = await saveCoverageReports(options, coverageMap, baseDir, tempJsDir);\n        spinner.succeed();\n        return coverageSummary;\n    } catch (err) {\n        const baseMsg = 'Failed to report coverage information';\n        if (err instanceof ArgError) {\n            spinner.fail(`${baseMsg}, missing arg: ${err.message}`);\n        } else {\n            spinner.fail(baseMsg);\n        }\n        logger.error(baseMsg, { err });\n    }\n\n    return undefined;\n};\n", "import { guid, calcPercentile } from '../utils';\n\nexport const SELENIUM_PERF_MARKS = {\n    GET_BROWSER: 'GET_BROWSER',\n    GET_HTML: 'GET_HTML',\n    GET_ELEMENT: 'GET_ELEMENT',\n    GET_SCREENSHOT: 'GET_SCREENSHOT',\n} as const;\n\ntype SeleniumPrefMark = typeof SELENIUM_PERF_MARKS[keyof typeof SELENIUM_PERF_MARKS];\ntype SeleniumPrefMarkAndAll = SeleniumPrefMark | 'ALL';\n\nexport interface SeleniumPerfStatValues extends ReturnType<SeleniumPerfStats['getStats']> {}\n\nconst performanceKeys: SeleniumPrefMarkAndAll[] = ['ALL', ...Object.values(SELENIUM_PERF_MARKS)];\n\nexport class SeleniumPerfStats {\n    public marks: { [mark in SeleniumPrefMarkAndAll]: number[] } = Object.fromEntries<number[]>(performanceKeys.map(key => [key, []])) as any;\n    private startTimes: { [mark: string]: number } = {};\n\n    public markStart(mark?: SeleniumPrefMark) {\n        const id = guid();\n        this.startTimes[`${mark}:${id}`] = Date.now();\n        return id;\n    }\n\n    public markEnd(id: string, mark?: SeleniumPrefMark) {\n        const markDuration = Date.now() - this.startTimes[`${mark}:${id}`];\n        delete this.startTimes[`${mark}:${id}`];\n\n        if (!this.marks[mark!]) {\n            this.marks.ALL.push(markDuration);\n            return;\n        }\n        this.marks[mark!].push(markDuration);\n    }\n\n    public getStats() {\n        const entries = Object.entries(this.marks).flatMap(([key, samples]) => {\n            if (!Array.isArray(samples) || !samples.length) {\n                return [];\n            }\n            return [\n                [`${key}_COUNT`, samples.length],\n                [`${key}_P50`, calcPercentile(samples, 50)],\n                [`${key}_P95`, calcPercentile(samples, 95)],\n            ];\n        });\n        type Stat = 'COUNT' | 'P50' | 'P95';\n        return {\n            seleniumPerfMarks: this.marks,\n            seleniumStats: Object.fromEntries(entries) as { [stat in `${SeleniumPrefMarkAndAll}_${Stat}`]?: number },\n        };\n    }\n}\n\n", "import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport express from 'express';\nimport { ArgError } from '../errors';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport type { AddressInfo } from 'net';\nimport type { getLogger } from '../commons/logger';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\nimport type { AgentModeOptions, RunnerOptions } from '../runOptions';\n\nconst DEFAULT_PATH = path.join(os.tmpdir(), 'testim/rca/');\n\nconst stepFileMap: { [stepId: string]: string } = {};\nconst resultFileMap: { [stepId: string]: string[] } = {};\n\nconst TYPE_RENAMES = {\n    'test-log': 'consoleLogs',\n    'har-file': 'networkLogs',\n} as const;\nconst TYPES = Object.keys(TYPE_RENAMES) as Array<keyof typeof TYPE_RENAMES>;\n\nexport function mapFilesToLocalDrive(test: TestRunStatusTestResult, logger: ReturnType<typeof getLogger>) {\n    try {\n        test.failurePath = (test.failurePath || []).map(f => Object.assign(f, stepFileMap[f.id] ? { screenshot: stepFileMap[f.id] } : {}));\n        Object.keys(resultFileMap).forEach(type => {\n            test.assets ||= {};\n            test.assets[TYPE_RENAMES[type as keyof typeof TYPE_RENAMES]] = resultFileMap[type];\n        });\n\n        test.assets ||= {};\n        test.assets.screenshots = Object.values(stepFileMap);\n    } catch (err) {\n        if (logger) {\n            logger.error('failed to map files to local drive', { err });\n        }\n        // set default values.\n        test.failurePath ||= [];\n        test.assets ||= {};\n        test.assets.screenshots ||= [];\n    }\n}\n\nexport async function initServer({ agentPort, agentBind, saveRCALocally }: Partial<Pick<AgentModeOptions, 'agentPort' | 'agentBind'> & Pick<RunnerOptions, 'saveRCALocally'>>) {\n    const multer = await lazyRequire('multer') as typeof import('multer');\n    const saveRCALocallyStr = typeof saveRCALocally === 'string' ? saveRCALocally : DEFAULT_PATH;\n\n    await fs.promises.mkdir(saveRCALocallyStr, { recursive: true });\n\n    const upload = multer({\n        storage: multer.diskStorage({\n            async destination(req, file, cb) {\n                const metadata = JSON.parse(req.body.metadata || '{}');\n                if (!metadata.testResultId) {\n                    return cb(new Error('missing testResultId'), '');\n                }\n                const destination = path.join(saveRCALocallyStr, metadata.testResultId);\n                try {\n                    await fs.promises.mkdir(destination, { recursive: true });\n                } catch (err) {\n                    return cb(err, '');\n                }\n                return cb(null, destination);\n            },\n            filename(req, file, cb) {\n                const { fileName } = req.body;\n                const metadata = JSON.parse(req.body.metadata || '{}');\n                if (!metadata.stepId && !fileName) {\n                    return cb(new Error('missing stepId or fileName'), '');\n                }\n                if (metadata.stepId) {\n                    const format = path.extname(fileName);\n                    return cb(null, `step_${metadata.stepId}_${metadata.stepName || ''}${format}`.replace(/[/\\\\?%*:|\"<>\\s]/g, '-'));\n                }\n                return cb(null, fileName);\n            },\n        }),\n    });\n\n    const app = express();\n    app.disable('x-powered-by');\n\n    app.post('/', upload.single('file'), (req, res) => {\n        const metadata = JSON.parse(req.body.metadata || '{}');\n        if (metadata.stepId) {\n            stepFileMap[metadata.stepId] = req.file.path;\n        }\n        if (metadata.testResultId && TYPES.includes(metadata.subType)) {\n            resultFileMap[metadata.subType] ||= [];\n            resultFileMap[metadata.subType].push(req.file.path);\n        }\n        res.sendStatus(200);\n    });\n    app.use((req, res) => res.status(404).send('Endpoint Not Found'));\n\n    const { createServer } = await import('http');\n    return await new Promise<AddressInfo>((resolve, reject) => {\n        const server = createServer(app);\n        server.listen(agentPort, agentBind);\n        server.on('error', onError);\n        server.on('listening', () => resolve(server.address() as AddressInfo));\n\n        function onError(error: Error & { syscall?: string; code?: string }) {\n            if (error.syscall !== 'listen') {\n                return reject(error);\n            }\n\n            // handle specific listen errors with friendly messages\n            switch (error.code) {\n                case 'EACCES':\n                case 'EPERM':\n                    return reject(new ArgError(`Port ${agentPort} requires elevated privileges`));\n                case 'EADDRINUSE':\n                    return reject(new ArgError(`Port ${agentPort} is already in use`));\n                default:\n                    return reject(error);\n            }\n        }\n    });\n}\n", "/* eslint-disable no-console */\nimport * as _ from 'lodash';\nimport * as utils from './utils';\nimport { getLogger } from './commons/logger';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\nconst logger = getLogger('override-test-data-builder');\n\nexport class OverrideTestDataBuilder {\n    constructor(\n        private readonly params: any,\n        private readonly testInfoList: TestWithCustomTestDataAndRunConfig[],\n        private readonly projectId: string,\n    ) {}\n\n    private isObjectNotArray(param: any): param is { [key: string]: any } {\n        return _.isObject(param) && !Array.isArray(param);\n    }\n\n    private isArrayOfObjects(params: any): params is { [key: string]: any }[] {\n        return Array.isArray(params) && params.filter(param => !this.isObjectNotArray(param)).length === 0;\n    }\n\n    public overrideTestData() {\n        const { params, projectId } = this;\n        if (this.isObjectNotArray(params) && params.overrideTestData !== undefined) {\n            if (this.isObjectNotArray(params.overrideTestData) && !_.isEmpty(params.overrideTestData)) {\n                Object.keys(params.overrideTestData).forEach(testName => this.overrideSingleTest(testName, params.overrideTestData[testName]));\n                delete params.overrideTestData;\n            } else {\n                logger.error('invalid overrideTestData', { overrideTestData: params.overrideTestData, projectId });\n            }\n        }\n        if (this.isObjectNotArray(params) && params.overrideAllTestsData !== undefined) {\n            if (_.isObject(params.overrideAllTestsData) && !_.isEmpty(params.overrideAllTestsData)) {\n                const testNames = this.testInfoList.map(test => test.name);\n                testNames.forEach(testName => this.overrideSingleTest(testName, params.overrideAllTestsData));\n                delete params.overrideAllTestsData;\n            } else {\n                logger.error('invalid overrideAllTestsData', { overrideAllTestsData: params.overrideAllTestsData, projectId });\n            }\n        }\n\n        return this.testInfoList;\n    }\n\n    private overrideSingleTest(testName: string, testOverrideTestData: any) {\n        const { projectId } = this;\n        if (this.isObjectNotArray(testOverrideTestData) || this.isArrayOfObjects(testOverrideTestData)) {\n            this.replaceAndCreateOverrideTestData(testName, testOverrideTestData);\n            return;\n        }\n        logger.error('skip override test data to test name', { testName, projectId });\n        console.error(`Invalid override test data provided to test '${testName}'`);\n    }\n\n    private replaceAndCreateOverrideTestData(testName: string, testOverrideTestData: { [key: string]: any }) {\n        const uniqueMatchIds = this.mapTestListToUniqueId(testName);\n        if (uniqueMatchIds.length === 0) {\n            return undefined;\n        }\n        return this.createNewTestPerOverrideTestData(uniqueMatchIds, testOverrideTestData);\n    }\n\n    private mapTestListToUniqueId(testName: string) {\n        const { testInfoList } = this;\n        return _.chain(testInfoList).map(test => {\n            if (test.name.toLowerCase() === testName.toLowerCase()) {\n                return this.generateTestUniqId(test);\n            }\n            return undefined;\n        }).compact().uniq()\n            .value();\n    }\n\n    private createNewTestPerOverrideTestData(uniqueMatchIds: string[], testOverrideTestData: { [key: string]: any }) {\n        const { testInfoList } = this;\n        return [...new Set(uniqueMatchIds)].map(uniqTestId => {\n            const testUniqIds = testInfoList.map(test => this.generateTestUniqId(test));\n            const firstIndex = testUniqIds.indexOf(uniqTestId);\n            const lastIndex = testUniqIds.lastIndexOf(uniqTestId);\n            const currentTest = testInfoList[firstIndex];\n            const newTestDataItems = this.createNewTestItems(currentTest, testOverrideTestData);\n            return testInfoList.splice(firstIndex, (lastIndex - firstIndex) + 1, ...newTestDataItems);\n        });\n    }\n\n    private createNewTestItems(currentTest: TestWithCustomTestDataAndRunConfig, testOverrideTestData: { [key: string]: any }) {\n        return (([] as { [key: string]: any }[]).concat(testOverrideTestData)).map((newTestData, index) => {\n            const testResultId = utils.guid();\n            return {\n                ...currentTest,\n                resultId: testResultId,\n                testData: {\n                    value: newTestData,\n                    index: index + 1,\n                    total: testOverrideTestData.length || 1,\n                },\n            } as TestWithCustomTestDataAndRunConfig;\n        });\n    }\n\n    getTestType(test: TestWithCustomTestDataAndRunConfig & { isBeforeTestPlan?: true; isAfterTestPlan?: true }) {\n        if (test.isBeforeTestPlan) {\n            return 'before';\n        }\n        if (test.isAfterTestPlan) {\n            return 'after';\n        }\n        return 'test';\n    }\n\n    generateTestUniqId(test: TestWithCustomTestDataAndRunConfig) {\n        return `${test.testId}:${test.testConfig.id}:${this.getTestType(test)}`;\n    }\n}\n", "import * as _ from 'lodash';\nimport * as utils from './utils';\nimport * as constants from './commons/constants';\nimport * as gridService from './services/gridService';\nimport * as concurrencyCompanyService from './services/concurrencyCompanyService';\nimport * as servicesApi from './commons/testimServicesApi';\nimport { ArgError } from './errors';\nimport { getLogger } from './commons/logger';\nimport { reporter } from './reports/reporter';\nimport { registerExitHook } from './processHandler';\nimport { calculateCoverage } from './coverage/jsCoverage';\nimport { SeleniumPerfStats } from './commons/SeleniumPerfStats';\nimport { mapFilesToLocalDrive } from './services/localRCASaver';\nimport { TESTIM_CONCURRENT_WORKER_COUNT } from './commons/config';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { OverrideTestDataBuilder } from './OverrideTestDataBuilder';\nimport { featureAvailabilityService } from './commons/featureAvailabilityService';\nimport type { AndroidApp, iOSApp } from 'clickim/src/background/mobile/types';\nimport type { RunnerOptions } from './runOptions';\nimport type { ExecutionList } from './runners/TestPlanRunner';\nimport type { TestResult, TestStatus } from 'clickim/src/common/models/TestResult';\nimport type { TestResultUpdates } from './runners/WorkerManager';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\nimport type { RawMobileAppVersion } from 'services/src/commons/mongo/models/mobileAppVersion';\n\nconst logger = getLogger('test-run-status');\nconst gitBranch = utils.getEnvironmentGitBranch();\nconst gitCommit = process.env.GIT_COMMIT || process.env.CIRCLE_SHA1 || process.env.TRAVIS_COMMIT;\nconst gitRepoUrl = process.env.GIT_URL || process.env.CIRCLE_REPOSITORY_URL;\nconst runnerVersion = utils.getRunnerVersion();\n\ntype ExecConfig = TestRunStatus['execConfig'];\ninterface TestRunStatusResultConfig extends Omit<ExecConfig, 'browser'> {\n    isBeforeTestPlan?: true;\n    isAfterTestPlan?: true;\n    testDataTotal: number | null;\n    testDataIndex: number | null;\n    baseUrl: string;\n    testConfig: TestWithCustomTestDataAndRunConfig['overrideTestConfig'];\n    browser: string;\n    testDataUrl?: string;\n    testData?: object;\n    gridInfo?: gridService.SerializedGrid;\n}\nexport interface TestRunStatusTestResult {\n    workerId?: number;\n    testId: string;\n    status: utils.ValueOf<typeof constants['runnerTestStatus']>;\n    runnerStatus?: utils.ValueOf<typeof constants['runnerStatus']>;\n    name: string;\n    resultId: string;\n    testStatus: TestStatus;\n    testCreatorName: string | undefined;\n    testCreatorEmail: string | undefined;\n    testOwnerName: string | undefined;\n    testOwnerEmail: string | undefined;\n    testLabels: string[];\n    testSuites: string[];\n    allLabels: string[] | undefined;\n    config: TestRunStatusResultConfig;\n    startTime?: number;\n    failureReason?: string;\n    success?: boolean;\n    sessionId?: string;\n    duration?: number;\n    failurePath?: TestResult['failurePath'];\n    resultUrl?: string;\n    mobile?: { [key in 'isAppFromDevice' | 'isAppForIosVirtualDevice']?: boolean };\n    assets?: { [key in 'screenshots' | 'consoleLogs' | 'networkLogs']?: string[] };\n    runConfig?: TestWithCustomTestDataAndRunConfig['runConfig'];\n}\n\nasync function runHook<F extends(...arg: any) => PromiseLike<any>>(fn: F | undefined, ...args: Parameters<F>) {\n    if (!fn || typeof fn !== 'function') {\n        return undefined;\n    }\n\n    try {\n        const res = await fn(...args as Parameters<F>[]);\n        return (res || {}) as Awaited<ReturnType<F>>;\n    } catch (err) {\n        logger.warn('failed to run hook', { err });\n        throw new ArgError(`failed to run hook promise ${err.message}`);\n    }\n}\n\nexport class TestRunStatus {\n    private testRunStatus: { [testResultId: string]: TestRunStatusTestResult };\n    private exportsGlobal: object = {};\n    private startTime: number | null = null;\n    private beforeSuiteParams: object | undefined = {};\n    private executionStartedPromise = Promise.resolve();\n    private readonly execConfig;\n    private readonly fileUserParamsData: object;\n    private readonly seleniumPerfStats = new SeleniumPerfStats();\n    constructor(private testInfoList: ExecutionList, private readonly options: RunnerOptions, testPlanId: string | null, private readonly branchToUse: string) {\n        this.options.runParams ||= {};\n        this.fileUserParamsData = this.options.userParamsData;\n\n        const browserNames = utils.getUniqBrowsers(options, testInfoList as TestWithCustomTestDataAndRunConfig[]);\n        const runnerMode = options.lightweightMode ? options.lightweightMode.type : options.mode;\n        this.execConfig = {\n            parallel: TESTIM_CONCURRENT_WORKER_COUNT || options.parallel || 1,\n            browser: browserNames,\n            gitBranch,\n            gitCommit,\n            gitRepoUrl,\n            runnerVersion,\n            gridHost: options.host || options.gridData?.host,\n            testimBranch: branchToUse,\n            canaryMode: options.canary,\n            source: options.source,\n            schedulerId: options.schedulerId,\n            testPlanId,\n            testPlans: options.testPlan,\n            testLabels: options.label,\n            testSuites: [...new Set((testInfoList as TestWithCustomTestDataAndRunConfig[]).flatMap(test => test.testSuites))],\n            testNames: options.name,\n            testIds: options.testId,\n            testConfigs: options.testConfigNames,\n            testConfigIds: options.testConfigIds,\n            port: options.port,\n            browserTimeout: options.browserTimeout,\n            timeout: options.timeout,\n            newBrowserWaitTimeout: options.newBrowserWaitTimeout,\n            tunnel: options.tunnel,\n            tunnelPort: options.tunnelPort,\n            tunnelHostHeader: options.tunnelHostHeader,\n            runnerMode,\n            gridId: options.gridId || options.gridData?.gridId,\n            gridName: options.grid || options.gridData?.name,\n            gridType: options.gridData?.type,\n            retentionDays: options.retentionDays,\n            codeCoverageReportPath: options.codeCoverageReportPath,\n            collectCodeCoverage: options.codeCoverageUrlFilter || options.collectCodeCoverage,\n            sessionType: 'codeless',\n        };\n\n        this.testRunStatus = this.calcTestRunStatus();\n    }\n\n    public waitForExecutionStartedFinished() {\n        return this.executionStartedPromise;\n    }\n\n    public getTestResult(resultId: string) {\n        return this.testRunStatus[resultId] as TestRunStatusTestResult | undefined;\n    }\n\n    public async addRetryTestResult({\n        newResultId, originalTestResultId, previousTestResultId, projectId, executionId, retryCount = 1,\n    }: { newResultId: string; originalTestResultId?: string; previousTestResultId?: string; projectId: string; executionId: string; retryCount?: number }) {\n        const orgTestResult = this.testRunStatus[originalTestResultId!] || {};\n        const {\n            config,\n            testId,\n            name,\n            testStatus,\n            testCreatorName,\n            testCreatorEmail,\n            testOwnerName,\n            testOwnerEmail,\n            testLabels,\n            testSuites,\n            allLabels,\n        } = orgTestResult;\n\n        const newTestResult = {\n            originalTestResultId,\n            previousTestResultId,\n            config: _.cloneDeep(config),\n            testId,\n            status: 'QUEUED' as const,\n            name,\n            resultId: newResultId,\n            retryCount,\n            testStatus,\n        };\n\n        this.testRunStatus[newResultId] = {\n            ...newTestResult,\n            testCreatorName,\n            testCreatorEmail,\n            testOwnerName,\n            testOwnerEmail,\n            testLabels,\n            testSuites,\n            allLabels,\n        };\n\n        return servicesApi.addTestRetry({\n            projectId,\n            runId: executionId,\n            testId,\n            newResultId,\n            originalTestResultId,\n            previousTestResultId,\n            testResult: newTestResult,\n        });\n    }\n\n    private testStart(wid: number, executionId: string, resultId: string, isRerun: boolean | undefined) {\n        const test = this.getTestResult(resultId)!;\n        test.workerId = wid;\n        reporter.onTestStarted(test, wid, isRerun, resultId);\n\n        return test;\n    }\n\n    private async updateTestStatusRunning(test: TestRunStatusTestResult, executionId: string, testRetryKey: `${number}:${number}`) {\n        const { project: projectId, remoteRunId, projectData } = this.options;\n        if (this.options.lightweightMode?.onlyTestIdsNoSuite) {\n            return this.executionStartedPromise;\n        }\n\n        let testDataUrl = '';\n\n        try {\n            testDataUrl = (await servicesApi.updateTestDataArtifact(projectId, test.testId, test.resultId, test.config.testData, projectData!.defaults)) || '';\n        } catch (err) {\n            logger.error('failed to upload test data artifact (runner)', { err });\n        }\n        const testConfig = _.cloneDeep(test.config);\n        delete testConfig.testData;\n        testConfig.testDataUrl = testDataUrl;\n        await this.executionStartedPromise;\n        return servicesApi.updateTestStatus(projectId, executionId, test.testId, test.resultId, 'RUNNING', { startTime: test.startTime, config: testConfig, remoteRunId, testRetryKey });\n    }\n\n    private async testStartReport(test: TestRunStatusTestResult, executionId: string, testRetryKey: `${number}:${number}`) {\n        if (utils.isQuarantineAndNotRemoteRun(test, this.options)) {\n            return undefined;\n        }\n        const globalParameters = this.exportsGlobal;\n        try {\n            const params = await runHook(this.options.beforeTest, { ...test, exportsGlobal: globalParameters, globalParameters }, this.options.userData!.loginData!.token!);\n\n            test.config.testData = { ...test.config.testData, ...this.exportsGlobal, ...this.fileUserParamsData, ...this.beforeSuiteParams, ...params };\n            this.options.runParams![test.resultId] = test.config.testData;\n            test.startTime = Date.now();\n            await this.updateTestStatusRunning(test, executionId, testRetryKey);\n\n            return test;\n        } catch (err) {\n            logger.error('Failed to start test', { err });\n            throw err;\n        }\n    }\n\n    public testStartAndReport(wid: number, executionId: string, resultId: string, isRerun: boolean | undefined, testRetryKey: `${number}:${number}`) {\n        const test = this.testStart(wid, executionId, resultId, isRerun);\n        return this.testStartReport(test, executionId, testRetryKey);\n    }\n\n    public onGridSlot(resultId: string, gridInfo: gridService.SerializedGrid) {\n        const test = this.getTestResult(resultId)!;\n        test.config.gridInfo = { ...gridInfo, key: undefined, user: undefined };\n        logger.info('on get grid info', { gridInfo: test.config.gridInfo });\n    }\n\n    private reportTestStatus(workerId: number, result: TestResult, test: TestRunStatusTestResult, isRerun: boolean | undefined) {\n        const { name, testId, testStatus } = test;\n        const { resultId, success } = result;\n        if (testStatus === constants.testStatus.EVALUATING && featureAvailabilityService.isTestStatusEnabled) {\n            reporter.onTestIgnored(workerId, test, `test in ${constants.testStatus.EVALUATING} status`);\n            return;\n        }\n        if (success) {\n            reporter.onTestPassed(name);\n            return;\n        }\n        reporter.onTestFailed(\n            test,\n            test.failureReason,\n            utils.getTestUrl(this.options.editorUrl!, this.options.project, testId, resultId, this.branchToUse),\n            testId,\n            isRerun,\n            resultId,\n        );\n    }\n\n    private calcResultText(result: TestResult) {\n        return result.success ? constants.runnerTestStatus.PASSED : constants.runnerTestStatus.FAILED;\n    }\n\n    public onTestIgnored(wid: number, resultId: string) {\n        const test = this.getTestResult(resultId)!;\n        reporter.onTestIgnored(wid, test, `test in ${constants.testStatus.QUARANTINE}`);\n    }\n\n    private monitorMemoryUsage(test: TestRunStatusTestResult) {\n        const memoryUsage = utils.getMemorySnapshot();\n        if (memoryUsage.isOverThreshold) {\n            logger.info('memoryUsage is over threshold', {\n                memoryUsage,\n                testName: test.name,\n                testId: test.testId,\n                resultId: test.resultId,\n                startTime: test.startTime,\n                duration: test.duration,\n                success: test.success,\n                failureReason: test.failureReason,\n                lightweightMode: this.options.lightweightMode,\n                parallel: this.options.parallel,\n                browser: this.options.browser,\n            });\n        }\n    }\n\n    private testEnd(wid: number, result: TestResult, executionId: string, sessionId: string, isRerun: boolean | undefined) {\n        const test = this.getTestResult(result.resultId)!;\n\n        const duration = (result.endTime! - result.startTime) || 0;\n        test.sessionId = sessionId;\n        test.startTime = result.startTime || test.startTime || Date.now();\n        test.duration = duration;\n        result.duration = duration;\n        test.failureReason = result.failureReason || result.reason;\n        result.failureReason = test.failureReason;\n        test.failurePath = result.failurePath;\n        test.resultId = result.resultId;\n        test.success = result.success;\n\n        if (this.options.saveRCALocally) {\n            mapFilesToLocalDrive(test, logger);\n        }\n\n        test.resultUrl = utils.getTestUrl(this.options.editorUrl!, this.options.project, test.testId, test.resultId, this.branchToUse);\n        test.status = this.calcResultText(result);\n\n        result.status = test.status as any;\n        result.name = test.name;\n        result.testStatus = test.testStatus;\n        result.testId ||= test.testId;\n        (result as any).testCreatorName = test.testCreatorName;\n        (result as any).testCreatorEmail = test.testCreatorEmail;\n        (result as any).testOwnerName = test.testOwnerName;\n        (result as any).testOwnerEmail = test.testOwnerEmail;\n        result.testData = test.config && typeof test.config.testDataTotal === 'number' ? {\n            total: test.config.testDataTotal,\n            index: test.config.testDataIndex,\n        } : {};\n\n        this.reportTestStatus(wid, result, test, isRerun);\n        this.monitorMemoryUsage(test);\n        reporter.onTestFinished(test, wid, isRerun);\n\n        const afterMerge = { ...this.exportsGlobal, ...result.exportsGlobal };\n\n        this.exportsGlobal = afterMerge;\n        return test;\n    }\n\n    private async testEndReport(test: TestRunStatusTestResult, executionId: string, result: TestResult, testResultUpdates: TestResultUpdates) {\n        const globalParameters = result.exportsGlobal!;\n        try {\n            try {\n                await runHook(this.options.afterTest, { ...test, exportsGlobal: globalParameters, globalParameters }, this.options.userData!.loginData!.token!);\n            } catch (err) {\n                logger.error('HOOK threw an error', { test: test.testId, err });\n                // eslint-disable-next-line no-console\n                console.error('HOOK threw an error', err); // show the customer that his hook failed.\n            }\n            if (this.options.lightweightMode?.onlyTestIdsNoSuite) {\n                return undefined;\n            }\n\n            return await servicesApi.updateTestStatus(this.options.project, executionId, test.testId, test.resultId, 'FINISHED', {\n                startTime: test.startTime,\n                endTime: result.endTime,\n                success: test.success,\n                failureReason: test.failureReason,\n                remoteRunId: this.options.remoteRunId,\n                ...testResultUpdates,\n            }, 5);\n        } catch (err) {\n            logger.error('Failed to update test finished', { err });\n            throw err;\n        }\n    }\n\n    public testEndAndReport(wid: number, result: TestResult, executionId: string, sessionId: string, isRerun: boolean | undefined, testResultUpdates: TestResultUpdates) {\n        const test = this.testEnd(wid, result, executionId, sessionId, isRerun);\n        return this.testEndReport(test, executionId, result, testResultUpdates);\n    }\n\n\n    private getMobileRunSkippedReason(isAppFromDevice: boolean, nativeApp?: RawMobileAppVersion | iOSApp | AndroidApp, gridType?: string) {\n        let reason = '';\n        const { APP_FROM_DEVICE, VIRTUAL_BUILD } = constants.MOBILE_RUN_SKIP_REASON;\n        if (isAppFromDevice) {\n            reason = APP_FROM_DEVICE;\n        }\n        if (utils.shouldBlockVirtualIosBuild(nativeApp, gridType)) {\n            reason = VIRTUAL_BUILD;\n        }\n        return reason;\n    }\n\n    private calcTestRunStatus() {\n        const { options, testInfoList } = this;\n        const companyId = options.company!.companyId;\n        const gridType = options.gridData?.type;\n        const entries = (testInfoList as (TestWithCustomTestDataAndRunConfig & { isBeforeTestPlan?: true; isAfterTestPlan?: true })[]).map(testInfo => {\n            const runConfig = options.browser ? utils.getRunConfigByBrowserName(options.browser, options.saucelabs, options.browserstack) : testInfo.runConfig;\n            const isAppFromDevice = utils.isAppFromDeviceDisabled(featureFlagsService, gridType) && utils.isAppFromDevice(testInfo.nativeApp) && !options.appId;\n            const shouldSkipForMobile = utils.isMobileProject(options) && (utils.shouldBlockVirtualIosBuild(testInfo.nativeApp, gridType) || isAppFromDevice);\n            const shouldSkipTest = utils.isQuarantineAndNotRemoteRun(testInfo, options) || shouldSkipForMobile;\n            const data = {\n                testId: testInfo.testId,\n                testOptimization: testInfo.testOptimization,\n                status: shouldSkipTest ? constants.runnerTestStatus.SKIPPED : constants.runnerTestStatus.QUEUED,\n                name: testInfo.name,\n                resultId: testInfo.resultId,\n                testStatus: testInfo.testStatus || constants.testStatus.DRAFT,\n                testCreatorName: testInfo.creatorName,\n                testCreatorEmail: testInfo.creatorEmail,\n                testOwnerName: testInfo.testOwnerName,\n                testOwnerEmail: testInfo.testOwnerEmail,\n                testLabels: testInfo.testLabels,\n                testSuites: testInfo.testSuites,\n                allLabels: testInfo.allLabels,\n                ...(shouldSkipForMobile && { reason: this.getMobileRunSkippedReason(isAppFromDevice, testInfo.nativeApp, gridType) }),\n                config: {\n                    ...this.execConfig,\n                    companyId,\n                    testData: testInfo.testData?.value || null,\n                    isBeforeTestPlan: testInfo.isBeforeTestPlan,\n                    isAfterTestPlan: testInfo.isAfterTestPlan,\n                    testDataTotal: testInfo.testData?.total || null,\n                    testDataIndex: testInfo.testData?.index || null,\n                    baseUrl: options.baseUrl || testInfo.baseUrl || testInfo.testConfig.baseUrl,\n                    testConfig: testInfo.overrideTestConfig || testInfo.testConfig,\n                    browser: runConfig.browserValue.toLowerCase(),\n                },\n            };\n            return [testInfo.resultId, data];\n        });\n        return Object.fromEntries(entries);\n    }\n\n\n    private async endKeepAlive(slotService: 'mongo' | 'redis', projectId: string, companyId: string) {\n        if (slotService === 'redis') {\n            await concurrencyCompanyService.keepAlive.end(companyId, projectId);\n        }\n        if (slotService === 'mongo') {\n            await gridService.keepAlive.end(projectId);\n        }\n    }\n\n    public async executionStart(executionId: string, projectId: string, startTime: number, testPlanName: string, testNames: string[]) {\n        logger.info('execution started',\n            { \n                executionId,\n                gridId: this.execConfig.gridId,\n                gridHost: this.execConfig.gridHost,\n                gridName: this.execConfig.gridName,\n                gridType: this.execConfig.gridType,\n                parallel: this.execConfig.parallel,\n                runnerVersion: this.execConfig.runnerVersion,\n                source: this.execConfig.source,\n            });\n        const { options } = this;\n        const { remoteRunId, projectData, company: { companyId } = { }, slotService } = options;\n\n        registerExitHook(() => Promise.all([\n            this.endKeepAlive(slotService, projectId, companyId!),\n            servicesApi.reportExecutionFinished(\n                'ABORTED',\n                executionId,\n                projectId,\n                false,\n                undefined,\n                remoteRunId,\n                { gridName: this.options.grid },\n            ),\n        ]));\n\n        this.startTime = startTime || Date.now();\n        const runHooksProps = {\n            projectId,\n            executionId,\n            ...(featureFlagsService.flags.testNamesToBeforeSuiteHook.isEnabled() && { testNames }),\n        };\n        const params = await runHook(options.beforeSuite, runHooksProps);\n        const overrideTestDataBuilder = new OverrideTestDataBuilder(params, _.cloneDeep(this.testInfoList as TestWithCustomTestDataAndRunConfig[]), projectId);\n        this.testInfoList = overrideTestDataBuilder.overrideTestData();\n        this.testRunStatus = this.calcTestRunStatus();\n        this.beforeSuiteParams = params;\n\n        const { testInfoList } = this;\n        const beforeTests = [];\n        const tests = [];\n        const afterTests = [];\n        for (const test of testInfoList as (TestWithCustomTestDataAndRunConfig & { isBeforeTestPlan?: true; isAfterTestPlan?: true })[]) {\n            if (test.isBeforeTestPlan) {\n                beforeTests.push(test);\n                continue;\n            }\n            if (test.isAfterTestPlan) {\n                afterTests.push(test);\n                continue;\n            }\n            tests.push(test);\n        }\n\n        const reportExecutionStarted = async () => {\n            const testResults = _.cloneDeep(this.testRunStatus);\n            await utils.promiseMap(Object.keys(testResults), async testResultId => {\n                const test = testResults[testResultId];\n                const testData = test.config?.testData;\n                const testId = test.testId;\n                const testDataUrl = await servicesApi.updateTestDataArtifact(projectId, testId, testResultId, testData, projectData!.defaults);\n                if (!testDataUrl) {\n                    return;\n                }\n                delete test.config.testData;\n                test.config.testDataUrl = testDataUrl;\n            });\n            const isLocalRun = Boolean(options.useLocalChromeDriver || options.useChromeLauncher);\n            const executionStartedPromise = servicesApi.reportExecutionStarted({\n                executionId,\n                projectId,\n                labels: testPlanName || [],\n                startTime,\n                executions: testResults,\n                config: this.execConfig,\n                resultLabels: options.resultLabels,\n                remoteRunId: options.remoteRunId,\n                localRunUserId: options.user,\n                isLocalRun,\n                intersections: options.intersections,\n            });\n            this.executionStartedPromise = executionStartedPromise;\n            executionStartedPromise.catch(e => logger.error(e));\n            return executionStartedPromise;\n        };\n\n        try {\n            await reportExecutionStarted();\n        } catch (err) {\n            logger.error('Failed to start suite', { err });\n            // eslint-disable-next-line no-console\n            console.error('Failed to start test run. Please contact support@testim.io');\n        }\n        return { beforeTests, tests, afterTests };\n    }\n\n    public concatSeleniumPerfMarks(marks: { [keys in keyof SeleniumPerfStats['marks']]: number[] }) {\n        _.chain(marks)\n            .keys()\n            .each((key) => {\n                const typedKey = key as keyof SeleniumPerfStats['marks'];\n                if (this.seleniumPerfStats.marks[typedKey]) {\n                    this.seleniumPerfStats.marks[typedKey] = [...this.seleniumPerfStats.marks[typedKey], ...marks[typedKey]];\n                }\n            })\n            .value();\n    }\n\n    public async executionEnd(executionId: string) {\n        // @ts-expect-error type error worth fixing\n        const tests = utils.groupTestsByRetries(this.testRunStatus);\n        const total = tests.length;\n\n        let passed = 0;\n        let skipped = 0;\n        let failedInEvaluatingStatus = 0;\n        for (const { status, testStatus } of tests) {\n            if (status === constants.runnerTestStatus.PASSED) {\n                passed++;\n            }\n            if (status === constants.runnerTestStatus.SKIPPED) {\n                skipped++;\n            }\n            if (status === constants.runnerTestStatus.FAILED && testStatus === constants.testStatus.EVALUATING) {\n                failedInEvaluatingStatus++;\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { seleniumPerfMarks, ...resultExtraData } = this.seleniumPerfStats.getStats();\n\n        try {\n            await runHook(this.options.afterSuite, {\n                exportsGlobal: this.exportsGlobal,\n                tests,\n                total,\n                passed,\n                skipped,\n            });\n        } catch (err) {\n            // eslint-disable-next-line no-console\n            console.log('check your callback handler on afterSuite Hook for syntax or exception errors');\n            logger.warn('error while running afterSuite Hook', { err, projectId: this.options.projectData!.projectId, executionId: this.options.executionId });\n        }\n        const coverageSummary = await calculateCoverage(this.options, this.branchToUse, total, executionId);\n        Object.assign(resultExtraData, { coverageSummary });\n\n        if (this.options.lightweightMode?.onlyTestIdsNoSuite) {\n            return undefined;\n        }\n        try {\n            return await servicesApi.reportExecutionFinished(\n                'FINISHED',\n                executionId,\n                this.options.project,\n                total === (passed + skipped + failedInEvaluatingStatus),\n                {\n                    tmsSuppressReporting: this.options.tmsSuppressReporting,\n                    tmsRunId: this.options.tmsRunId,\n                    tmsCustomFields: this.options.tmsCustomFields,\n                },\n                this.options.remoteRunId,\n                resultExtraData,\n            );\n        } catch (err) {\n            logger.error('Failed to update suite finished', { err });\n            throw err;\n        }\n    }\n\n    public async markAllQueuedTests(executionId: string, status: TestRunStatusTestResult['status'], failureReason: string, success: boolean) {\n        const queuedResultIds = Object.keys(this.testRunStatus).filter(resultId => this.getTestResult(resultId)!.status === 'QUEUED');\n\n        await servicesApi.updateExecutionTests(\n            executionId,\n            ['QUEUED'],\n            status,\n            failureReason,\n            success,\n            this.startTime,\n            null,\n            this.options.project,\n        );\n        for (const resultId of queuedResultIds) {\n            const test = this.getTestResult(resultId)!;\n            test.status = status;\n            test.failureReason = failureReason;\n            test.success = success;\n        }\n        return this.testRunStatus;\n    }\n}\n", "import * as config from './commons/config';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { getLogger } from './commons/logger';\nimport type { OptionValues } from 'commander';\n\nconst logger = getLogger('runOptionsUtils');\n\nexport function getExtensionsUrl(program: OptionValues, useCanonicalURL: boolean) {\n    const zipFileSuffix = program.canary ? '-master.zip' : '.zip';\n    let chrome = `${useCanonicalURL ? config.CANONICAL_EDGE_URL : config.BLOB_URL}/extension/testim-headless${zipFileSuffix}`;\n    let testimHeadlessExtensionDownloadUrl = featureFlagsService.flags.testimHeadlessExtensionDownloadUrl.getValue(\n        {\n            companyId: program.company?.companyId,\n            projectId: program.project,\n            runnerEnvironment: config.RUNNER_ENVIRONMENT,\n        });\n\n    // This is for debugging purposes, if the flags returns nothing, we will default to MV3 extension.\n    if (!testimHeadlessExtensionDownloadUrl) {\n        logger.warn('testimHeadlessExtensionDownloadUrl flag is not set, defaulting to MV3 extension', { resultId: program.resultId, executionId: program.executionId, projectId: program.project });\n        testimHeadlessExtensionDownloadUrl = 'https://testimstatic.blob.core.windows.net/extension/testim-headless.zip';\n    }\n\n    const isExtensionPassedAsArg = program.ext || program.extensionPath;\n\n    if (!isExtensionPassedAsArg && testimHeadlessExtensionDownloadUrl) {\n        chrome = testimHeadlessExtensionDownloadUrl;\n        program.testimHeadlessExtensionDownloadUrl = testimHeadlessExtensionDownloadUrl;\n    }\n\n    return {\n        chrome,\n        'edge-chromium': chrome,\n    };\n}\n\nexport function getResolvedExtensionUrl(program: OptionValues) {\n    const { chrome } = getExtensionsUrl(program, false);\n    return chrome;\n}\n\nexport function getPlayerUrl(program: OptionValues) {\n    const playerUrlPrefix = config.RUNNER_ENVIRONMENT === 'staging' ? `${config.EXTENSION_SP_S3_HOST}/staging-sessionPlayer` : `${config.BLOB_URL}/extension/sessionPlayer`;\n    const playerUrl = program.canary ? `${playerUrlPrefix}-master` : playerUrlPrefix;\n\n    return playerUrl;\n}\n", "import ms from 'ms';\nimport pRetry from 'p-retry';\nimport * as os from 'node:os';\nimport * as portfinder from 'portfinder';\nimport * as childProcess from 'node:child_process';\nimport * as utils from '../utils';\nimport * as httpRequest from '../commons/httpRequest';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport * as fs from 'node:fs';\nimport * as fsPromises from 'node:fs/promises';\nimport { join } from 'node:path';\nimport { ArgError } from '../errors';\nimport { getLogger } from '../commons/logger';\nimport { getExtensionsUrl } from '../runOptionsUtils';\nimport { gridTypes, CLI_MODE } from '../commons/constants';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { spreadObjectToArgs } from '../utils';\nimport type { OSS } from '../utils';\nimport type { RunnerMode } from '../runners/runnerUtils';\nimport type { SerializedGrid } from './gridService';\nimport type { RunnerOptions, TunnelOptions } from '../runOptions';\n\nconst logger = getLogger('lambdatestService');\n\nconst LT_TUNNEL_BINARY_ORIGIN = 'https://downloads.lambdatest.com/tunnel/v3';\nconst LT_TUNNEL_BINARY_PATHNAME = {\n    win32ia32: 'windows/32bit/LT_Windows.zip',\n    win32x64: 'windows/64bit/LT_Windows.zip',\n    darwinia32: 'mac/32bit/LT_Mac.zip',\n    darwinx64: 'mac/64bit/LT_Mac.zip',\n    darwinarm64: 'mac/64bit/LT_Mac.zip',\n    linuxia32: 'linux/32bit/LT_Linux.zip',\n    linuxx64: 'linux/64bit/LT_Linux.zip',\n    freebsdia32: 'freebsd/32bit/LT_Freebsd.zip',\n    freebsdx64: 'freebsd/64bit/LT_Freebsd.zip',\n};\nconst LT_TUNNEL_BINARY_DIRECTORY = `${os.tmpdir()}/LT`;\nconst LT_TUNNEL_BINARY_LOCATION = `${LT_TUNNEL_BINARY_DIRECTORY}/LT`;\n\nconst LT_MINIMUM_CONNECTION_RETRY_TIMEOUT = ms('15m');\n\ntype LambdaTestConfig = utils.AwaitedReturnType<typeof servicesApi.fetchLambdatestConfig>;\n\nconst MAX_RESOLUTION = '2560x1440';\nexport class LambdatestService {\n    isActive = false;\n    static tunnel: childProcess.ChildProcess | undefined;\n    static tunnelName: string | undefined;\n    static lambdatestConfigPromise: Promise<LambdaTestConfig> | undefined;\n    static lambdatestConfig: LambdaTestConfig | undefined;\n\n    public static isLambdatestGrid(gridData: SerializedGrid) {\n        return gridData.type === gridTypes.TESTIM_LAMBDATEST || gridData.type === gridTypes.LAMBDATEST || (gridData.type === gridTypes.HYBRID && gridData.provider === 'lambdatest');\n    }\n\n    public isLambdatestRun() {\n        return this.isActive;\n    }\n\n    public async enableIfNeeded(gridData: SerializedGrid, companyId: string) {\n        if (!LambdatestService.isLambdatestGrid(gridData)) {\n            return;\n        }\n\n        LambdatestService.lambdatestConfigPromise ||= servicesApi.fetchLambdatestConfig(companyId);\n        LambdatestService.lambdatestConfig = await LambdatestService.lambdatestConfigPromise;\n        this.isActive = true;\n    }\n\n    public disable() {\n        this.isActive = false;\n    }\n\n    public get getSessionTimeout() {\n        if (!this.isActive) {\n            return null;\n        }\n        return LT_MINIMUM_CONNECTION_RETRY_TIMEOUT;\n    }\n\n    public get getSessionRetries() {\n        if (!this.isActive) {\n            return null;\n        }\n        return 1;\n    }\n\n    // https://www.lambdatest.com/support/docs/beta-lambda-tunnel-for-corporate-firewalls/\n    private static async prepareTunnel() {\n        const isBinaryExist = await utils.doesPathExist(LT_TUNNEL_BINARY_LOCATION);\n        if (isBinaryExist) {\n            return;\n        }\n\n        const downloadUrl = LT_TUNNEL_BINARY_PATHNAME[os.platform() + os.arch() as keyof typeof LT_TUNNEL_BINARY_PATHNAME];\n        if (!downloadUrl) {\n            throw new Error(`tunnel on ${os.platform() + os.arch()} platform is not supported.`);\n        }\n        const zipLocation = `${LT_TUNNEL_BINARY_DIRECTORY}.zip`;\n        await utils.downloadAndSave(`${LT_TUNNEL_BINARY_ORIGIN}/${downloadUrl}`, zipLocation);\n        await utils.unzipFile(zipLocation, LT_TUNNEL_BINARY_DIRECTORY);\n    }\n\n    private static async chmodLtTunnel(path: string): Promise<void> {\n        if (os.platform() === 'win32') {\n            return;\n        }\n\n        const fileExists = await utils.doesPathExist(path);\n\n        if (!fileExists) {\n            return;\n        }\n\n        try {\n            await fsPromises.access(path, fs.constants.X_OK);\n            return;\n        } catch {\n            // do nothing.\n        }\n\n        try {\n            await fsPromises.chmod(path, '777');\n        } catch (e) {\n            logger.error('Failed to make LT tunnel executable', { e });\n            throw e;\n        }\n    }\n\n    // keeping this static and public for easy mock in tests.\n    public static async delay(time: number) {\n        await utils.delay(time);\n    }\n\n    public static async connectTunnel(runnerOptions: Partial<TunnelOptions> | RunnerOptions) {\n        if ((runnerOptions as RunnerOptions).externalLambdatestTunnelId) {\n            LambdatestService.tunnelName = (runnerOptions as RunnerOptions).externalLambdatestTunnelId;\n            return;\n        }\n        await this.prepareTunnel();\n        const infoAPIPort = await portfinder.getPortPromise();\n        const { gridData = {}, gridUsername, gridPassword, externalLambdatestNTLMTunnelUsername, externalLambdatestNTLMTunnelPassword } = runnerOptions as RunnerOptions;\n        const proxyUri = global.proxyUri;\n        LambdatestService.tunnelName = utils.guid();\n\n        let tunnelArgs = [\n            '--tunnelName', LambdatestService.tunnelName,\n            '--infoAPIPort', String(infoAPIPort),\n        ];\n\n        if (featureFlagsService.flags.enableLambdaTestTunnelNTLM.isEnabled()) {\n            tunnelArgs = [...tunnelArgs, '--ntlm'];\n\n            // CLI flags take precedence over feature flags\n            if (externalLambdatestNTLMTunnelUsername && externalLambdatestNTLMTunnelPassword) {\n                tunnelArgs = [...tunnelArgs, '--ntlm-username', externalLambdatestNTLMTunnelUsername, '--ntlm-password', externalLambdatestNTLMTunnelPassword];\n            } else {\n                const customTunnelOptions = JSON.parse(featureFlagsService.flags.addCustomLTtunnelNTLMOptions.getValue());\n                if (customTunnelOptions) {\n                    tunnelArgs = [...tunnelArgs, ...spreadObjectToArgs(customTunnelOptions)];\n                }\n            }\n        }\n\n        if (featureFlagsService.flags.enableLambdaTestTunnelSkipUpgrade.isEnabled()) {\n            tunnelArgs = [...tunnelArgs, '--skip-upgrade'];\n        }\n\n        if ((runnerOptions as RunnerOptions).externalLambdatestUseWss) {\n            tunnelArgs = [...tunnelArgs, '--mode', 'ws'];\n        }\n        if ((runnerOptions as RunnerOptions).externalLambdatestDisableAutomationTunneling) {\n            tunnelArgs = [\n                ...tunnelArgs,\n                '--bypassHosts',\n                'run.testim.io,services.testim.io,api.coralogix.com,conf.rollout.io,statestore.rollout.io,push.rollout.io,analytic.rollout.io',\n            ];\n        }\n\n        if (gridData.tunnelUser && gridData.tunnelKey) {\n            tunnelArgs = [...tunnelArgs, '--user', gridData.tunnelUser, '--key', gridData.tunnelKey];\n        } else if (gridUsername && gridPassword) {\n            tunnelArgs = [...tunnelArgs, '--user', gridUsername, '--key', gridPassword];\n        } else {\n            throw new ArgError('tunnel requires username and password');\n        }\n\n        if (proxyUri) {\n            try {\n                const proxyUrl = new URL(proxyUri);\n                tunnelArgs = [...tunnelArgs, '--proxy-host', proxyUrl.hostname];\n                if (proxyUrl.port) {\n                    tunnelArgs = [...tunnelArgs, '--proxy-port', proxyUrl.port];\n                }\n                if (proxyUrl.username && proxyUrl.password) {\n                    tunnelArgs = [...tunnelArgs, '--proxy-user', proxyUrl.username, '--proxy-pass', proxyUrl.password];\n                }\n            } catch {\n                throw new ArgError('proxy url is invalid');\n            }\n        }\n\n        if ((runnerOptions as RunnerOptions).externalLambdatestMitm) {\n            tunnelArgs = [...tunnelArgs, '--mitm'];\n        }\n\n        // It might take some time until the file is ready.\n        await LambdatestService.delay(3000);\n        await LambdatestService.chmodLtTunnel(join(LT_TUNNEL_BINARY_DIRECTORY, 'LT'));\n        LambdatestService.tunnel = childProcess.spawn('./LT', tunnelArgs, { cwd: LT_TUNNEL_BINARY_DIRECTORY });\n\n        let stdoutResult = '';\n        let stderrResult = '';\n\n        LambdatestService.tunnel.stdout!.on('data', (data) => {\n            stdoutResult += data.toString();\n        });\n\n        LambdatestService.tunnel.stderr!.on('data', (data) => {\n            stderrResult += data.toString();\n        });\n\n        // verify that LT tunnel strated successfully\n        try {\n            const ltInfo = await pRetry(() => httpRequest.get(`http://127.0.0.1:${infoAPIPort}/api/v1.0/info`, {}, {}, undefined, { skipProxy: true }), {\n                onFailedAttempt: error => {\n                    if (stdoutResult.includes('Invalid Credentials')) {\n                        throw Object.assign(error, { isInvalidCredsForLT: true });\n                    }\n                },\n                retries: 30,\n                minTimeout: 2000,\n            });\n            logger.info('LT tunnel info', ltInfo);\n        } catch (err) {\n            Object.assign(err, { stdoutResult, stderrResult });\n            logger.error('Failed to start LT tunnel', { err });\n            throw err;\n        }\n    }\n\n    public static async disconnectTunnel(runnerOptions: Partial<TunnelOptions> | RunnerOptions) {\n        if ((runnerOptions as RunnerOptions).externalLambdatestTunnelId || !LambdatestService.tunnel) {\n            return undefined;\n        }\n        return new Promise<void>((resolve, reject) => {\n            LambdatestService.tunnel!.on('close', (code) => {\n                if (code) {\n                    reject(new Error(`tunnel process exited with code ${code}`));\n                }\n                resolve();\n            });\n            LambdatestService.tunnel!.kill();\n        });\n    }\n\n    getCapabilities(\n        runnerOptions: RunnerOptions,\n        browser: string,\n        executionId: string,\n        testResultId: string,\n        testName: string,\n        testRunConfig?: any,\n        overrideConfiguration?: { os?: (typeof OSS)[number]['osName']; resolution?: { width?: number; height?: number } },\n        mode?: RunnerMode,\n    ) {\n        if (!this.isActive) {\n            return {} as never;\n        }\n\n        const defaultBrowserCaps = LambdatestService.lambdatestConfig!.CAPABILITIES[browser as keyof LambdaTestConfig['CAPABILITIES']] || {};\n\n        const tunnelCaps = {\n            ...(LambdatestService.tunnelName && { tunnel: true, tunnelName: LambdatestService.tunnelName }),\n        };\n        let loadExtension: string[] = [];\n        const { canary, ext, extensionPath, installCustomExtension } = runnerOptions;\n        const config: { platform: string; resolution: string; version: string } = {\n            platform:\n                getOsIfAllowed(testResultId, overrideConfiguration?.os) ||\n                getOsIfAllowed(testResultId, testRunConfig?.lt?.platform) ||\n                (defaultBrowserCaps as any).platform ||\n                LambdatestService.lambdatestConfig!.PLATFORM,\n            resolution: LambdatestService.lambdatestConfig!.RESOLUTION ?? MAX_RESOLUTION,\n            version: browser === 'safari' ? (testRunConfig?.lt?.safari_version || defaultBrowserCaps.version) : defaultBrowserCaps.version,\n        };\n\n        if (mode !== CLI_MODE.APPIUM && mode !== CLI_MODE.SELENIUM && !ext) {\n            const extUrls = getExtensionsUrl({ canary } as any, true);\n            if (!extensionPath && extUrls[browser as keyof typeof extUrls]) {\n                loadExtension = [...loadExtension, extUrls[browser as keyof typeof extUrls]];\n            }\n            if (extensionPath && utils.isURL(extensionPath)) {\n                loadExtension = [...loadExtension, extensionPath];\n            }\n            if (!loadExtension.length) {\n                logger.warn('No extension was loaded in LambdaTestService', { extUrls, extensionPath });\n            }\n        }\n\n        if (featureFlagsService.flags.enableFixForCustomExtensionForLT.isEnabled() && installCustomExtension && utils.isURL(installCustomExtension)) {\n            loadExtension = [...loadExtension, installCustomExtension];\n        }\n\n        return {\n            build: executionId,\n            name: `${testResultId} - ${testName}`,\n            // eslint-disable-next-line camelcase\n            selenium_version: LambdatestService.lambdatestConfig!.SELENIUM_VERSION,\n            timezone: LambdatestService.lambdatestConfig!.TIMEZONE,\n            ...defaultBrowserCaps,\n            ...config,\n            loadExtension,\n            ...tunnelCaps,\n            console: true,\n            queueTimeout: 300, // time a session spends in the LT queue, in seconds (apparently 300 is the minimum)\n            // visual: true, // [NOTE]: activate LT screenshots feature (can slow test).\n            network: featureFlagsService.flags.LTNetworkCapabilities.isEnabled(), // [NOTE]: activate LT capture network logs feature (can cause network issues).\n            // fixedIP: '10.80.34.143', // [NOTE]: this is for debug purposes with LT team.\n            ntlm: featureFlagsService.flags.enableLambdaTestTunnelNTLM.isEnabled(),\n            skipBinaryUpgrade: featureFlagsService.flags.enableLambdaTestTunnelSkipUpgrade.isEnabled(),\n        };\n    }\n}\n\nconst allowedLambdatestOss = new Set([\n    'Linux',\n    'Windows 10',\n    'Windows 11',\n    'macOS Sonoma',\n    'macOS Ventura',\n    'macOS Monterey',\n    'macOS Catalina',\n    'macOS Big Sur',\n]);\n\nfunction getOsIfAllowed(testResultId: string, osRequested: string | undefined) {\n    if (!osRequested) {\n        return undefined;\n    }\n\n    if (!allowedLambdatestOss.has(osRequested)) {\n        logger.warn(`OS ${osRequested} is not supported by LT`, { testResultId });\n        return undefined;\n    }\n\n    return osRequested;\n}\n", "/* eslint-disable camelcase */\n\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport * as crypto from 'node:crypto';\nimport * as _ from 'lodash';\nimport * as utils from '../utils';\nimport * as config from './config';\nimport { getLogger } from './logger';\nimport { featureFlagsService } from './featureFlagsService';\nimport { CLI_MODE, mobileWeb, gridTypes } from './constants';\nimport { LambdatestService } from '../services/lambdatestService';\nimport { cloneDeep } from 'lodash';\nimport type { Agent } from 'agent-base';\nimport type { RemoteOptions } from 'webdriverio';\nimport type { RunnerMode } from '../runners/runnerUtils';\nimport type { ProjectData, RunnerOptions, SaucelabsOptions } from '../runOptions';\nimport type { SerializedGrid } from '../services/gridService';\n\nconst logger = getLogger('testim-desired-capabilities-builder');\n\nconst LOG_LEVEL = config.WEBDRIVER_DEBUG ? 'debug' : 'silent';\nconst CONTENT_SETTING = {\n    CONTENT_SETTING_DEFAULT: 0,\n    CONTENT_SETTING_ALLOW: 1,\n    CONTENT_SETTING_BLOCK: 2,\n    CONTENT_SETTING_ASK: 3,\n};\nconst DEFAULT_CHROME_OPTIONS_ARGS = [\n    '--disable-popup-blocking',\n    '--ignore-gpu-blacklist',\n    '--auto-select-desktop-capture-source=Entire screen',\n    '--ignore-certificate-errors',\n    // Disable built-in Google Translate service\n    '--disable-features=TranslateUI',\n    // Disable various background network services, including extension updating,\n    // safe browsing service, upgrade detector, translate, UMA\n    '--disable-background-networking',\n    // Disable syncing to a Google account\n    '--disable-sync',\n    // Disable reporting to UMA, but allows for collection\n    '--metrics-recording-only',\n    // Disable installation of default apps on first run\n    '--disable-default-apps',\n    // Mute any audio\n    '--mute-audio',\n    // Skip first run wizards\n    '--no-first-run',\n    '--disable-back-forward-cache',\n];\n\ninterface SeleniumOpts extends Pick<RemoteOptions, 'user' | 'key'> {\n    /** @deprecated please use hostname instead */\n    host: string;\n    hostname: string;\n    port: number;\n    path: string;\n    protocol: string;\n    logLevel: 'silent' | 'debug';\n    connectionRetryTimeout: number;\n    connectionRetryCount: number;\n    getSessionTimeout: number;\n    getSessionRetries: number;\n    deprecationWarnings?: boolean;\n    desiredCapabilities: {\n        javascriptEnabled?: boolean;\n        locationContextEnabled?: boolean;\n        handlesAlerts?: boolean;\n        rotatable?: boolean;\n        acceptSslCerts?: boolean;\n        unexpectedAlertBehaviour?: string;\n        nativeEvents?: boolean;\n        testName?: string;\n        version?: string;\n        browserName?: string;\n        'moz:firefoxOptions'?: { prefs: any; args: string[] };\n        testim_firefox_profile?: string;\n        firefox_profile?: string;\n        'aws:maxDurationSecs'?: number;\n        'aws:idleTimeoutSecs'?: number;\n        'ms:edgeChromium'?: boolean;\n        browserVersion?: string;\n        platform?: string;\n        platformName?: string;\n        acceptInsecureCerts?: boolean;\n        unhandledPromptBehavior?: string;\n        'ms:edgeOptions'?: SeleniumOpts['desiredCapabilities']['chromeOptions'];\n        edgeOptions?: SeleniumOpts['desiredCapabilities']['chromeOptions'];\n        'goog:chromeOptions'?: SeleniumOpts['desiredCapabilities']['chromeOptions'];\n        chromeOptions?: {\n            prefs: any;\n            w3c?: boolean;\n            args?: string[];\n            extensions?: string[];\n            localState?: any;\n            mobileEmulation?: { deviceMetrics?: { width: number; height: number; pixelRatio: number }; userAgent: string };\n        };\n        loadExtension?: string[]; // exists for Lambdatest\n    };\n    capabilities?: { alwaysMatch: SeleniumOpts['desiredCapabilities']; firstMatch: [{}] };\n    headers?: {};\n    agent?: Agent;\n}\n\nconst getHash = (...str: string[]) => crypto.createHash('sha256').update(str.join('')).digest('hex');\n\nconst isDFGrid = (gridInfo: any) => gridInfo.type === gridTypes.DEVICE_FARM || (gridInfo.type === gridTypes.HYBRID && gridInfo.provider === 'devicefarm');\n\n/**  @see https://webdriver.io/docs/capabilities/#browser-specific-capability-extensions */\nconst convertToNewCapabilitiesFormat = (opts: SeleniumOpts) => {\n    const { desiredCapabilities } = opts;\n    if (Object.hasOwn(desiredCapabilities, 'version')) {\n        desiredCapabilities.browserVersion = desiredCapabilities.version;\n        delete desiredCapabilities.version;\n    }\n    if (Object.hasOwn(desiredCapabilities, 'platform')) {\n        desiredCapabilities.platformName = desiredCapabilities.platform;\n        delete desiredCapabilities.platform;\n    }\n    if (Object.hasOwn(desiredCapabilities, 'acceptSslCerts')) {\n        desiredCapabilities.acceptInsecureCerts = desiredCapabilities.acceptSslCerts;\n        delete desiredCapabilities.acceptSslCerts;\n    }\n    if (Object.hasOwn(desiredCapabilities, 'unexpectedAlertBehaviour')) {\n        desiredCapabilities.unhandledPromptBehavior = desiredCapabilities.unexpectedAlertBehaviour;\n        delete desiredCapabilities.unexpectedAlertBehaviour;\n    }\n    if (Object.hasOwn(desiredCapabilities, 'chromeOptions')) {\n        desiredCapabilities['goog:chromeOptions'] ??= desiredCapabilities.chromeOptions;\n        delete desiredCapabilities.chromeOptions;\n    }\n    if (Object.hasOwn(desiredCapabilities, 'edgeOptions')) {\n        desiredCapabilities['ms:edgeOptions'] ??= desiredCapabilities.edgeOptions;\n        delete desiredCapabilities.edgeOptions;\n    }\n    if (Object.hasOwn(desiredCapabilities, 'firefoxOptions')) {\n        //@ts-expect-error firefoxOptions is the old format, we don't want to type it\n        desiredCapabilities['moz:firefoxOptions'] ??= desiredCapabilities.firefoxOptions;\n        //@ts-expect-error firefoxOptions is the old format, we don't want to type it\n        delete desiredCapabilities.firefoxOptions;\n    }\n\n    if (desiredCapabilities['goog:chromeOptions']?.w3c === false) {\n        desiredCapabilities['goog:chromeOptions'].w3c = true;\n    }\n\n    if ('username' in opts.desiredCapabilities) {\n        opts.user = opts.desiredCapabilities.username as string;\n        delete opts.desiredCapabilities.username;\n    }\n    if ('accessKey' in opts.desiredCapabilities) {\n        opts.key = opts.desiredCapabilities.accessKey as string;\n        delete opts.desiredCapabilities.accessKey;\n    }\n\n    let unsupportedCapsFields;\n    try {\n        unsupportedCapsFields = featureFlagsService.flags.unsupportedCapsFields.getValue();\n        const unsupportedFields = JSON.parse(unsupportedCapsFields);\n        if (!Array.isArray(unsupportedFields)) {\n            return;\n        }\n\n        (unsupportedFields as (keyof SeleniumOpts['desiredCapabilities'])[]).forEach((field) => {\n            delete desiredCapabilities[field];\n        });\n    } catch (error) {\n        logger.error('Fail to parse \"unsupportedCapsFields\" flag', { unsupportedCapsFields });\n    }\n};\n\nfunction buildSafariOptions(opts: SeleniumOpts, browserName: string) {\n    const safariOptions = {\n        browserName: 'safari',\n        ...(browserName === 'safari technology preview' && { 'safari.options': { technologyPreview: true } }),\n    };\n    Object.assign(opts.desiredCapabilities, safariOptions);\n    return opts;\n}\n\nfunction readFileToBase64(fileLocation: string) {\n    return fs.readFileSync(fileLocation, { encoding: 'base64' });\n}\n\nfunction setCustomExtension(customExtensionLocalLocation: string | undefined, extensions: string[], lambdatestService?: LambdatestService) {\n    if (lambdatestService?.isLambdatestRun() && utils.isURL(customExtensionLocalLocation!)) {\n        return;\n    }\n\n    if (customExtensionLocalLocation) {\n        const extStr = readFileToBase64(customExtensionLocalLocation);\n        // for debugging purpose should be removed in the future\n        logger.info(`adding extension: custom, path: ${customExtensionLocalLocation} length: ${extStr.length} hash: ${getHash(extStr)} current extension count: ${extensions.length}`);\n        extensions.push(extStr);\n    }\n}\n\n/**\n * This is where we configure the extension for the Testim run.\n * There are 2 options to determine which extension to use:\n *\n * 1. Use the --load-extension argument: The extension must be unpacked on the machine that is running the test, and we provide the path.\n *    For example, --load-extension=/opt/testim-headless\n *\n * 2. Pass the extension as a base64-encoded string.\n */\nfunction setTestimExtension(browserOptions: RunnerOptions, extensions: string[], args: string[], predefinedTestimExtension: string | null, lambdatestService?: LambdatestService) {\n    // If it's a lambdatest run, we only send the link to the extension capabilities.alwaysMatch.loadExtension\n    if (lambdatestService?.isLambdatestRun()) {\n        return;\n    }\n\n    const testimHeadlessExtensionDownloadUrl = browserOptions.testimHeadlessExtensionDownloadUrl;\n\n    // if it's a testim grid, we give it the path to the extension since it's already unpacked on the grid\n    if ((browserOptions.ext || predefinedTestimExtension) && !testimHeadlessExtensionDownloadUrl) {\n        const extFromOptions = typeof browserOptions.ext === 'string' ? browserOptions.ext : `${__dirname}/..`;\n        const ext = predefinedTestimExtension || extFromOptions;\n        const loadExt = `--load-extension=${ext}`;\n        logger.info(`adding extension: testim unpacked , path: ${ext}`);\n        args.push(loadExt);\n        return;\n    }\n\n    const zipFileSuffix = browserOptions.canary ? '-master.zip' : '.zip';\n    let fileName = `testim-headless${zipFileSuffix}`;\n    if (!browserOptions.extensionPath && testimHeadlessExtensionDownloadUrl) {\n        fileName = path.basename(testimHeadlessExtensionDownloadUrl);\n    }\n\n    const filePath = path.join(process.cwd(), fileName);\n    const extStr = readFileToBase64(filePath);\n    // for debugging purpose should be removed in the future\n    logger.info(`adding extension: testim zipped, path: ${filePath} length: ${extStr.length} hash: ${getHash(extStr)} current extension count: ${extensions.length}`);\n    extensions.push(extStr);\n}\n\nfunction _buildChromiumOptions(\n    opts: SeleniumOpts,\n    browserOptions: RunnerOptions,\n    testRunConfig: any,\n    customExtensionLocalLocation: string | undefined,\n    gridInfo: any,\n    predefinedTestimExtension: string | null,\n    lambdatestService?: LambdatestService,\n    mode?: RunnerMode,\n) {\n    // * Make sure to add any referenced attributes of the function arguments to the hash created in buildChromiumOptions * //\n\n    const browserName = testRunConfig.seleniumName || testRunConfig.browserValue;\n    const extensions: string[] = [];\n    const args = [...DEFAULT_CHROME_OPTIONS_ARGS];\n    if (browserOptions.headless) {\n        args.push('--headless');\n    }\n    const chromiumOptions: NonNullable<SeleniumOpts['desiredCapabilities']['chromeOptions']> = {\n        prefs: {\n            'profile.default_content_setting_values.popups': CONTENT_SETTING.CONTENT_SETTING_ALLOW,\n            // allow multiple download files\n            'profile.default_content_setting_values.automatic_downloads': CONTENT_SETTING.CONTENT_SETTING_ALLOW,\n            // disable pdf viewer\n            'plugins.always_open_pdf_externally': true,\n            // unintuitively stops download protection (\"Dangerous file blocked\")\n            // if needed in the future, consider adding --safebrowsing-disable-download-protection or --safebrowsing-disable-extension-blacklist to the chrome flags\n            'safebrowsing.enabled': true,\n            'profile.content_settings.exceptions.clipboard': {\n                '[*.],*': { last_modified: Date.now(), setting: 1 },\n            },\n            'download.allow_office_viewer_for_download': false,\n            'profile.password_manager_leak_detection': false,\n        },\n        w3c: true,\n    };\n\n    if (isDFGrid(gridInfo)) {\n        const insecureOriginsForDF = featureFlagsService.flags.DFAcceptInsecureOrigins.getValue();\n        if (typeof insecureOriginsForDF === 'string') {\n            // To prevent DF failures on insecure origins (e.g our JSbin that works on HTTP): https://peter.sh/experiments/chromium-command-line-switches/#unsafely-treat-insecure-origin-as-secure\n            args.push(`--unsafely-treat-insecure-origin-as-secure=${insecureOriginsForDF}`);\n        }\n        chromiumOptions.prefs['download.default_directory'] = 'C:\\\\Users\\\\testnode';\n        opts.desiredCapabilities.version = featureFlagsService.flags.DFBrowserVersion.getValue();\n        opts.desiredCapabilities['aws:maxDurationSecs'] = 2400; // Maximum duration of the session before it is forcibly closed, in seconds. Range: 180 to 2400.\n        opts.desiredCapabilities['aws:idleTimeoutSecs'] = 60; // Maximum delay between WebDriver commands before the session is forcibly closed. Range: 30 to 900.\n    }\n\n    if (isDFGrid(gridInfo) && browserName === 'MicrosoftEdge') {\n        opts.desiredCapabilities['ms:edgeChromium'] = true;\n    }\n\n    if (browserOptions.chromeExtraPrefs) {\n        Object.assign(chromiumOptions.prefs, browserOptions.chromeExtraPrefs);\n    }\n\n    if (browserOptions.chromeExtraArgs) {\n        browserOptions.chromeExtraArgs.forEach((arg) => args.push(`--${arg}`));\n    }\n\n    try {\n        const disableChromeFeatures = getDisabledChromeFeatures();\n        if (disableChromeFeatures.length) {\n            disableChromeFeatures.forEach((feature: string) => args.push(`--disable-features=${feature}`));\n        }\n    } catch {\n        // if we couldn't parse the flag, we don't want to block the run, silently fail into oblivion\n    }\n\n    if (browserOptions.chromeBlockLocation) {\n        chromiumOptions.prefs['profile.default_content_setting_values.geolocation'] = CONTENT_SETTING.CONTENT_SETTING_BLOCK;\n    }\n\n    if (browserOptions.chromeUserDataDir) {\n        args.push(`--user-data-dir=${browserOptions.chromeUserDataDir}`);\n    }\n\n    if (browserOptions.projectData?.defaults?.disableChromiumGpu) {\n        args.push('--disable-gpu');\n    }\n\n    Object.assign(opts.desiredCapabilities, { browserName });\n\n    function setMobileEmulationSettings() {\n        if (testRunConfig.mobileEmulation) {\n            chromiumOptions.mobileEmulation = {\n                deviceMetrics: {\n                    width: testRunConfig.mobileEmulation.device.width,\n                    height: testRunConfig.mobileEmulation.device.height + mobileWeb.MOBILE_WEB_REMOTE_RUN_HEADER_SPACING,\n                    pixelRatio: testRunConfig.mobileEmulation.device.deviceScaleFactor,\n                },\n                userAgent: testRunConfig.mobileEmulation.userAgent,\n            };\n        }\n    }\n\n    setMobileEmulationSettings();\n\n    setCustomExtension(customExtensionLocalLocation, extensions, lambdatestService);\n    if (mode === CLI_MODE.EXTENSION) {\n        setTestimExtension(browserOptions, extensions, args, predefinedTestimExtension, lambdatestService);\n    }\n    if (extensions.length > 0) {\n        chromiumOptions.extensions = extensions;\n    }\n\n    if (browserOptions.disableCookiesSameSiteNoneRequiresSecure) {\n        chromiumOptions.localState = {\n            'browser.enabled_labs_experiments': ['cookies-without-same-site-must-be-secure@2'],\n        };\n    }\n\n    chromiumOptions.args = args;\n    const optionsKey = { MicrosoftEdge: 'edgeOptions', chrome: 'chromeOptions' }[browserName as 'MicrosoftEdge' | 'chrome'] as 'edgeOptions' | 'chromeOptions';\n    const vendor = { MicrosoftEdge: 'ms', chrome: 'goog' }[browserName as 'MicrosoftEdge' | 'chrome'] as 'ms' | 'goog';\n\n    if (LambdatestService.isLambdatestGrid(gridInfo)) {\n        delete chromiumOptions.w3c;\n    }\n\n    if (browserOptions.oldCapabilities && gridInfo.type !== 'testimEnterprise' && !lambdatestService?.isLambdatestRun()) {\n        opts.desiredCapabilities[optionsKey] = chromiumOptions;\n    }\n\n    if (browserOptions.w3cCapabilities || gridInfo.type === 'testimEnterprise') {\n        opts.desiredCapabilities[`${vendor}:${optionsKey}` as 'ms:edgeOptions' | 'goog:chromeOptions'] = chromiumOptions;\n    }\n\n    return opts;\n}\n\nconst buildChromiumOptions = _.memoize(_buildChromiumOptions, (opts, browserOptions, testRunConfig, customExtensionLocalLocation, gridInfo, predefinedTestimExtension) => {\n    // Only hash the attributes which are used in _buildChromiumOptions, some others (which are irrelevant) change and invalidate the hash\n    const stringOptsDesiredCapabilities = JSON.stringify(opts.desiredCapabilities);\n    const stringBrowserOptions = JSON.stringify(_.omit(browserOptions, 'runParams'));\n    const stringTestRunConfig = JSON.stringify(testRunConfig);\n    const stringGridInfoType = JSON.stringify(gridInfo.type);\n    return getHash(stringOptsDesiredCapabilities, stringBrowserOptions, stringTestRunConfig, customExtensionLocalLocation!, stringGridInfoType, predefinedTestimExtension!);\n});\n\n// list of content type that Firefox browser will not open the download popup and start the download automaticlly into Downloads folder\nconst FIREFOX_FILE_NEVER_ASK = [\n    'application/force-download',\n    'application/pdf',\n    'application/x-pdf',\n    'application/acrobat',\n    'applications/vnd.pdf',\n    'text/pdf',\n    'text/x-pdf',\n    'application/vnd.cups-pdf',\n];\n\nfunction buildFirefoxOptions(opts: SeleniumOpts, browserOptions: RunnerOptions, lambdatestService?: LambdatestService) {\n    const fireFoxPrefs = {\n        'pdfjs.disabled': true, //disable pdf viewer. Otherwise, the pdf viewer takes over when we download a pdf.\n    };\n\n    if (featureFlagsService.flags.autoSaveDownloadFileFireFox.isEnabled()) {\n        Object.assign(fireFoxPrefs, {\n            /* eslint-disable max-len */\n            'browser.helperApps.neverAsk.saveToDisk': FIREFOX_FILE_NEVER_ASK.join(','),\n            'browser.helperApps.neverAsk.openFile': FIREFOX_FILE_NEVER_ASK.join(','),\n            'browser.helperApps.alwaysAsk.force': false,\n            'browser.download.manager.useWindow': false, // A boolean value indicating whether or not to use the Downloads window (true) or display download status in the status bar (false) in the browser window.\n            'browser.download.manager.focusWhenStarting': false, // A boolean value that indicates whether or not to focus the Download Manager window when a download begins.\n            'browser.download.manager.alertOnEXEOpen': false, // A boolean value that indicates whether the UI Should alert the user about the dangers of opening (executing) an EXE. The user may check a \"don't ask\" box on the UI to toggle this.\n            'browser.download.manager.showWhenStarting': false, // A boolean value that indicates whether or not to show the Downloads window when a download begins.\n            'browser.download.manager.closeWhenDone': true, // As boolean value indicating whether or not the Downloads window should close automatically when downloads are completed.\n            'browser.download.manager.showAlertOnComplete': false, // A boolean value that indicates whether or not an alert should be shown when downloads complete.\n            /* eslint-enable max-len */\n        });\n    }\n\n    Object.assign(\n        opts.desiredCapabilities,\n        {\n            acceptInsecureCerts: true,\n            browserName: 'firefox',\n            marionette: true,\n            'moz:firefoxOptions': {\n                prefs: fireFoxPrefs,\n            },\n        },\n        lambdatestService?.isLambdatestRun() ? { enableCustomTranslation: true } : {},\n    );\n\n    if (browserOptions.disableCookiesSameSiteNoneRequiresSecure) {\n        opts.desiredCapabilities['moz:firefoxOptions']!.prefs['network.cookie.sameSite.noneRequiresSecure'] = false;\n    }\n\n    // more interesting options\n    // https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode#Debugging_headless_Firefox\n    if (browserOptions.headless) {\n        if (!opts.desiredCapabilities['moz:firefoxOptions']!.args) {\n            opts.desiredCapabilities['moz:firefoxOptions']!.args = [];\n        }\n        opts.desiredCapabilities['moz:firefoxOptions']!.args.push('-headless');\n    }\n\n    return opts;\n}\n\nfunction formatResolution(resolution: { width: number; height: number }) {\n    return `${resolution.width}x${resolution.height}`;\n}\n\nconst DEFAULT_RESOLUTION = { width: 1920, height: 1080 };\nconst LINUX_RESOLUTION = { width: 1920, height: 1200 };\nconst WINDOWS_RESOLUTION = { width: 2560, height: 1600 };\nconst MACOS_RESOLUTION = { width: 2360, height: 1770 }; //this is for MacOS - Sonoma,Ventura, Monterey, Big Sur, Catalina, Mojave, High Sierra, Sierra\nconst OSX_ELCAPITAN_OR_YOSEMITE_RESOLUTION = { width: 2048, height: 1536 };\nconst SUPPORTED_WINDOWS_VERSIONS = new Set(['7', '8', '8.1', '10', '11']); // windows XP is supported too but with the default resolution\n\nfunction getResolutionForSL(testRunConfig: any) {\n    const { platform } = testRunConfig;\n    if (!platform) return formatResolution(DEFAULT_RESOLUTION);\n\n    const windowsVersion = platform.split(' ')[1]; // in case this is actually windows OS\n    if (platform.startsWith('Windows') && SUPPORTED_WINDOWS_VERSIONS.has(windowsVersion)) return formatResolution(WINDOWS_RESOLUTION);\n    if (platform === 'Linux') return formatResolution(LINUX_RESOLUTION);\n    if (platform.startsWith('macOS')) return formatResolution(MACOS_RESOLUTION);\n    if (platform === 'OS X El Capitan' || platform === 'OS X Yosemite') return formatResolution(OSX_ELCAPITAN_OR_YOSEMITE_RESOLUTION);\n\n    return formatResolution(DEFAULT_RESOLUTION);\n}\nfunction buildSaucelabs(browserOptions: RunnerOptions, testName: string, testRunConfig: any): Partial<SaucelabsOptions> {\n    const { saucelabs } = browserOptions;\n    if (saucelabs?.browserVersion) {\n        // make sure to override browserVersion with the version from the run config incase it was provided from saucelabs options json file\n        saucelabs.version = saucelabs.browserVersion;\n    }\n    if (saucelabs?.username && saucelabs.accessKey) {\n        const sauceOptions: { 'sauce:options': { name: string; screenResolution?: string } } = { 'sauce:options': { name: testName } };\n        sauceOptions['sauce:options'].screenResolution = getResolutionForSL(testRunConfig.sl);\n        if (testRunConfig) {\n            testRunConfig.sl.version = testRunConfig.browserValue === 'safari' ? testRunConfig.sl.safari_version : testRunConfig.sl.version;\n            testRunConfig.sl.appiumVersion = (saucelabs as any).appiumVersion || testRunConfig.sl.appiumVersion;\n            const slToSend = cloneDeep(testRunConfig.sl);\n            delete slToSend.screenResolution;\n            if (testRunConfig.browserValue !== 'safari') delete slToSend.safari_version;\n            //saucelabs options from the json file will override the options from the run config if both exist\n            return _.merge(slToSend, sauceOptions, saucelabs);\n        }\n        //code should not reach here, we always have testRunConfig\n        return _.merge(sauceOptions, saucelabs);\n    }\n    return {};\n}\n\ninterface BrowserStackOpts {\n    'browserstack.user': string;\n    'browserstack.key': string;\n    os_version: string;\n    platform: string;\n    name: string;\n    'safari.options': { technologyPreview: boolean };\n    buildName: string;\n    projectName: string;\n}\n\ninterface BuildBrowserstackParams {\n    runnerOptions: RunnerOptions;\n    testId: string;\n    testName: string;\n    testRunConfig: any;\n    executionId: string;\n    executionName: string;\n    projectData: ProjectData;\n}\n\nfunction buildBrowserstack(params: BuildBrowserstackParams): Partial<BrowserStackOpts> {\n    const { runnerOptions } = params;\n\n    if (_.isEmpty(runnerOptions.browserstack)) {\n        return {};\n    }\n\n    const { projectData, testRunConfig, testId, testName, executionId, executionName } = params;\n    const baseOpts = {\n        buildName: `${executionName} - ${executionId}`,\n        sessionName: `${testName} - ${testId}`,\n        projectName: `${projectData.name} - ${projectData.projectId}`,\n        ...runnerOptions.browserstack,\n    };\n\n    if (!testRunConfig) {\n        return baseOpts;\n    }\n\n    testRunConfig.bs.browser_version = testRunConfig.browserValue === 'safari' ? testRunConfig.bs.safari_version : testRunConfig.bs.browser_version;\n    if (testRunConfig.browserValue === 'safari' && testRunConfig.bs.safari_version === '10') {\n        Object.assign(testRunConfig.bs, { 'safari.options': { technologyPreview: true } });\n    }\n\n    return { ...baseOpts, ...testRunConfig.bs };\n}\n\nfunction buildPerfecto(browserOptions: RunnerOptions) {\n    if (browserOptions.perfecto) {\n        return browserOptions.perfecto;\n    }\n    return {};\n}\n\ninterface ExperitestOpts {\n    accessKey: string;\n    browserVersion: string;\n    platformName: string;\n    seleniumScreenshot: boolean;\n    newSessionWaitTimeout: number;\n}\nfunction buildExperitest(browserOptions: RunnerOptions, browser: string, sessionTimeoutSec: number): Partial<ExperitestOpts> {\n    if (browserOptions.experitestToken) {\n        const isSafari = browser === 'safari';\n        return {\n            accessKey: browserOptions.experitestToken,\n            browserVersion: 'latest',\n            platformName: isSafari ? 'MAC' : 'WIN10',\n            //Workaround to Experitest bug in take screenshot in Safari browser\n            seleniumScreenshot: isSafari,\n            newSessionWaitTimeout: sessionTimeoutSec,\n        };\n    }\n\n    return {};\n}\n\nfunction buildHeaders(browserOptions: RunnerOptions, gridInfo: any = {}) {\n    const { gridData = {}, gridUsername, gridPassword } = browserOptions;\n    const username = gridUsername || gridData.user || gridInfo.user;\n    const password = gridPassword || gridData.key || gridInfo.key;\n\n    const headers = {} as { [header: string]: string | string[] };\n    if (username && password) {\n        headers.Authorization = utils.buildBasicHeader(username, password);\n    }\n\n    return headers;\n}\n\nexport interface SeleniumOptions {\n    projectData?: ProjectData;\n    overrideConfiguration?: any;\n    browserOptions: RunnerOptions;\n    testId?: string;\n    testName: string;\n    testRunConfig: any;\n    gridInfo: SerializedGrid;\n    customExtensionLocalLocation: string | undefined;\n    executionId: string;\n    executionName?: string;\n    testResultId: string;\n    lambdatestService?: LambdatestService;\n    printFinalCaps?: boolean;\n    mode?: RunnerMode;\n}\n\nexport function getDisabledChromeFeatures() {\n    return (featureFlagsService.flags.chromeArgsDisableFeatures.getValue() || '').split(',').filter((s) => s.trim().length);\n}\n\nexport function buildSeleniumOptions(options: SeleniumOptions) {\n    const {\n        overrideConfiguration,\n        browserOptions,\n        testId,\n        testName,\n        testRunConfig,\n        gridInfo,\n        customExtensionLocalLocation,\n        executionId,\n        executionName,\n        projectData,\n        testResultId,\n        lambdatestService,\n        mode,\n    } = options;\n\n    if (gridInfo.mode === 'local') {\n        const extensions: string[] = [];\n        const args = [...DEFAULT_CHROME_OPTIONS_ARGS];\n        const binaryLocation: { binary?: string } = {};\n\n        if (browserOptions.headless) {\n            args.push('--headless');\n        }\n\n        // @ts-expect-error These options don't exist in types, possibly only work with config file?\n        if (browserOptions.silentDebuggerExtensionApi) {\n            args.push('--silent-debugger-extension-api');\n        }\n\n        // @ts-expect-error These options don't exist in types, possibly only work with config file?\n        if (browserOptions.remoteDebuggingPort !== undefined) {\n            // @ts-expect-error These options don't exist in types, possibly only work with config file?\n            args.push(`--remote-debugging-port=${browserOptions.remoteDebuggingPort}`);\n        }\n\n        try {\n            const disableChromeFeatures = getDisabledChromeFeatures();\n            if (disableChromeFeatures.length) {\n                disableChromeFeatures.forEach((feature: string) => args.push(`--disable-features=${feature}`));\n            }\n        } catch {\n            // if we couldn't parse the flag, we don't want to block the run, silently fail into oblivion\n        }\n\n        if (browserOptions.chromeExtraArgs) {\n            browserOptions.chromeExtraArgs.forEach((arg) => args.push(`--${arg}`));\n        }\n\n        if (browserOptions.chromeBinaryLocation) {\n            binaryLocation.binary = browserOptions.chromeBinaryLocation;\n        }\n\n        if (mode !== CLI_MODE.SELENIUM) {\n            setTestimExtension(browserOptions, extensions, args, null, lambdatestService);\n        }\n        setCustomExtension(customExtensionLocalLocation, extensions, lambdatestService);\n\n        return {\n            logLevel: LOG_LEVEL,\n            capabilities: {\n                alwaysMatch: {\n                    'goog:chromeOptions': {\n                        args,\n                        extensions,\n                        ...binaryLocation,\n                    },\n                    browserName: 'chrome',\n                },\n                firstMatch: [{}],\n            },\n            path: '/wd/hub',\n            hostname: 'localhost',\n            port: 9515, // default chromedriver port\n        };\n    }\n\n    const { driverRequestTimeout, driverRequestRetries } = browserOptions;\n    const headers = buildHeaders(browserOptions, gridInfo);\n    let opts: SeleniumOpts = {\n        hostname: gridInfo.host!,\n        host: gridInfo.host!,\n        port: gridInfo.port || 4444,\n        path: gridInfo.path || '/wd/hub',\n        protocol: gridInfo.protocol || 'http',\n        logLevel: LOG_LEVEL,\n        connectionRetryTimeout: driverRequestTimeout,\n        connectionRetryCount: driverRequestRetries,\n        getSessionTimeout: Math.max(lambdatestService!.getSessionTimeout!, browserOptions.getSessionTimeout),\n        getSessionRetries: lambdatestService!.getSessionRetries || browserOptions.getSessionRetries,\n        deprecationWarnings: false,\n        desiredCapabilities: {\n            acceptSslCerts: true,\n            unexpectedAlertBehaviour: 'accept', // What the browser should do with an unhandled alert before throwing out the UnhandledAlertException - automatically click on accept\n        },\n        ...(!_.isEmpty(headers) && { headers }),\n        ...(browserOptions.proxyForGrid && { agent: new global.ProxyAgent!(global.proxyUri) as any }),\n    };\n\n    if (isDFGrid(gridInfo)) {\n        browserOptions.oldCapabilities = false;\n        browserOptions.w3cCapabilities = true;\n        opts.desiredCapabilities = {\n            unexpectedAlertBehaviour: 'accept',\n        };\n    }\n\n    if (browserOptions.disableNativeEvents) {\n        opts.desiredCapabilities.nativeEvents = false;\n    }\n\n    if (gridInfo.user && gridInfo.key) {\n        if (gridInfo.type === 'saucelabs') {\n            browserOptions.saucelabs ||= {} as any;\n            browserOptions.saucelabs.username ||= gridInfo.user;\n            browserOptions.saucelabs.accessKey ||= gridInfo.key;\n        }\n\n        if (gridInfo.type === 'browserstack') {\n            browserOptions.browserstack ||= {} as any;\n            browserOptions.browserstack['browserstack.user'] ||= gridInfo.user;\n            browserOptions.browserstack['browserstack.key'] ||= gridInfo.key;\n        }\n    }\n\n    if (gridInfo.key && (gridInfo.type as any) === 'perfecto') {\n        browserOptions.perfecto.securityToken = gridInfo.key;\n    }\n\n    const browserTimeoutSec = Number(browserOptions.browserTimeout / 1000);\n    const browser = browserOptions.browser || testRunConfig?.browserValue;\n\n    const browserstackOptions: BuildBrowserstackParams = {\n        runnerOptions: browserOptions,\n        testId: testId!,\n        testName,\n        testRunConfig,\n        executionId,\n        executionName: executionName!,\n        projectData: projectData!,\n    };\n\n    _.merge(\n        opts.desiredCapabilities,\n        buildSaucelabs(browserOptions, testName, testRunConfig),\n        buildBrowserstack(browserstackOptions),\n        buildPerfecto(browserOptions),\n        buildExperitest(browserOptions, browser, browserTimeoutSec),\n        lambdatestService?.getCapabilities(browserOptions, browser, executionId, testResultId, testName, testRunConfig, overrideConfiguration, mode),\n    );\n\n    let predefinedTestimExtension = null;\n    if (!browserOptions.ext && !browserOptions.extensionPath && gridInfo.host?.endsWith('.testim.io') && !browserOptions.canary && mode === CLI_MODE.EXTENSION &&\n        (browser === 'chrome' || (browser === 'edge-chromium' && featureFlagsService.flags.sendExtensionOnEdgeNonLinux.isEnabled()))) {\n        // This path is available only on linux - this code handles the situation for TESDEVOPS-1797\n        // TODO: make this less implicit and more intentional\n        predefinedTestimExtension = '/opt/testim-headless';\n    }\n\n    switch (browser) {\n        case 'chrome':\n        case 'edge-chromium':\n            opts = buildChromiumOptions(opts, browserOptions, testRunConfig, customExtensionLocalLocation, gridInfo, predefinedTestimExtension, lambdatestService, mode);\n            break;\n        case 'firefox':\n            opts = buildFirefoxOptions(opts, browserOptions, lambdatestService);\n            break;\n        case 'safari':\n        case 'safari technology preview':\n            opts = buildSafariOptions(opts, browser);\n            break;\n        default:\n            break;\n    }\n\n    _.merge(opts.desiredCapabilities, browserOptions.seleniumCapsFileContent);\n\n    try {\n        /**\n         * Targeted custom capabilities can be added to the desired capabilities object via the addCustomCapabilities FF.\n         * No targeting: { selenium_version: '3.141.59' }\n         * One level targeting (either grid provider, host, browser name or browser version): { \"devicefarm\": { selenium_version: '3.141.59' } }\n         * Two level targeting: { \"internet explorer\": { \"11\": { selenium_version: '3.141.59' } } }\n         */\n        const hostToProvider = {\n            'hub.lambdatest.com': 'lambdatest',\n            [featureFlagsService.flags.publicGridURL.getValue()]: 'testim',\n            'testgrid-devicefarm.us-west-2.amazonaws.com': 'devicefarm',\n        };\n        const byGrid = (capabilities: any) => capabilities[gridInfo.provider!] || capabilities[opts.host] || capabilities[hostToProvider[opts.host]];\n        const getTargetingGroup = (capabilities: any) =>\n            byGrid(capabilities) || capabilities[opts.desiredCapabilities?.browserName as any] || capabilities[opts.desiredCapabilities?.version as any] || capabilities || {};\n        const capabilities = JSON.parse(featureFlagsService.flags.addCustomCapabilities.getValue() || '{}');\n        const customCapabilities = getTargetingGroup(getTargetingGroup(capabilities));\n\n        if (Object.keys(customCapabilities).length) {\n            logger.info(`Adding custom capabilities: ${JSON.stringify(customCapabilities)}`);\n            Object.assign(opts.desiredCapabilities, customCapabilities);\n        }\n    } catch (error) {\n        logger.error('Failed to load custom capabilities', {\n            error,\n            customCapabilities: featureFlagsService.flags.addCustomCapabilities.getValue(),\n        });\n    }\n\n    if (opts.desiredCapabilities && !opts.capabilities) {\n        convertToNewCapabilitiesFormat(opts);\n        opts.capabilities = { alwaysMatch: opts.desiredCapabilities, firstMatch: [{}] };\n        delete (opts as any).desiredCapabilities;\n    }\n    opts.hostname = opts.host;\n    if (options.printFinalCaps) {\n        const originalAlwaysMatch = opts.capabilities?.alwaysMatch;\n        const printObj = JSON.parse(JSON.stringify(opts));\n        const alwaysMatch = printObj?.capabilities?.alwaysMatch;\n        // Truncate the extensions in case some are giant base64 strings (some will just be URLs)\n        const truncateExtensionString = (ext: string) => ext.substring(0, 80); // 80 semi-arbitrary, it includes our headless URL\n        (['goog:chromeOptions', 'ms:edgeOptions'] as const).forEach((key) => {\n            if (alwaysMatch?.[key]) {\n                alwaysMatch[key].extensions = originalAlwaysMatch?.[key]?.extensions?.map(truncateExtensionString);\n            }\n        });\n        if (alwaysMatch?.loadExtension) {\n            alwaysMatch.loadExtension = originalAlwaysMatch?.loadExtension?.map(truncateExtensionString);\n        }\n        const util = require('node:util');\n        // eslint-disable-next-line no-console\n        console.log(util.inspect(printObj, { showHidden: false, depth: null, colors: true })); // use util.inspect to print the object in a more readable way (mostly print nested objects)\n    }\n    return opts;\n}\n", "import type { getLogger } from '../commons/logger';\n\nexport function isOldProtocol(err: Error) {\n    return (\n        err.message?.match(/Command not found/) ||\n        err.message === 'HTTP method not allowed' ||\n        err.message?.toLowerCase() === 'unknown error' ||\n        err.message?.match(/Unknown timeout type/) ||\n        err.name === 'unknown command' ||\n        err.message?.match(/did not match a known command/) ||\n        err.message?.match(/Server returned HTTP response code: 405 for URL/) ||\n        // @ts-expect-error TODO: seleniumStack doesn't exist anymore\n        err.seleniumStack?.message === 'The arguments passed to a command are either invalid or malformed.' ||\n        err.message?.match(/Invalid timeout type specified: ms/) ||\n        err.message?.match(/\\.\\w* is not a function/)\n    );\n}\n\nexport function encodeForSafari(url: string | undefined | null, isSafari?: boolean, logger?: ReturnType<typeof getLogger>) {\n    if (!isSafari || !url) {\n        return url;\n    }\n\n    // don't touch the URL if it has %. Technically incorrect (% alone breaks Safari),\n    // but otherwise we can break other people's URLs. Replace spaces because it's safe.\n    if (url.includes('%')) {\n        return url.replace(/ /g, '%20');\n    }\n\n    try {\n        const isAlreadyEncoded = decodeURI(url) !== url;\n        if (isAlreadyEncoded) {\n            return url;\n        }\n        return encodeURI(url);\n    } catch (err) {\n        if (logger) {\n            logger.warn('tried to encode url but failed', { err, url });\n        }\n        return url;\n    }\n}\n", "/*\n * Copyright (C) 2017 Apple Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS\n * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n * THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// https://github.com/webdriverio/webdriverio/blob/master/packages/webdriverio/src/scripts/isElementDisplayed.js\n\n/**\n * check if element is visible\n * @param element element to check\n * @return true if element is within viewport\n */\nexport function isElementDisplayed(element: HTMLElement | null): boolean {\n    function nodeIsElement(node: Node): node is HTMLElement {\n        if (!node) {\n            return false;\n        }\n\n        return ([Node.ELEMENT_NODE, Node.DOCUMENT_NODE, Node.DOCUMENT_FRAGMENT_NODE] as number[]).includes(node.nodeType);\n    }\n\n    function parentElementForElement(el: Node) {\n        if (!el) {\n            return null;\n        }\n\n        return enclosingNodeOrSelfMatchingPredicate(el.parentNode, nodeIsElement);\n    }\n\n    function enclosingNodeOrSelfMatchingPredicate(targetNode: Node | null, predicate: (node: Node) => node is HTMLElement) {\n        for (let node = targetNode; node && node !== targetNode!.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n\n        return null;\n    }\n\n    function enclosingElementOrSelfMatchingPredicate(targetElement: Node | null, predicate: (el: Element) => boolean) {\n        for (let el = targetElement; el && el !== targetElement!.ownerDocument; el = parentElementForElement(el)) {\n            if (predicate(el as Element)) {\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    function cascadedStylePropertyForElement(el: Element | null, property: string): string | null {\n        if (!el || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (el instanceof DocumentFragment) {\n            el = (el as any as { host: HTMLElement }).host;\n        }\n\n        const computedStyle = window.getComputedStyle(el);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(el);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n\n    function elementSubtreeHasNonZeroDimensions(el: HTMLElement): boolean {\n        const boundingBox = el.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (el.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(el, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n\n        const cascadedOverflow = cascadedStylePropertyForElement(el, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(el.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n\n            return false;\n        });\n    }\n\n    function elementOverflowsContainer(el: HTMLElement) {\n        const cascadedOverflow = cascadedStylePropertyForElement(el, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n\n    function isElementSubtreeHiddenByOverflow(el: HTMLElement): boolean {\n        if (!el) {\n            return false;\n        }\n\n        if (!elementOverflowsContainer(el)) {\n            return false;\n        }\n\n        if (!el.childNodes.length) {\n            return false;\n        }\n\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(el.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    /** walk up the tree testing for a shadow root */\n    function isElementInsideShadowRoot(el: Node | null): boolean {\n        if (!el) {\n            return false;\n        }\n        if ((el.parentNode as any)?.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(el.parentNode);\n    }\n\n    // This is a partial re-implementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!element || (!isElementInsideShadowRoot(element) && !document.contains(element))) {\n        return false;\n    }\n\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const isSelect = (e: Node): e is HTMLSelectElement => (e as HTMLElement).tagName.toUpperCase() === 'SELECT';\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, isSelect);\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if ((element as HTMLInputElement).type === 'hidden') {\n                return false;\n            }\n            break;\n            // case 'MAP':\n            // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n\n        default:\n            break;\n    }\n\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => Number(cascadedStylePropertyForElement(e, 'opacity')) === 0);\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => cascadedStylePropertyForElement(e, 'display') === 'none');\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n\n    return true;\n}\n", "import Queue from 'promise-queue';\nimport * as webdriverio from 'webdriverio';\nimport * as config from '../commons/config';\nimport * as perf from '../commons/performance-logger';\nimport { extractElementId } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { W3C_ELEMENT_ID } from './constants';\nimport { isElementDisplayed } from './scripts/isElementDisplayed';\nimport { isOldProtocol, encodeForSafari } from './webDriverUtils';\nimport { SELENIUM_PERF_MARKS } from '../commons/SeleniumPerfStats';\nimport type { LegacyElement, W3CElement } from '../utils';\nimport type { SeleniumPerfStats } from '../commons/SeleniumPerfStats';\nimport type { ActionOffsets } from './webdriver';\n\nconst logger = getLogger('WebDriverApi');\n\nconst getViewportSizeHelper = function () {\n    return {\n        screenWidth: Math.floor(window.innerWidth || 0),\n        screenHeight: Math.floor(window.innerHeight || 0),\n    };\n};\n\nconst timeoutParamIndex = {\n    implicit: 0, pageLoad: 1, script: 2,\n};\n\nexport class WebdriverioWebDriverApi {\n    seleniumPerfStats?: SeleniumPerfStats;\n    client?: WebdriverIO.Browser;\n    queue!: Queue;\n    private testName?: string;\n    protected testResultId?: string;\n    protected readonly unsupportedActions = new Set<'execute' | 'executeAsync' | 'elementIdDisplayed' | 'timeouts' | 'keys' | 'windowHandleSize' | 'move' | 'submit'>();\n\n    get capabilities() {\n        return this.client?.capabilities;\n    }\n\n    get browserName() {\n        return (this.capabilities && 'browserName' in this.capabilities && (this.capabilities.browserName as string)?.toLocaleLowerCase()) || undefined;\n    }\n\n    windowHandleMaximize() {\n        return this.addToQueue(() => this.client?.maximizeWindow());\n    }\n\n    async rejectWithLog(err: any, func?: () => any): Promise<never> {\n        const { testName, testResultId } = this;\n        const crashingFunc = func ? func.toString().slice(0, 2000) : '';\n        logger.warn('error from selenium', {\n            err, testResultId, testName, crashingFunc,\n        });\n        throw err;\n    }\n\n    initQueueRequests() {\n        let maxConcurrent = Infinity;\n        if (this.isAndroid()) {\n            maxConcurrent = 1;\n        }\n        if (config.REQUESTS_QUEUE_SIZE !== undefined) {\n            maxConcurrent = config.REQUESTS_QUEUE_SIZE;\n        }\n        const maxQueue = Infinity;\n        this.queue = new Queue(maxConcurrent, maxQueue);\n    }\n\n    async addToQueue<T>(func: () => undefined | Promise<T>) {\n        const perfId = this.seleniumPerfStats?.markStart();\n        try {\n            return await this.queue.add(func as () => Promise<T>);\n        } catch (err) {\n            return this.rejectWithLog(err, func);\n        } finally {\n            this.seleniumPerfStats?.markEnd(perfId!);\n        }\n    }\n\n    async initClient(capabilities: webdriverio.RemoteOptions, testName?: string, testResultId?: string) {\n        this.testName = testName;\n        this.testResultId = testResultId;\n        // silence warning regarding `buttonPress` being deprecated\n        // @ts-expect-error not sure this is relevant with wdio7\n        capabilities.deprecationWarnings = false;\n        this.initQueueRequests();\n        perf.log('right before addToQueue');\n        const extUrl = (capabilities.capabilities as any).alwaysMatch?.loadExtension ||\n            (capabilities.capabilities as any).alwaysMatch?.loadExt ||\n            (capabilities.capabilities as any).alwaysMatch?.['goog:chromeOptions']?.extensions?.[0]?.slice(0, 80);\n        const perfId = this.seleniumPerfStats?.markStart(SELENIUM_PERF_MARKS.GET_BROWSER);\n        try {\n            await this.addToQueue(async () => {\n                logger.info('requesting browser', { testResultId, testName, extUrl });\n                perf.log('before this.client.init');\n                // add test-result-id to headers, used by EKS Grid router to route request to the browser based on test-result-id\n                capabilities.headers ||= {};\n                capabilities.headers['Test-Result-Id'] = testResultId ?? '';\n                this.client = await webdriverio.remote(capabilities);\n                this.logGridStatus(testResultId);\n            });\n            perf.log('after client init');\n        } finally {\n            this.seleniumPerfStats?.markEnd(perfId!, SELENIUM_PERF_MARKS.GET_BROWSER);\n        }\n    }\n\n    private async logGridStatus(testResultId?: string) {\n        if (!this.client) {\n            return;\n        }\n        const { sessionId } = this.client;\n        let browserNode: unknown = 'N/A';\n        let gridSlot: unknown = 'N/A';\n        let status;\n        try {\n            status = await this.client.status();\n            for (const nodes of status.nodes || []) {\n                for (const slot of nodes.slots || []) {\n                    if (slot?.session?.sessionId === sessionId) {\n                        browserNode = nodes;\n                        gridSlot = slot;\n                        break;\n                    }\n                }\n            }\n        } catch (error) {\n            if (error.message === 'unknown error') {\n                logger.info('grid status is not supported by the grid', { testResultId });\n                return;\n            }\n            logger.error('failed to get grid status', { error, testResultId });\n            return;\n        }\n        if (browserNode && typeof browserNode === 'object' && 'slots' in browserNode) {\n            delete browserNode?.slots; // there can be lots of slots, we don't want to log them\n        }\n        logger.info('grid status', { gridStatusMsg: status.message, ready: status.ready, browserNode, gridSlot, testResultId });\n    }\n\n    get isMobile() {\n        return this.client?.isMobile;\n    }\n\n    getSessionId() {\n        return this.client?.sessionId;\n    }\n\n    isChrome() {\n        return this.browserName === 'chrome';\n    }\n\n    isChromium() {\n        return this.isChrome() || this.isEdgeChromium();\n    }\n\n    isFirefox() {\n        return this.browserName === 'firefox';\n    }\n\n    isSafari() {\n        return this.browserName === 'safari' || this.browserName === 'safari technology preview';\n    }\n\n    isAndroid() {\n        return this.capabilities && 'platformName' in this.capabilities && (this.capabilities.platformName as string)?.toLocaleLowerCase() === 'android';\n    }\n\n    isEdgeChromium() {\n        const isOldEdge = this.capabilities && '_isOldEdge' in this.capabilities && this.capabilities._isOldEdge;\n        return this.browserName === 'microsoftedge' && !isOldEdge;\n    }\n\n    async execute<T extends (...args: any[]) => any = any>(script: T | string, ...args: Parameters<T>): Promise<{ value: Awaited<ReturnType<T>> }> {\n        const value = await this.addToQueue(async () => {\n            /* parameter check */\n            if ((typeof script !== 'string' && typeof script !== 'function')) {\n                throw new TypeError('number or type of arguments don\\'t agree with execute protocol command');\n            }\n\n            /* instances started as `multibrowserinstance` can't getting called with a function parameter, therefor we need to check if it starts with \"function () {\" */\n            if (typeof script === 'function') {\n                script = `return (${script}).apply(null, arguments)`;\n            }\n\n            const decorateErrorWithExecutedScript = (err: any) => {\n                Object.assign(err, { executedScript: script });\n                throw err;\n            };\n\n            const newEndpoint = () => this.client!.execute(script, args).catch(decorateErrorWithExecutedScript);\n            const oldEndpoint = () => this.client!.executeScript(script as string, args).catch(decorateErrorWithExecutedScript);\n\n            if (this.unsupportedActions.has('execute')) {\n                return newEndpoint();\n            }\n\n            args = args.map(arg => {\n                if (arg === null) {\n                    logger.warn('The function \"executeScript\" in webdriverio can no longer accept \"null\" as an argument, it was replaced with \"undefined\"', { script, args });\n                    return undefined;\n                }\n                return arg;\n            }) as Parameters<T>;\n\n            try {\n                return await oldEndpoint();\n            } catch (err) {\n                /** jsonwire command not supported try webdriver endpoint */\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.add('execute');\n                    return newEndpoint();\n                }\n\n                throw err;\n            }\n        });\n        return { value };\n    }\n\n    /**\n     * @param script - a script that must accept a callback, and call it when they finish running.\n     * @param args - the script arguments.\n     */\n    async executeAsync<T, TArgs extends any[]>(script: string | ((...args: [...innerArgs: TArgs, callback: (result?: T) => void]) => void), ...args: TArgs): Promise<{ value: T }> {\n        const value = await this.addToQueue(async () => {\n            /* parameter check */\n            if ((typeof script !== 'string' && typeof script !== 'function')) {\n                throw new TypeError('number or type of arguments don\\'t agree with execute protocol command');\n            }\n\n            /* instances started as `multibrowserinstance` can't getting called with a function parameter, therefor we need to check if it starts with \"function () {\" */\n            if (typeof script === 'function') {\n                script = `return (${script}).apply(null, arguments)`;\n            }\n\n            const newEndpoint = () => this.client!.executeAsync(script, ...args);\n            const oldEndpoint = () => this.client!.executeAsyncScript(script as string, args);\n\n            if (this.unsupportedActions.has('executeAsync')) {\n                return newEndpoint();\n            }\n\n            try {\n                return await oldEndpoint();\n            } catch (err) {\n                /** jsonwire command not supported try webdriver endpoint */\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.add('executeAsync');\n                    return newEndpoint();\n                }\n\n                throw err;\n            }\n        });\n        return { value };\n    }\n\n    async executeCDP(command: string, parameters: object | undefined = {}) {\n        if (!this.isChromium()) {\n            return undefined;\n        }\n        const result = await this.client?.sendCommandAndGetResult(command, parameters);\n        if (!result?.targetInfos) {\n            return [];\n        }\n        return result.targetInfos;\n    }\n\n    async takeScreenshot() {\n        const perfId = this.seleniumPerfStats?.markStart(SELENIUM_PERF_MARKS.GET_SCREENSHOT);\n        try {\n            const value = await this.addToQueue(() => this.client?.takeScreenshot());\n            return { value };\n        } finally {\n            this.seleniumPerfStats?.markEnd(perfId!, SELENIUM_PERF_MARKS.GET_SCREENSHOT);\n        }\n    }\n\n    async takeElementScreenshot(element: W3CElement | LegacyElement) {\n        const perfId = this.seleniumPerfStats!.markStart(SELENIUM_PERF_MARKS.GET_SCREENSHOT);\n        try {\n            return await this.addToQueue(() => this.client!.takeElementScreenshot(extractElementId(element)));\n        } finally {\n            this.seleniumPerfStats!.markEnd(perfId, SELENIUM_PERF_MARKS.GET_SCREENSHOT);\n        }\n    }\n\n    async getElementBySelector(selector: string) {\n        const value = await this.addToQueue(() => this.client?.$(selector));\n        return { value };\n    }\n\n    elementIdDisplayed(elementId: string) {\n        return this.addToQueue(async () => {\n            const oldEndpoint = () => this.client!.isElementDisplayed(elementId).then(value => ({ value }));\n            const newEndpoint = () => this.execute(isElementDisplayed, { ELEMENT: elementId, [W3C_ELEMENT_ID]: elementId } as unknown as HTMLElement);\n\n            if (this.unsupportedActions.has('elementIdDisplayed')) {\n                return newEndpoint();\n            }\n\n            try {\n                return await oldEndpoint();\n            } catch (err) {\n                /** jsonwire command not supported try webdriver endpoint */\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.add('elementIdDisplayed');\n                    return newEndpoint();\n                }\n\n                throw err;\n            }\n        });\n    }\n\n    windowHandles() {\n        return this.addToQueue(() => this.client?.getWindowHandles().then(value => ({ value })));\n    }\n\n    async url(url: string | null | undefined) {\n        if (!url) {\n            return undefined;\n        }\n\n        return await this.addToQueue(() => this.client?.url(encodeForSafari(url, this.isSafari(), logger)!));\n    }\n\n    reloadTab() {\n        return this.addToQueue(() => this.client?.refresh());\n    }\n\n    source() { // used?\n        return this.addToQueue(() => this.client?.getPageSource());\n    }\n\n    timeouts(type: keyof typeof timeoutParamIndex, ms: number) {\n        return this.addToQueue(async () => {\n            const oldEndpoint = () => {\n                const params = [];\n                params[timeoutParamIndex[type]] = ms;\n                return this.client!.setTimeouts(...params);\n            };\n\n            const newEndpoint = () => this.client!.setTimeout({ [type]: ms });\n\n            if (this.unsupportedActions.has('timeouts')) {\n                return newEndpoint();\n            }\n\n            try {\n                return await oldEndpoint();\n            } catch (err) {\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.add('timeouts');\n                    return newEndpoint();\n                }\n                throw err;\n            }\n        });\n    }\n\n    scroll(xoffset: number | undefined, yoffset: number | undefined) {\n        xoffset = typeof xoffset === 'number' ? xoffset : 0;\n        yoffset = typeof yoffset === 'number' ? yoffset : 0;\n\n        const scroll = function (x: number, y: number) {\n            window.scrollTo(x, y);\n        };\n\n        return this.execute(scroll, xoffset, yoffset);\n    }\n\n    async setValue(element: W3CElement | LegacyElement, value: string | string[]) {\n        await this.elementIdClear(extractElementId(element));\n        return await this.elementIdValue(extractElementId(element), value);\n    }\n\n    async getViewportSize(prop?: never): Promise<{ width: number; height: number }>;\n    async getViewportSize(prop: 'width' | 'height'): Promise<number>;\n    async getViewportSize(prop?: 'width' | 'height') {\n        const res = await this.execute(getViewportSizeHelper);\n        if (typeof prop === 'string' && /(width|height)/.test(prop)) {\n            const propToGet = `screen${prop.slice(0, 1).toUpperCase()}${prop.slice(1)}` as keyof typeof res['value'];\n            return res.value[propToGet];\n        }\n        return {\n            width: res.value.screenWidth || 0,\n            height: res.value.screenHeight || 0,\n        };\n    }\n\n    async elementIdValue(elementId: string, value: string | string[]) {\n        const stringValue = Array.isArray(value) ? value.join() : value;\n        const v = await this.addToQueue(() => this.client?.elementSendKeys(elementId, stringValue));\n        return ({ value: v });\n    }\n\n    elementIdClear(elementId: string) {\n        return this.addToQueue(() => this.client?.elementClear(elementId));\n    }\n\n    submitForm(element: W3CElement | LegacyElement) {\n        return this.addToQueue(() => this.client?.elementSubmit(extractElementId(element)));\n    }\n\n    submitFormManually(element: webdriverio.Selector) {\n        return this.addToQueue(async () => {\n            const form = await this.client?.$(element);\n            const button = await form!.$('button[type=\"submit\"]');\n\n            if (await button.isExisting()) {\n                return button.click();\n            }\n\n            const input = await form!.$('input:last-of-type');\n            // @ts-expect-error bad typing\n            return input.keys('Enter');\n        });\n    }\n\n    private async findElementAndPress(element: webdriverio.Selector, offsets: ActionOffsets, button: 'right' | 'left') {\n        const value = await this.addToQueue(() => this.client?.$(element).click({\n            x: Math.floor(offsets.clickOffset.x),\n            y: Math.floor(offsets.clickOffset.y),\n            button,\n        }));\n\n        return { value };\n    }\n\n    protected _rightClick(element: webdriverio.Selector, offsets: ActionOffsets) {\n        return this.findElementAndPress(element, offsets, 'right');\n    }\n\n    protected _leftClick(element: webdriverio.Selector, offsets: ActionOffsets) {\n        return this.findElementAndPress(element, offsets, 'left');\n    }\n\n    elementIdClick(elementId: string) {\n        return this.addToQueue(() => this.client?.elementClick(elementId));\n    }\n\n    sendKeyboardShortcut(shortcutKeys: string[]) {\n        return this.addToQueue(() => this.client?.keys(shortcutKeys));\n    }\n\n    async actions(actions: object[]) {\n        const value = await this.addToQueue(() => this.client?.performActions(actions));\n        return { value };\n    }\n\n    async doDoubleClick(element: webdriverio.Selector) {\n        const value = await this.addToQueue(() => this.client?.$(element).doubleClick());\n        return { value };\n    }\n\n    protected async _dragAndDrop(sourceSelector: webdriverio.Selector, destinationSelector: WebdriverIO.Element) {\n        const value = await this.addToQueue(() => this.client?.$(sourceSelector).dragAndDrop(destinationSelector));\n        return { value };\n    }\n\n    async buttonDown() {\n        const value = await this.addToQueue(() => this.client?.buttonDown());\n        return { value };\n    }\n\n    async buttonUp() {\n        const value = await this.addToQueue(() => this.client?.buttonUp());\n        return { value };\n    }\n\n    moveTo(element: webdriverio.Selector, xoffset?: number, yoffset?: number) {\n        const data: webdriverio.MoveToOptions = {\n            ...(typeof xoffset === 'number' && { xOffset: xoffset }),\n            ...(typeof yoffset === 'number' && { yOffset: yoffset }),\n        };\n\n        // workaround change offset to x=1 y=1 on Safari\n        // TODO: this will always be true in safari :/\n        if (this.isSafari() && !Object.hasOwn(data, 'yoffset')) {\n            data.yOffset = 1;\n        }\n\n        // TODO: this will always be true in safari :/\n        if (this.isSafari() && !Object.hasOwn(data, 'xoffset')) {\n            data.xOffset = 1;\n        }\n\n        return this.addToQueue(async () => {\n            if (!this.client) {\n                throw new Error('The client is not initialized');\n            }\n\n            const elem = await this.client.$(element);\n            await this.client.action('pointer')\n                .move({ origin: elem })\n                .perform();\n        });\n    }\n\n    async uploadFile(localFileLocation: string) {\n        const value = await this.addToQueue(() => this.client?.uploadFile(localFileLocation));\n        return { value };\n    }\n\n    getUrl() {\n        return this.addToQueue(() => this.client?.getUrl());\n    }\n\n    getTitle() {\n        return this.addToQueue(() => this.client?.getTitle());\n    }\n\n    async windowHandleSize(size?: never): Promise<{ value: { width: number; height: number } }>;\n    async windowHandleSize(size?: { width: number; height: number }): Promise<{ value: void }>;\n    async windowHandleSize(size?: { width: number; height: number }): Promise<{ value: any }> {\n        const value = await this.addToQueue(async () => {\n            let newEndpoint: () => Promise<any> = async () => await this.client!.getWindowSize();\n            let oldEndpoint: () => Promise<any> = async () => await this.client!._getWindowSize();\n\n            if (size?.width && size?.height) {\n                const width = Math.abs(size.width);\n                const height = Math.abs(size.height);\n                newEndpoint = async () => await this.client!.setWindowSize(width, height);\n                oldEndpoint = async () => await this.client!._setWindowSize(width, height);\n            }\n\n            if (this.unsupportedActions.has('windowHandleSize')) {\n                return newEndpoint();\n            }\n\n            try {\n                return await oldEndpoint();\n            } catch (err) {\n                /** use W3C path if old path failed */\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.add('windowHandleSize');\n                    return newEndpoint();\n                }\n\n                throw err;\n            }\n        });\n        return { value };\n    }\n\n    setCookie(name: string, value: string, domain: string | undefined, httpOnly: boolean | undefined, secure: boolean | undefined, path: string | undefined, expiry: number | undefined) {\n        return this.addToQueue(() => this.client?.setCookies({\n            name,\n            value,\n            domain,\n            httpOnly,\n            secure,\n            path,\n            expiry: expiry ? Math.floor(expiry) : expiry,\n        }));\n    }\n\n    getCookie(name: string | string[]) {\n        return this.addToQueue(async () => {\n            const res = (await this.client?.getCookies(name)) ?? [];\n            return res || (typeof name === 'string' ? null : []);\n        });\n    }\n\n    deleteCookie(name: string) { // used?\n        return this.addToQueue(() => this.client?.deleteCookie(name));\n    }\n\n    isVisibleWithinViewport(selector: webdriverio.Selector) { // unused?\n        return this.addToQueue(() => this.client?.$(selector).isDisplayedInViewport());\n    }\n\n    getCurrentTabId() {\n        return this.addToQueue(() => this.client?.getWindowHandle());\n    }\n\n    frame(id: object | null = null) {\n        return this.addToQueue(() => this.client?.switchToFrame(id));\n    }\n\n    switchTab(tabId: string) {\n        return this.addToQueue(() => this.client?.switchToWindow(tabId));\n    }\n\n    alertAccept() {\n        return this.addToQueue(() => this.client?.acceptAlert());\n    }\n\n    log(type = 'browser') { // used?\n        return this.addToQueue(() => this.client?.getLogs(type));\n    }\n\n    async end() {\n        try {\n            if (this.client) {\n                await this.executeAsync(async (done) => {\n                    await window.TSTA?.gracefulShutdown?.();\n                    done(true);\n                });\n            }\n        } catch (error) {\n            logger.warn('error while trying to shutdown gracefully', { error });\n        }\n        this.unsupportedActions.clear();\n        if (!this.queue) {\n            return undefined;\n        }\n        return await this.addToQueue(() => this.client?.deleteSession());\n    }\n\n    async forceEnd() {\n        this.unsupportedActions.clear();\n        if (!this.client) {\n            return undefined;\n        }\n        return await this.client.deleteSession();\n    }\n\n    touchAction(attr: webdriverio.TouchActions) { // unused?\n        return this.addToQueue(() => this.client?.touchAction(attr));\n    }\n\n    pressKeycode(keyCode: number) {\n        return this.addToQueue(() => this.client?.pressKeyCode(keyCode));\n    }\n\n    setImmediateValue(elementId: string, text: string) { // unused?\n        return this.addToQueue(() => this.client?.setValueImmediate(elementId, text));\n    }\n\n    elementIdText(elementId: string) { //used?\n        return this.addToQueue(() => this.client?.getElementText(elementId));\n    }\n\n    async isAppInstalled(packageName: string) { // unused?\n        const isInstalled = await this.addToQueue(() => this.client?.isAppInstalled(packageName));\n        logger.info(`is app (${packageName}) installed?`, { isInstalled });\n        return { value: isInstalled };\n    }\n\n    launch() {\n        return this.addToQueue(() => this.client?.launchApp());\n    }\n\n    context(id: string) {\n        return this.addToQueue(() => this.client?.switchContext(id));\n    }\n\n    elementIdLocation(elementId: string) {\n        return this.addToQueue(() => this.client?.getElementLocation(elementId));\n    }\n}\n", "import { join, resolve } from 'path';\nimport { sessionPlayerLoggerFormatter } from './logger';\n\nexport const options: { playerPath: string | undefined } = { playerPath: undefined };\n\nlet sessionPlayerInit: import('clickim/src/background/sessionPlayerInit').SessionPlayerInit | undefined;\n\nexport const getSessionPlayer = () => {\n    if (sessionPlayerInit) {\n        return sessionPlayerInit;\n    }\n    const perf = require('./performance-logger') as typeof import('./performance-logger');\n\n    perf.log('getSessionPlayerRequire start');\n    const { getSessionPlayerFolder } = require('./prepareRunnerAndTestimStartUtils') as typeof import('./prepareRunnerAndTestimStartUtils');\n\n    const testimAppDataFolder = getSessionPlayerFolder();\n    const path = options.playerPath ? resolve(options.playerPath, 'src/background/sessionPlayerInit.ts') : join(testimAppDataFolder, 'sessionPlayer.js');\n\n    const sessionPlayer = require(path) as import('clickim/src/background/sessionPlayerInit').SessionPlayerInit; // eslint-disable-line import/no-dynamic-require\n\n    perf.log('getSessionPlayerRequire end');\n    sessionPlayerInit = sessionPlayer;\n    if (process.env.LOGGER_CONSOLE && process.env.DEBUG && sessionPlayer.setLoggerFormatter) {\n        sessionPlayer.setLoggerFormatter(sessionPlayerLoggerFormatter);\n    }\n    return sessionPlayer;\n};\n", "import type { ExcludesFalseyTypeGuard } from '../../../utils';\nimport type { DoubleClickEventData } from '../mouseStepAction';\nimport type { DispatchFocusFn } from './focusElement';\nimport type { IMouseEvent } from 'clickim/src/common/models/mouseStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\ndeclare const dispatchFocus: DispatchFocusFn;\n\nexport const doubleClick = function (eventData: DoubleClickEventData, done: (data: { status: 'done'; success: boolean; result?: string }) => void) {\n    const POINTER_EVENTS = ['pointerup', 'pointerdown', 'pointermove'];\n    const element = getLocatedElement(eventData.locatedElement);\n\n    if (!element) {\n        throw new Error('element not found');\n    }\n    const events = eventData.events;\n\n    const successObject = {\n        status: 'done' as const,\n        success: true,\n    };\n\n    window.__unloadNavigator = function () { done(successObject); };\n\n    const getEventPosition = function (userEvent: IMouseEvent) {\n        function isWithinBounds(start: number, end: number, point: number) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {} as Partial<NonNullable<IMouseEvent['pointerPosition']>>;\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    };\n\n    const getPointerEventDictionary = function (clientX: number, clientY: number): PointerEventInit {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            bubbles: true,\n            cancelable: true,\n            button: 0,\n            pointerType: 'mouse',\n            isPrimary: true,\n        };\n    };\n\n    const createPointerEvent = function (eventType: string, clientX: number, clientY: number) {\n        if (!window.PointerEvent) {\n            return undefined;\n        }\n        const eventProperties = getPointerEventDictionary(clientX, clientY);\n        return new window.PointerEvent(eventType, eventProperties);\n    };\n\n    const createMouseEvent = function (eventType: string, clientX: number, clientY: number) {\n        const event = document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView!, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            false, /* ctrl */\n            false, /* alt */\n            false, /* shift */\n            false, /* meta */\n            0, /* button */\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    };\n\n    const findEffectiveActiveElement = function () {\n        let activeElement = document.activeElement!;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    };\n\n    const getEvent = function (userEventData: IMouseEvent) {\n        const pos = getEventPosition(userEventData);\n        const eventType = userEventData.event;\n        if (POINTER_EVENTS.includes(eventType)) {\n            return createPointerEvent(eventType, pos.x, pos.y);\n        }\n        return createMouseEvent(eventType, pos.x, pos.y);\n    };\n\n    try {\n        events\n            .map((userEventData) => getEvent(userEventData))\n            .filter(Boolean as any as ExcludesFalseyTypeGuard)\n            .forEach((event) => element.dispatchEvent(event));\n        const oldActiveElement = findEffectiveActiveElement();\n        dispatchFocus(eventData.elementToFocusLocatedElement, oldActiveElement);\n        if (window.__unloadNavigator) {\n            window.removeEventListener('unload', window.__unloadNavigator);\n            // @ts-expect-error badly typed\n            window.__unloadNavigator = null;\n        }\n        done(successObject);\n    } catch (e) {\n        if (window.__unloadNavigator) {\n            window.removeEventListener('unload', window.__unloadNavigator);\n            // @ts-expect-error badly typed\n            window.__unloadNavigator = null;\n        }\n        done({\n            status: 'done',\n            result: e.toString(),\n            success: false,\n        });\n    }\n};\n", "import type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\n\nexport type DispatchFocusFn = typeof dispatchFocus;\nexport function dispatchFocus(targetElement: false | ILocatedElement | string | undefined, oldActiveElement: Element | null) {\n    function createFocusEvent(eventName: string) {\n        const event = document.createEvent('HTMLEvents');\n        // TODO we want to use new Event, but mootools (used by zuora which is used by jfrog) overrides window.Event and throws an error\n        event.initEvent(eventName, true, false);\n        return event;\n    }\n\n    function findEffectiveActiveElement() {\n        let activeElement = document.activeElement!;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    }\n\n    function setFocus(element: Element, _oldActiveElement: Element | null) {\n        if (_oldActiveElement) {\n            _oldActiveElement.dispatchEvent(createFocusEvent('focusout'));\n            _oldActiveElement.dispatchEvent(createFocusEvent('blur'));\n        }\n        element.dispatchEvent(createFocusEvent('focusin'));\n        element.dispatchEvent(createFocusEvent('focus'));\n        if (typeof (element as HTMLElement).focus === 'function') {\n            (element as HTMLElement).focus();\n        }\n        const currentActiveElement = findEffectiveActiveElement();\n        if (_oldActiveElement && currentActiveElement === _oldActiveElement && typeof (_oldActiveElement as HTMLElement).blur === 'function') {\n            (_oldActiveElement as HTMLElement).blur();\n        }\n    }\n\n    if (targetElement) {\n        const elementToFocus = getLocatedElement(targetElement);\n        if (elementToFocus && (elementToFocus !== oldActiveElement)) {\n            try {\n                setFocus(elementToFocus, oldActiveElement);\n            } catch (e) {\n                // ignore\n            }\n        }\n    } else if (oldActiveElement && typeof (oldActiveElement as HTMLElement).blur === 'function') {\n        (oldActiveElement as HTMLElement).blur();\n    }\n}\n", "import * as _ from 'lodash';\nimport * as utils from '../utils';\nimport * as perf from '../commons/performance-logger';\nimport * as desiredCapabilitiesBuilder from '../commons/testimDesiredCapabilitiesBuilder';\nimport pRetry from 'p-retry';\nimport parser from 'ua-parser-js';\nimport { W3C_ELEMENT_ID } from './constants';\nimport { getLogger } from '../commons/logger';\nimport { isOldProtocol } from './webDriverUtils';\nimport { WebdriverioWebDriverApi as WebDriverApi } from './WebdriverioWebDriverApi';\nimport { InvalidGridCredentials, SeleniumCrashError, WebdriverCapabilitiesError } from '../errors';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { SELENIUM_PERF_MARKS } from '../commons/SeleniumPerfStats';\nimport type { RunnerMode } from '../runners/runnerUtils';\nimport type { SeleniumPerfStats } from '../commons/SeleniumPerfStats';\nimport type { RemoteOptions } from 'webdriverio';\nimport type { ProjectData, RunnerOptions } from '../runOptions';\nimport type { TabService } from './services/tabService';\nimport type { SerializedGrid } from '../services/gridService';\nimport type { SeleniumTarget } from './stepActions/stepAction';\nimport type { LambdatestService } from '../services/lambdatestService';\nimport type { DnDRectsAndOffsets, DoubleClickEventData } from './stepActions/mouseStepAction';\nimport type { ISerializedStep } from 'clickim/src/common/models/step';\nimport type { LocateStep } from 'clickim/src/common/models/locateStep';\nimport type { VisibilityInfo } from 'clickim/src/background/visibilityUtils';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\nimport type { TestRunHandler } from 'src/testRunHandler';\n\nconst logger = getLogger('webdriver');\nconst [LEFT, RIGHT] = [0, 2];\nconst { extractElementId, getCdpAddressForHost } = utils;\n\nconst codeSnippets = () => {\n    const sessionPlayer = (require('../commons/getSessionPlayerRequire') as typeof import('../commons/getSessionPlayerRequire')).getSessionPlayer();\n    return sessionPlayer.codeSnippets;\n};\nconst locatorBuilderUtils = () => {\n    const sessionPlayer = (require('../commons/getSessionPlayerRequire') as typeof import('../commons/getSessionPlayerRequire')).getSessionPlayer();\n    return sessionPlayer.locatorBuilderUtils;\n};\nconst playerUtils = () => {\n    const sessionPlayer = (require('../commons/getSessionPlayerRequire') as typeof import('../commons/getSessionPlayerRequire')).getSessionPlayer();\n    return sessionPlayer.utils;\n};\nconst positionUtils = () => {\n    const sessionPlayer = (require('../commons/getSessionPlayerRequire') as typeof import('../commons/getSessionPlayerRequire')).getSessionPlayer();\n    return sessionPlayer.positionUtils;\n};\n\nasync function getCdpAddress(initResult?: unknown) {\n    try {\n        // @ts-expect-error initResult seems to always be void\n        const debuggerHost = initResult?.value?.['goog:chromeOptions']?.debuggerAddress;\n        if (!debuggerHost) {\n            return undefined;\n        }\n        return await getCdpAddressForHost(debuggerHost);\n    } catch (e) {\n        logger.info('Error getting cdpAddress', e);\n        return undefined;\n    }\n}\n\nexport interface ActionOffsets {\n    frameOffset: { x: number; y: number };\n    clickOffset: { x: number; y: number };\n    rect: VisibilityInfo;\n}\n\nexport interface InitOptions {\n    projectData?: ProjectData;\n    overrideConfiguration?: any;\n    browserOptions: RunnerOptions;\n    testId?: string;\n    testName: string;\n    testRunConfig: TestRunHandler['runConfig'];\n    gridInfo: SerializedGrid;\n    customExtensionLocalLocation: string | undefined;\n    executionId: string;\n    executionName?: string;\n    testResultId: string;\n    seleniumPerfStats?: SeleniumPerfStats;\n    fastInit?: boolean;\n    lambdatestService?: LambdatestService;\n    printFinalCaps?: boolean;\n    mode?: RunnerMode;\n}\n\nexport class WebDriver extends WebDriverApi {\n    public tabService?: TabService;\n    public cdpUrl?: string;\n    private started = false;\n    private keepAliveTimer: NodeJS.Timeout | null = null;\n    private _isAlive = false;\n    private _keepAliveRequests: { start: number; id: string; end?: number; error?: number }[] = [];\n    private browserClosedCallbacks: Array<(err: any) => any> = [];\n    private browserClosedFailedKeepAlives = 0;\n    private ignoreHiddenTagsText = false;\n    public browserAndOS: { os: string; browserMajor: number; browser: string; userAgent: string; browserVersion?: string } | null = null;\n    private ignoreVisibility?: boolean;\n\n    public getIgnoreVisibility() {\n        return this.ignoreVisibility;\n    }\n\n    public setIgnoreVisibility(shouldIgnore: boolean) {\n        this.ignoreVisibility = shouldIgnore;\n    }\n\n    public registerToClosedBrowser(callback: (err: any) => any) {\n        this.browserClosedCallbacks.push(callback);\n    }\n\n    public unregisterToClosedBrowser(callback: (err: any) => any) {\n        this.browserClosedCallbacks = this.browserClosedCallbacks.filter(cb => cb !== callback);\n    }\n\n    public async init(options: InitOptions) {\n        // Deconstructing the options object to avoid passing it to the constructor\n        const {\n            projectData,\n            overrideConfiguration,\n            browserOptions,\n            testId,\n            testName,\n            testRunConfig,\n            gridInfo,\n            customExtensionLocalLocation,\n            executionId,\n            executionName,\n            testResultId,\n            seleniumPerfStats,\n            fastInit,\n            lambdatestService,\n            printFinalCaps,\n            mode,\n        } = options;\n\n        this.browserClosedFailedKeepAlives = 0;\n        this.ignoreHiddenTagsText = Boolean(browserOptions?.company?.activePlan?.premiumFeatures?.ignoreHiddenTagsText);\n        this.browserClosedCallbacks = [];\n\n        const capabilities = desiredCapabilitiesBuilder.buildSeleniumOptions({\n            projectData,\n            browserOptions,\n            testId,\n            testName,\n            testRunConfig,\n            gridInfo,\n            customExtensionLocalLocation,\n            executionId,\n            executionName,\n            testResultId,\n            lambdatestService,\n            overrideConfiguration,\n            printFinalCaps,\n            mode,\n        });\n        if ((capabilities as any).desiredCapabilities) {\n            delete (capabilities as any).desiredCapabilities.marionette;\n        }\n        if (capabilities.capabilities) {\n            delete (capabilities.capabilities.alwaysMatch as any).marionette;\n        }\n\n        this.initUnsupportedActions(lambdatestService?.isLambdatestRun());\n        this.browserAndOS = null;\n        this.seleniumPerfStats = seleniumPerfStats;\n        const driverDelay = fastInit ? 0 : 1500;\n        const focus = fastInit ? (() => null) : () => this.executeJS<() => void>('window.focus()');\n        try {\n            perf.log('before initClient in webdriver.js init');\n            const initResult = await this.initClient(capabilities as RemoteOptions, testName, testResultId);\n            perf.log('after initResult before getCdpAddress in init');\n            this.cdpUrl = await getCdpAddress(initResult);\n            perf.log('after getCdpAddress in webdriver.js init');\n            logger.info(`init new session testName: ${testName}`, { sessionId: this.getSessionId(), testResultId });\n            await utils.delay(driverDelay);\n            if (!featureFlagsService.flags.dontFocusOnInit.isEnabled()) {\n                await focus();\n            }\n            perf.log('after focus and delay in webdriver.js init');\n        } catch (err) {\n            // Don't log the extension as it's a huge base64 string\n            // (webdriver still stringifies the capabilities object in some of the errors \uD83D\uDE14)\n            const capabilitiesAsString = JSON.stringify(\n                _.omit(\n                    capabilities,\n                    'extensions',\n                    'capabilities.extensions',\n                    'capabilities.capabilities.extensions',\n                    'capabilities.alwaysMatch.goog:chromeOptions.extensions',\n                ),\n            );\n            logger.error('failed to init webdriver', { err, capabilitiesAsString });\n            const isFreeCompany = browserOptions?.company?.activePlan?.plan === 'free';\n            if (err.stack?.includes('at startWebDriverSession') && err.message?.startsWith('Failed to create session') && err.message?.includes('Timeout awaiting \\'request\\'') && isFreeCompany) {\n                throw new Error('Our free grids are in full capacity, please try again or upgrade to our Professional plan');\n            }\n            if (/Invalid username or password/.test(err.message)) {\n                throw new InvalidGridCredentials(err.message);\n            }\n            if (/capabilit(y|ies)/.test(err.message)) {\n                throw new WebdriverCapabilitiesError(err.message);\n            }\n            if (/403 Forbidden/.test(err.message)) {\n                throw new Error('Grid Access Denied');\n            }\n            if (/Browser_Version not supported/.test(err.message)) { // example: \"Browser/Browser_Version not supported\"\n                throw new Error('Browser or Browser version not supported');\n            }\n            throw new Error(`Failed to init client driver: ${err.message}`);\n        }\n    }\n\n    private initUnsupportedActions(isLambdatestRun?: boolean) {\n        if (!isLambdatestRun) {\n            return;\n        }\n        this.unsupportedActions.add('move');\n    }\n\n    public isAlive() {\n        return this._isAlive;\n    }\n\n    public maxKeepAliveGap() {\n        const slidingPairsWindow = (arr: number[]) => _.zip(arr.slice(0, -1), arr.slice(1));\n        const startTimeArray = this._keepAliveRequests.map(({ start }) => start).filter(Boolean);\n        const timeGaps = slidingPairsWindow(startTimeArray).map(([a, b]) => b! - a!);\n        return Math.max(...timeGaps);\n    }\n\n    private isClosedBrowserError(err: any) {\n        if (['session-not-found', 'no such window', 'invalid session id'].includes(err?.name)) {\n            return true;\n        }\n        const messagesIndicatingBrowserClosed = [\n            'CLIENT_STOPPED_SESSION',\n            'BROWSER_TIMEOUT',\n            'was terminated due to TIMEOUT',\n            'window was already closed',\n            'chrome not reachable',\n            'not connected to DevTools',\n        ];\n        return messagesIndicatingBrowserClosed.some(msg => err.message.includes(msg));\n    }\n\n    public start() {\n        if (this.started) {\n            return;\n        }\n        this.started = true;\n        const keepAlive = async () => {\n            const createKeepAliveRequestData = (id: string) => this._keepAliveRequests.push({ start: Date.now(), id });\n            const updateKeepAliveRequestData = (field: 'end' | 'error', id: string) => {\n                const req = this._keepAliveRequests.find(item => item.id === id);\n                if (!req) {\n                    return;\n                }\n                req[field] = Date.now();\n            };\n\n            function checkKeepAliveScript() {\n                // @ts-expect-error unhappy with declare in a function\n                declare let window: Window & { getTestimStatus?(): string };\n                return window.getTestimStatus?.();\n            }\n\n            if (this.queue.getQueueLength() > 0) {\n                return;\n            }\n\n            const requestId = utils.guid();\n            createKeepAliveRequestData(requestId);\n            try {\n                await this.executeJS(checkKeepAliveScript);\n                this._isAlive = true;\n                updateKeepAliveRequestData('end', requestId);\n                this.browserClosedFailedKeepAlives = 0;\n            } catch (err) {\n                updateKeepAliveRequestData('error', requestId);\n                if (err.name === 'unexpected alert open') {\n                    this.browserClosedFailedKeepAlives = 0;\n                    logger.warn('close unexpected alert open');\n                    await this.alertAccept().catch(innerErr => logger.warn('failed to click on alert', { err: innerErr }));\n                    return;\n                }\n                logger.warn('err while getting testim status', { err, testResultId: this.testResultId });\n                this._isAlive = false;\n                if (this.isClosedBrowserError(err)) {\n                    this.browserClosedFailedKeepAlives++;\n                    const CLOSED_BROWSER_THRESHOLD_COUNT = 3;\n                    logger.warn('browser was closed', {\n                        err,\n                        testResultId: this.testResultId,\n                        counter: this.browserClosedFailedKeepAlives,\n                        threshold: CLOSED_BROWSER_THRESHOLD_COUNT,\n                        numOfCallbacks: this.browserClosedCallbacks.length,\n                    });\n                    if (this.browserClosedFailedKeepAlives >= CLOSED_BROWSER_THRESHOLD_COUNT) {\n                        this.browserClosedCallbacks.forEach(cb => {\n                            try {\n                                cb(err);\n                            } catch { /* ignore */ }\n                        });\n                    }\n                } else {\n                    this.browserClosedFailedKeepAlives = 0;\n                }\n            }\n        };\n\n        this.keepAliveTimer = setInterval(keepAlive, 10000);\n        this.registerToClosedBrowser(this.stopKeepAliveInterval);\n    }\n\n    private stopKeepAliveInterval = () => {\n        if (!this.keepAliveTimer) {\n            return;\n        }\n        this.unregisterToClosedBrowser(this.stopKeepAliveInterval);\n        clearInterval(this.keepAliveTimer);\n    };\n\n    public async switchToLocatedFrame(locatedElement: ILocatedElement | string | number) {\n        const el = await this.getElement(locatedElement);\n        const elementId = extractElementId(el.value);\n        await this.switchToFrame({ ELEMENT: elementId, [W3C_ELEMENT_ID]: elementId });\n        return el;\n    }\n\n    private switchToFrame(el: utils.LegacyElement | utils.W3CElement) {\n        return this.frame(el);\n    }\n\n    public async switchToTopFrame() {\n        try {\n            return await this.frame();\n        } catch (err) {\n            if (err.message?.includes('ECONNREFUSED')) {\n                throw new SeleniumCrashError();\n            }\n            throw err;\n        }\n    }\n\n    public async getElement(locatedElement: ILocatedElement | string | number): Promise<{ value: utils.W3CElement | utils.LegacyElement }> {\n        const perfId = this.seleniumPerfStats!.markStart(SELENIUM_PERF_MARKS.GET_ELEMENT);\n        if (typeof locatedElement === 'string' || typeof locatedElement === 'number') { // support testimId in the meanwhile for backwards compatibility\n            try {\n                return await this.getElementBySelector(`[testim_dom_element_id='${locatedElement}']`);\n            } finally {\n                this.seleniumPerfStats!.markEnd(perfId, SELENIUM_PERF_MARKS.GET_ELEMENT);\n            }\n        }\n        const getElementAtAut = locatedElement?.shadowPath?.length || (featureFlagsService.flags.runGetElementCodeInAut.isEnabled() && this.isSafari());\n\n        if (getElementAtAut) {\n            try {\n                return await this.execute(`\n                        var fn = ${codeSnippets().getLocatedElementCode};\n                        return fn.apply(null, arguments);\n                    `, locatedElement,\n                );\n            } finally {\n                this.seleniumPerfStats!.markEnd(perfId, SELENIUM_PERF_MARKS.GET_ELEMENT);\n            }\n        }\n\n        try {\n            return await this.getElementBySelector(`[testim_dom_element_id='${locatedElement?.testimId}']`);\n        } finally {\n            this.seleniumPerfStats!.markEnd(perfId, SELENIUM_PERF_MARKS.GET_ELEMENT);\n        }\n    }\n\n    public executeJS<T extends(...args: any[]) => any = any>(fn: string | T, ...args: Parameters<T>) {\n        return this.execute(fn, ...args);\n    }\n\n    public async executeCodeAsync<T = any, TArgs extends any[] = any[]>(fn: string | ((...args: [...innerArgs: TArgs, callback: (result?: T) => void]) => void), timeout: number, ...args: TArgs) {\n        await this.timeouts('script', timeout);\n        return await this.executeAsync(fn, ...args);\n    }\n\n    public async markDynamicParent(target: SeleniumTarget, dynamicParentId: string) {\n        function setDynamicParentAttribute({ attributeName, attributeValue, locatedElement }: { attributeName: string; attributeValue: string; locatedElement: ILocatedElement }) {\n            // @ts-expect-error unhappy with declare in a function\n            declare function getLocatedElement(_locatedElement: ILocatedElement | string): Element | null;\n            const element = getLocatedElement(locatedElement);\n            if (!element) {\n                throw new Error('could not find dynamic parent');\n            }\n            element.setAttribute(attributeName, attributeValue);\n        }\n\n        await this.executeJS<typeof setDynamicParentAttribute>(`\n            var getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            var setDynamicParentAttribute = ${setDynamicParentAttribute.toString()};\n            return setDynamicParentAttribute.apply(null, arguments)\n        `, {\n            attributeName: locatorBuilderUtils().DYNAMIC_PARENT_FIELD_NAME,\n            attributeValue: dynamicParentId,\n            locatedElement: target.locatedElement,\n        });\n    }\n\n    private getLocatedElementRectWithPadding(locatedElement: ILocatedElement) {\n        // this is here to conform with clickim's logic in frame offset calculations\n        function getLocationCode(_locatedElement: ILocatedElement) {\n            // @ts-expect-error unhappy with declare in a function\n            declare function getLocatedElement(_locatedEl: ILocatedElement | string): Element | null;\n            const element = getLocatedElement(_locatedElement);\n            if (!element) {\n                return null;\n            }\n            const paddingTop = parseInt(window.getComputedStyle(element).paddingTop.replace('px', ''), 10) || 0;\n            const paddingLeft = parseInt(window.getComputedStyle(element).paddingLeft.replace('px', ''), 10) || 0;\n            const rect = element.getBoundingClientRect();\n            return { top: Math.round(rect.top + paddingTop), left: Math.round(rect.left + paddingLeft) };\n        }\n\n        return this.executeJS<typeof getLocationCode>(`\n            const getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            const getLocation = ${getLocationCode.toString()};\n            return getLocation.apply(null, arguments)\n        `, locatedElement);\n    }\n\n    public getElementLocationWithPadding(locatedElement: ILocatedElement) {\n        return this.getLocatedElementRectWithPadding(locatedElement);\n    }\n\n    private getLocatedElementRect(locatedElement: ILocatedElement) {\n        function getLocationCode(_locatedElement: ILocatedElement) {\n            // @ts-expect-error unhappy with declare in a function\n            declare function getLocatedElement(_locatedEl: ILocatedElement | string): Element | null;\n            const element = getLocatedElement(_locatedElement);\n            if (!element) {\n                return null;\n            }\n            const rect = element.getBoundingClientRect();\n            return {\n                bottom: Math.round(rect.bottom),\n                height: Math.round(rect.height),\n                x: Math.round(rect.left),\n                right: Math.round(rect.right),\n                y: Math.round(rect.top),\n                width: Math.round(rect.width),\n            };\n        }\n\n        return this.executeJS<typeof getLocationCode>(`\n            const getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            const getLocation = ${getLocationCode.toString()};\n            return getLocation.apply(null, arguments)\n        `, locatedElement);\n    }\n\n    private getElementLocation(target: SeleniumTarget) {\n        return this.getLocatedElementRect(target.locatedElement);\n    }\n\n    public getTargetText(target: SeleniumTarget) {\n        return this.getElementTextJS(target.locatedElement);\n    }\n\n    public async getElementTextJS(locatedElement: ILocatedElement) {\n        function extractTextCode(_locatedElement: ILocatedElement, ignoreHiddenTagsText: boolean) {\n            // copy of utils.getElementTextContent to run inside content script sadly .children doesn't work for SVG elements in IE11\n            // TODO: clean this function up - as we don't support IE11 no more\n            function clearTitleTags(node: Node) {\n                if (!node.childNodes?.length) {\n                    return node;\n                }\n\n                const children = [...node.childNodes].filter((x): x is Element => x.nodeType === Node.ELEMENT_NODE);\n                children.forEach(child => {\n                    if (typeof child.tagName === 'string' && child.tagName.toLowerCase() === 'title') {\n                        node.removeChild(child);\n                    } else {\n                        clearTitleTags(child);\n                    }\n                });\n                return node;\n            }\n\n            function isTextElement(element: Element): element is HTMLInputElement | HTMLTextAreaElement {\n                return (['INPUT', 'TEXTAREA'].includes(element.tagName));\n            }\n\n            function getFixedTextContent(element: Element) {\n                try { // fix for salesforce's custom-elements\n                    if (element.shadowRoot && !Object.getOwnPropertyDescriptor(element.ownerDocument.defaultView?.Node.prototype, 'textContent')?.get?.toString().includes('[native code]')) {\n                        return element.shadowRoot.textContent!.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                    }\n                } catch { /* noop */ }\n                if (ignoreHiddenTagsText && Array.prototype.some.call(element.children, (elem: HTMLElement) => elem.hidden)) {\n                    const dupElement = element.cloneNode(true) as Element;\n                    const hiddenChildren = Array.prototype.filter.call<HTMLCollection, [(elem: HTMLElement) => boolean], HTMLElement[]>(dupElement.children, elem => elem.hidden);\n                    hiddenChildren.forEach(child => dupElement.removeChild(child));\n                    return dupElement.textContent!.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                }\n                return element.textContent!.replace(/(\\r\\n|\\n|\\r)/gm, '');\n            }\n\n            function getElementTextContent(element: Element) {\n                if (isTextElement(element)) {\n                    return element.value;\n                }\n                if (element instanceof SVGElement) {\n                    const copyElement = element.cloneNode(true);\n                    return clearTitleTags(copyElement).textContent!.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                }\n                return getFixedTextContent(element);\n            }\n\n            // @ts-expect-error unhappy with declare in a function\n            declare function getLocatedElement(_locatedEl: ILocatedElement | string): Element | null;\n            const element = getLocatedElement(_locatedElement);\n            return element ? getElementTextContent(element) : '';\n        }\n\n        const { value } = await this.executeJS<typeof extractTextCode>(`\n            const getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            const extractText = ${extractTextCode.toString()};\n            return extractText.apply(null, arguments)\n        `, locatedElement, this.ignoreHiddenTagsText);\n        return value;\n    }\n\n    public async getHTML(locateStep: ISerializedStep<LocateStep>) {\n        const getHTMLCode = codeSnippets().getHtmlCode(undefined, locateStep);\n        const perfId = this.seleniumPerfStats!.markStart(SELENIUM_PERF_MARKS.GET_HTML);\n        try {\n            const { value } = await this.executeJS(getHTMLCode);\n            this.seleniumPerfStats!.markEnd(perfId, SELENIUM_PERF_MARKS.GET_HTML);\n            return value;\n        } catch (err) {\n            this.seleniumPerfStats!.markEnd(perfId, SELENIUM_PERF_MARKS.GET_HTML);\n            const testimInternalError = Object.assign(new Error(''), { success: false, reason: err.toString(), errorType: 'internal-error' });\n            // @ts-expect-error TODO: seems like this is gone in WDIO7 and is crashing the CLI\n            if (!this.client?.requestHandler?.sessionID) {\n                // we got here after the driver has been disposed of. It's impossible to run JavaScript on the page.\n                Object.assign(testimInternalError, { extraInfo: 'Inside getHtml catch and trying to check if in quirks mode - but the session has already terminated' });\n                throw testimInternalError;\n            }\n            throw testimInternalError;\n        }\n    }\n\n    public maximizeWithoutValidation() {\n        return this.windowHandleMaximize();\n    }\n\n    private setViewportSizeNEW(size: { width: number; height: number }, type: boolean) {\n        const MAX_TRIES = 5;\n        class SizeMismatchError extends Error {}\n\n        function getViewportSizeScript() {\n            return {\n                screenWidth: Math.floor(window.innerWidth || 0),\n                screenHeight: Math.floor(window.innerHeight || 0),\n            };\n        }\n\n        /**\n         * to set viewport size properly we need to execute the process multiple times\n         * since the difference between the inner and outer size changes when browser\n         * switch between fullscreen modes or visibility of scrollbar\n         */\n        const _setViewportSize = () => pRetry(async () => {\n            /** get window size */\n            const { value: windowHandleSize } = await this.windowHandleSize();\n            /** get viewport size */\n            const { value: viewportSize } = await this.execute(getViewportSizeScript);\n            const widthDiff = windowHandleSize.width - viewportSize.screenWidth;\n            const heightDiff = windowHandleSize.height - viewportSize.screenHeight;\n            /** change window size with indent */\n            await this.windowHandleSize({\n                width: size.width + widthDiff,\n                height: size.height + heightDiff,\n            });\n            const { value: res } = await this.execute(getViewportSizeScript);\n            /** if viewport size not equals desired size, throw an error so pRetry will execute process again */\n            if (res.screenWidth !== size.width || res.screenHeight !== size.height) {\n                throw new SizeMismatchError();\n            }\n            return undefined;\n        }, { retries: MAX_TRIES - 1, factor: 1, minTimeout: 0 }).catch(err => {\n            if (err instanceof SizeMismatchError) {\n                return undefined;\n            }\n            throw err;\n        });\n\n        /** parameter check */\n        if (\n            typeof size !== 'object' ||\n            typeof size.width !== 'number' ||\n            typeof size.height !== 'number' ||\n            (type !== undefined && typeof type !== 'boolean')\n        ) {\n            throw new Error('number or type of arguments don\\'t agree with setViewportSize command');\n        }\n\n        const shouldIndent = type === undefined ? true : type;\n\n        return shouldIndent ? _setViewportSize() : this.windowHandleSize(size);\n    }\n\n    public setViewportSize(width: number, height: number) {\n        const type = true; // set to false to change window size, true (default) to change viewport size\n        return this.setViewportSizeNEW({ width, height }, type);\n    }\n\n    private getBrowserMajorVersion(parse: parser.IResult) {\n        try {\n            return parseInt(parse.browser?.version || '0', 10);\n        } catch (err) {\n            logger.error('failed to get browser version', { err });\n            return 0;\n        }\n    }\n\n    public async getBrowserAndOS() {\n        function getBrowserName(ua: string) {\n            let M = ua.match(/(opera|chrome|safari|firefox)\\/?\\s*(\\d+)/i) || [];\n            if (M[1] === 'Chrome' && ua.match(/\\bOPR\\/(\\d+)/) !== null) {\n                return 'opera';\n            }\n            if (M[1] === 'Chrome' && ua.match(/\\bEdge|Edg\\/(\\d+)/) !== null) {\n                return 'edge';\n            }\n            // @ts-expect-error no idea how this could work\n            M = M[2] ? [M[1], M[2]] : [ua.appName, ua.appVersion, '-?'];\n            const tem = ua.match(/version\\/(\\d+)/i);\n            if (tem !== null) {\n                M.splice(1, 1, tem[1]);\n            }\n            return M[0].toLowerCase();\n        }\n\n        if (this.browserAndOS) {\n            return this.browserAndOS;\n        }\n\n        function getUserAgentString() {\n            if (!window?.navigator?.userAgent) {\n                return 'unknown';\n            }\n            return window.navigator.userAgent;\n        }\n        const { value: userAgent } = await this.executeJS(getUserAgentString);\n        const parse = parser(userAgent);\n        const osDetails = parse.os;\n        this.browserAndOS = {\n            os: `${osDetails.name} ${osDetails.version}`,\n            browserMajor: this.getBrowserMajorVersion(parse),\n            browser: getBrowserName(userAgent),\n            userAgent,\n            browserVersion: parse.browser.version,\n        };\n        return this.browserAndOS;\n    }\n\n    public setValue(element: utils.W3CElement | utils.LegacyElement, value: string | string[]) {\n        return super.setValue(element, value);\n    }\n\n    private getRelativeMoveActions(offsets: ActionOffsets, element: utils.W3CElement | utils.LegacyElement) {\n        const { rect, clickOffset } = offsets;\n        const elementCenter = positionUtils().calculateElementMiddlePoint(rect);\n\n        // here offset values should be in relation to the center of the element\n        const left = clickOffset.x;\n        const top = clickOffset.y;\n\n        if (\n            !playerUtils().isWithinBounds(rect.left, rect.left + rect.width, elementCenter.x + left) ||\n            !playerUtils().isWithinBounds(rect.top, rect.top + rect.height, elementCenter.y + top)\n        ) {\n            // [NOTE] the code is not supposed to get here! - using center of element (0,0) instead of step offsets.\n            // this is a fallback so the action will take place even if for some reason calculation went out of element..\n            logger.warn('using element center as fallback for offset');\n            return this.getMoveActions(0, 0, element);\n        }\n        return this.getMoveActions(left, top, element);\n    }\n\n    private computeAbsoluteMovement(offsets: ActionOffsets) {\n        const { frameOffset, rect, clickOffset } = offsets;\n        const fallbackLeft = rect.left + clickOffset.x + frameOffset.x;\n        const fallbackTop = rect.top + clickOffset.y + frameOffset.y;\n        return { x: fallbackLeft, y: fallbackTop };\n    }\n\n    private async actWithActionsAPI(offsets: ActionOffsets, button: number, element: utils.W3CElement | utils.LegacyElement, actions: string[]) {\n        const moveActions = this.getRelativeMoveActions(offsets, element);\n        const clickActions = this.getClickActions(actions, button);\n        try {\n            return await this.actions([{\n                type: 'pointer',\n                id: 'mouse',\n                parameters: { pointerType: 'mouse' },\n                actions: moveActions.concat(clickActions),\n            }]);\n        } catch (err) {\n            logger.error('tried to use element origin but failed because of visibility, trying absolute', err);\n            const { x, y } = this.computeAbsoluteMovement(offsets);\n            const _moveActions = this.getMoveActions(x, y);\n            return this.actions([{\n                type: 'pointer',\n                id: 'mouse',\n                parameters: { pointerType: 'mouse' },\n                actions: _moveActions.concat(clickActions),\n            }]);\n        }\n    }\n\n    private doubleClickWithActionsAPI(element: utils.W3CElement | utils.LegacyElement, offsets: ActionOffsets) {\n        return this.actWithActionsAPI(offsets, LEFT, element, ['pointerDown', 'pointerUp', 'pointerDown', 'pointerUp']);\n    }\n\n    private async doubleClickWithJS(eventData: DoubleClickEventData) {\n        const [{ doubleClick }, { dispatchFocus }] = await Promise.all([import('./stepActions/scripts/doubleClick'), import('./stepActions/scripts/focusElement')]);\n        type CallbackReturnType = Parameters<Parameters<typeof doubleClick>[1]>[0];\n        return this.executeCodeAsync<CallbackReturnType, [DoubleClickEventData]>(`\n            var getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus.toString()};\n            var doubleClick = ${doubleClick.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return doubleClick.call(null, eventData, done);\n        `, eventData.timeout, eventData);\n    }\n\n    private getClickActions(types: string[] = [], button: number | undefined = undefined) {\n        return types.map(type => ({ type, button }));\n    }\n\n    private getClickActionList(types: string[] = [], button: number | undefined = undefined) {\n        return [{\n            type: 'pointer',\n            id: 'mouse',\n            actions: this.getClickActions(types, button),\n        }];\n    }\n\n    private leftClickWithActionsAPI(element: utils.W3CElement | utils.LegacyElement, offsets: ActionOffsets) {\n        return this.actWithActionsAPI(offsets, LEFT, element, ['pointerDown', 'pointerUp']);\n    }\n\n    private rightClickWithActionsAPI(element: utils.W3CElement | utils.LegacyElement, offsets: ActionOffsets) {\n        return this.actWithActionsAPI(offsets, RIGHT, element, ['pointerDown', 'pointerUp']);\n    }\n\n    public async rightClick(element: utils.W3CElement | utils.LegacyElement, offsets: ActionOffsets) {\n        if (this.unsupportedActions.has('move')) {\n            return this.rightClickWithActionsAPI(element, offsets);\n        }\n        try {\n            return await super._rightClick(element as utils.W3CElement, offsets);\n        } catch (err) {\n            if (isOldProtocol(err)) {\n                this.unsupportedActions.add('move');\n                return this.rightClickWithActionsAPI(element, offsets);\n            }\n            throw err;\n        }\n    }\n\n    public async leftClick(element: utils.W3CElement | utils.LegacyElement, offsets: ActionOffsets) {\n        if (this.unsupportedActions.has('move')) {\n            return this.leftClickWithActionsAPI(element, offsets);\n        }\n        try {\n            return await super._leftClick(element as utils.W3CElement, offsets);\n        } catch (err) {\n            if (isOldProtocol(err)) {\n                this.unsupportedActions.add('move');\n                return this.leftClickWithActionsAPI(element, offsets);\n            }\n            throw err;\n        }\n    }\n\n    private async dragAndDropOldAPI(sourceSeleniumElement: utils.W3CElement | utils.LegacyElement, destinationSeleniumElement: utils.W3CElement | utils.LegacyElement) {\n        await this.moveTo(sourceSeleniumElement as utils.W3CElement);\n        await this.buttonDown();\n        await this.moveTo(destinationSeleniumElement as utils.W3CElement);\n        return await this.buttonUp();\n    }\n\n    private async calculateElementMiddlePoint(locatedElement: ILocatedElement, offset = { top: 0, left: 0 }) { // unused?\n        const response = await this.getLocatedElementRect(locatedElement);\n        if (!response?.value) {\n            logger.warn(`could not find element for locatedElement ${locatedElement?.testimId}`);\n            throw new Error('could not calculate rect');\n        }\n        const { x, y, width, height } = response.value;\n        return {\n            x: offset.left + x + (width / 2),\n            y: offset.top + y + (height / 2),\n        };\n    }\n\n    public async hover(seleniumElement: utils.W3CElement | utils.LegacyElement, offsets: ActionOffsets) {\n        // this will attempt to use the old api with moveTOObject (using the selector)\n        // if the old api is unsupported, it will move absolutePoint, or calc the point using the seleniumElement and offset\n        if (this.unsupportedActions.has('move')) {\n            return this.moveToElementWithActionsAPI(seleniumElement, offsets);\n        }\n\n        const { x, y } = offsets.clickOffset;\n        try {\n            return await this.moveTo(seleniumElement as utils.W3CElement, x, y);\n        } catch (err) {\n            if (isOldProtocol(err)) {\n                this.unsupportedActions.add('move');\n                return this.moveToElementWithActionsAPI(seleniumElement, offsets);\n            }\n            throw err;\n        }\n    }\n\n    private getMoveActions(x = 1, y = 1, origin: any = 'viewport', duration = 0): object[] {\n        // force x != 0 ,y != 0 because of Safari issues\n        return [{ type: 'pointerMove', duration, x: Math.floor(x) || 1, y: Math.floor(y) || 1, origin }];\n    }\n\n    private moveWithActionsAPI(point: { x: number; y: number }) {\n        const actions = this.getMoveActions(point.x, point.y);\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            actions,\n        }]);\n    }\n\n    private async moveToElementWithActionsAPI(seleniumElement: utils.W3CElement | utils.LegacyElement, offsets: ActionOffsets) {\n        try {\n            return await this.actions([{\n                type: 'pointer',\n                id: 'mouse',\n                actions: this.getRelativeMoveActions(offsets, seleniumElement),\n            }]);\n        } catch (err) {\n            logger.error('tried to use element origin but failed because of visibility, trying location', err);\n            const point = this.computeAbsoluteMovement(offsets);\n            return await this.moveWithActionsAPI(point);\n        }\n    }\n\n    private getDragCoordinates(events: { event: string; pointerPosition: { screenX: number; screenY: number } }[]) {\n        const mouseEvents = events.filter(e => e.event === 'mousemove' || e.event === 'pointermove');\n\n        const first = mouseEvents[0].pointerPosition;\n        const last = mouseEvents.at(-1)!.pointerPosition;\n\n        return {\n            xDiff: last.screenX - first.screenX,\n            yDiff: last.screenY - first.screenY,\n        };\n    }\n\n    private async dragWithMoveTo(seleniumElement: utils.W3CElement, xDiff: number, yDiff: number, xOffset: number, yOffset: number) {\n        await this.moveTo(seleniumElement, xOffset, yOffset);\n        await this.buttonDown();\n        await this.moveTo(seleniumElement, xDiff, yDiff);\n        return await this.buttonUp();\n    }\n\n    private dragWithActionsAPI(seleniumElement: utils.W3CElement | utils.LegacyElement, xDiff: number, yDiff: number, xOffset: number, yOffset: number) {\n        const goToDrag = this.getMoveActions(xOffset, yOffset, seleniumElement, 1);\n        const startDrag = this.getClickActions(['pointerDown'], LEFT);\n        const doDrag = this.getMoveActions(xDiff, yDiff, 'pointer', 1);\n        const endDrag = this.getClickActions(['pointerUp'], LEFT);\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            actions: goToDrag.concat(startDrag).concat(doDrag).concat(endDrag),\n        }]);\n    }\n\n    // unused?\n    private async drag(seleniumElement: utils.W3CElement | utils.LegacyElement, targetRect: { width: number; height: number }, xElementOffset: number, yElementOffset: number, events: any[]) {\n        const { width, height } = targetRect;\n        const midXRelative = (xElementOffset - width / 2 + 1);\n        const midYRelative = (yElementOffset - height / 2);\n        const coordinates = this.getDragCoordinates(events);\n        const { xDiff, yDiff } = coordinates;\n        if (this.unsupportedActions.has('move')) {\n            return this.dragWithActionsAPI(seleniumElement, xDiff, yDiff, midXRelative, midYRelative);\n        }\n        try {\n            return await this.dragWithMoveTo(seleniumElement as utils.W3CElement, xDiff, yDiff, midXRelative, midYRelative);\n        } catch (err) {\n            if (isOldProtocol(err)) {\n                this.unsupportedActions.add('move');\n                return this.dragWithActionsAPI(seleniumElement, xDiff, yDiff, midXRelative, midYRelative);\n            }\n            throw err;\n        }\n    }\n\n    private getMoveRelativeSequence(startLeft: number, startTop: number, endLeft: number, endTop: number) {\n        const distance = (p1: { x: number; y: number }, p2: { x: number; y: number }) => Math.hypot(p1.x - p2.x, p1.y - p2.y);\n\n        const from = { x: startLeft, y: startTop };\n        const to = { x: endLeft, y: endTop };\n        const MOVE_EVENT_DIST = 10;\n        const eventCount = Math.round(distance(from, to) / MOVE_EVENT_DIST);\n\n        /* generate move events array */\n        const moves = Array.from({ length: eventCount }, () => ({\n            x: Math.round((to.x - from.x) / eventCount),\n            y: Math.round((to.y - from.y) / eventCount),\n        }));\n        return [{ x: 1, y: 1 }].concat(moves);\n    }\n\n    private getMoveAbsoluteSequence(startLeft: number, startTop: number, endLeft: number, endTop: number) {\n        const relativeMoves = this.getMoveRelativeSequence(startLeft, startTop, endLeft, endTop);\n        return relativeMoves.reduce((newMoves, relativeMove) => {\n            const lastMove = newMoves.at(-1)!;\n            return newMoves.concat({ x: Math.round(lastMove.x + relativeMove.x), y: Math.round(lastMove.y + relativeMove.y) });\n        }, [{ x: Math.round(startLeft), y: Math.round(startTop) }]);\n    }\n\n    private async dragAndDropWithGeneratedMoves(sourceSeleniumElement: utils.W3CElement, destinationSeleniumElement: utils.W3CElement, rectsAndOffsets: DnDRectsAndOffsets) {\n        const { fromRect, fromX, fromY, toRect, toX, toY } = rectsAndOffsets;\n        const fromElementCenter = positionUtils().calculateElementMiddlePoint(fromRect);\n        const toElementCenter = positionUtils().calculateElementMiddlePoint(toRect);\n\n        const moveSequence = this.getMoveRelativeSequence(\n            fromElementCenter.x + fromX,\n            fromElementCenter.y + fromY,\n            toElementCenter.x + toX,\n            toElementCenter.y + toY,\n        );\n\n        await this.moveTo(sourceSeleniumElement, Math.floor(fromX), Math.floor(fromY));\n        await this.buttonDown();\n        for (const movePosition of moveSequence) {\n            await this.moveTo(null!, movePosition.x, movePosition.y);\n        }\n        await this.moveTo(destinationSeleniumElement, Math.round(toX), Math.round(toY));\n        return await this.buttonUp();\n    }\n\n    private dragAndDropWithActionsAPIWithGeneratedMoves(rectsAndOffsets: DnDRectsAndOffsets) {\n        const { fromRect, fromX, fromY, toRect, toX, toY } = rectsAndOffsets;\n        const fromElementCenter = positionUtils().calculateElementMiddlePoint(fromRect);\n        const toElementCenter = positionUtils().calculateElementMiddlePoint(toRect);\n\n        const startLeft = Math.floor(fromElementCenter.x + fromX);\n        const startTop = Math.floor(fromElementCenter.y + fromY);\n        const endLeft = Math.floor(toElementCenter.x + toX);\n        const endTop = Math.floor(toElementCenter.y + toY);\n\n        const moveSequence = this.getMoveAbsoluteSequence(startLeft, startTop, endLeft, endTop);\n        const startMovePositionActions = this.getMoveActions(startLeft, startTop);\n        const pointerDownActions = this.getClickActions(['pointerDown'], LEFT);\n        const moveSequenceActions = _.flatMap(moveSequence, movePosition => this.getMoveActions(movePosition.x, movePosition.y));\n        const endMovePositionActions = this.getMoveActions(endLeft, endTop);\n        const pointerUpActions = this.getClickActions(['pointerUp'], LEFT);\n        const actions = startMovePositionActions.concat(pointerDownActions).concat(moveSequenceActions).concat(endMovePositionActions).concat(pointerUpActions);\n\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            actions,\n        }]);\n    }\n\n    public async dragAndDrop(sourceSeleniumElement: utils.W3CElement | utils.LegacyElement, destinationSeleniumElement: utils.W3CElement | utils.LegacyElement, rectsAndOffsets: DnDRectsAndOffsets) {\n        if (this.isSafari()) {\n            if (this.unsupportedActions.has('move')) {\n                return this.dragAndDropWithActionsAPIWithGeneratedMoves(rectsAndOffsets);\n            }\n            try {\n                return await this.dragAndDropWithGeneratedMoves(sourceSeleniumElement as utils.W3CElement, destinationSeleniumElement as utils.W3CElement, rectsAndOffsets);\n            } catch (err) {\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.add('move');\n                    return this.dragAndDropWithActionsAPIWithGeneratedMoves(rectsAndOffsets);\n                }\n                throw err;\n            }\n        }\n        if (this.unsupportedActions.has('move')) {\n            return this.dragAndDropWithActionsAPI(rectsAndOffsets);\n        }\n        try {\n            return await this.dragAndDropOldAPI(sourceSeleniumElement, destinationSeleniumElement);\n        } catch (err) {\n            if (isOldProtocol(err)) {\n                this.unsupportedActions.add('move');\n                return this.dragAndDropWithActionsAPI(rectsAndOffsets);\n            }\n            throw err;\n        }\n    }\n\n    private doubleClickFallback(element: utils.W3CElement | utils.LegacyElement, eventData: DoubleClickEventData, offsets: ActionOffsets) {\n        if (this.isSafari()) {\n            return this.doubleClickWithJS(eventData);\n        }\n        return this.doubleClickWithActionsAPI(element, offsets);\n    }\n\n    public async doubleClick(element: utils.W3CElement | utils.LegacyElement, eventData: DoubleClickEventData, offsets: ActionOffsets) {\n        if (this.unsupportedActions.has('move') || this.isSafari()) { // doDoubleClick API doesn't work in Safari browser\n            return this.doubleClickFallback(element, eventData, offsets);\n        }\n        try {\n            return await this.doDoubleClick(element as utils.W3CElement);\n        } catch (err) {\n            if (isOldProtocol(err)) {\n                this.unsupportedActions.add('move');\n                return this.doubleClickFallback(element, eventData, offsets);\n            }\n            throw err;\n        }\n    }\n\n    private async dragAndDropWithActionsAPI(rectsAndOffsets: DnDRectsAndOffsets) {\n        const { fromRect, fromX, fromY, toRect, toX, toY } = rectsAndOffsets;\n\n        const fromElementCenter = positionUtils().calculateElementMiddlePoint(fromRect);\n        const toElementCenter = positionUtils().calculateElementMiddlePoint(toRect);\n\n        const startLeft = Math.floor(fromElementCenter.x + fromX);\n        const startTop = Math.floor(fromElementCenter.y + fromY);\n        const endLeft = Math.floor(toElementCenter.x + toX);\n        const endTop = Math.floor(toElementCenter.y + toY);\n\n        await this.moveWithActionsAPI({ x: startLeft, y: startTop });\n        const actionsDown = this.getClickActionList(['pointerDown'], LEFT);\n        await this.actions(actionsDown);\n\n        await this.moveWithActionsAPI({ x: endLeft, y: endTop });\n        const actionsUp = this.getClickActionList(['pointerUp'], LEFT);\n        return this.actions(actionsUp);\n    }\n\n    public async getTabIds() {\n        const { value } = await this.windowHandles();\n        return value;\n    }\n\n    public async isVisible(el: utils.W3CElement | utils.LegacyElement) {\n        const { value } = await this.elementIdDisplayed(extractElementId(el));\n        return value;\n    }\n\n    private getSource() { // unused?\n        return this.source();\n    }\n\n    public async getElementRect(target: SeleniumTarget) {\n        const defaultLocation = { width: 0, height: 0, top: 0, left: 0 };\n        let loc;\n        try {\n            loc = await this.getElementLocation(target);\n        } catch (err) {\n            logger.error('error getting element location', { err });\n        }\n        if (!loc?.value) {\n            return defaultLocation;\n        }\n        return {\n            top: loc.value.y,\n            left: loc.value.x,\n            width: loc.value.width,\n            height: loc.value.height,\n        };\n    }\n\n    public async end() {\n        logger.info('delete session', { sessionId: this.getSessionId() });\n        if (!this.getSessionId()) {\n            logger.warn('failed to close session because session is undefined');\n        }\n        this.stopKeepAliveInterval();\n        try {\n            return await super.end();\n        } catch {\n            /* !!!!SILENCE!!!! */\n            return undefined;\n        }\n    }\n\n    public async submit(element: utils.W3CElement | utils.LegacyElement) {\n        if (this.unsupportedActions.has('submit')) {\n            return await super.submitFormManually(element as utils.W3CElement);\n        }\n\n        try {\n            return await super.submitForm(element);\n        } catch (err) {\n            if (isOldProtocol(err)) {\n                this.unsupportedActions.add('submit');\n                return super.submitFormManually(element as utils.W3CElement);\n            }\n            throw err;\n        }\n    }\n}\n", "import { getLogger } from '../commons/logger';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { getLabFeaturesByProjectId } from '../commons/testimServicesApi';\nimport type { ValueOf } from '../utils';\nimport type { LabFeatureFlagType } from '../commons/featureFlagsService';\nimport type { Plan } from 'services/src/commons/mongo/types/DbCompanyProjects';\nimport type { RawLabFeatureProject } from 'services/src/commons/mongo/models/labFeatureProject';\n\nconst logger = getLogger('lab-features-service');\n\nclass LabFeaturesService {\n    featuresForProject: RawLabFeatureProject[] = [];\n    labBatman = false;\n\n    async loadLabFeatures(projectId: string, companyPlan: Plan) {\n        if (!companyPlan || !projectId) {\n            logger.error('missing companyPlan or projectId when loading lab features', { companyPlan, projectId });\n            this.featuresForProject = [];\n        }\n\n        try {\n            const labBatman = this.isLabsEnabledForCompany(companyPlan);\n            const features = labBatman ? (await getLabFeaturesByProjectId(projectId)) : [];\n            this.featuresForProject = features;\n            this.labBatman = labBatman;\n        } catch (err) {\n            logger.error('failed loading lab features', { err, companyPlan, projectId });\n            this.featuresForProject = [];\n        }\n    }\n\n    isFeatureAvailableForProject(featureFlagName: keyof typeof featureFlagsService['flags']) {\n        const featureFlag = featureFlagsService.flags[featureFlagName];\n        this.validateAsLabFeatureFlag(featureFlag);\n        const ffValue = (featureFlag as LabFeatureFlagType).getValue();\n        if (ffValue === 'disabled') {\n            return false;\n        }\n        if (ffValue === 'enabled') {\n            return true;\n        }\n\n        const { featuresForProject: features, labBatman } = this;\n        const labFeature = features.find(f => f.featureFlagName === featureFlagName);\n        const featureEnabled = labFeature?.enabled;\n\n        return Boolean(labBatman && featureEnabled);\n    }\n\n    isLabsEnabledForCompany(companyPlan: Plan) {\n        return Boolean(companyPlan?.premiumFeatures?.enableLabFeatures);\n    }\n\n    validateAsLabFeatureFlag(featureFlag: ValueOf<typeof featureFlagsService['flags']>) {\n        if ('getValue' in featureFlag) {\n            return;\n        }\n\n        const msg = `Attempted querying a lab feature flag which isn't a variant. This means that a wrong configuration is being used in FeatureFlagsService (for feature flag: ${featureFlag.name}`;\n        logger.error(msg, { featureFlagName: featureFlag.name });\n        throw new Error(msg);\n    }\n}\nexport const labFeaturesService = new LabFeaturesService();\n", "import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as utils from '../../../utils';\nimport * as npmWrapper from '../../../commons/npmWrapper';\nimport dataUriToBuffer from 'data-uri-to-buffer';\nimport { Worker } from 'worker_threads';\nimport { TimeoutError } from '../../../errors';\nimport { getLogger } from '../../../commons/logger';\nimport { getS3Artifact } from '../../../commons/testimServicesApi';\nimport { getLocallyInstalledCommonJsPath } from '../../../commons/npmWrapper';\nimport { featureFlagsService } from '../../../commons/featureFlagsService';\nimport type { IncomingParams } from 'clickim/src/background/playbackContext';\n\nconst logger = getLogger('cli-service');\n\nfunction convertWindowsBackslash(input: string) {\n    const isExtendedLengthPath = input.startsWith('\\\\\\\\?\\\\');\n    const hasNonAscii = /[^\\u0000-\\u0080]+/.test(input); // eslint-disable-line no-control-regex\n\n    if (isExtendedLengthPath || hasNonAscii) {\n        return input;\n    }\n\n    return input.replace(/\\\\/g, '/');\n}\n\nfunction requireOrImportMethod(_path: string) {\n    try {\n        return { sync: true, lib: globalThis.require(_path) };\n    } catch (err) {\n        if (err.code !== 'ERR_REQUIRE_ESM') {\n            throw err;\n        }\n        const { sep, join } = globalThis.require('path') as typeof import('path');\n        const { promises } = globalThis.require('fs') as typeof import('fs');\n\n        const lib = promises.readFile(`${_path}${sep}package.json`).then(file => {\n            // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n            const packageJson = JSON.parse(file);\n            const fullPath = join(_path, packageJson.main || `${sep}index.js`);\n            return import(fullPath);\n        });\n\n        return { sync: false, lib };\n    }\n}\n\nfunction constructWithArguments(params: string[]) {\n    const AsyncFunction = Object.getPrototypeOf(async () => null).constructor;\n    function F() {\n        // eslint-disable-next-line prefer-spread\n        return AsyncFunction.apply(null, params);\n    }\n\n    F.prototype = AsyncFunction.prototype;\n    // @ts-expect-error dark magic\n    return new F();\n}\n\nexport interface ConsoleItem {\n    method: 'log' | 'info' | 'warn' | 'error' | 'debug';\n    msg: string;\n    timestamp: number;\n}\ninterface RunCodeRes {\n    tstConsoleLogs: ConsoleItem[];\n    status: 'done' | 'failed';\n    result: { resultValue: any; exports: object; exportsTest: object; exportsGlobal: object };\n    success: boolean;\n}\n\nasync function runCodeWithWorkerThread(\n    transactionId: string,\n    incomingParams: Pick<IncomingParams, 'as'>,\n    context: object,\n    code: string,\n    packageLocalLocations: { [pkg: string]: string } = {},\n    timeout: number = undefined!,\n    fileDataUrl: string | undefined = undefined,\n): Promise<RunCodeRes> {\n    const requireCode = Object.keys(packageLocalLocations).map(pMember => `\n        var res = requireOrImportMethod('${convertWindowsBackslash(packageLocalLocations[pMember])}');\n        if (res.sync) {\n            var ${pMember} = res.lib;\n        } else {\n            var ${pMember} = await res.lib;\n        }\n        `).join('');\n\n    const fileDataUrlToFileBuffer = !fileDataUrl ? 'var fileBuffer = null;' :\n        `\n            ${dataUriToBuffer.toString()}\n            var fileBuffer = dataUriToBuffer('${fileDataUrl}');\n        `;\n\n    //https://github.com/anseki/console-substitute\n    const consoleOverride = `\n        const getMessage = arguments => {\n            const args = Array.prototype.slice.call(arguments);\n            let message = args.shift() + '';\n            if (!args.length) {\n                return message;\n            }\n            message = message.replace(/%([odifs])/g, function (s, param) {\n                // Formatting is not yet supported.\n                var arg;\n                if (!args.length) {\n                    return '';\n                }\n                arg = args.shift();\n                if (param === 'o') {\n                    return arg + '';\n                } else if (param === 'd' || param === 'i') {\n                    arg = typeof arg === 'boolean' ? (arg ? 1 : 0) : parseInt(arg, 10);\n                    return isNaN(arg) ? '0' : arg + '';\n                } else if (param === 'f') {\n                    arg = typeof arg === 'boolean' ? (arg ? 1 : 0) : parseFloat(arg);\n                    return isNaN(arg) ? '0.000000' : arg.toFixed(6) + '';\n                } else if (param === 's') {\n                    return arg + '';\n                }\n            });\n            if (message) {\n                args.unshift(message);\n            }\n            return args.join(' ').replace(/\\\\s*$/, ' ');\n        };\n\n        const pushNewMessage = (method, consoleArgs) => {\n            const message = getMessage(consoleArgs);\n            parentPort.postMessage({\n                action: 'progress',\n                data: {\n                    method,\n                    msg: message,\n                    timestamp: Date.now(),\n                }\n            });\n        };\n\n        [\"log\", \"info\", \"warn\", \"error\", \"debug\"].forEach(function (method) {\n            const nativeMethod = console[method];\n            const oldMethod = nativeMethod?.bind(console);\n            console[method] = function () {\n                pushNewMessage(method, arguments);\n                oldMethod?.apply(console, arguments);\n            };\n        });\n    `;\n\n    const injectCode = `\n        function injectCode(params, args, incomingParams, context, code) {\n            const constructWithArguments = ${constructWithArguments.toString()}\n\n            const resolve = result => {\n                parentPort.postMessage({\n                    action: 'finish',\n                    data: {\n                        status: 'done',\n                        result: result,\n                        success: true,\n                    }\n                });\n            };\n            const reject = result => {\n                parentPort.postMessage({\n                    action: 'finish',\n                    data: {\n                        status: 'failed',\n                        result: result,\n                        success: false,\n                    }\n                });\n            };\n\n            try {\n                params.push(code);\n                const functionToRun = constructWithArguments(params);\n\n                const result = functionToRun.apply(null, args);\n                if (isPromise(result)) {\n                    result.then(res => {\n                        resolve({\n                            resultValue: res,\n                            exports: exportedData,\n                            exportsTest: exportedTestData,\n                            exportsGlobal: exportedGlobalData\n                        });\n                    }).catch(err => {\n                        reject({\n                            resultValue: err?.toString(),\n                            exports: exportedData,\n                            exportsTest: exportedTestData,\n                            exportsGlobal: exportedGlobalData\n                        });\n                    });\n                } else {\n                    resolve({\n                        resultValue: result,\n                        exports: exportedData,\n                        exportsTest: exportedTestData,\n                        exportsGlobal: exportedGlobalData\n                    });\n                }\n            } catch (e) {\n                reject({\n                    resultValue: e?.toString(),\n                    exports: exportedData,\n                    exportsTest: exportedTestData,\n                    exportsGlobal: exportedGlobalData\n                });\n            }\n        }\n    `;\n\n    const runFn = `\n        (async function() {\n            // A hack to fix an issue with stringified functions which use require. when compiling to JS, calls to require change to __require.\n            const __require = require;\n            const { parentPort } = require('worker_threads');\n            const requireOrImportMethod = ${requireOrImportMethod.toString()}\n\n            // requireCode will set async to be true if needed.\n            ${requireCode}\n\n            ${fileDataUrlToFileBuffer}\n\n            ${consoleOverride}\n\n            const isPromise = ${utils.isPromise.toString()}\n\n            parentPort.once('message', input => {\n                const { incomingParams, context, code } = input;\n\n                const exportedData = {};\n                const exportedTestData = {};\n                const exportedGlobalData = {};\n\n                const params = [\"context\"]\n                    .concat(incomingParams.as.functionParameters)\n                    .concat(${JSON.stringify(Object.keys(packageLocalLocations))})\n                    .concat(['exports', 'exportsTest', 'exportsGlobal']);\n\n                const args = [context]\n                    .concat(incomingParams.as.functionArguments)\n                    .concat([${Object.keys(packageLocalLocations).join(',')}])\n                    .concat([exportedData, exportedTestData, exportedGlobalData]);\n\n                if(fileBuffer) {\n                    params.push('fileBuffer');\n                    args.push(fileBuffer);\n                }\n\n                ${injectCode}\n\n                injectCode(params, args, incomingParams, context, code);\n            });\n        })();\n    `;\n\n    const testimConsoleLogDataAggregates: ConsoleItem[] = [];\n    const thread = new Worker(runFn, {\n        eval: true,\n    });\n    try {\n        return await utils.promiseTimeout(new Promise<RunCodeRes>((resolve) => {\n            thread\n                .on('message', message => {\n                    if (message.action === 'finish') {\n                        const { data } = message;\n                        const messageWithLogs = { ...data, tstConsoleLogs: testimConsoleLogDataAggregates };\n                        logger.debug('Run code worker response', { messageWithLogs, transactionId });\n                        resolve(messageWithLogs);\n                    } else if (message.action === 'progress') {\n                        testimConsoleLogDataAggregates.push(message.data);\n                    }\n                })\n                .on('error', err => {\n                    if (err.message === 'malformed data: URI') {\n                        logger.error('Run code worker error', { err, transactionId, fileDataUrl });\n                    } else {\n                        logger.error('Run code worker error', { err, transactionId });\n                    }\n\n                    resolve({\n                        tstConsoleLogs: testimConsoleLogDataAggregates,\n                        status: 'failed',\n                        result: {\n                            resultValue: err?.toString(),\n                            exports: {},\n                            exportsTest: {},\n                            exportsGlobal: {},\n                        },\n                        success: false,\n                    });\n                })\n                .on('exit', () => {\n                    logger.debug('Run code worker has been terminated', { transactionId });\n                });\n            // context can contain methods and proxies which cannot pass.\n            thread.postMessage({ incomingParams, context: JSON.parse(JSON.stringify(context)), code });\n        }), timeout);\n    } catch (err) {\n        if (!(err instanceof TimeoutError)) {\n            throw err;\n        }\n        logger.warn('timeout to run code', { transactionId, err });\n        return {\n            tstConsoleLogs: testimConsoleLogDataAggregates,\n            status: 'failed',\n            result: {\n                // eslint-disable-next-line @typescript-eslint/no-base-to-string\n                resultValue: err?.toString(),\n                exports: {},\n                exportsTest: {},\n                exportsGlobal: {},\n            },\n            success: false,\n        };\n    } finally {\n        thread?.terminate();\n    }\n}\n\nasync function removeFolder(installFolder: string) {\n    try {\n        await fs.promises.rm(installFolder, { recursive: true, force: true });\n    } catch (err) {\n        logger.warn('failed to remove install npm packages folder', { err });\n    }\n}\n\nfunction getTransactionId(stepResultId: string, testResultId: string, stepId: string, retryIndex: number) {\n    return `${testResultId}_${stepId}_${stepResultId}_${retryIndex}`;\n}\n\nexport async function installPackage(stepId: string, testResultId: string, retryIndex: number, packageData: { packageName: string; packageVersion: string }[], stepResultId: string, timeout: number) {\n    const transactionId = getTransactionId(stepResultId, testResultId, stepId, retryIndex);\n    const { data } = await runNpmInstall(transactionId, packageData, timeout);\n    return data;\n}\n\nexport async function runCodeWithPackages(\n    code: string,\n    stepId: string,\n    incomingParams: Pick<IncomingParams, 'as' | 'nodePackageParams'>,\n    context: { [key: string]: unknown },\n    testResultId: string,\n    retryIndex: number,\n    stepResultId: string,\n    timeout: number,\n    fileDataUrl?: string,\n    s3filepath?: string,\n) {\n    const computePackagePathFromPackageJsonExports = context.computePackagePathFromPackageJsonExports || featureFlagsService.flags.computePackagePathFromPackageJsonExports.isEnabled();\n    const packageLocalLocations = Object.fromEntries(incomingParams.nodePackageParams?.map(data => {\n        if (computePackagePathFromPackageJsonExports) {\n            const commonJsPath = getLocallyInstalledCommonJsPath(data.testimPackageLocalLocation);\n            return [data.paramName, path.join(data.testimPackageLocalLocation, commonJsPath)];\n        }\n\n        return [data.paramName, data.testimPackageLocalLocation];\n    }) || []);\n    const transactionId = getTransactionId(stepResultId, testResultId, stepId, retryIndex);\n\n    if (s3filepath) {\n        const s3fileDataUrl = await getS3Artifact(s3filepath);\n        if (s3fileDataUrl) {\n            fileDataUrl = s3fileDataUrl;\n        }\n    }\n\n    if (Buffer.isBuffer(fileDataUrl)) { // Fix, S3 is returning a buffer and not a string on empty files\n        logger.debug('runCodeWithPackages: converted a buffer to base 64 string data URI', { fileDataUrl });\n        fileDataUrl = fileDataUrl.toString();\n    }\n\n    const emptyFileDataUrl = 'data:,';\n    if (fileDataUrl === 'data:') { // Fix chrome/safari bug that creates malformed data-uri for empty files\n        logger.debug('runCodeWithPackages, fileDataUrl was an empty string ', { fileDataUrl });\n        fileDataUrl = emptyFileDataUrl;\n    }\n\n    const res = await runCodeWithWorkerThread(transactionId, incomingParams, context, code, packageLocalLocations, timeout, fileDataUrl);\n    return { ...res, nodeVersion: process.version };\n}\n\nasync function runNpmInstall(transactionId: string, packageData: { packageName: string; packageVersion: string }[], timeout: number) {\n    const packages = packageData.map(data => `${data.packageName}@${data.packageVersion}`);\n    const localPackageInstallFolder = getLocalPackageInstallFolder();\n    const reuseInstallationFolder = featureFlagsService.flags.reuseCliPkgInstallFolder.isEnabled();\n    const installFolder = reuseInstallationFolder ? localPackageInstallFolder : path.join(localPackageInstallFolder, `/${transactionId}`);\n    const proxyUri = global.proxyUri;\n\n\n    async function npmInstallation() {\n        let output = '';\n        try {\n            output = await npmWrapper.installPackages(installFolder, packages, proxyUri, timeout);\n            logger.info('npm package install finished', { transactionId, output, timeout });\n            if (Number(output.trim().split(' ')[1]) < packages.length) {\n                // TODO: I am not sure changing this to an error would be safe.\n                // eslint-disable-next-line @typescript-eslint/only-throw-error\n                throw 'npm package install failed, couldn\\'t install all packages';\n            }\n            const packageDataWithVersions = packageData.map(pData => {\n                const version = npmWrapper.getLocallyInstalledPackageVersion(installFolder, pData.packageName);\n                return {\n                    ...pData,\n                    packageFullName: `${pData.packageName}@${version}`,\n                    packageLocalLocation: path.resolve(installFolder, 'node_modules', pData.packageName),\n                };\n            });\n\n            return { data: packageDataWithVersions, installFolder };\n        } catch (err) {\n            logger.warn('npm package install failed', { transactionId, err });\n            throw err;\n        }\n    }\n\n    try {\n        return await utils.promiseTimeout(npmInstallation(), timeout);\n    } catch (err) {\n        if (err instanceof TimeoutError) {\n            logger.warn('timeout to install package', { packages, transactionId, err, timeout });\n        }\n        throw err;\n    }\n}\n\nfunction getLocalPackageInstallFolder() {\n    return path.join(os.tmpdir(), '/testim_local_packages');\n}\n\nexport function cleanLocalPackageInstallFolder() {\n    const localPackageInstallFolder = getLocalPackageInstallFolder();\n    return removeFolder(localPackageInstallFolder);\n}\n\n// clean local\ncleanLocalPackageInstallFolder()\n    .catch(err => logger.warn('failed to clean local package folder', { err }));\n\n", "import * as service from '../agent/routers/cliJsCode/service';\nimport { TimeoutError } from '../errors';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport type { ProjectData } from '../runOptions';\nimport type { WebDriver } from '../player/webdriver';\nimport type { LauncherDriverType } from '../player/chromeLauncherTestPlayer';\nimport type { SerializableRemoteObject } from 'clickim/src/background/stepActions/remoteStepActionMixin';\n\nfunction isExceedingMaxResultSize(data: { result: { resultValue: any; exports: object; exportsTest: object; exportsGlobal: object }; tstConsoleLogs: service.ConsoleItem[] }, project: ProjectData) {\n    try {\n        const shouldEnforceMaxSize = project.defaults.enforceMaximumJsResultSize;\n        const maximumJsResultSize = featureFlagsService.flags.maximumJsResultSize.getValue();\n        const dataSizeExceeded = JSON.stringify(data).length > maximumJsResultSize;\n        if (!shouldEnforceMaxSize) {\n            return false;\n        }\n        return dataSizeExceeded;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport const run = async (browser: WebDriver | LauncherDriverType, step: SerializableRemoteObject, projectData: ProjectData) => {\n    const {\n        code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, runTimeout, fileDataUrl, s3filepath,\n    } = step.data;\n    try {\n        const data = await service.runCodeWithPackages(code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, runTimeout, fileDataUrl, s3filepath);\n        if (data && isExceedingMaxResultSize({ result: data.result, tstConsoleLogs: data.tstConsoleLogs }, projectData)) {\n            return {\n                code: 'js-result-max-size-exceeded',\n                success: false,\n            };\n        }\n        return { data, success: true };\n    } catch (err) {\n        if (err instanceof TimeoutError) {\n            throw new Error('Timeout while running action');\n        }\n        throw err;\n    }\n};\n", "import * as service from '../agent/routers/cliJsCode/service';\nimport { NpmPackageError, TimeoutError } from '../errors';\nimport type { WebDriver } from '../player/webdriver';\nimport type { LauncherDriverType } from '../player/chromeLauncherTestPlayer';\nimport type { SerializableRemoteObject } from 'clickim/src/background/stepActions/remoteStepActionMixin';\n\nexport const run = async (browser: WebDriver | LauncherDriverType, step: SerializableRemoteObject) => {\n    const { stepId, testResultId, retryIndex, stepResultId, packageData, timeout } = step.data;\n    try {\n        const data = await service.installPackage(stepId, testResultId, retryIndex, packageData, stepResultId, timeout);\n        return { data, success: true };\n    } catch (err) {\n        if (err instanceof NpmPackageError) {\n            return {\n                success: false,\n                code: 'invalid-node-package',\n                message: err.message,\n            };\n        }\n        if (err instanceof TimeoutError) {\n            return {\n                success: false,\n                code: 'timeout',\n            };\n        }\n        throw err;\n    }\n};\n", "import * as cliJsStepPlayback from './cliJsStepPlayback';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport * as nodePackageStepPlayback from './nodePackageStepPlayback';\nimport { getLogger } from '../commons/logger';\nimport type { RunnerOptions } from '../runOptions';\nimport type { WebDriver } from '../player/webdriver';\nimport type { LauncherDriverType } from '../player/chromeLauncherTestPlayer';\nimport type { SerializableRemoteObject } from 'clickim/src/background/stepActions/remoteStepActionMixin';\n\nconst logger = getLogger('step-playback');\n\ntype RemoteStepPlayback = typeof cliJsStepPlayback | typeof nodePackageStepPlayback;\nconst playbacks: Partial<{ [stepType in SerializableRemoteObject['type']]: RemoteStepPlayback }> = {\n    'cli-validation-code-step': cliJsStepPlayback,\n    'cli-wait-for-code-step': cliJsStepPlayback,\n    'cli-action-code-step': cliJsStepPlayback,\n    'cli-api-code-step': cliJsStepPlayback,\n    'cli-condition-step': cliJsStepPlayback,\n    'cli-download-code-step': cliJsStepPlayback,\n    'node-package': nodePackageStepPlayback,\n};\n\nasync function saveRemoteStep(projectId: string, resultId: string, stepId: string, remoteStepData: object) {\n    try {\n        return await testimServicesApi.saveRemoteStep(projectId, resultId, stepId, remoteStepData);\n    } catch (e) {\n        logger.error('failed to report remote step state', { projectId, resultId, stepId });\n        return undefined;\n    }\n}\n\nasync function onCompleted(projectId: string, resultId: string, stepId: string, runResult: object | undefined, sessionId: string | undefined) {\n    logger.info('finished to run remote step', { stepId, sessionId });\n    const remoteStepData = {\n        status: 'completed',\n        success: true,\n        failureReason: null,\n        data: runResult,\n    };\n\n    return await saveRemoteStep(projectId, resultId, stepId, remoteStepData);\n}\n\nasync function onFailed(projectId: string, resultId: string, stepId: string, failureReason: string, sessionId: string | undefined) {\n    logger.info('failed to run remote step', { stepId, sessionId, failureReason });\n    const remoteStepData = {\n        status: 'completed',\n        success: false,\n        failureReason,\n    };\n\n    return await saveRemoteStep(projectId, resultId, stepId, remoteStepData);\n}\n\nexport async function executeStep(options: RunnerOptions, driver: WebDriver | LauncherDriverType, step: SerializableRemoteObject | undefined, resultId: string) {\n    if (!step?.type || step.status === 'completed') {\n        return undefined;\n    }\n\n    const { project: projectId, projectData } = options;\n    const stepType = step.type;\n    const sessionId = driver.getSessionId();\n    const stepId = step.id;\n    logger.info('start play remote step', { stepType, stepId, sessionId });\n\n    const playback = playbacks[stepType];\n    if (!playback) {\n        return await onFailed(projectId, resultId, stepId, `Failed to find step type ${stepType}`, sessionId);\n    }\n\n    try {\n        const runResult = await playback.run(driver, step, projectData!);\n        return await onCompleted(projectId, resultId, stepId, runResult, sessionId);\n    } catch (err) {\n        return await onFailed(projectId, resultId, stepId, err.message, sessionId);\n    }\n}\n", "import * as _ from 'lodash';\nimport * as localRunnerCache from './runnerFileCache';\nimport * as servicesApi from './testimServicesApi';\nimport { promiseMap } from '../utils';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestBundle } from 'clickim/src/common/api/testimTestApi';\n\nconst TEN_HOURS = 1000 * 60 * 60 * 10;\n\nexport async function preloadTests(options: RunnerOptions): Promise<Record<string, TestBundle>> {\n    if (!Array.isArray(options.testId) || !options.testId.length) {\n        return {};\n    }\n    const opts = {\n        branch: options.branch,\n        projectId: options.project,\n    };\n    return await localRunnerCache.memoize(async () => {\n        const results = await promiseMap(options.testId, testId => servicesApi.loadTest({ ...opts, testId }), { concurrency: 2 });\n        return _.keyBy(results, 'testData.id');\n    }, 'loadTests', TEN_HOURS, [opts, options.testId])();\n}\n", "import * as utils from '../../utils';\nimport * as testimCustomToken from '../testimCustomToken';\nimport WebSocket from 'ws';\nimport { EventEmitter } from 'events';\nimport { getLogger } from '../logger';\nimport { WEBSOCKET_HOST } from '../config';\n\nconst logger = getLogger('socket-service');\nconst WAIT_BETWEEN_RECONNECT_MS = 5000;\n\nclass SocketService extends EventEmitter {\n    onConnect?: VoidFunction;\n    clientId = utils.guid();\n    ws: WebSocket | null = null;\n    filterMap: { [key: string]: { query: object; id: string; type: string[]; fullDocument: boolean } } = {};\n    // @ts-expect-error We are incorrectly overriding the EventEmitter base class\n    override listeners: { [listenerName: string]: Array<(data: any) => void> } = {};\n\n    onReconnect(projectId: string) {\n        logger.info('test result websocket re-connect');\n        setTimeout(() => this.connect(projectId), WAIT_BETWEEN_RECONNECT_MS);\n    }\n\n    formatUrl(url: string) {\n        if (url.startsWith('http://')) {\n            return url.replace('http://', 'ws://');\n        }\n\n        if (url.startsWith('https://')) {\n            return url.replace('https://', 'wss://');\n        }\n\n        return url;\n    }\n\n    parseEvent(event: Buffer) {\n        try {\n            // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n            return JSON.parse(event);\n        } catch (err) {\n            logger.error('failed to parse or trigger event', { err });\n        }\n        return undefined;\n    }\n\n    connect(projectId: string) {\n        const wsBaseUrl = this.formatUrl(WEBSOCKET_HOST);\n        return testimCustomToken.getCustomTokenV3()\n            .then(token => new Promise<void>((resolve) => {\n                const options = {\n                    ...(global.proxyUri && { agent: new global.ProxyAgent!(global.proxyUri) }),\n                };\n                this.ws = new WebSocket(`${wsBaseUrl}?projectId=${projectId}&clientId=${this.clientId}&token=${token}`, options);\n\n                this.ws.on('open', () => {\n                    logger.info('websocket opened');\n                    this.reSendAllExistingFilters();\n                    this.onConnect?.();\n                    return resolve();\n                });\n\n                this.ws.on('close', (event) => {\n                    logger.info('websocket closed', { event });\n                    if (!this.ws || this.ws.readyState === WebSocket.CLOSED) {\n                        this.onReconnect(projectId);\n                    }\n                });\n\n                this.ws.on('error', (event) => {\n                    logger.info('websocket error', { event });\n                });\n\n                this.ws.on('message', (event) => {\n                    const evObject = this.parseEvent(event as Buffer);\n                    if (evObject?.type) {\n                        this.emit(evObject.type, evObject.data);\n                    }\n                });\n            }));\n    }\n\n    // this is private because our sockets are supposed to be read-only to\n    // external consumers and writes need to happen through the REST API\n    // this is important since recovery of messages is the case of reconnects is\n    // done in the code calling sendMessage and not in sendMessage itself\n    sendMessage(msg: any) {\n        if (!this.ws) {\n            logger.warn('tried to send error when websocket was disconnected');\n            return;\n        }\n        try {\n            this.ws.send(JSON.stringify(msg));\n        } catch (err) {\n            logger.error('failed to stringify message for sending', { err });\n        }\n    }\n\n    listenOnce<T = any>(eventName: string, eventMatcher: (data: T) => boolean, listener: (data: T) => void) {\n        const onEvent = (data: T) => {\n            if (eventMatcher(data)) {\n                listener(data);\n                this.removeListener(eventName, onEvent);\n            }\n        };\n\n        this.on(eventName, onEvent);\n    }\n\n    listenTo<T = any>(key: string, eventName: string | string[], eventMatcher: (data: T) => boolean, listener: (data: T) => void) {\n        //TODO - Consider doing key:value event name subscriptions here, routing inside the .on('message' into an event name based on the key and removing the listeners array.\n        function fireIfSameMatchEventMatcher(data: T) {\n            if (eventMatcher(data)) {\n                listener(data);\n            }\n        }\n\n        const eventNameArray = Array.isArray(eventName) ? eventName : [eventName];\n        eventNameArray.forEach(name => {\n            this.listeners[`${key}:${name}`] ||= [];\n            const _listener = fireIfSameMatchEventMatcher.bind(this);\n            this.listeners[`${key}:${name}`].push(_listener);\n            this.on(name, _listener);\n        });\n    }\n\n    reSendAllExistingFilters() {\n        Object.keys(this.filterMap).forEach(key => {\n            const filter = this.filterMap[key];\n            this.sendMessage({ type: 'add-filter', filter });\n        });\n    }\n\n    addFilter<T extends { id: string } = any>(key: string, query: object, type: string[], returnFullDocument = false) {\n        return new Promise<T>(resolve => {\n            const filterId = utils.guid();\n            const filter = { query, id: filterId, type, fullDocument: returnFullDocument };\n            this.listenOnce('add-filter:done', data => data.id === filterId, resolve as (data: T) => void);\n            this.sendMessage({ type: 'add-filter', filter });\n            this.filterMap[key] = filter;\n        });\n    }\n\n    removeListeners(key: string, typeArray: string[]) {\n        if (Object.keys(this.listeners).length === 0) {\n            return;\n        }\n        typeArray.forEach(name => {\n            const listeners = this.listeners[`${key}:${name}`];\n            if (listeners) {\n                delete this.listeners[`${key}:${name}`];\n                listeners.forEach(listener => this.removeListener(name, listener));\n            }\n        });\n    }\n\n    removeFilter(key: string, type: string | string[]) {\n        const filter = this.filterMap[key];\n        if (!filter) {\n            return;\n        }\n\n        const typeArray = Array.isArray(type) ? type : [type];\n        this.removeListeners(key, typeArray);\n        delete this.filterMap[key];\n        this.sendMessage({ type: 'remove-filter', filter });\n    }\n}\n\nexport const socketService = new SocketService();\n", "import pRetry from 'p-retry';\nimport * as io from 'socket.io-client';\nimport * as config from '../config';\nimport * as utils from '../../utils';\nimport { getLogger } from '../logger';\n\nconst MAX_SOCKET_RECONNECT_ATTEMPT = 50;\nconst MAX_RECONNECT_ATTEMPT_BEFORE_SWITCH = 10;\nconst EMIT_PROMISE_TIMEOUT = 5000;\nconst POLLING_TRANSPORT_TIMEOUT_MS = 10 * 1000;\n\nconst logger = getLogger('base socket service');\n\nexport class BaseSocketService {\n    attempts = 0;\n    rooms: { [testResultId: string]: string | undefined } = {};\n    emitPromiseQueue: undefined | Promise<void> = undefined;\n    emitJoinRoom?(resultId: string, testId?: string): void;\n    url?: string;\n    _socket?: io.Socket;\n    isAllowedWS?: boolean;\n    prevErr?: any;\n    onConnect?(): void;\n\n    joinToMultipleResults() {\n        const testResultIds = Object.keys(this.rooms);\n        logger.info('re-join all existing rooms', { testResultIds });\n        testResultIds.forEach(resultId => {\n            const testId = this.rooms[resultId];\n            this.emitJoinRoom?.(resultId, testId);\n        });\n    }\n\n    joinRoom(resultId: string, testId?: string) {\n        this.rooms[resultId] = testId;\n    }\n\n    leaveRoom(resultId: string) {\n        delete this.rooms[resultId];\n    }\n\n    addSocketHandlers() {\n        const socketError = (method: string, err: any) => {\n            let transport = 'websocket';\n            try {\n                transport = this._socket!.io.engine.transport.name;\n            } catch (e) {\n                /* empty */\n            }\n            logger.error(`Error in SocketService websocket _${method}_ socket ${this._socket!.id} ` +\n            `is ${this.url} over ${transport}. Reconnect attempts ${this.attempts}. Error is: ${err?.message}`);\n        };\n\n        this._socket!.on('reconnect_attempt', (attempt) => {\n            socketError('reconnect_attempt', { message: 'reconnect attempt', attempt });\n            this.attempts++;\n            if (this.attempts === MAX_RECONNECT_ATTEMPT_BEFORE_SWITCH && !this.isAllowedWS) {\n                this._socket!.io.opts.transports = ['polling'];\n                this._socket!.io.opts.upgrade = false;\n            }\n            if (this.attempts >= MAX_SOCKET_RECONNECT_ATTEMPT) {\n                throw new Error('Can\\'t connect to Testim Servers.\\n' +\n                    `Action required: Please allow opening a websockets connection to ${config.SERVICES_HOST()} in your firewall/proxy`);\n            }\n        });\n\n        this._socket!.on('connect_error', (err) => {\n            socketError('connect_error', err);\n        });\n\n        this._socket!.on('connect_timeout', (err) => {\n            socketError('connect_timeout', err);\n        });\n\n        this._socket!.on('error', err => {\n            socketError('error', err);\n        });\n\n        this._socket!.on('reconnect_error', err => {\n            if (this.prevErr && this.prevErr.type === err.type) {\n                return;\n            }\n            this.prevErr = err;\n            socketError('reconnect_error', err);\n        });\n\n        this._socket!.on('reconnect', () => {\n            logger.info('reconnect to socket and re-join to rooms');\n            this.joinToMultipleResults();\n        });\n\n        this._socket!.on('connect', () => {\n            this.attempts = 0;\n            if (this.isAllowedWS === undefined) {\n                this.isAllowedWS = this._socket!.io.engine.transport && this._socket!.io.engine.transport.name === 'websocket';\n            }\n            this.onConnect?.();\n        });\n    }\n\n    initNewSocket(projectId: string, ns: string) {\n        const opts = {\n            query: { projectId },\n            requestTimeout: POLLING_TRANSPORT_TIMEOUT_MS,\n            transports: ['websocket'],\n            upgrade: false,\n            forceNew: true,\n            rejectUnauthorized: process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0',\n            ...(global.caFileContent && { ca: global.caFileContent as string }),\n            ...(global.proxyUri && { agent: new global.ProxyAgent!(global.proxyUri) as any }),\n        };\n\n        return new Promise<void>(resolve => {\n            this.url = `${config.SERVICES_HOST()}/${ns}`;\n            this._socket = io.connect(this.url, opts);\n            this.addSocketHandlers();\n            this._socket.on('connect', resolve);\n            this._socket.open();\n        });\n    }\n\n    init(projectId: string, ns: string) {\n        const opts = {\n            query: { projectId },\n            requestTimeout: POLLING_TRANSPORT_TIMEOUT_MS,\n            transports: ['websocket'],\n            upgrade: false,\n            rejectUnauthorized: process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0',\n            ...(global.caFileContent && { ca: global.caFileContent as string }),\n            ...(global.proxyUri && { agent: new global.ProxyAgent!(global.proxyUri) as any }),\n        };\n\n        this.url = `${config.SERVICES_HOST()}/${ns}`;\n        this._socket = io.connect(this.url, opts);\n        this.addSocketHandlers();\n    }\n\n    emitPromise(eventName: string, eventData: any) {\n        const errorneousEvents: { [eventName: string]: any } = {};\n\n        const emitAndWait = () => new Promise<void>((resolve, reject) => {\n            this._socket!.emit(eventName, eventData, (data?: { success?: boolean }) => {\n                if (data?.success) {\n                    return resolve();\n                }\n                errorneousEvents[eventName] = eventData;\n\n                return reject(new Error('bad ack'));\n            });\n        });\n\n        this.emitPromiseQueue = (this.emitPromiseQueue || Promise.resolve())\n            .then(() => pRetry(() => utils.promiseTimeout(emitAndWait(), EMIT_PROMISE_TIMEOUT), { retries: 200, minTimeout: 3000, factor: 1 }))\n            .finally(() => {\n                if (Object.keys(errorneousEvents).length > 0) {\n                    logger.error('Bad acknowledge from socket emit', { errorneousEvents });\n                }\n            });\n\n        return this.emitPromiseQueue;\n    }\n}\n", "import { BaseSocketService } from './baseSocketServiceSocketIO';\n\nclass RemoteStepServiceSocketIO extends BaseSocketService {\n    listeners: { [resultId: string]: (data: any) => void } = {};\n\n    override init(projectId: string) {\n        super.init(projectId, 'remoteStep');\n        this.listeners = {};\n    }\n\n    override emitJoinRoom(resultId: string) {\n        return this.emitPromise('remoteStep:join', { resultId });\n    }\n\n    emitLeaveRoom(resultId: string) {\n        return this.emitPromise('remoteStep:leave', { resultId });\n    }\n\n    async joinToRemoteStep(resultId: string) {\n        if (this.rooms[resultId]) {\n            return;\n        }\n        this.joinRoom(resultId);\n        await this.emitJoinRoom(resultId);\n    }\n\n    listenToRemoteStep(resultId: string, onRemoteStep: (data: any) => void) {\n        if (this.listeners[resultId]) {\n            this._socket!.off('remoteStep:saved', this.listeners[resultId]);\n            delete this.listeners[resultId];\n        }\n\n        this.listeners[resultId] = data => {\n            if (data.resultId === resultId && data.remoteStep && data.remoteStep.status === 'pending') {\n                onRemoteStep(data.remoteStep);\n            }\n        };\n        this._socket!.on('remoteStep:saved', this.listeners[resultId]);\n    }\n\n    async unlistenToRemoteStep(resultId: string) {\n        if (!this.listeners[resultId]) {\n            return;\n        }\n\n        this.leaveRoom(resultId);\n        this._socket!.off('remoteStep:saved', this.listeners[resultId]);\n        delete this.listeners[resultId];\n        await this.emitLeaveRoom(resultId);\n    }\n}\n\nexport const remoteStepServiceSocketIO = new RemoteStepServiceSocketIO();\n", "import { socketService } from './socketService';\nimport { socketEventTypes } from '../constants';\nimport { featureFlagsService } from '../featureFlagsService';\nimport type { SerializableRemoteObject } from 'clickim/src/background/stepActions/remoteStepActionMixin';\n\nconst { REMOTE_STEP_SAVED } = socketEventTypes;\n\nlet remoteStepServiceSocketIO: typeof import('./remoteStepServiceSocketIO')['remoteStepServiceSocketIO']; // required lazily since it takes 150ms to load\n\nclass RemoteStepService {\n    async init(projectId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return;\n        }\n        remoteStepServiceSocketIO = (await import('./remoteStepServiceSocketIO')).remoteStepServiceSocketIO;\n        remoteStepServiceSocketIO.init(projectId);\n    }\n\n    joinToRemoteStep(resultId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return socketService.addFilter(`${resultId}:remoteStep`, { resultId }, [REMOTE_STEP_SAVED]);\n        }\n        return remoteStepServiceSocketIO.joinToRemoteStep(resultId);\n    }\n\n    listenToRemoteStep(resultId: string, onRemoteStep: (step: SerializableRemoteObject) => void) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.listenTo(\n                `${resultId}:remoteStep`,\n                [REMOTE_STEP_SAVED],\n                (data: { resultId: string; stepId: string; remoteStep: SerializableRemoteObject }) => data.resultId === resultId && data.remoteStep && data.remoteStep.status === 'pending',\n                (data: { resultId: string; stepId: string; remoteStep: SerializableRemoteObject }) => onRemoteStep(data.remoteStep),\n            );\n            return;\n        }\n        remoteStepServiceSocketIO.listenToRemoteStep(resultId, onRemoteStep);\n    }\n\n    unlistenToRemoteStep(resultId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.removeFilter(`${resultId}:remoteStep`, [REMOTE_STEP_SAVED]);\n            return Promise.resolve();\n        }\n        return remoteStepServiceSocketIO.unlistenToRemoteStep(resultId);\n    }\n}\n\nexport const remoteStepService = new RemoteStepService();\n", "import { BaseSocketService } from './baseSocketServiceSocketIO';\n\nclass TestResultServiceSocketIO extends BaseSocketService {\n    listeners: { [resultId: string]: (data: any) => void } = {};\n\n    init(projectId: string) {\n        super.init(projectId, 'testResult');\n        this.listeners = {};\n    }\n\n    listenToTestResult(resultId: string, testId: string, onTestResultStatus: (testResult: any) => void) {\n        if (this.listeners[resultId]) {\n            this._socket!.off('testResult:updated', this.listeners[resultId]);\n            delete this.listeners[resultId];\n        }\n\n        this.listeners[resultId] = data => {\n            if (data.resultId === resultId && data.testId === testId) {\n                onTestResultStatus(data.testResult);\n            }\n        };\n\n        this._socket!.on('testResult:updated', this.listeners[resultId]);\n    }\n\n    override emitJoinRoom(resultId: string, testId: string) {\n        return this.emitPromise('testResult:join', {\n            resultId,\n            testId,\n        });\n    }\n\n    async joinToTestResult(resultId: string, testId: string) {\n        if (!this.rooms[resultId]) {\n            this.joinRoom(resultId, testId);\n        }\n        await this.emitJoinRoom(resultId, testId); //we want to always emit \"join room\" incase we reconnected to a new ws service instance\n    }\n\n    emitLeaveRoom(resultId: string, testId: string) {\n        return this.emitPromise('testResult:leave', {\n            resultId,\n            testId,\n        });\n    }\n\n    leaveTestResult(resultId: string, testId: string) {\n        if (!this.listeners[resultId]) {\n            return Promise.resolve();\n        }\n\n        this.leaveRoom(resultId);\n        this._socket!.off('testResult:updated', this.listeners[resultId]);\n        delete this.listeners[resultId];\n        return this.emitLeaveRoom(resultId, testId);\n    }\n\n    getSocket() {\n        return this._socket;\n    }\n}\n\nexport const testResultServiceSocketIO = new TestResultServiceSocketIO();\n", "import { EventEmitter } from 'events';\nimport { socketService } from './socketService';\nimport { socketEventTypes } from '../constants';\nimport { featureFlagsService } from '../featureFlagsService';\nimport { testResultServiceSocketIO } from './testResultServiceSocketIO';\n\nclass TestResultService extends EventEmitter {\n    init(projectId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.onConnect = () => this.emit('socket-connected');\n            return;\n        }\n        testResultServiceSocketIO.init(projectId);\n        testResultServiceSocketIO.onConnect = () => this.emit('socket-connected');\n    }\n\n    joinToTestResult(resultId: string, testId: string) {\n        //TODO - Consider unifying the joinToTestResult and listenToTestResult flows\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return socketService.addFilter(`${resultId}:testResult`, { resultId, testId }, [\n                socketEventTypes.TEST_RESULT_UPDATED,\n                socketEventTypes.TEST_RESULT_CREATED,\n            ]);\n        }\n        return testResultServiceSocketIO.joinToTestResult(resultId, testId);\n    }\n\n    async leaveTestResult(resultId: string, testId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.removeFilter(`${resultId}:testResult`, [socketEventTypes.TEST_RESULT_UPDATED, socketEventTypes.TEST_RESULT_CREATED]);\n            return;\n        }\n\n        await testResultServiceSocketIO.leaveTestResult(resultId, testId);\n    }\n\n    listenToTestResult(resultId: string, testId: string, onTestResultStatus: (testResult: any) => void) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.listenTo(\n                `${resultId}:testResult`,\n                [socketEventTypes.TEST_RESULT_UPDATED, socketEventTypes.TEST_RESULT_CREATED],\n                (data: any) => data.resultId === resultId && data.testId === testId,\n                (data: any) => onTestResultStatus(data),\n            );\n            return;\n        }\n\n        testResultServiceSocketIO.listenToTestResult(resultId, testId, onTestResultStatus);\n    }\n\n    // Unused\n    getSocket() {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return undefined;\n        }\n        return testResultServiceSocketIO.getSocket();\n    }\n}\n\nexport const testResultService = new TestResultService();\n", "import * as _ from 'lodash';\nimport * as utils from './utils';\nimport * as config from './commons/config';\nimport * as perf from './commons/performance-logger';\nimport * as analytics from './commons/testimAnalytics';\nimport * as testimCustomToken from './commons/testimCustomToken';\nimport * as testimServicesApi from './commons/testimServicesApi';\nimport * as remoteStepPlayback from './stepPlayers/remoteStepPlayback';\nimport pRetry from 'p-retry';\nimport { URL } from 'node:url';\nimport { getLogger } from './commons/logger';\nimport { preloadTests } from './commons/preloadTests';\nimport { SeleniumPerfStats } from './commons/SeleniumPerfStats';\nimport { timeoutMessages, MOBILE_APP_SOURCE } from './commons/constants';\nimport { remoteStepService } from './commons/socket/remoteStepService';\nimport { testResultService } from './commons/socket/testResultService';\nimport { loadTest } from './commons/testimServicesApi';\nimport type { GridType } from './commons/constants';\nimport type { RunnerOptions } from './runOptions';\nimport type { CDPTestRunner } from './cdpTestRunner';\nimport type { TestRunStatus } from './testRunStatus';\nimport type { ExecutionList } from './runners/TestPlanRunner';\nimport type { AndroidApp, iOSApp } from 'clickim/src/background/mobile/types';\nimport type { RawMobileAppVersion } from 'services/src/commons/mongo/models/mobileAppVersion';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\nimport type { RunParams as ClickimRunParams } from 'clickim/src/background/remoteRequestListener';\nimport type { TestOptimization } from '../../services/src/commons/mongo/models/testOptimization.ts';\n\nconst logger = getLogger('test-run-handler');\nconst RETRIES_ON_TIMEOUT = 3;\nconst MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE = 20 * 1000; // max size, in characters, of stringified run data sent over URL params. Chosen arbitrarily, this value should be changed according to data.\nconst canSendRunDataOverUrl = (runData: object) => JSON.stringify(runData).length < MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE;\nconst testCouldNotBeStarted = 'Test couldn\\'t be started';\ntype TestResult = utils.AwaitedReturnType<typeof testimServicesApi.getTestResults>;\n\nexport interface NativeAppData {\n    name: string;\n    activity?: string;\n    packageName?: string;\n    version: string;\n    id?: string;\n}\n\ntype GridAppPath = 'testimTdcAppId' | 'headSpinAppId' | 'testimTvcAppId' | 'browserStackAppId' | 'usSauceLabsAppId' | 'euSauceLabsAppId' | 'pCloudyAppId';\n\nexport class TestRunHandler {\n    public readonly seleniumPerfStats = new SeleniumPerfStats();\n    public _totalRetryCount = 1;\n    private clearBrowser: true | undefined;\n    private _sessionId: string | undefined;\n    private _originalTestResultId: string | undefined;\n    private _previousTestResultId: string | undefined;\n    private _wasCompletedOnStartedCheck: TestResult | undefined;\n    private _retryCount = 1;\n    private _timeoutRetryCount = 1;\n    private testInfraIssueRetryCount = 2;\n    private isRerunOnTestStartTimeOutError = false;\n    private clearTestResultFinished: Promise<{ success: boolean } | undefined> = Promise.resolve(undefined);\n    private _baseUrl: string | undefined;\n    private _testResultId;\n    private readonly _testStatus;\n    private readonly _testId;\n    private readonly _testOptimization?: TestOptimization;\n    private _nativeApp: RawMobileAppVersion | AndroidApp | iOSApp | undefined;\n    private readonly _maxRetryCount;\n    private readonly _remoteRunId;\n    private readonly _runConfig;\n    private readonly _testName: string | undefined;\n    private readonly _overrideTestConfigId: string | undefined;\n    private readonly _overrideTestConfig;\n\n    constructor(\n        private readonly _executionId: string,\n        private readonly _executionName: string,\n        test: ExecutionList[number],\n        private readonly _options: RunnerOptions,\n        private readonly _branch: string,\n        private readonly _testRunStatus: TestRunStatus,\n    ) {\n        this._testStatus = (test as TestWithCustomTestDataAndRunConfig).testStatus;\n        this._testId = test.testId;\n        this._testOptimization = (test as TestWithCustomTestDataAndRunConfig).testOptimization;\n        this._testName = (test as TestWithCustomTestDataAndRunConfig).name;\n        this._testResultId = test.resultId;\n        this._baseUrl = _options.baseUrl || (test as TestWithCustomTestDataAndRunConfig).baseUrl || (test as TestWithCustomTestDataAndRunConfig).testConfig.baseUrl;\n        this._nativeApp = (test as TestWithCustomTestDataAndRunConfig).nativeApp;\n        this._overrideTestConfig = (test as any).overrideTestConfig || (test as TestWithCustomTestDataAndRunConfig).testConfig;\n        this._overrideTestConfigId = (test as any).overrideTestConfig?.id;\n        this._maxRetryCount = _options.retries;\n        this._remoteRunId = _options.remoteRunId;\n\n        const shouldUpdateConfig = !(test as any).runConfig?.isMobileWeb && _options.browser;\n        this._runConfig = shouldUpdateConfig ? utils.getRunConfigByBrowserName(_options.browser!, _options.saucelabs, _options.browserstack) : (test as TestWithCustomTestDataAndRunConfig).runConfig;\n    }\n\n    public async waitForExecutionStartedFinished() {\n        await this._testRunStatus.waitForExecutionStartedFinished();\n        return await this.clearTestResultFinished;\n    }\n\n    public get testStatus() {\n        return this._testStatus;\n    }\n\n    public get runMode() {\n        return this._options.mode;\n    }\n\n    public get runConfig() {\n        return this._runConfig;\n    }\n\n    public get testResultId() {\n        return this._testResultId;\n    }\n\n    public get baseUrl() {\n        return this._baseUrl;\n    }\n\n    public set baseUrl(baseUrl) {\n        this._baseUrl = baseUrl;\n    }\n\n    public get executionId() {\n        return this._executionId;\n    }\n\n    public get nativeApp() {\n        return this._nativeApp as RawMobileAppVersion;\n    }\n\n    public get executionName() {\n        return this._executionName;\n    }\n\n    public getSauceLabsAppPath(host: string, app?: RawMobileAppVersion) {\n        if (this.isAppFromDevice) {\n            return null;\n        }\n        if (app) {\n            return host.includes('us-west-1') ? app.usSauceLabsAppId : app.euSauceLabsAppId;\n        }\n        if (host.includes('us-west-1')) {\n            return (this._nativeApp as RawMobileAppVersion)?.usSauceLabsAppId;\n        }\n        return (this._nativeApp as RawMobileAppVersion)?.euSauceLabsAppId;\n    }\n    // TODO:[2024-04-20] - remove this method and use getAppPathByGridType\n    public getAppPath(path: GridAppPath, app?: RawMobileAppVersion) {\n        if (this.isAppFromDevice) {\n            return null;\n        }\n        if (app) {\n            return app[path];\n        }\n        return (this._nativeApp as RawMobileAppVersion)?.[path];\n    }\n    public getAppPathByGridType(gridType: GridType, gridId: string, app?: RawMobileAppVersion) {\n        if (this.isAppFromDevice) {\n            return null;\n        }\n        if (app) {\n            return app.gridData?.[gridType]?.[gridId];\n        }\n        if (this._nativeApp && 'gridData' in this._nativeApp) {\n            return this._nativeApp.gridData?.[gridType]?.[gridId];\n        }\n        return null;\n    }\n\n    public get appPackageNameOrBundleId(): string | null {\n        if (!this.nativeAppMetadata) {\n            return null;\n        }\n        return this.nativeAppMetadata.id || this.nativeAppMetadata.packageName!;\n    }\n\n    public get androidActivityWait() {\n        // activity always exists for android.\n        const activity = this.nativeAppMetadata?.activity;\n        if (!activity) {\n            return null;\n        }\n        const lastValue = activity.split('.').pop()!;\n        return activity.replace(lastValue, '*');\n    }\n\n    public get isAppFromDevice() {\n        return utils.isAppFromDevice(this._nativeApp);\n    }\n\n    public get isAppForIosVirtualDevice() {\n        const gridType = this._options.gridData?.type;\n        return utils.shouldBlockVirtualIosBuild(this._nativeApp, gridType);\n    }\n\n    public get getAppSource() {\n        if (!this._nativeApp) {\n            return undefined;\n        }\n        return this.isAppFromDevice ? MOBILE_APP_SOURCE.FROM_DEVICE : MOBILE_APP_SOURCE.FROM_LIBRARY;\n    }\n\n    public get downloadableAppPublicLink() {\n        if (!this._nativeApp) {\n            return null;\n        }\n        if ('filePath' in this._nativeApp) {\n            return `${config.SERVICES_HOST()}/storage${this._nativeApp.filePath}?access_token=${this._options.authData!.token}`;\n        }\n        return null;\n    }\n\n    public get mobileApp() {\n        return this._nativeApp;\n    }\n\n    public set nativeApp(app: RawMobileAppVersion) {\n        this._nativeApp = app;\n    }\n\n    public get nativeAppMetadata(): NativeAppData | null {\n        if (!this._nativeApp) {\n            return null;\n        }\n        if ('appMetadata' in this._nativeApp) {\n            return this._nativeApp.appMetadata as NativeAppData;\n        }\n        return this._nativeApp as NativeAppData;\n    }\n\n    public get branch() {\n        return this._branch;\n    }\n\n    public get sfdcCredential() {\n        return this._options.sfdcCredential;\n    }\n\n    public get remoteRunId() {\n        return this._remoteRunId;\n    }\n\n    public get overrideTestConfig() {\n        return this._overrideTestConfig;\n    }\n\n    public get overrideTestConfigId() {\n        return this._overrideTestConfigId;\n    }\n\n    public markClearBrowser() {\n        this.clearBrowser = true;\n    }\n\n    public async isTestRecordedWithEnhancedMode() {\n        const test = await loadTest({ projectId: this._options.project, testId: this.testId, branch: this.branch });\n\n        return test.domMode === 'enhanced';\n    }\n\n    private async getRunRequestParams(): Promise<ClickimRunParams> {\n        const customTokenV3 = await testimCustomToken.getCustomTokenV3();\n        const runRequestParams: ClickimRunParams = {\n            tokenV3: customTokenV3,\n            refreshToken: testimCustomToken.getRefreshToken(),\n            projectId: this._options.project,\n            executionId: this._executionId,\n            executionName: this._executionName,\n            testId: this._testId,\n            resultId: this._testResultId,\n            baseUrl: this._baseUrl,\n            branch: this._branch,\n            servicesUrl: config.EXTENSION_SERVICES_HOST(),\n            remoteRunId: this.remoteRunId,\n            previousTestResultId: this.previousTestResultId,\n            testRetryCount: this.retryCount,\n            ...(this._options.shouldMonitorPerformance && { shouldMonitorPerformance: true }),\n            ...(this._options.company && {\n                companyId: this._options.company.companyId,\n                planType: this._options.company.planType,\n                isPOC: this._options.company.isPOC,\n                isStartUp: this._options.company.isStartUp,\n            }),\n            ...(this._options.collectCodeCoverage && { codeCoverageUrlFilter: this._options.codeCoverageUrlFilter || `${this.baseUrl}*` }),\n            ...(this._options.disableMockNetwork && { disableMockNetwork: this._options.disableMockNetwork }),\n            ...(this._options.lightweightMode && { lightweightMode: this._options.lightweightMode }),\n            ...(this.clearBrowser && { clearBrowser: true }),\n            ...(this._options.localRCASaver && { localRCASaver: this._options.localRCASaver }),\n            ...(this.sfdcCredential && { sfdcCredential: this.sfdcCredential }),\n            userAccessKey: await testimCustomToken.getUserAccessKey(),\n        };\n\n        if (this._options.disableMockNetwork) {\n            analytics.trackWithCIUser('user-disable-mock');\n        }\n\n        if (runRequestParams.lightweightMode && this._options.lightweightMode?.general) {\n            Object.assign(runRequestParams, { company: this._options.company });\n            const runData = this.runData;\n            const isRunDataSentInUrl = canSendRunDataOverUrl(runData);\n            Object.assign(runRequestParams.lightweightMode, { isRunDataSentInUrl });\n            const stringifiedLength = JSON.stringify(runData).length;\n            const testId = this.testId;\n            if (isRunDataSentInUrl) {\n                Object.assign(runRequestParams, { runData });\n\n                logger.info(`Run data sent as URL param, test id: ${testId} run data length: ${stringifiedLength}`);\n            } else {\n                logger.warn(`Run data is too big to be sent as a URL param. Test id: ${testId}, run data size: ${stringifiedLength} (limit: ${MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE} characters)`);\n            }\n            Object.assign(runRequestParams, { isLocalRun: Boolean(this._options.useLocalChromeDriver || this._options.useChromeLauncher) });\n        }\n\n        if (this._options.lightweightMode?.preloadTests && this._options.useChromeLauncher) {\n            const preloadedTests = await preloadTests(this._options);\n            Object.assign(runRequestParams, { preloadedTest: preloadedTests[runRequestParams.testId] });\n        }\n\n        return runRequestParams;\n    }\n\n    public async getRunTestUrl() {\n        const runRequestParams = await this.getRunRequestParams();\n        const url = `https://run.testim.io/?params=${encodeURIComponent(JSON.stringify(runRequestParams))}`;\n        logger.info(`Test (${this.testId}) run URL length: ${url.length}`);\n        return url;\n    }\n\n    public set sessionId(sessionId) {\n        this._sessionId = sessionId;\n    }\n\n    public get sessionId() {\n        return this._sessionId;\n    }\n\n    public get testId() {\n        return this._testId;\n    }\n\n    public get testOptimization() {\n        return this._testOptimization;\n    }\n\n    public get testName() {\n        return this._testName;\n    }\n\n    public get runParams() {\n        return this._options.runParams?.[this._testResultId] || {};\n    }\n\n    public get runData() {\n        return {\n            userParamsData: this.runParams,\n            overrideTestConfigId: this._overrideTestConfigId || null,\n        };\n    }\n\n    public async clearTestResult() {\n        const runData = {\n            ...this.runData,\n            ...(this._options.mockNetworkRules && { mockNetworkRules: this._options.mockNetworkRules }),\n        };\n        const mustClearPreviousStepResults = (this._timeoutRetryCount > 1 || this._retryCount > 1);\n\n        if (this._options.lightweightMode?.disableResults && !mustClearPreviousStepResults && canSendRunDataOverUrl(runData)) {\n            return undefined;\n        }\n\n        const uploadRunDataArtifactAndFallbackToEmptyString = async () => {\n            try {\n                return await testimServicesApi.uploadRunDataArtifact(this._options.project, this._testId, this._testResultId, runData);\n            } catch (err) {\n                logger.error('failed to upload run data artifact (runner)', { err });\n                return '';\n            }\n        };\n        const clearTestResultFinished = async () => {\n            const runDataUrl = await uploadRunDataArtifactAndFallbackToEmptyString();\n            // make sure the execution is created by now\n            await this._testRunStatus.waitForExecutionStartedFinished();\n            // we probably can save this backend call by initializing the execution\n            return testimServicesApi.clearTestResult(this._options.project, this._testResultId, this._testId, {\n                name: this._testName,\n                resultId: this._testResultId,\n                status: 'pending',\n                retryCount: this._retryCount,\n                runDataUrl, // links the run data url to the test.\n                runData: runDataUrl ? undefined : runData, // put runData in mongo if we fail to upload to S3.\n                testRetryKey: this.retryKey,\n            });\n        };\n        this.clearTestResultFinished = clearTestResultFinished();\n        return this.clearTestResultFinished;\n    }\n\n    public hasMoreRetries() {\n        return this._retryCount < this._maxRetryCount!;\n    }\n\n    public isSeleniumHubNoMatchSessionError(reason: string) {\n        const pattern = /Session \\[([a-zA-Z0-9]+)\\] not available and is not among the last \\d+ terminated sessions/;\n        return pattern.test(reason);\n    }\n\n    public isRerunOnInfraError(reason: string) {\n        return (this.isSeleniumHubNoMatchSessionError(reason) || reason === testCouldNotBeStarted || this.isRerunOnTestStartTimeOutError) && this.testInfraIssueRetryCount;\n    }\n\n    public setReRunOnTestStartTimeOutError(value: boolean) {\n        this.isRerunOnTestStartTimeOutError = value;\n    }\n\n    public decreaseInfraErrorRetry() {\n        this.testInfraIssueRetryCount--;\n    }\n\n    public get retryOnInfraErrors() {\n        return Boolean(this.testInfraIssueRetryCount);\n    }\n\n    public get retryKey(): `${number}:${number}` {\n        return `${this._retryCount}:${this._timeoutRetryCount}`;\n    }\n\n    public startNewRetry() {\n        this._retryCount++;\n        this._timeoutRetryCount = 1;\n        return this.onRetry();\n    }\n\n    public async runTestUsingCDP(cdpTestRunner: CDPTestRunner) {\n        perf.log('runTestUsingCDP');\n        const { targetInfos } = await cdpTestRunner.cdpCommand<{ targetInfos: { type: string; title: string; targetId: string }[] }>('Target.getTargets') || { targetInfos: [] };\n        const extensionNames = new Set(['Testim Editor', 'Tricentis Testim Editor', 'Service Worker chrome-extension://pebeiooilphfmbohdbhbomomkkoghoia/background/background.js']);\n        const { targetId: extensionTargetId } = targetInfos.find(target => (target.type === 'background_page' || target.type === 'service_worker') && extensionNames.has(target.title)) || {};\n        const { targetId: AUTTargetId } = targetInfos.find(target => target.type === 'page') || {};\n        if (!extensionTargetId) {\n            throw new Error('Tricentis Testim extension not found');\n        }\n        if (!AUTTargetId) {\n            throw new Error('AUT target not found');\n        }\n\n        try {\n            perf.log('before Target.attachToTarget');\n            const [extensionSession, runRequestParams] = await Promise.all([\n                cdpTestRunner.cdpCommand<{ sessionId: string } | undefined>('Target.attachToTarget', { targetId: extensionTargetId, flatten: true }),\n                this.getRunRequestParams(),\n            ]);\n            const { sessionId: extensionSessionId } = extensionSession || {};\n            perf.log('before Runtime.evaluate');\n\n            interface EvalResponse { result: { value?: any; subtype?: string; description?: string } }\n            await pRetry(async () => {\n                const { result } = await cdpTestRunner.cdpCommand<EvalResponse>('Runtime.evaluate', { expression: 'typeof runTestimTest !== \\'undefined\\'', returnByValue: true }, extensionSessionId);\n                if (!result.value) {\n                    throw new Error('runTestimTest not available on global scope');\n                }\n            }, { retries: 100, minTimeout: 30, factor: 1 });\n\n            perf.log('after wait for runTestimTest function');\n            const { result } = await cdpTestRunner.cdpCommand<EvalResponse>(\n                'Runtime.evaluate',\n                { expression: `runTestimTest(${JSON.stringify(runRequestParams)})`, awaitPromise: true, returnByValue: true },\n                extensionSessionId,\n            );\n            if (result.subtype === 'error') {\n                throw new Error(result.description);\n            }\n            perf.log('after Runtime.evaluate');\n            return result.value as TestResult | undefined;\n        } catch (err) {\n            logger.error('error running test using CDP', { err });\n            throw new Error('Error running test using CDP');\n        }\n    }\n\n    private isRetryKeyMismatch(testResult: { testRetryKey?: string }) {\n        return testResult.testRetryKey && (testResult.testRetryKey !== this.retryKey);\n    }\n\n    public validateRunConfig() {\n        const { baseUrl, runConfig: { browserValue } } = this;\n\n        if (baseUrl && browserValue === 'safari') {\n            let parsedUrl;\n            try {\n                parsedUrl = new URL(baseUrl);\n            } catch {\n                // ignore invalid URLs (missing http:// or https:// prefix)\n                return;\n            }\n            const { username, password } = parsedUrl;\n\n            if (username || password) {\n                throw new Error('Basic authentication in URL is not supported in Safari');\n            }\n        }\n    }\n\n    public onStarted(startTimeout: number) {\n        return new Promise<TestResult>(resolve => {\n            // We can't leave the test result as it may remove other listeners as well\n            // We need to implement an .off(resultId, listener) method\n            let reportedStart = false;\n            const resolveResult = (testResult: TestResult) => {\n                if (reportedStart) {\n                    return;\n                }\n                if (this.isRetryKeyMismatch(testResult)) {\n                    logger.warn(`ignoring result update for on started due to retry key mismatch, got ${testResult.testRetryKey}, current is ${this.retryKey}`, {\n                        resultId: this.testResultId,\n                        testId: this.testId,\n                    });\n                    return;\n                }\n                if (['running', 'completed'].includes(testResult.status)) {\n                    testResult.resultId = this.testResultId;\n                    if (testResult.status === 'completed' && !this.isRerunOnInfraError(testResult.reason!)) {\n                        logger.info('setting _wasCompletedOnStartedCheck to true', {\n                            testResult,\n                            resultId: this.testResultId,\n                            testId: this.testId,\n                            testRetryKey: this.retryKey,\n                        });\n                        this._wasCompletedOnStartedCheck = testResult;\n                    }\n                    reportedStart = true;\n                    resolve(testResult);\n                }\n            };\n            if (this._options.disableSockets) {\n                const timeLimit = Date.now() + startTimeout;\n                const checkIfDone = async () => {\n                    if (Date.now() > timeLimit) {\n                        return;\n                    }\n                    const { testId, testResultId, branch, _options: { project: projectId } } = this;\n\n                    try {\n                        const restResult = await testimServicesApi.getTestResults(testId, testResultId, projectId, branch);\n                        resolveResult(restResult);\n                        if (!reportedStart) {\n                            setTimeout(checkIfDone, 3000);\n                        }\n                    } catch (err) {\n                        logger.error('failed to check if done', { err });\n                        setTimeout(checkIfDone, 3000);\n                    }\n                };\n                setTimeout(checkIfDone, 3000);\n            } else {\n                testResultService.listenToTestResult(this._testResultId, this._testId, resolveResult);\n            }\n        });\n    }\n\n    public async checkViaRestAPIIfTestStarted() {\n        const { testId, testResultId, _options: { project: projectId }, branch } = this;\n        try {\n            const testResult = await testimServicesApi.getTestResults(testId, testResultId, projectId, branch);\n            const expectedStatuses = ['running', 'completed'];\n            if (expectedStatuses.includes(testResult.status)) {\n                logger.info(`get status: ${testResult.status} after not get test started status`, { testId, testResultId, branch });\n                return testResult;\n            }\n            logger.error(`test not start test status: ${testResult.status} (expected [${expectedStatuses.join(', ')}])`, { testId, testResultId, branch });\n            throw new Error(timeoutMessages.TEST_START_TIMEOUT_MSG);\n        } catch (err) {\n            logger.error('failed to get test result after test start timeout', { err, testId, testResultId, branch });\n            throw new Error(timeoutMessages.TEST_START_TIMEOUT_MSG);\n        }\n    }\n\n    public async onCompletedCleanup() {\n        if (this._options.disableSockets) {\n            return undefined;\n        }\n        return await testResultService.leaveTestResult(this._testResultId, this._testId);\n    }\n\n    public async onCompleted() {\n        let onConnected: _.DebouncedFunc<() => Promise<boolean>> | undefined;\n        try {\n            const res = await new Promise<TestResult>(resolve => {\n                if (this._wasCompletedOnStartedCheck && !this.isRetryKeyMismatch(this._wasCompletedOnStartedCheck)) {\n                    logger.info('test was already completed in on started check', {\n                        resultId: this.testResultId,\n                        testId: this.testId,\n                    });\n                    resolve(this._wasCompletedOnStartedCheck);\n                    return;\n                }\n\n                if (!this._options.disableSockets) {\n                    testResultService.listenToTestResult(this._testResultId, this._testId, (testResult: TestResult) => {\n                        if (this.isRetryKeyMismatch(testResult)) {\n                            logger.warn(`ignoring result update for on completed due to retry key mismatch, got ${testResult.testRetryKey}, current is ${this.retryKey}`, {\n                                resultId: this.testResultId,\n                                testId: this.testId,\n                            });\n                            return;\n                        }\n                        if (testResult.status === 'completed') {\n                            testResult.resultId = this._testResultId;\n                            resolve(testResult);\n                        }\n                    });\n                }\n                const debounceDelay = this._options.disableSockets ? 0 : Math.floor(10_000 + (Math.random() * 5_000));\n                const maxWait = this._options.disableSockets ? 0 : Math.floor(60_000 + (Math.random() * 15_000));\n                onConnected = _.debounce(async () => {\n                    try {\n                        await testResultService.joinToTestResult(this._testResultId, this.testId);\n                    } catch (err) {\n                        logger.error('failed joining to test result updates after socket reconnected', { error: err });\n                    }\n                    try {\n                        const testResult = await testimServicesApi.getTestResults(this._testId, this._testResultId, this._options.project, this.branch);\n                        if (this.isRetryKeyMismatch(testResult)) {\n                            logger.warn(`ignoring result update for on completed (in reconnect) due to retry key mismatch, got ${testResult.testRetryKey}, current is ${this.retryKey}`, {\n                                resultId: this.testResultId,\n                                testId: this.testId,\n                            });\n                            return false;\n                        }\n                        if (testResult?.status === 'completed') {\n                            logger.info('Socket reconnected - Test complete', { testId: this._testId, resultId: this._testResultId, projectId: this._options.project });\n                            testResult.resultId = this._testResultId;\n                            resolve(testResult);\n                            return true;\n                        }\n                        return false;\n                    } catch (err) {\n                        logger.warn('Error while trying to check status on socket connect', err);\n                        return false;\n                    }\n                }, debounceDelay, { maxWait });\n                if (!this._options.disableSockets) {\n                    testResultService.on('socket-connected', onConnected);\n                } else {\n                    const waitForTestEnd = () => {\n                        setTimeout(async () => {\n                            try {\n                                const { isComplete } = await testimServicesApi.isTestResultCompleted(this._testResultId, this._options.project, this.retryKey);\n                                if (isComplete) {\n                                    const isDone = await onConnected!();\n                                    if (!isDone) {\n                                        logger.warn('onConnected returned false even though isComplete was true');\n                                        waitForTestEnd();\n                                    }\n                                } else {\n                                    waitForTestEnd();\n                                }\n                            } catch (err) {\n                                logger.error('failed to check is complete', { err });\n                                waitForTestEnd();\n                            }\n                        }, 3000);\n                    };\n                    waitForTestEnd();\n                }\n            });\n            await this.onCompletedCleanup();\n            return res;\n        } finally {\n            if (onConnected && !this._options.disableSockets) {\n                testResultService.off('socket-connected', onConnected);\n            }\n        }\n    }\n\n    public listenToRemoteStep(driver: import('./player/webdriver').WebDriver | import('./player/chromeLauncherTestPlayer').LauncherDriverType) {\n        remoteStepService.listenToRemoteStep(this.testResultId, step => {\n            remoteStepPlayback.executeStep(this._options, driver, step, this.testResultId);\n        });\n    }\n\n    public hasMoreTimeoutRetries() {\n        const maxRetryCount = this._options.disableTimeoutRetry ? 1 : RETRIES_ON_TIMEOUT;\n        return this._timeoutRetryCount < maxRetryCount;\n    }\n\n    public decreaseRetryCount() {\n        this._retryCount--;\n        this._totalRetryCount--;\n    }\n\n    public startNewTimeoutRetry() {\n        this._timeoutRetryCount++;\n        return this.onRetry();\n    }\n\n    public get retryCount() {\n        return this._retryCount;\n    }\n\n    public get previousTestResultId() {\n        return this._previousTestResultId;\n    }\n\n    private isAllowReportTestResultRetries() {\n        return Boolean(this._options.company?.activePlan?.premiumFeatures?.allowReportTestResultRetries);\n    }\n\n    private async onRetry() {\n        this._previousTestResultId = this.testResultId;\n\n        if (!this.isAllowReportTestResultRetries()) {\n            return;\n        }\n\n        this._totalRetryCount++;\n        this._originalTestResultId ||= this._previousTestResultId;\n        this._testResultId = utils.guid();\n\n        if (this._options.lightweightMode?.onlyTestIdsNoSuite) {\n            return;\n        }\n\n        await this._testRunStatus.addRetryTestResult({\n            retryCount: this._totalRetryCount,\n            executionId: this._executionId,\n            projectId: this._options.project,\n            newResultId: this._testResultId,\n            originalTestResultId: this._originalTestResultId,\n            previousTestResultId: this._previousTestResultId,\n        });\n    }\n}\n", "import { TestRunHandler } from './testRunHandler';\nimport type { RunnerOptions } from './runOptions';\nimport type { TestRunStatus } from './testRunStatus';\n\nexport class ExecutionQueue {\n    private _waitingTests: TestRunHandler[];\n    public pendingAppUploads = new Map<string, { isUploaded: boolean; uploadedAppId: string }>();\n\n    constructor(executionId: string, executionName: string, testList: any[], options: RunnerOptions, branchToUse: string, testStatus: TestRunStatus) {\n        const appIds = new Set(testList.map(t => t.nativeApp?.appId).filter(Boolean));\n        if (!options.appId && appIds.size > 1) {\n            appIds.forEach(appId => {\n                this.pendingAppUploads.set(appId, { isUploaded: false, uploadedAppId: '' });\n            });\n        }\n        if (options.appId) {\n            this.pendingAppUploads.set(options.appId, { isUploaded: false, uploadedAppId: '' });\n        }\n        this._waitingTests = testList.map(testInfo => new TestRunHandler(executionId, executionName, testInfo, options, branchToUse, testStatus));\n    }\n\n    public stop() {\n        this._waitingTests = [];\n    }\n\n    public getNext() {\n        const nextTestRunHandler = this._waitingTests.shift();\n        if (nextTestRunHandler) {\n            return nextTestRunHandler;\n        }\n        return undefined;\n    }\n\n    public hasMoreTests() {\n        return Boolean(this._waitingTests.length);\n    }\n}\n", "import * as _ from 'lodash';\nimport * as utils from '../utils';\nimport * as analytics from '../commons/testimAnalytics';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport { ArgError } from '../errors';\nimport { CLI_MODE } from '../commons/constants';\nimport type { RunnerOptions } from 'src/runOptions';\nimport type { ExecutionList } from './TestPlanRunner';\nimport type { RunListResult } from 'services/src/suite/service';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\ninterface LightweightOnlyTestIdsTest { testId: string; testConfig: {}; resultId: string }\ninterface LightweightOnlyTestIdsSuite { tests: LightweightOnlyTestIdsTest[][] }\n\nexport const extensionBrowsers = ['edge-chromium', 'chrome'];\nexport const seleniumBrowsers = [...extensionBrowsers, 'firefox', 'safari', 'safari technology preview'];\ntype ExtensionBrowsers = typeof extensionBrowsers[number];\ntype SeleniumBrowsers = typeof seleniumBrowsers[number];\nexport type BrowserType = ExtensionBrowsers | SeleniumBrowsers;\nexport type RunnerMode = typeof CLI_MODE[keyof typeof CLI_MODE];\n\nexport async function getSuite(options: RunnerOptions, branchToUse: string): Promise<LightweightOnlyTestIdsSuite | RunListResult> {\n    if (options.lightweightMode?.onlyTestIdsNoSuite && options.testId) {\n        const tests = [options.testId.map<LightweightOnlyTestIdsTest>(testId => ({ testId, testConfig: {}, resultId: utils.guid() }))];\n        return { tests };\n    }\n    return await servicesApi.getSuiteTestList({\n        projectId: options.project,\n        labels: options.label,\n        testIds: options.testId,\n        testNames: options.name,\n        testConfigNames: options.testConfigNames,\n        suiteNames: options.suites,\n        suiteIds: options.suiteIds,\n        branch: branchToUse,\n        rerunFailedByRunId: options.rerunFailedByRunId,\n        testConfigIds: options.testConfigIds,\n        intersections: options.intersections,\n    });\n}\n\n\nexport function calcTestResultStatus(tests: { [testResultId: string]: { success: boolean } }) {\n    const total = Object.keys(tests).length;\n    const passed = Object.keys(tests).reduce((count, resultId) => count + (tests[resultId].success === true ? 1 : 0), 0);\n    return total === passed;\n}\n\n\nexport async function validateConfig(options: RunnerOptions, testList: ExecutionList) {\n    //TODO resolve naive implementation for testList.\n    const supportedBrowsers = options.mode === CLI_MODE.EXTENSION ? extensionBrowsers : seleniumBrowsers;\n    const diff = _.difference(utils.getUniqBrowsers(options, testList as TestWithCustomTestDataAndRunConfig[]), supportedBrowsers);\n\n    if (diff.length > 0) {\n        analytics.trackWithCIUser('invalid-config-run', {\n            browser: diff.join(', '),\n            mode: 'runner',\n        });\n        throw new ArgError(`browser type <${diff}> is not supported in ${options.mode} mode.`);\n    }\n\n    return testList;\n}\n", "import * as gridService from '../services/gridService';\nimport * as concurrencyCompanyService from '../services/concurrencyCompanyService';\nimport { getLogger } from '../commons/logger';\nimport type { TestPlayer } from './BaseWorker';\n\nconst logger = getLogger('worker-utils');\n\nconst releaseGridSlot = async (workerId: number, releaseSlotOnTestFinished: boolean, projectId: string) => {\n    if (!releaseSlotOnTestFinished) {\n        return;\n    }\n    await gridService.releaseGridSlot(workerId, projectId);\n};\n\n\nconst releaseCompanySlot = async (workerId: number, companyId: string, projectId: string) => {\n    await concurrencyCompanyService.releaseCompanySlot(workerId, companyId, projectId);\n};\n\nexport const releasePlayer = async (workerId: number, releaseSlotOnTestFinished: boolean, projectId: string, companyId: string, slotService: 'mongo' | 'redis', player?: TestPlayer) => {\n    logger.info('releasing player', { hasPlayer: Boolean(player) });\n    try {\n        await player?.onDone();\n    } finally {\n        if (slotService === 'mongo') {\n            await releaseGridSlot(workerId, releaseSlotOnTestFinished, projectId);\n        }\n        if (slotService === 'redis') {\n            await releaseCompanySlot(workerId, companyId, projectId);\n        }\n    }\n};\n", "import ms from 'ms';\nimport _ from 'lodash';\nimport pRetry from 'p-retry';\nimport dayjs from 'dayjs';\nimport _duration from 'dayjs/plugin/duration';\nimport * as utils from '../utils';\nimport * as perf from '../commons/performance-logger';\nimport * as gridService from '../services/gridService';\nimport * as concurrencyCompanyService from '../services/concurrencyCompanyService';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport { getLogger } from '../commons/logger';\nimport { releasePlayer } from './workerUtils';\nimport { reporter } from '../reports/reporter';\nimport { LambdatestService } from '../services/lambdatestService';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { remoteStepService } from '../commons/socket/remoteStepService';\nimport { testResultService } from '../commons/socket/testResultService';\nimport { getCustomTokenV3 } from '../commons/testimCustomToken';\nimport { isNetworkHealthy, didNetworkConnectivityTestFail } from '../commons/httpRequest';\nimport { timeoutMessages, testRunStatus, stepResult, runnerTestStatus, CLI_MODE, APPIUM_SESSION_MESSAGE, gridTypes } from '../commons/constants';\nimport {\n    StopRunOnError,\n    GridError,\n    GetBrowserError,\n    NotImplementedError,\n    PageNotAvailableError,\n    GridConcurrencyError,\n    InvalidGridCredentials,\n} from '../errors';\nimport type { GridType } from '../commons/constants';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatus } from '../testRunStatus';\nimport type { ExecutionQueue } from '../executionQueue';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { IgnoredTestResult, BaseWorkerArgs } from '../runners/WorkerManager';\nimport type { RawTestResult } from 'services/src/commons/mongo/models/testResult';\nimport type { SeleniumPerfStatValues } from '../commons/SeleniumPerfStats';\nimport type { TestResult } from 'clickim/src/common/models/TestResult';\n\ndayjs.extend(_duration);\n\nconst logger = getLogger('base-worker');\n\nconst { GET_BROWSER_TIMEOUT_MSG, TEST_START_TIMEOUT_MSG, TEST_COMPLETE_TIMEOUT_MSG } = timeoutMessages;\nconst { SETUP_TIMEOUT, NETWORK_ERROR, GRID_ERROR, BROWSER_CLOSED, SELENIUM_ERROR, UNKNOWN_ERROR, MOBILE_SESSION_ERROR } = stepResult;\n\nfunction buildFailureResult(testId: string, testName: string, resultId: string, reason: string) {\n    return {\n        testId,\n        reason,\n        name: testName,\n        resultId,\n        success: false,\n    };\n}\n\nexport type TestPlayer =\n    | import('../player/appiumTestPlayer').AppiumTestPlayer\n    | import('../player/seleniumTestPlayer').SeleniumTestPlayer\n    | import('../player/extensionTestPlayer').ExtensionTestPlayer\n    | import('../player/chromeLauncherTestPlayer').ChromeLauncherTestPlayer;\n\nconst VERBOSE_TEST_RESULT_PROPERTIES = [\n    'fullLogs',\n    'locatorStats',\n    'stepsResults',\n    'setupStepResult',\n    'sharedStepClasses',\n    'revisionStatus',\n    'revisions',\n    'testData',\n    'exportsGlobal',\n] satisfies Array<keyof TestResult | keyof RawTestResult | 'sharedStepClasses'>;\n\nexport interface TestResultWithStats extends TestResult, SeleniumPerfStatValues { }\n\nexport abstract class BaseWorker<T extends TestPlayer> {\n    protected readonly lambdatestService = new LambdatestService();\n    protected readonly testRunTimeout: number;\n    protected readonly userData: RunnerOptions['userData'];\n    protected readonly baseUrl: string | undefined;\n    protected testId?: string;\n    protected branch?: string;\n    protected testName?: string;\n    protected testResultId?: string;\n    protected overrideTestConfigId?: string;\n    protected testRunConfig?: TestRunHandler['runConfig'];\n    public id: number = 0;\n    public uniqueId: string = '';\n\n    constructor(\n        protected readonly executionQueue: ExecutionQueue,\n        protected readonly options: RunnerOptions,\n        private readonly customExtensionLocalLocation: string | undefined,\n        protected readonly executionId: string,\n        protected readonly onTestStarted: (workerId: number, testId: string, resultId: string, isRerun: boolean | undefined, testRetryKey: `${number}:${number}`, appSource?: string) => Promise<any>,\n        private readonly onTestCompleted: (workerId: number, testId: string, testResult: any, sessionId: string, shouldRerun: boolean | undefined, appSource?: string) => Promise<void>,\n        private readonly onGridSlot: TestRunStatus['onGridSlot'],\n        private readonly onTestIgnored: (workerId: number, testResult: IgnoredTestResult) => void,\n        protected readonly releaseSlotOnTestFinished = true,\n    ) {\n        this.baseUrl = options.baseUrl;\n        this.testRunTimeout = options.timeout;\n        this.userData = options.userData;\n    }\n\n    private async getGridSlot(browser: string, testRunHandler: TestRunHandler) {\n        const slot = await gridService.getGridSlot(browser, testRunHandler.executionId, this.options, this.id, testRunHandler.testResultId);\n        this.onGridSlot(testRunHandler.testResultId, slot);\n        return slot;\n    }\n\n    private async getSlotOnce(testRunHandler: TestRunHandler) {\n        const { browserValue } = this.testRunConfig as { browserValue: string };\n        reporter.onGetSlot(this.id, browserValue || 'chrome');\n        const gridInfo = await this.getGridSlot(browserValue, testRunHandler);\n        return gridInfo;\n    }\n\n    /** @abstract */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected initPlayer(testRunHandler: TestRunHandler): T {\n        throw new NotImplementedError(true);\n    }\n\n    /** @abstract */\n    protected async getBrowserOnce(\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        testRunHandler: TestRunHandler,\n        customExtensionLocalLocation: string | undefined,\n        player: T,\n        gridInfo: Awaited<ReturnType<BaseWorker<T>['getSlotOnce']>>,\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n    ): Promise<any> {\n        throw new NotImplementedError(true);\n    }\n\n    protected async runTestOnce(testRunHandler: TestRunHandler, player: T): Promise<any> {\n        testRunHandler.sessionId = player.getSessionId();\n        logger.info('Test run started', {\n            testId: testRunHandler.testId,\n            resultId: testRunHandler.testResultId,\n            seleniumSession: player.getSessionId(),\n            executionId: testRunHandler.executionId,\n        });\n\n        return await testRunHandler.clearTestResult();\n    }\n\n    protected handleQuarantine(testRunHandler: TestRunHandler) {\n        if (!utils.isQuarantineAndNotRemoteRun({ testStatus: testRunHandler.testStatus }, this.options)) {\n            return undefined;\n        }\n        const testResult = {\n            name: testRunHandler.testName!,\n            testId: testRunHandler.testId,\n            resultId: testRunHandler.testResultId,\n            runnerStatus: runnerTestStatus.SKIPPED,\n            testStatus: testRunHandler.testStatus as 'quarantine',\n            testOptimization: testRunHandler.testOptimization,\n        };\n        this.onTestIgnored(this.id, testResult);\n        return testResult;\n    }\n\n    protected handleMobileTest(testRunHandler: TestRunHandler) {\n        if (this.options.gridData?.mode === 'local') {\n            return undefined;\n        }\n        const isAppFromDevice = utils.isAppFromDeviceDisabled(featureFlagsService, this.options.gridData?.type) && testRunHandler.isAppFromDevice && !this.options.appId;\n        const isAppForIosVirtualDevice = testRunHandler.isAppForIosVirtualDevice;\n        if (isAppFromDevice || isAppForIosVirtualDevice) {\n            const testResult: IgnoredTestResult = {\n                name: testRunHandler.testName,\n                testId: testRunHandler.testId,\n                resultId: testRunHandler.testResultId,\n                runnerStatus: runnerTestStatus.SKIPPED,\n                testStatus: testRunHandler.testStatus,\n                mobile: {\n                    isAppFromDevice,\n                    isAppForIosVirtualDevice,\n                },\n            };\n            this.onTestIgnored(this.id, testResult);\n            return testResult;\n        }\n        return undefined;\n    }\n\n    private calculateMobileTestTimeout(gridType: GridType) {\n        const increaseTDCRequestTimeout = featureFlagsService.flags.increaseTDCRequestTimeout.isEnabled();\n        const isTDCorHeadspinGrid = gridType === gridTypes.TESTIM_TDC || gridType === gridTypes.TESTIM_HEADSPIN;\n        const requestTimeout = utils.sanitizeNumberValue(featureFlagsService.flags.appiumConnectionRequestTimeout.getValue(), ms('2m'));\n        const retryCount = utils.sanitizeNumberValue(featureFlagsService.flags.appiumConnectionRetryCount.getValue(), 1);\n        const timeout = requestTimeout * retryCount;\n\n        if (gridType === gridTypes.BROWSERSTACK || (increaseTDCRequestTimeout && isTDCorHeadspinGrid)) {\n            return timeout + ms('10m');\n        }\n        return timeout + ms('1m');\n    }\n\n    private getSessionTimeout() {\n        const isMobile = utils.isMobileProject(this.options);\n        if (isMobile) {\n            const gridType = this.options.gridData!.type!;\n            const timeout = this.calculateMobileTestTimeout(gridType);\n            return Math.max(timeout, this.options.getSessionTimeout);\n        }\n        return Math.max(this.lambdatestService.getSessionTimeout || 0, this.options.getSessionTimeout);\n    }\n\n\n    private async getGridInfoAndSlotFromMongoGridQueue(testRunHandler: TestRunHandler) {\n        let failedAttemptsCount = 0;\n        const gridInfo = await pRetry(async () => {\n            const startTime = Date.now();\n            try {\n                return await utils.promiseTimeout(this.getSlotOnce(testRunHandler), this.options.getBrowserTimeout, timeoutMessages.GET_BROWSER_TIMEOUT_MSG);\n            } catch (error) {\n                failedAttemptsCount++;\n                return await this.handleGetSlotError(error, startTime);\n            }\n        }, { retries: this.options.getBrowserRetries - 1, minTimeout: 0, factor: 1 });\n        return { gridInfo, failedAttemptsCount };\n    }\n\n\n    private async getSlotFromCompanySlotManager() {\n        let failedAttemptsCount = 0;\n        const slotId = await pRetry(async () => {\n            const startTime = Date.now();\n            try {\n                const companyId = this.options.company?.companyId;\n                const projectId = this.options.projectData?.projectId;\n                return await utils.promiseTimeout(concurrencyCompanyService.requestSlot(companyId!, projectId!, this.id), this.options.getBrowserTimeout, timeoutMessages.GET_BROWSER_TIMEOUT_MSG);\n            } catch (error) {\n                failedAttemptsCount++;\n                return await this.handleGetSlotError(error, startTime);\n            }\n        }, { retries: this.options.getBrowserRetries - 1, minTimeout: 0, factor: 1 });\n        return { slotId, failedAttemptsCount };\n    }\n\n    private async handleGetSlotError(error: Error, startTime: number) {\n        const logDetails = { testId: this.testId, testResultId: this.testResultId, executionId: this.executionId };\n        if (error instanceof GridConcurrencyError) {\n            logger.info('could not get grid slot due to concurrency issue', logDetails);\n        } else {\n            logger.error('error getting grid slot', { error, ...logDetails });\n        }\n        await utils.delay(this.options.getBrowserTimeout - (Date.now() - startTime));\n        throw error;\n    }\n\n    private async handleGetSlot(testRunHandler: TestRunHandler) {\n        if (this.options.slotService === 'redis') {\n            const { failedAttemptsCount } = await this.getSlotFromCompanySlotManager();\n            return { gridInfo: this.options.gridData, failedAttemptsCount };\n        }\n        return await this.getGridInfoAndSlotFromMongoGridQueue(testRunHandler);\n    }\n\n    protected async getTestPlayer(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined) {\n        const projectId = this.userData?.projectId;\n        let testPlayer;\n\n        try {\n            perf.log('before getSlotOnce retries');\n            const { failedAttemptsCount, gridInfo = {} } = await this.handleGetSlot(testRunHandler);\n            perf.log('before getBrowserOnce retries');\n            const getBrowserRetriesNumber = this.options.getBrowserRetries - failedAttemptsCount;\n            if (!getBrowserRetriesNumber) {\n                throw new Error('No free browser slots in desired grid');\n            }\n            let failedGetBrowserAttempts = 0;\n            testPlayer = await pRetry(async () => {\n                const startTime = Date.now();\n                const player = this.initPlayer(testRunHandler);\n                try {\n                    const updatedGridInfo = await gridService.handleHybridOrVendorIfNeeded(\n                        this.options, gridInfo, this.testRunConfig, this.lambdatestService, { maxRetries: getBrowserRetriesNumber, currentRetry: failedGetBrowserAttempts + 1 },\n                    );\n                    this.options.gridData!.provider = updatedGridInfo.provider;\n                    this.options.gridData!.host = updatedGridInfo.host;\n                    this.options.gridData!.failedGetBrowserAttempts = failedGetBrowserAttempts;\n                    perf.log('before getBrowserOnce');\n                    const getBrowserRes = await utils.promiseTimeout(\n                        this.getBrowserOnce(testRunHandler, customExtensionLocalLocation, player, updatedGridInfo),\n                        this.getSessionTimeout(),\n                        timeoutMessages.GET_BROWSER_TIMEOUT_MSG,\n                    );\n                    perf.log('after getBrowserOnce');\n                    reporter.onGetBrowserSuccess(this.id, projectId!);\n                    return player || getBrowserRes;\n                } catch (error) {\n                    const grid = { ...gridInfo, failedGetBrowserAttempts, id: this.options.gridData!.gridId };\n                    const instanceType = this.options.mode === CLI_MODE.APPIUM ? 'device' : 'browser';\n                    logger.error(`error getting ${instanceType} from grid`, {\n                        error,\n                        testId: this.testId,\n                        testResultId: this.testResultId,\n                        executionId: this.executionId,\n                        grid,\n                        publicIps: this.options.publicIps,\n                    });\n                    reporter.onGetBrowserFailure(this.id, projectId!, ++failedGetBrowserAttempts);\n                    player.onDone();\n                    if (!(error instanceof PageNotAvailableError) && this.options.mode !== CLI_MODE.APPIUM) {\n                        await utils.delay(this.options.getBrowserTimeout - (Date.now() - startTime));\n                    }\n                    throw error;\n                }\n            }, { retries: getBrowserRetriesNumber - 1, minTimeout: 0, factor: 1 });\n            perf.log('after getBrowserOnce retries');\n        } catch (err) {\n            await releasePlayer(this.id, this.releaseSlotOnTestFinished, projectId!, this.options.company!.companyId, this.options.slotService, testPlayer);\n            if ([PageNotAvailableError, InvalidGridCredentials].some(errCls => err instanceof errCls)) {\n                throw err;\n            }\n\n            if (err instanceof GridError) {\n                throw new GetBrowserError(err, GRID_ERROR);\n            }\n            throw new GetBrowserError(err, SELENIUM_ERROR);\n        }\n\n        return testPlayer;\n    }\n\n    protected async runTest(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, shouldRerun: boolean | undefined) {\n        perf.log('inside runTest');\n        const projectId = this.userData?.projectId;\n        const quarantineResult = this.handleQuarantine(testRunHandler);\n        if (quarantineResult) {\n            return quarantineResult;\n        }\n\n        const mobileTestResult = utils.isMobileProject(this.options) && this.handleMobileTest(testRunHandler);\n        if (mobileTestResult) {\n            return mobileTestResult;\n        }\n\n        perf.log('before runTest onTestStarted');\n        const appSource = testRunHandler.getAppSource;\n        const test = await this.onTestStarted(this.id, testRunHandler.testId, testRunHandler.testResultId, shouldRerun, testRunHandler.retryKey, appSource);\n        testRunHandler.baseUrl = test.config.baseUrl;\n\n        const testPlayer = await this.getTestPlayer(testRunHandler, customExtensionLocalLocation);\n        try {\n            // We want to handle token refresh in the runner to make sure we are not starting tests with invalid tokens.\n            this.userData!.loginData!.token = await getCustomTokenV3();\n            return await this.runTestOnce(testRunHandler, testPlayer);\n        } finally {\n            await releasePlayer(this.id, this.releaseSlotOnTestFinished, projectId!, this.options.company!.companyId, this.options.slotService, testPlayer);\n        }\n    }\n\n    protected async runTestCleanup(): Promise<void> {\n        return undefined;\n    }\n\n    protected async onQueueCompleted(): Promise<void> {\n        return undefined;\n    }\n\n    public run(testRunHandler: TestRunHandler,\n        onWorkerFinished: (workerId: number, ...args: BaseWorkerArgs) => void,\n        ...args: BaseWorkerArgs) {\n        interface RunCompletionData { testId?: string; reason?: string; name?: string; resultId?: string; success?: boolean; testStatus?: string; testRetryKey?: string }\n        const onRunComplete = async (testResult: RunCompletionData, err?: Error) => {\n            if (utils.isQuarantineAndNotRemoteRun(testResult, this.options) ||\n                (utils.isAppFromDeviceDisabled(featureFlagsService, this.options.gridData?.type) && testRunHandler.isAppFromDevice && !this.options.appId) ||\n                testRunHandler.isAppForIosVirtualDevice\n            ) {\n                onWorkerFinished(this.id, ...args);\n                return undefined;\n            }\n            const sessionId = testRunHandler.sessionId!;\n            testRunHandler.setReRunOnTestStartTimeOutError(false);\n\n            const isTimeoutError = (timeoutMsg: string) => err?.message.includes(timeoutMsg);\n            const isIgnoreErrors = err && (err instanceof GetBrowserError);\n            const isTestStartedTimeout = isTimeoutError(TEST_START_TIMEOUT_MSG);\n            const isTimeoutErrors = err && (isTimeoutError(TEST_COMPLETE_TIMEOUT_MSG) || (isTestStartedTimeout && !testRunHandler.retryOnInfraErrors));\n            const isSeleniumHubError = !!testResult.reason && testRunHandler.isSeleniumHubNoMatchSessionError(testResult.reason);\n\n            const shouldRerunOnInfraError = (isSeleniumHubError || isTestStartedTimeout) && testRunHandler.retryOnInfraErrors;\n            const shouldRerunOnTimeoutError = isTimeoutErrors && testRunHandler.hasMoreTimeoutRetries();\n            const shouldRenRunOnMoreRetries = testRunHandler.hasMoreRetries() && !isIgnoreErrors && !isTimeoutErrors;\n            const shouldRerun = !testResult.success && (shouldRenRunOnMoreRetries || shouldRerunOnTimeoutError || shouldRerunOnInfraError);\n\n            try {\n                const testRetryKey = testRunHandler.retryKey;\n                testResult.testRetryKey = testRetryKey;\n                const appSource = testRunHandler.getAppSource;\n                await this.onTestCompleted(this.id, this.testId!, testResult, sessionId, shouldRerun, appSource);\n                await this.runTestCleanup();\n                if (shouldRerun) {\n                    if (shouldRerunOnTimeoutError) {\n                        await testRunHandler.startNewTimeoutRetry();\n                    }\n                    if (shouldRerunOnInfraError) {\n                        logger.info(`retry test id: ${this.testId} name: ${this.testName} again due to infrastructure issues`, {\n                            testId: testRunHandler.testId,\n                            retryReason: testResult.reason,\n                            testName: this.testName,\n                            testResultId: this.testResultId,\n                            executionId: this.executionId,\n                            err,\n                        });\n                        const projectId = this.options.projectData?.projectId;\n                        const testResultId = testRunHandler.testResultId;\n                        const testId = testRunHandler.testId;\n                        const deleteTestResult = { show: false };\n                        await testimServicesApi.updateTestResult(projectId!, testResultId, testId, deleteTestResult);\n                        testRunHandler.decreaseInfraErrorRetry();\n                        testRunHandler.decreaseRetryCount();\n                        testRunHandler.setReRunOnTestStartTimeOutError(true);\n                        await testRunHandler.startNewRetry();\n                    }\n                    if (shouldRenRunOnMoreRetries && !shouldRerunOnInfraError && !shouldRerunOnTimeoutError) {\n                        await testRunHandler.startNewRetry();\n                    }\n                    logger.info(`retry test id: ${this.testId} name: ${this.testName} again`, {\n                        testId: this.testId,\n                        testName: this.testName,\n                        isTimeoutErrors,\n                        testRetryKey,\n                        totalRetries: testRunHandler._totalRetryCount,\n                    });\n                    this.testResultId = testRunHandler.testResultId;\n                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                    return await runTestAndCalcResult(shouldRerun);\n                }\n                onWorkerFinished(this.id, ...args);\n                return undefined;\n            } catch (error) {\n                if (error instanceof StopRunOnError) {\n                    return undefined;\n                }\n                logger.error('failed to process test result', { error });\n                onWorkerFinished(this.id, ...args);\n                return undefined;\n            }\n        };\n        const getNetworkErrorMessage = () => 'Due to network connectivity issues, Testim CLI has been unable to connect to the grid.\\n' +\n            `Please make sure the CLI has stable access to the internet. ${didNetworkConnectivityTestFail() ? '(Internal: network connectivity test failed)' : ''}`;\n\n\n        const buildMobileSessionError = (err: Error) => {\n            const { DEVICE_OS_VERSION_TOO_LOW, APP_NOT_EXIST_ON_DEVICE, APP_NEVER_STARTED, TIMEOUT_ERROR, SAUCELABS_APP_IS_NOT_INSTALLED } = APPIUM_SESSION_MESSAGE;\n            const msg = err instanceof Error ? err.message : err;\n            msg.replace(/(Visit\\s+)?(https?:\\/\\/\\S+)?(\\s+)?(for\\s+troubleshooting(\\.)?)?/gi, '');\n            //TODO: map more error messages\n            if (msg.includes(GET_BROWSER_TIMEOUT_MSG) || msg.includes(TIMEOUT_ERROR)) {\n                return { errorType: SETUP_TIMEOUT, reason: 'timeout while getting device' };\n            }\n            if (msg.includes(APP_NOT_EXIST_ON_DEVICE) || msg.includes(SAUCELABS_APP_IS_NOT_INSTALLED)) {\n                return { errorType: MOBILE_SESSION_ERROR, reason: 'app doesn\\'t exist on device' };\n            }\n            if (msg.includes(APP_NEVER_STARTED)) {\n                return { errorType: MOBILE_SESSION_ERROR, reason: 'app never started, check app permission or app activity' };\n            }\n            if (msg.includes(DEVICE_OS_VERSION_TOO_LOW)) {\n                return { errorType: MOBILE_SESSION_ERROR, reason: 'Unable to install app: DeviceOSVersionTooLow' };\n            }\n            return { errorType: MOBILE_SESSION_ERROR, reason: msg };\n        };\n\n        const buildError = (err: Error, wasNetworkHealthy: boolean) => {\n            const instanceType = this.options.mode === CLI_MODE.APPIUM ? 'device' : 'browser';\n            if (!wasNetworkHealthy && featureFlagsService.flags.errorMessageOnBadNetwork.isEnabled()) {\n                return {\n                    errorType: NETWORK_ERROR,\n                    reason: getNetworkErrorMessage(),\n                };\n            }\n            const msg = err instanceof Error ? err.message : err;\n            if (msg.includes(GET_BROWSER_TIMEOUT_MSG)) {\n                return { errorType: SETUP_TIMEOUT, reason: `Test couldn't get ${instanceType}` };\n            }\n            if (msg.includes(TEST_START_TIMEOUT_MSG)) {\n                return { errorType: SETUP_TIMEOUT, reason: \"Test couldn't be started\" };\n            }\n            if (msg.includes(TEST_COMPLETE_TIMEOUT_MSG)) {\n                if (!this.testRunTimeout) {\n                    return { errorType: SETUP_TIMEOUT, reason: 'Test timeout reached: test is too long' };\n                }\n                const duration = dayjs.duration({ milliseconds: this.testRunTimeout });\n                const minutesCount = Math.floor(duration.asMinutes());\n                const secondsCount = duration.asSeconds();\n                const minutesTimeoutStr = minutesCount > 0 ? ` ${minutesCount} min` : '';\n                const secondsTimeoutStr = secondsCount > 0 ? ` ${secondsCount} sec` : '';\n                return { errorType: SETUP_TIMEOUT, reason: `Test timeout reached (timeout:${minutesTimeoutStr}${secondsTimeoutStr}): test is too long` };\n            }\n\n            if (err instanceof GetBrowserError && err.type) {\n                if (err.type === GRID_ERROR) {\n                    return { errorType: GRID_ERROR, reason: `Test couldn't get ${instanceType} from grid - ${err.message}` };\n                }\n                if (err.type === SELENIUM_ERROR) {\n                    return { errorType: SELENIUM_ERROR, reason: `Failed to create new session - ${err.message}` };\n                }\n            }\n\n            if ('type' in err && err.type === BROWSER_CLOSED) {\n                return {\n                    errorType: SELENIUM_ERROR,\n                    reason: `Session terminated, this is often caused to connection\n                                problems between the Testim CLI and the grid running the test. Please check your network connection.`,\n                };\n            }\n            if (/SeleniumError: connect ECONNREFUSED/.test(err.message) || /Couldn't connect to selenium server/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: 'Failed to connect to the grid, please check if the grid is accessible from your network' };\n            }\n            if (/terminated due to FORWARDING_TO_NODE_FAILED/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: 'Session terminated, it is likely that the grid is out of memory or not responding, please try to rerun the test' };\n            }\n            if (/terminated due to PROXY_REREGISTRATION/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: 'Session terminated, it is likely that the grid is not responding, please try to rerun the test' };\n            }\n            if (/forwarding the new session cannot find : Capabilities/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: `Session could not be created, please check that the ${instanceType} you requested is supported in your plan` };\n            }\n            return { errorType: UNKNOWN_ERROR, reason: msg };\n        };\n\n        const onRunError = async (err: Error) => {\n            const wasNetworkHealthy = await isNetworkHealthy();\n            if (!wasNetworkHealthy && featureFlagsService.flags.warnOnBadNetwork.isEnabled()) {\n                // intentional, we want to log to stderr:\n                // eslint-disable-next-line no-console\n                console.warn(getNetworkErrorMessage());\n            }\n            logger.warn('error on run', { err });\n\n            const projectId = this.userData?.projectId;\n            const { errorType, reason } = this.options.mode === CLI_MODE.APPIUM ? buildMobileSessionError(err) : buildError(err, wasNetworkHealthy);\n            testimServicesApi.updateTestResult(projectId!, this.testResultId!, this.testId!, {\n                status: testRunStatus.COMPLETED,\n                success: false,\n                reason,\n                errorType,\n                testRetryKey: testRunHandler.retryKey,\n                setupStepResult: { status: testRunStatus.COMPLETED, success: false, reason, errorType },\n            }, testRunHandler.remoteRunId);\n            await onRunComplete(buildFailureResult(this.testId!, this.testName!, this.testResultId!, reason), err);\n        };\n\n        const recoverTestResults = async (runError: Error) => {\n            const testId = this.testId;\n            const resultId = this.testResultId;\n            const projectId = this.userData?.projectId;\n            const branch = this.branch;\n            if (!testId || !resultId || !projectId || !branch) {\n                // Not enough data to call the API\n                logger.warn('Test failed. Not enough data to recover results via API', { err: runError });\n                return onRunError(runError);\n            }\n\n            try {\n                const testResult = await testimServicesApi.getTestResults(testId, resultId, projectId, branch);\n                logger.warn('Test failed. Got results via API', {\n                    err: runError,\n                    testResult: _.omit(testResult, VERBOSE_TEST_RESULT_PROPERTIES),\n                    resultId,\n                });\n                if (testResult && testResult.status === testRunStatus.COMPLETED && !runError.message.includes(TEST_COMPLETE_TIMEOUT_MSG)) {\n                    return await onRunComplete(testResult);\n                }\n                throw runError;\n            } catch (err) {\n                if (err !== runError) {\n                    logger.error('Failed to fetch test results from server', {\n                        testId,\n                        resultId,\n                        projectId,\n                        branch,\n                        err,\n                    });\n                }\n                return onRunError(runError);\n            }\n        };\n\n        const disableResults = this.options.disableSockets || (this.options.lightweightMode?.disableResults && (this.options.useChromeLauncher || this.options.mode === CLI_MODE.SELENIUM));\n        const disableRemoteStep = this.options.disableSockets || (this.options.lightweightMode?.disableRemoteStep);\n\n        const runTestAndCalcResult = async (shouldRerun?: boolean): Promise<any> => {\n            try {\n                await Promise.all([\n                    !disableRemoteStep && remoteStepService.joinToRemoteStep(this.testResultId!),\n                    !disableResults && testResultService.joinToTestResult(this.testResultId!, this.testId!),\n                ]);\n                if (this.options.mode !== CLI_MODE.APPIUM) {\n                    testRunHandler.validateRunConfig();\n                }\n                const testResult = await this.runTest(testRunHandler, this.customExtensionLocalLocation, shouldRerun);\n                await onRunComplete(testResult);\n                perf.log('After onRunComplete');\n                onWorkerFinished(this.id, ...args);\n            } catch (runError) {\n                await recoverTestResults(runError);\n                onWorkerFinished(this.id, ...args);\n            } finally {\n                if (!disableRemoteStep) {\n                    remoteStepService.unlistenToRemoteStep(this.testResultId!);\n                }\n            }\n        };\n\n        this.testId = testRunHandler.testId;\n        this.testName = testRunHandler.testName;\n        this.testResultId = testRunHandler.testResultId;\n        this.overrideTestConfigId = testRunHandler.overrideTestConfigId;\n        this.testRunConfig = testRunHandler.runConfig;\n        this.branch = testRunHandler.branch;\n\n        return runTestAndCalcResult();\n    }\n}\n", "import * as utils from '../../utils';\nimport pRetry from 'p-retry';\nimport { delay } from '../../utils';\nimport { getLogger } from '../../commons/logger';\nimport { PageNotAvailableError } from '../../errors';\nimport type { WebDriver } from '../webdriver';\nimport type { IWindowUtils } from 'clickim/src/background/session/ITabService';\n\nconst logger = getLogger('window-utils');\ntype Position = Record<'x' | 'y', number>;\n\nexport class WindowUtils implements IWindowUtils {\n    /**\n     * @param id tab or worker id\n     */\n    constructor(private readonly id: number, private readonly driver: WebDriver) {}\n\n    // Seems unused and not working since bad args to executeJS\n    async getElementFromPoint(_x: number, _y: number) {\n        function elementFromPoint(x: number, y: number) {\n            const el = document.elementFromPoint(x, y);\n            return { testimId: el ? el.getAttribute('testim_dom_element_id') : null, tagName: el ? el.tagName : null };\n        }\n\n        const { value } = await this.driver.executeJS(elementFromPoint, _x, _y);\n        return value;\n    }\n\n    getLocation() {\n        return this.driver.getUrl();\n    }\n\n    async stopListeningToScroll() {\n        // noop\n    }\n\n    async resumeListeningToScroll() {\n        // noop\n    }\n\n    scrollToPosition(pos: Position) {\n        return this.driver.scroll(pos.x, pos.y);\n    }\n\n    scrollToPositionWithoutAnimation(pos: Position) {\n        // if scroll behavior is not supported, then the scrolling is not animated anyway\n        function scrollWithoutAnimation(position: Position) {\n            const scrollBehaviorSupported = 'scrollBehavior' in document.documentElement.style;\n            if (scrollBehaviorSupported) {\n                return window.scrollTo({ left: position.x, top: position.y, behavior: 'instant' });\n            }\n            return window.scrollTo(position.x, position.y);\n        }\n        return this.driver.executeJS(scrollWithoutAnimation, pos);\n    }\n\n    async getCurrentScrollPosition() {\n        function scrollPosition() {\n            return { x: window.scrollX, y: window.scrollY };\n        }\n\n        const { value } = await this.driver.executeJS(scrollPosition);\n        return value;\n    }\n\n    navigate(location: string, navigationMaxTime = 15000) {\n        const navigate = async (retries = 3): Promise<void> => {\n            try {\n                await this.driver.url(location);\n            } catch (err) {\n                const shouldRetryNavigation = err.message.includes('method IWebBrowser2::Navigate2() failed');\n                // TODO: seleniumStack doesn't exist anymore. need to figure out how to fix this, or if we even need this anymore.\n                if (err.seleniumStack && shouldRetryNavigation && retries > 0) {\n                    logger.warn('selenium navigation failed. retrying to navigate', { err });\n                    await delay(1500);\n                    return navigate(retries - 1);\n                }\n                if (!err.seleniumStack && shouldRetryNavigation) {\n                    logger.warn('selenium navigation failed. Due to wdio7 the error is unhandled', { err });\n                }\n                throw err;\n            }\n            return undefined;\n        };\n\n        return Promise.race([navigate(), delay(navigationMaxTime)]);\n    }\n\n    reloadTab(timeoutMSec = 15000) {\n        return Promise.race([\n            this.driver.reloadTab(),\n            delay(timeoutMSec),\n        ]);\n    }\n\n    async getZoom() {\n        function zoom() {\n            return { zoomLevel: window.outerWidth / window.innerWidth };\n        }\n\n        const { value } = await this.driver.executeJS(zoom);\n        return value;\n    }\n\n    getViewportSize() {\n        return this.driver.getViewportSize();\n    }\n\n    maximizeWithoutValidation() {\n        return this.driver.maximizeWithoutValidation();\n    }\n\n    async getFullPageSize() {\n        function fullPageSize() {\n            const body = document.body;\n            const html = document.documentElement;\n            const height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n            const width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);\n            return {\n                height,\n                width,\n            };\n        }\n\n        const { value } = await this.driver.executeJS(fullPageSize);\n        return value;\n    }\n\n    async extractToNewWindow() {\n        // noop\n    }\n\n    async checkSize(size: { width: number; height: number }) {\n        await utils.delay(1000);\n        const actualSize = await this.getViewportSize();\n        if (actualSize.width !== size.width || actualSize.height !== size.height) {\n            throw Object.assign(new Error('checkSize failed'), { actualSize, expectedSize: size });\n        }\n        return { actualSize, expectedSize: size };\n    }\n\n    async setViewportSize(size: { width: number; height: number }) {\n        await this.driver.setViewportSize(size.width, size.height);\n        return await this.checkSize(size);\n    }\n\n    async validatePageIsAvailable() {\n        function pageIsAvailable() {\n            let locationObj;\n            if (typeof window !== 'undefined' && window.location !== undefined) {\n                locationObj = window.location;\n            } else {\n                return false;\n            }\n\n            return (\n                locationObj.href !== 'chrome-error://chromewebdata/' &&\n                locationObj.href !== 'safari-resource:/ErrorPage.html' &&\n                !locationObj.href.startsWith('res://ieframe.dll/http_404.htm') &&\n                !locationObj.href.startsWith('ms-appx-web://microsoft.microsoftedge/assets/errorpages/')\n            );\n        }\n\n        const result = await this.driver.executeJS(pageIsAvailable);\n        if (!result.value) {\n            throw new PageNotAvailableError('validatePageIsAvailable:PageNotAvailableError');\n        }\n    }\n\n    focusTab() {\n        return this.driver.switchTab(this.id as unknown as string);\n    }\n\n    quit() {\n        return undefined;\n    }\n\n    async getOsAndBrowser() {\n        const osAndBrowser = await pRetry(() => this.driver.getBrowserAndOS(), { retries: 3, factor: 1 });\n        return {\n            uaBrowserName: osAndBrowser.browser,\n            uaOs: osAndBrowser.os,\n            userAgent: osAndBrowser.userAgent,\n            browserVersion: osAndBrowser.browserVersion,\n        };\n    }\n}\n", "import { getLogger } from '../../commons/logger';\nimport type { WebDriver } from '../webdriver';\nimport type { Cookie as _Cookie } from '@wdio/protocols/build/types';\n\nconst logger = getLogger('cookies-utils');\nexport interface Cookie extends Omit<_Cookie, 'expiry'> {\n    hostOnly?: boolean;\n    expirationDate?: number;\n}\n\nexport class CookieUtils {\n    constructor(private readonly driver: WebDriver) {}\n    async set(cookie: Cookie) {\n        let domain = cookie.domain;\n        if (!cookie.hostOnly && domain && !domain.startsWith('.')) {\n            domain = `.${domain}`;\n        }\n        try {\n            return await this.driver.setCookie(cookie.name, cookie.value, domain, cookie.httpOnly, cookie.secure, cookie.path, cookie.expirationDate);\n        } catch (err) {\n            logger.error('failed to set cookie', { err });\n            throw err;\n        }\n    }\n\n    async get(cookie: Pick<Cookie, 'name'>) {\n        try {\n            return await this.driver.getCookie(cookie.name);\n        } catch (err) {\n            logger.error('failed to get cookie', { err });\n            throw err;\n        }\n    }\n\n    async remove(cookie: Pick<Cookie, 'name'>) {\n        try {\n            return await this.driver.deleteCookie(cookie.name);\n        } catch (err) {\n            logger.error('failed to remove cookie', { err });\n            throw err;\n        }\n    }\n}\n", "import pRetry from 'p-retry';\nimport type { WebDriver } from '../webdriver';\n\nexport class ScreenshotUtils {\n    public readonly screencastHandler = undefined;\n    private currentDevicePixelRatio?: number;\n\n    constructor(private readonly tabId: string, private readonly driver: WebDriver, private readonly options: { takeScreenshots?: boolean } = { takeScreenshots: true }) {\n    }\n\n    private base64AddPadding(str: string) {\n        return str + Array(((4 - (str.length % 4)) % 4) + 1).join('=');\n    }\n\n    private shouldTakeScreenshots() {\n        if (typeof this.options.takeScreenshots !== 'boolean') {\n            return true;\n        }\n        return this.options.takeScreenshots;\n    }\n\n    public async takeScreenshot() {\n        if (!this.shouldTakeScreenshots()) {\n            return { devicePixelRatio: 1, image: '' };\n        }\n        const MAX_RETRY_COUNT = 3;\n        const SCREENSHOT_RETRY_DELAY = 2000;\n        const devicePixelRatioPromise = this.currentDevicePixelRatio || this.getDevicePixelRatio();\n        const getScreenshot = () => Promise.all([devicePixelRatioPromise, this.driver.takeScreenshot()]);\n        const [devicePixelRatio, image] = await pRetry(getScreenshot, { retries: MAX_RETRY_COUNT, minTimeout: SCREENSHOT_RETRY_DELAY, factor: 1 });\n        const base64 = image ? image.value : '';\n        const dataUrl = `data:image/png;base64,${this.base64AddPadding(base64.replace(/[\\r\\n]/g, ''))}`;\n        return {\n            image: dataUrl,\n            devicePixelRatio,\n        };\n    }\n\n    public async takeElementScreenshot(elem: { ELEMENT: string }) {\n        if (!this.shouldTakeScreenshots()) {\n            return { devicePixelRatio: 1, image: '' };\n        }\n        const MAX_RETRY_COUNT = 3;\n        const SCREENSHOT_RETRY_DELAY = 2000;\n        const devicePixelRatioPromise = this.currentDevicePixelRatio ? Promise.resolve(this.currentDevicePixelRatio) : this.getDevicePixelRatio();\n        const getElemScreenshot = () => Promise.all([devicePixelRatioPromise, this.driver.takeElementScreenshot(elem)]);\n        const [devicePixelRatio, image] = await pRetry(getElemScreenshot, { retries: MAX_RETRY_COUNT, minTimeout: SCREENSHOT_RETRY_DELAY, factor: 1 });\n        const base64 = image || '';\n        const dataUrl = `data:image/png;base64,${this.base64AddPadding(base64.replace(/[\\r\\n]/g, ''))}`;\n        return {\n            image: dataUrl,\n            devicePixelRatio,\n        };\n    }\n\n    private async getDevicePixelRatio() {\n        function devicePixelRatioJS() {\n            try {\n                return window.devicePixelRatio;\n            } catch (err) {\n                return 1;\n            }\n        }\n\n        const { value } = await this.driver.executeJS(devicePixelRatioJS);\n        return value;\n    }\n\n    public forcePixelRatio(forceRatio = 1) {\n        this.currentDevicePixelRatio = forceRatio;\n        return Promise.resolve();\n    }\n\n    public getCurrentDevicePixelRatio() {\n        return this.currentDevicePixelRatio;\n    }\n}\n", "import * as _ from 'lodash';\nimport * as utils from '../../utils';\nimport { Jimp } from 'jimp';\nimport { getLogger } from '../../commons/logger';\nimport type { WindowUtils } from './windowUtils';\nimport type { ScreenshotUtils } from './screenshotUtils';\nimport type { VisibilityInfo } from 'clickim/src/background/visibilityUtils';\nimport type { IImageCaptureUtils } from 'clickim/src/background/session/ITabService';\n\nconst logger = getLogger('image-capture-utils');\nconst MIME_PNG = 'image/png';\nclass RectIsOutsideOfImageError extends Error {\n    public readonly rectIsOutsideOfImageError = true;\n}\n\ninterface ImagePart {\n    position: {\n        left: number;\n        top: number;\n    };\n    size: {\n        width: number;\n        height: number;\n    };\n    image: string;\n}\ninterface ImageData { elementRect?: Omit<VisibilityInfo, 'bottom' | 'right'>; offset?: { top: number; left: number } }\nasync function cropImageFromImageData(imageData: ImageData, imageInfo: utils.AwaitedReturnType<ScreenshotUtils['takeScreenshot']>) {\n    const _image = (imageInfo.image || imageInfo) as string;\n    const pixelRatio = imageInfo.devicePixelRatio;\n\n    if (!_image) {\n        throw new Error('Failed to get image');\n    }\n\n    const imageRegExMatch = _image.match(/^data:[^;]*;base64,(.*)$/);\n    if (!imageRegExMatch) {\n        throw new Error('Image is not in base64 format');\n    }\n\n    // chromeCropImage2\n    const offset = imageData.offset || { top: 0, left: 0 };\n\n    offset.top *= pixelRatio;\n    offset.left *= pixelRatio;\n\n    // elementImage\n    if (!imageData.elementRect) {\n        logger.warn('missing elementRect', _.omit(imageData, 'image'));\n        return {};\n    }\n\n    const { elementRect } = imageData;\n    const image = await Jimp.fromBuffer(Buffer.from(imageRegExMatch[1], 'base64'));\n    let x = elementRect.left * pixelRatio + offset.left * pixelRatio;\n    let y = elementRect.top * pixelRatio + offset.top * pixelRatio;\n    let width = elementRect.width * pixelRatio;\n    let height = elementRect.height * pixelRatio;\n\n    if (x < 0) {\n        width += x;\n        width = Math.max(width, 0);\n        x = 0;\n    }\n\n    if (y < 0) {\n        height += y;\n        height = Math.max(height, 0);\n        y = 0;\n    }\n\n    const imageWidth = image.bitmap.width;\n    const imageHeight = image.bitmap.height;\n    if ((x + width) > imageWidth) {\n        width = imageWidth - x;\n    }\n\n    if ((y + height) > imageHeight) {\n        height = imageHeight - y;\n    }\n\n    if (height <= 0 || width <= 0) {\n        throw new RectIsOutsideOfImageError('height or width is equal or lower than zero');\n    }\n\n    const cImage = image.crop({ x, y, w: width, h: height });\n    const base64 = await cImage.getBase64(MIME_PNG);\n    return { elementImage: base64 };\n}\n\nasync function chromeStitchImage(fullSize: utils.AwaitedReturnType<WindowUtils['getFullPageSize']>, parts: ImagePart[]) {\n    const fullImage = new Jimp({ width: fullSize.width, height: fullSize.height });\n\n    for (const part of parts) {\n        const imageRegExMatch = part.image.match(/^data:[^;]*;base64,(.*)$/);\n        const partImage = await Jimp.fromBuffer(Buffer.from(imageRegExMatch![1], 'base64'));\n        fullImage.composite(partImage, part.position.left, part.position.top);\n    }\n    const base64 = await fullImage.getBase64(MIME_PNG);\n    return base64;\n}\n\nfunction stitchImage(fullSize: utils.AwaitedReturnType<WindowUtils['getFullPageSize']>, parts: ImagePart[]) {\n    return chromeStitchImage(fullSize, parts);\n}\n\n// ???????????\nasync function uploadDataUrl() {\n    return undefined;\n}\n\nasync function uploadAllDataUrls(imagesObject: { screenImage: string; absoluteScreenHighlight: ReturnType<typeof getElementAbsoluteRectangle> }) {\n    function isImageUrl(key: keyof typeof imagesObject) {\n        const possibleImage = imagesObject[key];\n        return typeof possibleImage === 'string' && possibleImage.startsWith('data');\n    }\n\n    async function updateKey(key: keyof typeof imagesObject) {\n        // @ts-expect-error This is definitely an error, but this function seems unused\n        const imageUrl = await uploadDataUrl(imagesObject[key]);\n        return ({ key, url: imageUrl });\n    }\n\n    const keyUrlList = await utils.promiseMap((Object.keys(imagesObject) as (keyof typeof imagesObject)[]).filter(isImageUrl), updateKey);\n    const entries = Object.fromEntries(keyUrlList.map(current => [current.key, current.url]));\n    return Object.assign(imagesObject, entries);\n}\n\nfunction getElementAbsoluteRectangle(elementRect: ImageData['elementRect'], pixelRatio: number) {\n    pixelRatio ||= 1;\n    elementRect ||= {\n        left: 0, top: 0, width: 0, height: 0,\n    };\n    return {\n        left: pixelRatio * Math.round(elementRect.left),\n        top: pixelRatio * Math.round(elementRect.top),\n        width: pixelRatio * Math.round(elementRect.width),\n        height: pixelRatio * Math.round(elementRect.height),\n        pixelRatio,\n    };\n}\n\nexport class ImageCaptureUtils implements IImageCaptureUtils {\n    constructor(_unusedId: unknown, private readonly windowUtils: WindowUtils, public readonly screenshotUtils: ScreenshotUtils) {\n    }\n\n    public async takeViewPortImage() {\n        const imageInfo = await this.screenshotUtils.takeScreenshot();\n        return typeof imageInfo === 'string' ? imageInfo : imageInfo.image;\n    }\n\n    public takeImageForComparison() {\n        return this.takeViewPortImage();\n    }\n\n    public async takeAreaDataUrl(areas: ImageData) {\n        const imageInfo = await this.screenshotUtils.takeScreenshot();\n        const result = await cropImageFromImageData(areas, imageInfo);\n        return Object.assign(result, {\n            screenImage: imageInfo.image,\n            absoluteScreenHighlight: getElementAbsoluteRectangle(areas.elementRect, imageInfo.devicePixelRatio),\n        });\n    }\n\n    public async takeElementImage(elementId: string) {\n        const imageInfo = await this.screenshotUtils.takeElementScreenshot({ ELEMENT: elementId });\n        return {\n            elementImage: typeof imageInfo === 'string' ? imageInfo : imageInfo.image,\n        };\n    }\n\n    public async takeArea(areas: Pick<ImageData, 'elementRect'>) { // This seems unused\n        const imageInfo = await this.screenshotUtils.takeScreenshot();\n        return uploadAllDataUrls({\n            screenImage: imageInfo.image,\n            absoluteScreenHighlight: getElementAbsoluteRectangle(areas.elementRect, imageInfo.devicePixelRatio),\n        });\n    }\n\n    public forcePixelRatio(forceRatio?: number) {\n        return this.screenshotUtils.forcePixelRatio(forceRatio);\n    }\n\n    public getCurrentDevicePixelRatio() {\n        return this.screenshotUtils.getCurrentDevicePixelRatio();\n    }\n\n    public async takeStitchedDataUrl(useImprovedScreenshotStitching?: boolean) {\n        const { windowUtils, screenshotUtils } = this;\n\n        const stabilize = () => utils.delay(250);\n        const usingImprovedStitching = Boolean(useImprovedScreenshotStitching);\n\n        async function createPart(position: ReturnType<typeof getPartsPositions>[number]['scrollPos'], crop: ReturnType<typeof getPartsPositions>[number]['cropData']) {\n            if (usingImprovedStitching) {\n                await windowUtils.scrollToPositionWithoutAnimation(position);\n            } else {\n                await windowUtils.scrollToPosition(position);\n            }\n            await stabilize();\n            const imageInfo = await screenshotUtils.takeScreenshot();\n            const cropResult = await cropImageFromImageData({ elementRect: crop }, imageInfo);\n            return {\n                position: { left: position.x + crop.left, top: position.y + crop.top },\n                size: { width: crop.width, height: crop.height },\n                image: cropResult.elementImage!,\n            } as ImagePart;\n        }\n\n        async function takeAllParts(positionsData: ReturnType<typeof getPartsPositions>) {\n            const allParts = [];\n            for (const nextPos of positionsData) {\n                const part = await createPart(nextPos.scrollPos, nextPos.cropData);\n                allParts.push(part);\n            }\n            return allParts;\n        }\n\n        function getPartsPositions(fullPageSize: utils.AwaitedReturnType<WindowUtils['getFullPageSize']>, viewPortSize: utils.AwaitedReturnType<WindowUtils['getViewportSize']>) {\n            const FPW = Math.max(fullPageSize.width, viewPortSize.width);\n            const VPW = viewPortSize.width;\n            const FPH = Math.max(fullPageSize.height, viewPortSize.height);\n            const VPH = viewPortSize.height;\n            const Ws = Array.from({ length: Math.ceil(FPW / VPW) }, (__, i) => ({\n                scrollX: Math.min(i * VPW, FPW - VPW),\n                cropX: i * VPW - Math.min(i * VPW, FPW - VPW),\n                cropW: VPW - (i * VPW - Math.min(i * VPW, FPW - VPW)),\n            }));\n            const Hs = Array.from({ length: Math.ceil(FPH / VPH) }, (__, i) => ({\n                scrollY: Math.min(i * VPH, FPH - VPH),\n                cropY: i * VPH - Math.min(i * VPH, FPH - VPH),\n                cropH: VPH - (i * VPH - Math.min(i * VPH, FPH - VPH)),\n            }));\n            return Ws.flatMap(w => Hs.map(h => ({\n                scrollPos: { x: w.scrollX, y: h.scrollY },\n                cropData: {\n                    top: h.cropY,\n                    left: w.cropX,\n                    width: w.cropW,\n                    height: h.cropH,\n                },\n            })));\n        }\n\n        async function createStitchImage(fullPageSize: utils.AwaitedReturnType<WindowUtils['getFullPageSize']>, viewPortSize: utils.AwaitedReturnType<WindowUtils['getViewportSize']>) {\n            const originalPosition = await windowUtils.getCurrentScrollPosition();\n            const positions = getPartsPositions(fullPageSize, viewPortSize);\n            const parts = await takeAllParts(positions);\n            await windowUtils.scrollToPosition(originalPosition);\n            return stitchImage(fullPageSize, parts);\n        }\n\n        const [fullPageSize, viewPortSize] = await Promise.all([windowUtils.getFullPageSize(), windowUtils.getViewportSize()]);\n        return await createStitchImage(fullPageSize, viewPortSize);\n    }\n}\n", "import pRetry from 'p-retry';\nimport * as semver from 'semver';\nimport * as utils from '../../utils';\nimport { getLogger } from '../../commons/logger';\nimport { WindowUtils } from '../utils/windowUtils';\nimport { ScreenshotUtils } from '../utils/screenshotUtils';\nimport { ImageCaptureUtils } from '../utils/imageCaptureUtils';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\nimport type { WebDriver } from '../webdriver';\nimport type { Step } from 'clickim/src/common/models/step';\nimport type { SessionTab } from 'clickim/src/background/session/tabService';\nimport type { ParameterStep } from 'clickim/src/common/models/ParameterStep';\nimport type { UrlObject } from 'clickim/src/background/portMatch/urlPartsBreaker';\nimport type { ITabService, TabInfo, ITabUtils } from 'clickim/src/background/session/ITabService';\n\nconst logger = getLogger('tab-service');\n\ninterface AddTabOptions {\n    takeScreenshots?: boolean;\n    skipLoadInfo?: boolean;\n    loadInfo?: boolean;\n    forceSwitch?: boolean;\n}\n\nexport class TabService implements ITabService {\n    public sessionTabs: Record<string | number, SessionTab> = {};\n    private _utils: Record<string, ITabUtils> = {};\n    private pendingTabs: Record<string, string> = {};\n    private addedTabs: Record<string, Set<any>> = {};\n    private addFrameHandler?: (tabId: number, url?: string, options?: { emptyPage?: boolean }) => Promise<void> | undefined;\n\n    constructor(private readonly driver: WebDriver) {\n    }\n\n    public on() { /* noop */ }\n\n    public tabCount(sessionId: string | number) {\n        if (this.sessionTabs[sessionId]) {\n            return this.sessionTabs[sessionId].tabCount;\n        }\n        return undefined;\n    }\n\n    public getAllOpenTabIds(sessionId: string | number) {\n        const allTabInfos = this.getAllTabInfos(sessionId);\n        return Object.keys(allTabInfos)\n            .filter(tabId => !allTabInfos[tabId].isClosed);\n    }\n\n    /**\n     * TODO: seems unused with new Applitools integration\n     * Get last tab info for pixel validation\n     *\n     * @returns last tab info\n     */\n    private getActiveTabInfo(sessionId: string | number) {\n        return this.sessionTabs[sessionId].lastActiveTabInfo;\n    }\n\n    private getAllTabIds(sessionId: string | number) {\n        return Object.keys(this.getAllTabInfos(sessionId)).map(id => id);\n    }\n\n    public isSessionTab(sessionId: string | number, tabId: string) {\n        return this.getAllTabIds(sessionId).includes(tabId);\n    }\n\n    public createSesion(sessionId: number) {\n        if (this.sessionTabs[sessionId]) { // joining an existing session\n            return;\n        }\n        this.addedTabs[sessionId] = new Set();\n        this.sessionTabs[sessionId] = {\n            pendingInfos: {},\n            tabCount: 0,\n            tabInfos: {},\n        };\n    }\n\n    public setAddFrameHandlerCallBack(addFrameHandlerCb: (tabId: number, url?: string, options?: { emptyPage?: boolean }) => Promise<void> | undefined) {\n        this.addFrameHandler = addFrameHandlerCb;\n    }\n\n    private getAllTabInfoStrings(sessionId: number) { // unused?\n        const allIds = this.getAllTabIds(sessionId);\n        return allIds.map(tabId => {\n            const tabInfo = this.getTabInfo(sessionId, tabId);\n            // eslint-disable-next-line max-len\n            return `tabId=${tabId}, url=${tabInfo.url}, order=${tabInfo.order}, isMain=${tabInfo.isMain}, openerStepId=${tabInfo.openerStepId}, isClosed=${tabInfo.isClosed}, currentUrl: ${tabInfo.currentUrl}, lastUpdatedUrl: ${tabInfo.lastUpdatedUrl}`;\n        });\n    }\n\n    public getAllTabInfos(sessionId: string | number) {\n        return this.sessionTabs[sessionId].tabInfos;\n    }\n\n    public async addNewTab(sessionId: number, tabId: string | number, openerStepId?: string, options?: AddTabOptions) {\n        if (this.addedTabs[sessionId].has(tabId)) {\n            return undefined;\n        }\n        this.addedTabs[sessionId].add(tabId);\n        logger.info(`Adding a new tab sessionId: ${sessionId}, tabId: ${tabId}, openerId: ${openerStepId}`);\n        return this.addTab(sessionId, tabId, this.sessionTabs[sessionId].tabCount++, openerStepId, options);\n    }\n\n    public addOpenerStepId(sessionId: number, tabId: number, openerStepId: string) {\n        this.sessionTabs[sessionId].tabInfos[tabId].openerStepId = openerStepId;\n    }\n    public addOpenerStep(sessionId: number, tabId: number, openerStep: any) {\n        this.sessionTabs[sessionId].tabInfos[tabId].openerStepId = openerStep.id;\n        this.sessionTabs[sessionId].tabInfos[tabId].openerOriginalStepId = openerStep.originalStepId;\n    }\n\n    public fixMissingMainTab(sessionId: number) {\n        const mainTab = this.getMainTabInfo(sessionId);\n        if (mainTab) {\n            return;\n        }\n        const allTabInfos = this.getAllTabInfos(sessionId);\n        if (Object.keys(allTabInfos).length === 0) {\n            // no tab infos \uD83E\uDD37\n            return;\n        }\n        Object.values(this.getAllTabInfos(sessionId))[0].isMain = true;\n    }\n\n    async buildTabInfo(sessionId: number, tabId: string | number, order: number, openerStepId?: string, options: { checkForMainTab?: boolean; takeScreenshots?: boolean } = {}) {\n        const tab = await this.getTabDetails(tabId, sessionId, options);\n        const infoId = utils.guid();\n        function isMainTab(tabService: TabService) {\n            if (options.checkForMainTab) {\n                return tab.isMainTab;\n            }\n\n            if (!tab.isMainTab || tab.isMainTab === 'unknown') {\n                const missingMainTab = !tabService.getMainTabInfo(sessionId);\n                return missingMainTab;\n            }\n            return tab.isMainTab;\n        }\n        this.sessionTabs[sessionId].tabInfos[tabId] = {\n            infoId,\n            url: tab.url,\n            title: tab.title,\n            favIconUrl: (tab as any).favIconUrl,\n            order,\n            from: this.getTabInfo(sessionId, (tab as any).openerTabId),\n            isMain: isMainTab(this) as boolean,\n            openerStepId,\n        } as TabInfo;\n        return infoId;\n    }\n\n    async addTab(sessionId: number, id: string | number, order: number, openerStepId?: string, options: { takeScreenshots?: boolean } = {}) {\n        const infoId = await this.buildTabInfo(sessionId, id, order, openerStepId, options);\n        const _windowUtils = new WindowUtils(id as number, this.driver);\n        this._utils[infoId] = {\n            attachDebugger: () => Promise.resolve(),\n            detachDebugger: () => Promise.resolve(),\n            onDebuggerDetached: () => { /** noop */ },\n            tabId: id,\n            domUtils: { getDOM: async () => undefined },\n            windowUtils: _windowUtils,\n            imageCaptureUtils: new ImageCaptureUtils(\n                id,\n                _windowUtils,\n                new ScreenshotUtils(id as string, this.driver, { takeScreenshots: options.takeScreenshots }),\n            ),\n        };\n    }\n\n    public getTabUtilsByTabIdAndSessionId(sessionId: number, tabId: string | number) {\n        const tabInfo = this.sessionTabs[sessionId].tabInfos[tabId];\n        return this._utils[tabInfo.infoId];\n    }\n\n    public getTabUtilsByTabId(tabId: string | number) {\n        const infoId = Object.keys(this._utils).find(uId => this._utils[uId].tabId === tabId)!;\n        return this._utils[infoId];\n    }\n\n    public getTabInfo(sessionId: number, id: string | number) {\n        return this.sessionTabs[sessionId].tabInfos[id];\n    }\n\n    public getTabUtils(sessionId: number, tabInfo?: TabInfo) {\n        if (!tabInfo) {\n            return this.getMainTabUtils(sessionId);\n        }\n\n        if (this._utils[tabInfo.infoId]) {\n            return this._utils[tabInfo.infoId];\n        }\n\n        if (tabInfo.isMain) {\n            return this.getMainTabUtils(sessionId);\n        }\n\n        const infos = this.getAllTabInfos(sessionId);\n        const nonMainTabs = Object.keys(infos)\n            .map(tabId => infos[tabId])\n            .filter(info => !info.isMain);\n        if (nonMainTabs.length === 1) {\n            return this._utils[nonMainTabs[0].infoId];\n        }\n\n        const sameTabs = Object.keys(sessionId)\n            // @ts-expect-error this is very weird, and seems off\n            .map(key => sessionId[key])\n            .filter(info => this.isSameTab(sessionId, tabInfo, info));\n        if (sameTabs.length > 0) {\n            return this._utils[sameTabs[0].infoId];\n        }\n\n        // if nothing else\n        return this.getMainTabUtils(sessionId);\n    }\n\n    private exactUrlMatch(first: TabInfo, second: TabInfo, allUrls: string[]) {\n        const exactUrlMatch = allUrls\n            .filter(url => url === second.url);\n\n        if ((first.url === second.url || first.currentUrl === second.url || (first.currentUrl && (first.currentUrl === second.currentUrl))) && (exactUrlMatch.length === 1)) {\n            return true;\n        }\n        return false;\n    }\n\n    private singleExactMatchForParts(first: TabInfo, second: TabInfo, allUrls: string[], combinePartsFunction: (url: UrlObject) => string) {\n        const { urlUtils } = getSessionPlayer();\n        const firstUrlParts = urlUtils.urlBreaker(first.url || first.currentUrl);\n        const secondUrlParts = urlUtils.urlBreaker(second.url || second.currentUrl);\n        const firstPartsCombined = combinePartsFunction(firstUrlParts);\n        const secondPartsCombined = combinePartsFunction(secondUrlParts);\n        const allDomainAndPathMatches = allUrls.map(url => urlUtils.urlBreaker(url))\n            .map(urlParts => combinePartsFunction(urlParts))\n            .filter(combinedParts => combinedParts === firstPartsCombined);\n        if ((firstPartsCombined === secondPartsCombined) && (allDomainAndPathMatches.length === 1)) {\n            return true;\n        }\n        return false;\n    }\n\n    private isSameTab(sessionId: number, first: TabInfo, second: TabInfo) {\n        const { tabMatcher } = getSessionPlayer();\n        if (tabMatcher) {\n            const infos = this.getAllTabInfos(sessionId);\n            const allTabInfos = Object.keys(infos).map(tabId => infos[tabId]);\n            return tabMatcher.isSameTab(allTabInfos, first, second);\n        }\n        // flow:\n        // both main => exact match => exact match for domain and path => exact match for domain path and hash\n        // => order (legacy data)\n        if (first.isMain && second.isMain) {\n            return true;\n        }\n\n        if (first.openerStepId && second.openerStepId && first.openerStepId === second.openerStepId) {\n            return true;\n        }\n\n        const infos = this.getAllTabInfos(sessionId);\n        const allTopFrameUrls = Object.keys(infos)\n            .map(tabId => infos[tabId].url);\n\n        if (this.exactUrlMatch(first, second, allTopFrameUrls)) {\n            return true;\n        }\n\n        const combineDomainAndPath = (urlParts: UrlObject) => (`${urlParts.domain}/${urlParts.path.join('/')}`);\n        if (this.singleExactMatchForParts(first, second, allTopFrameUrls, combineDomainAndPath)) {\n            return true;\n        }\n\n        const combineDomainPathAndHash = (urlParts: UrlObject) => (`${urlParts.domain}/${urlParts.path.join('/')}#${urlParts.hash}`);\n        if (this.singleExactMatchForParts(first, second, allTopFrameUrls, combineDomainPathAndHash)) {\n            return true;\n        }\n\n        if (first.order === second.order) {\n            return true;\n        }\n\n        return false;\n    }\n\n    public getMainTabInfo(sessionId: number) {\n        const infos = this.getAllTabInfos(sessionId);\n        return Object.keys(infos)\n            .map(id => infos[id])\n            .find(tabInfo => tabInfo.isMain);\n    }\n\n    public getMainTabUtils(sessionId: number): ITabUtils {\n        const mainTabInfo = this.getMainTabInfo(sessionId);\n        if (!mainTabInfo) {\n            return {} as ITabUtils;\n        }\n        return this.getTabUtils(sessionId, mainTabInfo);\n    }\n\n    public removeTabInfo(sessionId: number, tabId: string | number) {\n        const infos = this.getAllTabInfos(sessionId);\n        const info = infos[tabId];\n        delete this.sessionTabs[sessionId].tabInfos[tabId];\n        delete this._utils[info.infoId];\n        this.sessionTabs[sessionId].tabCount--;\n    }\n\n    public getMainTabId(sessionId: number) {\n        const infos = this.getAllTabInfos(sessionId);\n        return Object.keys(infos).find(id => infos[id].isMain) as any as number;\n    }\n\n    public async isMainTabExists(sessionId: number) {\n        const mainTabId = this.getMainTabId(sessionId);\n        return Boolean(mainTabId);\n    }\n\n    public clearAllTabs(sessionId: number) {\n        const infos = this.getAllTabInfos(sessionId);\n\n        this.sessionTabs[sessionId].tabCount = 0;\n        Object.keys(infos)\n            .forEach(tabId => this.removeTabInfo(sessionId, tabId));\n    }\n\n    public clearNonMainTabs(sessionId: number) { // unused?\n        const infos = this.getAllTabInfos(sessionId);\n        Object.keys(infos)\n            .filter(tabId => !infos[tabId].isMain)\n            .forEach(tabId => this.removeTabInfo(sessionId, tabId));\n\n        this.sessionTabs[sessionId].tabCount = 1;\n    }\n\n    async switchTab(tabId: string | number, sessionId: number, { forceSwitch = false } = {}) {\n        const tabCount = this.sessionTabs[sessionId] ? this.sessionTabs[sessionId].tabCount : 1;\n        // looking at session tabs here and tabCount only works if we already \"know\" all the tabs, so we\n        // opt out of it in hybrid steps and other cases.\n        if ((typeof tabCount === 'number' && tabCount > 1) || forceSwitch) {\n            return this.driver.switchTab(tabId as string);\n        }\n        return undefined;\n    }\n\n    async getTabDetails(tabId: string | number, sessionId: number, options: any = {}) {\n        try {\n            await this.switchTab(tabId, sessionId, options);\n            if (options.skipLoadInfo) { // the tab title and url are not interesting yet\n                return { title: '', url: '' };\n            }\n            let mainTabPromise: Promise<boolean | undefined | 'unknown'> = Promise.resolve('unknown');\n            if (options.checkForMainTab) {\n                mainTabPromise = this.driver.executeJS<() => boolean | undefined>('return window.__isMainTestimTab').then(r => r.value);\n            }\n\n            try {\n                const [title, url, isMainTab] = await Promise.all([this.driver.getTitle(), this.driver.getUrl(), mainTabPromise]);\n                return { title, url, isMainTab };\n            } catch (err) {\n                logger.error('failed to get url or title', { err });\n            }\n        } catch (err) {\n            logger.error('failed to switch to tab', { tabId, err });\n        }\n        return { title: '', url: '' };\n    }\n\n    private async getUnregisteredTabId(sessionId: number) {\n        const ids = await this.driver.getTabIds();\n        return ids.find(tabId => !this.getAllTabIds(sessionId).includes(tabId));\n    }\n\n    private async waitForTabToOpen(sessionId: number): Promise<string> { //unused?\n        const newId = await this.getUnregisteredTabId(sessionId);\n        if (newId) {\n            return newId;\n        }\n        await utils.delay(500);\n        return await this.waitForTabToOpen(sessionId);\n    }\n\n    private async tryToAddTab(sessionId: number) {\n        if (this.pendingTabs[sessionId]) {\n            // don't mess with the main flow\n            return;\n        }\n        const newId = await this.getUnregisteredTabId(sessionId);\n        if (!newId) {\n            return;\n        }\n        await this.addNewTab(sessionId, newId);\n        await this.addFrameHandler!(newId as any as number);\n        Object.assign(this.sessionTabs[sessionId], { currentTab: null });\n    }\n\n    public async addNewPopup(id: number, openerStepId: string) {\n        const tabInfos = this.getAllTabInfos(id);\n        const stepWasAdded = Object.keys(tabInfos).find(tabId => tabInfos[tabId].openerStepId === openerStepId);\n        if (stepWasAdded) {\n            return;\n        }\n        if (this.pendingTabs[id]) {\n            logger.info(`overriding opener step id from ${this.pendingTabs[id]} to ${openerStepId}`);\n            this.pendingTabs[id] = openerStepId;\n            return;\n        }\n        this.pendingTabs[id] = openerStepId;\n        const newTabId = await this.waitForTabToOpen(id);\n        await this.addNewTab(id, newTabId, this.pendingTabs[id]);\n        this.addFrameHandler!(newTabId as any as number);\n        delete this.pendingTabs[id];\n        Object.assign(this.sessionTabs[id], { currentTab: null });\n    }\n\n    private async waitToPendingTabs(id: number, openerStepId: string | null | undefined) {\n        if (!openerStepId) {\n            return undefined;\n        }\n\n        return pRetry(() => {\n            if (this.pendingTabs[id] !== openerStepId) {\n                return;\n            }\n            throw new Error('awaiting pending tabs');\n        }, { retries: 5, factor: 1, minTimeout: 500, maxTimeout: 500 }).catch(() => undefined);\n    }\n\n    public async isMainTabIncognito() {\n        return false;\n    }\n\n    private isInvalidStepVersion(step: Step) {\n        const isOldVersion = semver.lt(step._version || step.version, '1.2.0');\n        const hasParams = !!(step as ParameterStep).parameterValues;\n        const hasBadLocateParams = hasParams &&\n            (step as ParameterStep).parameterValues\n                .some(param => param.type === 'locate' && !param.frameLocators);\n\n        return isOldVersion && (!hasParams || hasBadLocateParams);\n    }\n\n    public async getTabIdByTabInfo(sessionId: number, step: Step): Promise<number> {\n        const { tabMatcher, commonConstants } = getSessionPlayer();\n        if (this.isInvalidStepVersion(step)) {\n            throw Object.assign(new Error(''), {\n                success: false,\n                shouldRetry: false,\n                errorType: commonConstants.stepResult.INVALID_TEST_VERSION,\n            });\n        }\n        if (step.useCurrentTab?.()) {\n            const tabId = await this.driver.getCurrentTabId();\n            if (tabId) return tabId as any as number;\n            const mainTabId = this.getMainTabId(sessionId);\n            if (mainTabId) return mainTabId;\n            throw new Error('Current tab not found');\n        }\n        const openerStepId = step.tabInfo?.openerStepId;\n        await this.waitToPendingTabs(sessionId, openerStepId);\n        await this.tryToAddTab(sessionId);\n        const allTabInfos = this.getAllTabIds(sessionId)\n            .map((_tabId): TabInfo => ({ ...this.getTabInfo(sessionId, _tabId), tabId: _tabId as any }))\n            .filter((tabInfo) => !tabInfo.isClosed);\n        const tabId = tabMatcher.matchTabs(step, allTabInfos);\n\n        if (!tabId) {\n            throw new Error('No tab ID found');\n        }\n        if ((this.sessionTabs[sessionId] as any).currentTab === tabId) {\n            return tabId;\n        }\n        try {\n            await this.switchTab(tabId, sessionId);\n            Object.assign(this.sessionTabs[sessionId], { currentTab: tabId });\n            return tabId;\n        } catch (err) {\n            const windowClosedErrors = ['no such window', 'no window found', 'the window could not be found'];\n            if (err.message && windowClosedErrors.some(errorString => err.message.toLowerCase().includes(errorString))) {\n                this.sessionTabs[sessionId].tabCount--;\n                this.sessionTabs[sessionId].tabInfos[tabId].isClosed = true;\n                return this.getTabIdByTabInfo(sessionId, step);\n            }\n            throw err;\n        }\n    }\n}\n", "/** This is just a mock class hopefully we can remove after we set up types and backwards-compatibility in clickim */\nclass PortSelectorMock {\n    select() {\n        // eslint-disable-next-line no-console\n        console.log('\\n\\t\\t\\tinternal error - cant use port selector in selenium!!!!\\n');\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        return Promise.reject({ reason: 'cant use port selector in selenium!' });\n    }\n    prepare() { /* mock */ }\n    handleLegacyDataCaching() { /* mock */ }\n}\n\nexport const portSelectorMock = new PortSelectorMock();\n", "import { CookieUtils } from './cookieUtils';\nimport { getLinksFromUnescapeHTML, unescapeHTML } from '../../utils';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\nimport type { Cookie } from './cookieUtils';\nimport type { DynamicParentOptions } from 'clickim/src/background/codeSnippets/getNextDynamicParent';\nimport type { WebDriver } from '../webdriver';\nimport type { SeleniumTarget } from '../stepActions/stepAction';\nimport type { FrameHandler } from 'clickim/src/locators/dynamicParentUtils';\nimport type { TestimServicesApi } from 'clickim/src/common/TestimServicesApi';\nimport type { IStepActionUtils } from 'clickim/src/background/stepActions/stepActionUtils';\nimport type { VisibilityInfo } from 'clickim/src/background/visibilityUtils';\n\n\nexport const KEY_MAP = {\n    8: '\\uE008', // (Backspace)\n    9: '\\uE004', // (tab)\n    13: '\\uE007', // (enter)\n    27: '\\uE00C', // (esc)\n    33:\t'\\uE00E', // (page up)\n    34: '\\uE00F', // (page down)\n    35: '\\uE010', // (end)\n    36: '\\uE011', // (home)\n    45:\t'\\uE016', // (insert)\n    112: '\\uE031', // (f1)\n    113: '\\uE032', // (f2)\n    114: '\\uE033', // (f3)\n    115: '\\uE034', // (f4)\n    116: '\\uE035', // (f5)\n    117: '\\uE036', // (f6)\n    118: '\\uE037', // (f7)\n    119: '\\uE038', // (f8)\n    120: '\\uE039', // (f9)\n    121: '\\uE03A', // (f10)\n    122: '\\uE03B', // (f11)\n    123: '\\uE03C', // (f12)\n};\n\nexport class StepActionUtils implements IStepActionUtils {\n    // @ts-expect-error value is set in the sessionPlayer's constructor\n    public readonly testimServicesApi: TestimServicesApi;\n    private readonly _abortedSteps: any[] = [];\n    private readonly cookieUtils: CookieUtils;\n\n    constructor(public readonly driver: WebDriver) {\n        this.cookieUtils = new CookieUtils(this.driver);\n    }\n\n    private get sessionPlayerInit() {\n        return getSessionPlayer();\n    }\n\n    resetAbort() {\n        this._abortedSteps.length = 0;\n    }\n\n    abort(result: any) {\n        this._abortedSteps.push(result);\n    }\n\n    get abortedSteps() {\n        return this._abortedSteps;\n    }\n\n    getClickOffset(clickOffset: { x: number; y: number } | undefined, rect: VisibilityInfo) {\n        const { utils, positionUtils } = this.sessionPlayerInit;\n        const elementCenter = positionUtils.calculateElementMiddlePoint(rect);\n\n        if (\n            clickOffset &&\n            utils.isWithinBounds(rect.left, rect.left + rect.width, clickOffset.x) &&\n            utils.isWithinBounds(rect.top, rect.top + rect.height, clickOffset.y)\n        ) {\n            return {\n                x: clickOffset.x - elementCenter.x,\n                y: clickOffset.y - elementCenter.y,\n            };\n        }\n        return {\n            x: 0,\n            y: 0,\n        };\n    }\n\n    async executeInAut(context: any, code: string) {\n        const { value } = await this.driver.executeJS(code);\n        return value;\n    }\n\n    extractTargetText(target: SeleniumTarget) {\n        return this.driver.getTargetText(target);\n    }\n\n    extractText(locatedElement: any) { // unused?\n        return this.driver.getElementTextJS(locatedElement);\n    }\n\n    async markDynamicParent(target: SeleniumTarget, id: string) {\n        await this.driver.markDynamicParent(target, id);\n    }\n\n    getCookie(name: string) {\n        return this.cookieUtils.get({ name });\n    }\n\n    setCookie(cookieObject: Cookie) {\n        return this.cookieUtils.set(cookieObject);\n    }\n\n    async getNextDynamicParent(frameHandler: FrameHandler, dynamicParentOptions: DynamicParentOptions) {\n        const code = this.sessionPlayerInit.codeSnippets.getNextDynamicParent(dynamicParentOptions);\n        const { value } = await this.driver.executeJS(`return (function() { ${code} })();`);\n        return value;\n    }\n\n    public unescapeHTML = unescapeHTML;\n\n    public getLinksFromUnescapeHTML = getLinksFromUnescapeHTML;\n}\n", "import { getLogger } from '../../commons/logger';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\nimport { W3C_ELEMENT_ID } from '../constants';\nimport type { WebDriver } from '../webdriver';\nimport type { LegacyElement, W3CElement } from '../../utils';\nimport type { Step } from 'clickim/src/common/models/step';\nimport type { FrameTree } from 'clickim/src/background/frameTree';\nimport type { LocateStep } from 'clickim/src/common/models/locateStep';\nimport type { FrameManager } from 'clickim/src/background/frameManager';\nimport type { PlaybackContext } from 'clickim/src/background/playbackContext';\nimport type { FrameLocatorInstance } from 'clickim/src/background/frameLocator';\nimport type { FrameHandler as ClickimFrameHandler } from 'clickim/src/locators/dynamicParentUtils';\nimport type { WebLocateElementPlayer as WebLocateElementPlayerClass, WebLocateElementResult } from 'clickim/src/background/webLocateElementPlayer';\n\nconst logger = getLogger('frame-locator');\nconst SELENIUM_ELEMENT_KEY = 'ELEMENT';\n\nconst _getGuidFromSeleniumElement = (seleniumElement: W3CElement | LegacyElement) => {\n    if (!seleniumElement) {\n        return null;\n    }\n\n    return (seleniumElement as LegacyElement)[SELENIUM_ELEMENT_KEY] || (seleniumElement as W3CElement)[W3C_ELEMENT_ID];\n};\n\ninterface FrameHandler extends ClickimFrameHandler {\n    seleniumFrameElement?: W3CElement | LegacyElement;\n}\n\nexport function frameLocatorFactory(driver: WebDriver) {\n    class FrameLocator implements FrameLocatorInstance {\n        private readonly _cache: Record<string, string> = {};\n        private currentFrameHandler?: FrameHandler;\n\n        constructor(\n            public readonly frameManager: FrameManager,\n            private readonly LocateElementPlayer: typeof WebLocateElementPlayerClass,\n        ) {}\n\n        private cacheResults(seleniumGuid: string, resultsUrl: string) {\n            this._cache[seleniumGuid] = resultsUrl;\n        }\n\n        private getResultsFromCache(seleniumGuid: string) {\n            return this._cache[seleniumGuid];\n        }\n\n        private cacheFrameLocateResults(frameHandler: FrameHandler | undefined) {\n            if (frameHandler?.seleniumFrameElement && frameHandler.frameLocateResultUrl) {\n                const guid = _getGuidFromSeleniumElement(frameHandler.seleniumFrameElement);\n                if (guid) {\n                    this.cacheResults(guid, frameHandler.frameLocateResultUrl);\n                }\n            }\n        }\n\n        private async foundFrameCallback(result: WebLocateElementResult, frameTree: FrameTree, testimFrameId: string | number): Promise<FrameHandler> {\n            const { frameOffset, locatedElement } = result;\n            const { locatorBuilderUtils } = getSessionPlayer();\n            if (locatorBuilderUtils.isEmptyResult(locatedElement)) {\n                const errorMsg = 'got empty result in frame result, not rejected from locate element player';\n                logger.error(errorMsg);\n                throw new Error(errorMsg);\n            }\n            const el = await driver.switchToLocatedFrame(locatedElement);\n            const guid = _getGuidFromSeleniumElement(el.value);\n            const frameLocateResultUrl = this.getResultsFromCache(guid!);\n\n            return {\n                url: '',\n                frameId: -1,\n                frameOffset,\n                tabInfo: frameTree.tabInfo,\n                tabId: frameTree.tabId,\n                testimFrameId,\n                testimFullFrameId: `${this.currentFrameHandler!.testimFullFrameId}-${testimFrameId}`,\n                seleniumFrameElement: el.value,\n                frameLocateResultUrl,\n            };\n        }\n\n        private async locate(frameLocator: LocateStep, frameDepth: number, currentFrame: FrameHandler, context: PlaybackContext, frameTree: FrameTree, stepData: Step) {\n            const locateElementPlayer = new this.LocateElementPlayer(context);\n            frameLocator.targetId = `frameLocator_${frameDepth}`;\n            const locateResult = await locateElementPlayer.locate(frameLocator, currentFrame, frameLocator.targetId);\n            locateResult.isVisible = true; // frame visibility check is done on the target element\n            const handledLocateResult = await locateElementPlayer.handleLocateResult(locateResult, stepData, frameLocator).catch(() => { throw new Error(''); }); // silence [object object] errors;\n            const { locatedElement } = context.data[frameLocator.targetId];\n            const location = await driver.getElementLocationWithPadding(locatedElement);\n            const value = location.value || { top: 0, left: 0 };\n            handledLocateResult.frameOffset = {\n                top: currentFrame.frameOffset!.top + value.top,\n                left: currentFrame.frameOffset!.left + value.left,\n            };\n            if (locateElementPlayer.addFrameDataToContext) {\n                locateElementPlayer.addFrameDataToContext(handledLocateResult.targetId, handledLocateResult.locateResult);\n            }\n            const frameHandler = await this.foundFrameCallback(handledLocateResult as WebLocateElementResult, frameTree, frameLocator.testimFrameId!);\n            this.currentFrameHandler = frameHandler;\n            return frameHandler;\n        }\n\n        public async findFrame(stepData: Step, frameLocators: LocateStep[], context: PlaybackContext, frameTree: FrameTree) {\n            const allowNoFrameSwitch = featureFlagsService.flags.enableFrameSwitchOptimization.isEnabled();\n            const chronologicalResults = context.playback.resultsHandler.resultsByChronologicOrder;\n            const lastResult = chronologicalResults.at(-1);\n            const allowedRetries = 1;\n            const moreThanAllowedRetries = lastResult && lastResult.stepId === stepData.id && lastResult.results.length > allowedRetries;\n            if (allowNoFrameSwitch && !moreThanAllowedRetries && this.currentFrameHandler) {\n                const currentFramePos = frameLocators.findIndex(x => x.testimFrameId === this.currentFrameHandler!.testimFrameId);\n                if (currentFramePos > -1) {\n                    const shorterPath = frameLocators.slice(currentFramePos + 1);\n                    let frameIndex = 0;\n                    // Changes to the deepest frame\n                    for (const frameLocator of shorterPath) {\n                        frameIndex++;\n                        this.currentFrameHandler = await this.locate(frameLocator, frameIndex, this.currentFrameHandler as any, context, frameTree, stepData);\n                    }\n                    return this.currentFrameHandler;\n                }\n            }\n\n            const topFrameHandler = await frameTree.getTopFrameHandler();\n            topFrameHandler.frameOffset = { top: 0, left: 0 };\n            const switchToTop = (allowNoFrameSwitch && this.currentFrameHandler === topFrameHandler) ?\n                this.currentFrameHandler :\n                driver.switchToTopFrame();\n            await switchToTop;\n            this.cacheFrameLocateResults(this.currentFrameHandler);\n            this.currentFrameHandler = topFrameHandler;\n            let frameIndex = 0;\n            let currentFrame = topFrameHandler;\n            for (const frameLocator of frameLocators) {\n                frameIndex++;\n                currentFrame = await this.locate(frameLocator, frameIndex, currentFrame as any, context, frameTree, stepData);\n            }\n            return currentFrame;\n        }\n    }\n\n    return FrameLocator;\n}\n", "import { DISABLE_DEBUGGER_INFINITE_TIMEOUT } from './config';\n\nexport const isDebuggerConnected = () => {\n    try {\n        if (DISABLE_DEBUGGER_INFINITE_TIMEOUT) {\n            return false;\n        }\n        const inspector = require('inspector') as typeof import('inspector');\n        //https://github.com/GoogleChrome/puppeteer/blob/14fb3e38db7c97fc3ea76c65e6f219b0ddb3b54f/utils/testrunner/TestRunner.js#L279\n        if (inspector.url()) {\n            return true;\n        }\n    } catch (e) {\n        /* empty */\n    }\n    return false;\n};\n", "import { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\nimport type { LegacyElement, W3CElement } from 'src/utils';\nimport type { StepActionUtils } from '../utils/stepActionUtils';\nimport type { FrameHandler } from 'clickim/src/locators/dynamicParentUtils';\nimport type { IExecutionResult } from 'clickim/src/common/playback/stepPlayers/stepPlayback';\nimport type { ISerializedStep, Step } from 'clickim/src/common/models/step';\nimport type { PlaybackContext, RunOrPlaybackContext, Target } from 'clickim/src/background/playbackContext';\n\nexport type RunContext = ReturnType<PlaybackContext['getRunContext']>;\nexport interface SeleniumTarget extends Target { seleniumElement: W3CElement | LegacyElement }\nexport class StepAction<S extends Step = Step, TContext extends RunOrPlaybackContext = PlaybackContext> {\n    protected readonly frameId: number | undefined = 0;\n\n    constructor(\n        protected readonly step: ISerializedStep<S>,\n        protected readonly context: TContext,\n        // Frame handler can be null for steps with ignoreTopFrame\n        protected readonly frameHandler: FrameHandler | null,\n        protected readonly exportsGlobal = {},\n        protected readonly stepActionUtils: StepActionUtils = undefined!,\n        protected readonly locateElementPlayer = undefined,\n        protected readonly exportsTest = {},\n    ) {}\n\n    protected get driver() {\n        if (this.context.project.defaults?.ignoreVisibilityForExisting && !this.stepActionUtils.driver.getIgnoreVisibility()) {\n            this.stepActionUtils.driver.setIgnoreVisibility(true);\n        }\n        return this.stepActionUtils.driver;\n    }\n\n    protected get sessionPlayerInit() {\n        return getSessionPlayer();\n    }\n\n    protected async performAction(): Promise<any> {\n        throw new Error('not implemented');\n    }\n\n    protected getTarget() {\n        const targetId = this.step.targetId || 'targetId';\n        return this.context.data[targetId] as SeleniumTarget;\n    }\n\n    public async execute(): Promise<IExecutionResult> {\n        try {\n            const res = await this.performAction();\n            return { success: true, ...res };\n        } catch (err) {\n            const errorMsg = err?.message;\n            const displayMsg = err?.displayMessage;\n            return {\n                success: false,\n                reason: errorMsg,\n                exception: err,\n                errorType: this.sessionPlayerInit.commonConstants.stepResult.ACTION_EXCEPTION,\n                resultInfo: {\n                    exception: `selenium exception: ${errorMsg}`,\n                    // clickim -> playbackStepResultHandler.js -> FAILURE_REASON_MAPPING -> ACTION_EXCEPTION\n                    // expects resultInfo.error or resultInfo.reason\n                    error: displayMsg || errorMsg,\n                },\n            };\n        }\n    }\n}\n", "/// <reference lib=\"dom\" />\n/// <reference lib=\"dom.iterable\" />\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\nimport { DOMParser } from 'linkedom';\nimport type { WebDriver } from '../webdriver';\nimport type { SeleniumTarget } from './stepAction';\nimport type { ExcludesFalseyTypeGuard } from '../../utils';\nimport type { LocateStep } from 'clickim/src/common/models/locateStep';\nimport type { FrameHandler } from 'clickim/src/locators/dynamicParentUtils';\nimport type { SessionPlayerInit } from 'clickim/src/background/sessionPlayerInit';\nimport type { VisibilityInfo } from 'clickim/src/background/visibilityUtils';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\nimport type { ILocateStepActionUtils } from 'clickim/src/background/stepActions/stepActionFactory';\n\nconst logger = getLogger('locate-step-action');\nconst DEFAULT_VISIBILITY_RESULT = { opacity: 1, clientRects: {} };\n\nfunction shouldUseNativeVisibilityCheck(locateStep: LocateStep, visibilityUtils: SessionPlayerInit['visibilityUtils'], positionUtils: SessionPlayerInit['positionUtils'], driver: WebDriver) {\n    if (locateStep.opacity === 0) {\n        return false;\n    }\n    if (locateStep.isShadowed) {\n        return false;\n    }\n    if (visibilityUtils === undefined || positionUtils === undefined) {\n        return true;\n    }\n    if (featureFlagsService.flags.useClickimVisibilityChecks.isEnabled()) {\n        return false;\n    }\n    if (driver.isSafari()) {\n        return featureFlagsService.flags.useSafariWebdriverVisibilityChecks.isEnabled();\n    }\n    return true;\n}\n\nfunction createUtils(driver: WebDriver): ILocateStepActionUtils<SeleniumTarget> {\n    return {\n        getFrameIdByTestimFrameId() { /* noop */ },\n\n        async setElementResultDataOnContext(target) {\n            const seleniumResponse = await driver.getElement(target.locatedElement);\n            target.seleniumElement = seleniumResponse.value;\n        },\n\n        getElementRectangle(target) {\n            return driver.getElementRect(target) as Promise<VisibilityInfo>;\n        },\n\n        async getOffsets(frameHandler) {\n            return [frameHandler.frameOffset || {}];\n        },\n\n        htmlStringToDom(htmlString, url) {\n            const parser = new DOMParser();\n\n            // Create a wrapper document, since we cannot assign body directly.\n            const document = parser.parseFromString('<html><body></body></html>', 'text/html') as unknown as Document;\n\n            document.body.outerHTML = htmlString;\n            return Object.assign(document, { TESTIM_URL: url, parsedUsingLinkedom: true as const });\n        },\n\n        async isVisible(target, targetElement, rect, locateStep, frameHandler, allOffsets, dom) {\n            const { locatorBuilderUtils, codeSnippets, visibilityUtils, positionUtils } = getSessionPlayer();\n            const useNativeVisibilityCheck = shouldUseNativeVisibilityCheck(locateStep, visibilityUtils, positionUtils, driver);\n            if (useNativeVisibilityCheck) {\n                return driver.isVisible(target.seleniumElement);\n            }\n\n            // if the project is set to ignore visibility, we should always return visible\n            if (driver.getIgnoreVisibility()) {\n                return { visible: true, invisibleReason: 'visibility is ignored' };\n            }\n\n            if (!target.seleniumElement) {\n                return { visible: false, invisibleReason: 'element not found' };\n            }\n\n            // this is here for the side effects.\n            try {\n                await driver.isVisible(target.seleniumElement);\n            } catch {\n                /* ignored */\n            }\n            if (!targetElement || locatorBuilderUtils.isEmptyResult(targetElement)) {\n                return { visible: false, invisibleReason: 'element not found' };\n            }\n            const middlePosition = positionUtils.calculateElementMiddlePoint(rect);\n            const points = [middlePosition, positionUtils.calculateClickPoint(locateStep.clickOffset, rect)].filter(Boolean as unknown as ExcludesFalseyTypeGuard);\n            const code = codeSnippets.getVisibilityCode.getCompoundVisibilityInfoCode(target.locatedElement, points, false, locateStep);\n            let response;\n            try {\n                response = await driver.execute(`return ${code}`);\n            } catch (err) {\n                logger.error('failed to execute getVisibilityCode', { err });\n                throw err;\n            }\n            const { value } = response || {};\n            const elementVisibilityInfo = value.elementVisibilityInfo || DEFAULT_VISIBILITY_RESULT;\n            const [middleElementFromPoint, clickElementFromPoint] = value.elementsFromPointResults || [null, null];\n            return visibilityUtils.checkElementVisibility(elementVisibilityInfo, locateStep, clickElementFromPoint, middleElementFromPoint, dom, targetElement, false);\n        },\n\n        async scrollToElement(frameHandler: FrameHandler, locatedElement: ILocatedElement) {\n            const { codeSnippets: { scrollToElement } } = getSessionPlayer();\n            await driver.execute(scrollToElement(locatedElement));\n        },\n    };\n}\n\nexport class LocateStepAction extends StepAction<LocateStep> {\n    override execute() {\n        return this.driver.getHTML(this.step);\n    }\n\n    static getUtils(driver: WebDriver) {\n        return createUtils(driver);\n    }\n\n    static getFrameIdByTestimFrameId() {\n        logger.warn('Unplanned access to getFrameIdByTestimFrameId()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static setElementResultDataOnContext() {\n        logger.warn('Unplanned access to setElementResultDataOnContext()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static getElementRectangle() {\n        logger.warn('Unplanned access to getElementRectangle()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static getOffsets() {\n        logger.warn('Unplanned access to getOffsets()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static htmlStringToDom() {\n        logger.warn('Unplanned access to htmlStringToDom()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static isVisible() {\n        logger.warn('Unplanned access to isVisible()');\n        throw new Error('Use .getUtils() instead');\n    }\n}\n", "import type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement?: ILocatedElement | string): Element | null;\ndeclare function elementScrollTo(element: Element, x: number, y: number): void;\n\nexport const scroll = function (\n    elementToScrollOn: ILocatedElement | undefined,\n    elementToScrollTo: ILocatedElement | undefined,\n    isScrollToElement: boolean,\n    isDynamicScroll: boolean,\n    expectedX: number,\n    expectedY: number,\n    shouldScrollLeft: boolean | undefined,\n    shouldScrollTop: boolean | undefined,\n) {\n    function doScroll(expectedPosition: { x: number; y: number }, element: Element) {\n        if (!element) {\n            return { success: false };\n        }\n\n        elementScrollTo(element, expectedPosition.x, expectedPosition.y);\n\n        const actualX = element.scrollLeft;\n        const actualY = element.scrollTop;\n\n        const success = (Math.abs(actualY - expectedPosition.y) < 1) && (Math.abs(actualX - expectedPosition.x) < 1);\n        return { success, actualX, actualY };\n    }\n\n    function getExpectedPosition(parentElement: Element, locatedElement: ILocatedElement | undefined) {\n        if (!isScrollToElement) {\n            return { x: expectedX, y: expectedY };\n        }\n\n        const target = getLocatedElement(locatedElement);\n\n        if (isDynamicScroll && !target) {\n            return { x: parentElement.scrollWidth, y: parentElement.scrollHeight };\n        }\n\n        if (!target) {\n            throw new Error('could not find target element');\n        }\n\n        const targetRect = target.getBoundingClientRect();\n\n\n        let yScroll = 0;\n        let xScroll = 0;\n        const MAX_HEIGHT = Math.max(window.innerHeight - (targetRect.height + 10), 0);\n        const MAX_WIDTH = Math.max(window.innerWidth - (targetRect.width + 10), 0);\n\n        yScroll = shouldScrollTop ?\n            parentElement.scrollTop + targetRect.top - Math.min(expectedY, MAX_HEIGHT) :\n            parentElement.scrollTop;\n\n        xScroll = shouldScrollLeft ?\n            parentElement.scrollLeft + targetRect.left - Math.min(expectedX, MAX_WIDTH) :\n            parentElement.scrollLeft;\n\n        return { x: Math.round(xScroll), y: Math.round(yScroll) };\n    }\n\n    const isDocument = !elementToScrollOn;\n    let elementToScrollOnEl = !isDocument ? getLocatedElement(elementToScrollOn) : (document.scrollingElement || document.documentElement);\n\n    if (!elementToScrollOnEl) {\n        throw new Error('could not find target to scroll on');\n    }\n    const positionBeforeScroll = { top: elementToScrollOnEl.scrollTop, left: elementToScrollOnEl.scrollLeft };\n    let expectedPosition = getExpectedPosition(elementToScrollOnEl, elementToScrollTo);\n\n    let result = doScroll(expectedPosition, elementToScrollOnEl);\n\n    if (isDocument && !document.scrollingElement && !result.success && positionBeforeScroll.top === elementToScrollOnEl.scrollTop && positionBeforeScroll.left === elementToScrollOnEl.scrollLeft) {\n        elementToScrollOnEl = document.body;\n        expectedPosition = getExpectedPosition(elementToScrollOnEl, elementToScrollTo);\n        result = doScroll(expectedPosition, elementToScrollOnEl);\n    }\n\n    let actualXString = result.actualX;\n    let actualYString = result.actualY;\n    const actualScrollToElement = getLocatedElement(elementToScrollTo);\n\n    if (isScrollToElement && isDynamicScroll && !actualScrollToElement) {\n        return { success: false, expectedPosition };\n    }\n\n    if (isScrollToElement) {\n        if (!actualScrollToElement) {\n            throw new Error('could not find target to scroll to');\n        }\n        const rect = actualScrollToElement.getBoundingClientRect();\n        actualXString = rect.left;\n        actualYString = rect.top;\n    }\n    return { success: result.success, actualX: actualXString, actualY: actualYString };\n};\n", "import { StepAction } from './stepAction';\nimport type { ISerializedStep } from 'clickim/src/common/models/step';\nimport type { ScrollStep } from 'clickim/src/common/models/scrollStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\nexport class ScrollStepAction extends StepAction<ScrollStep> {\n    private getFailureString(step: ISerializedStep<ScrollStep>, expectedX: number, expectedY: number, actualX: number, actualY: number) {\n        if (!step.isScrollToElement) {\n            return `Scrolling limit reached. Expected:(y: ${expectedY}, x: ${expectedX}); Actual:(y:${actualY}, x: ${actualX})`;\n        }\n        let failureMessage = 'Scrolling limit reached';\n        if (step.shouldScrollTop) {\n            failureMessage += `. Expected top margin: ${expectedY}, actual: ${actualY}`;\n        }\n        if (step.shouldScrollLeft) {\n            failureMessage += `. Expected left margin: ${expectedX}, actual: ${actualX}`;\n        }\n        return failureMessage;\n    }\n\n    private async scroll(elementToScrollTo: ILocatedElement | null, step: ISerializedStep<ScrollStep>, elementToScrollOn?: ILocatedElement) {\n        const { codeSnippets, commonConstants: { stepResult } } = this.sessionPlayerInit;\n        const expectedY = Math.round(Number(step.isScrollToElement ? step.marginTop : step.y));\n        const expectedX = Math.round(Number(step.isScrollToElement ? step.marginLeft : step.x));\n\n        // in Firefox setting scrollTop and scrollLeft properties simultaneously takes only the latest,\n        const elementScrollTo = this.driver.isFirefox() ? function (element: Element, x: number, y: number) {\n            element.scrollTo(x, y);\n        } : function (element: Element, x: number, y: number) {\n            element.scrollTop = y;\n            element.scrollLeft = x;\n        };\n        const { scroll } = await import('./scripts/scroll');\n        const scrollCode = `\n            const getLocatedElement = ${codeSnippets.getLocatedElementCode};\n            const elementScrollTo = ${elementScrollTo.toString()};\n            const scroll = ${scroll.toString()};\n            return scroll.apply(null, arguments)\n        `;\n\n        try {\n            const res = await this.driver.executeJS<typeof scroll>(\n                scrollCode,\n                elementToScrollOn,\n                elementToScrollTo ?? undefined,\n                Boolean(step.isScrollToElement),\n                Boolean(step.isDynamicScroll),\n                expectedX,\n                expectedY,\n                step.shouldScrollLeft,\n                step.shouldScrollTop,\n            );\n            if (!res?.value) {\n                return {\n                    errorType: stepResult.SCROLL_ACTION_FAILURE,\n                    success: false,\n                };\n            }\n\n            const { success, actualX, actualY } = res.value;\n\n            if (success) {\n                return { success: true };\n            }\n\n            return {\n                errorType: stepResult.SCROLL_ACTION_FAILURE,\n                success: false,\n                resultInfo: { error: this.getFailureString(step, expectedX, expectedY, actualX!, actualY!) },\n            };\n        } catch (error) {\n            return {\n                errorType: stepResult.SCROLL_ACTION_FAILURE,\n                success: false,\n            };\n        }\n    }\n\n    private scrollOnDocument(step: ISerializedStep<ScrollStep>, elementToScrollTo: ILocatedElement | null) {\n        return this.scroll(elementToScrollTo, step);\n    }\n\n    private scrollOnElement(step: ISerializedStep<ScrollStep>, elementToScrollTo: ILocatedElement | null) {\n        return this.scroll(elementToScrollTo, step, this.getTarget().locatedElement);\n    }\n\n    override execute() {\n        const { context, step } = this;\n        const elementToScrollTo = step.isScrollToElement ? context.data.scrollToElement.locatedElement : null;\n\n        return step.element.isDocument ?\n            this.scrollOnDocument(step, elementToScrollTo) :\n            this.scrollOnElement(step, elementToScrollTo);\n    }\n}\n", "import type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ninterface EventMessage {\n    fromLocatedElement: ILocatedElement;\n    toLocatedElement: ILocatedElement;\n}\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\n\nexport const html5dndAction = function (eventData: EventMessage) {\n    const data: { [key: string]: any } = {};\n    function convertType(type: string) {\n        if (!type?.toLowerCase) {\n            return type;\n        }\n        type = type.toLowerCase();\n        if (type === 'text') {\n            return 'text/plain';\n        }\n        if (type === 'url') {\n            return 'text/uri-list';\n        }\n        return type;\n    }\n    const dataTransfer = {\n        data: {\n        },\n        setData(type: string, val: any) {\n            data[convertType(type)] = val;\n        },\n        getData(type: string) {\n            return data[convertType(type)];\n        },\n    };\n    const fromElement = getLocatedElement(eventData.fromLocatedElement);\n    const toElement = getLocatedElement(eventData.toLocatedElement);\n\n    if (!fromElement) {\n        throw new Error('from element not found');\n    }\n\n    if (!toElement) {\n        throw new Error('to element not found');\n    }\n\n    const dispatchEvent = function (element: Element, type: string) {\n        const event = document.createEvent('CustomEvent');\n        event.initCustomEvent(type, true, true, null);\n        Object.assign(event, { dataTransfer });\n        if (element.dispatchEvent) {\n            element.dispatchEvent(event);\n        } else if ((element as any).fireEvent) {\n            (element as any).fireEvent(`on${type}`, event);\n        }\n    };\n    dispatchEvent(fromElement, 'dragstart');\n    dispatchEvent(toElement, 'drop');\n    dispatchEvent(fromElement, 'dragend');\n};\n", "import type { Modifiers } from './doClick';\nimport type { TstaType } from 'clickim/src/injector/TstaType';\nimport type { StepQuirks } from 'clickim/src/common/models/step';\nimport type { IMouseEvent } from 'clickim/src/common/models/mouseStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ninterface HTML5DNDEventData {\n    transactionId: string;\n    id: string;\n    testResultId: string;\n    eventType: string;\n    events: IMouseEvent[];\n    eventData: { modifiers?: Partial<Modifiers>; button?: number };\n    quirks: StepQuirks;\n    isDrag: true;\n    useRecordedMousedown?: boolean;\n    allEventsOnSameElement?: boolean;\n    elementToFocusLocatedElement?: false | ILocatedElement;\n    trackActiveElement?: boolean;\n    locatedElement: ILocatedElement;\n    isRoot?: boolean;\n}\ninterface Context extends Pick<HTML5DNDEventData, 'allEventsOnSameElement' | 'events' | 'eventType' | 'eventData' | 'testResultId' | 'isDrag' | 'useRecordedMousedown' | 'trackActiveElement'> {\n    eventIndex: number;\n    stepId: string;\n    element?: Element | null;\n    lastDraggedElement?: HTMLElement;\n}\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\n\n\nexport const html5dndAction = function (eventData: HTML5DNDEventData, done: (data: { status: 'done' | 'failed'; result?: any; success: boolean; keep?: true }) => void) {\n    const mouseEventConstructorSupported = typeof MouseEvent === 'function';\n    const dragEventConstructorSupported = typeof DragEvent === 'function';\n    const pointerEventConstructorSupported = typeof PointerEvent === 'function';\n    const data = {} as { [key: string]: any };\n\n    window.__unloadNavigator = resolve;\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    function resolve(result?: string) {\n        const status = {\n            status: 'done' as const,\n            result,\n            success: true,\n        };\n        done(status);\n    }\n\n    function reject(result?: string | Error) {\n        result ||= {} as any;\n        const status = {\n            status: 'failed' as const,\n            result,\n            success: false,\n            keep: true as const,\n        };\n\n        done(status);\n    }\n\n    function convertType(type?: string) {\n        if (!type?.toLowerCase) {\n            return type;\n        }\n        type = type.toLowerCase();\n        if (type === 'text') {\n            return 'text/plain';\n        }\n        if (type === 'url') {\n            return 'text/uri-list';\n        }\n        return type;\n    }\n\n    function createDataTransfer() {\n        try {\n            return new DataTransfer();\n        } catch (err) {\n            return {\n                data: {},\n                setData(type: string, val: any) {\n                    data[convertType(type)!] = val;\n                },\n                getData(type: string) {\n                    return data[convertType(type)!];\n                },\n            } as unknown as DataTransfer;\n        }\n    }\n\n    const dragFromElementEvents = ['drag', 'dragstart', 'dragend'];\n    const pointerEvents = ['pointerup', 'pointerdown', 'pointermove'];\n    const dragEvents = dragFromElementEvents.concat(['drop', 'dragenter', 'dragover']);\n\n    function findClosestDraggable(element?: Element | null) {\n        // drag events are always fired on the closest element with draggable=true\n        // rather than on the target mouse element - so when dispatching a drag\n        // event we need to fire the correct target\n        let current = element as HTMLElement | null;\n        while (current && current !== document.documentElement) {\n            if (current.draggable) {\n                return current;\n            }\n            current = current.parentElement;\n        }\n        return null;\n    }\n\n    function getElement(event: Event, context: Context, currentEvent: IMouseEvent) {\n        const element = context.element;\n        const { dispatchDragEventsOnClosestDraggable } = currentEvent;\n        if (dragFromElementEvents.includes(event.type) && dispatchDragEventsOnClosestDraggable) {\n            if (!element && context.lastDraggedElement) {\n                // fallback for elements being removed from DOM, but parent draggable still being there\n                return context.lastDraggedElement;\n            }\n\n            const draggable = findClosestDraggable(element);\n            if (draggable) {\n                context.lastDraggedElement = draggable;\n                return draggable;\n            }\n        }\n        return element;\n    }\n\n    function getEventPosition(userEvent: IMouseEvent, isDrag: true, element: Element) {\n        function isWithinBounds(start: number, end: number, point: number) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {} as Partial<NonNullable<IMouseEvent['pointerPosition']>>;\n        // Technically should always be true here.\n        if (isDrag) {\n            return { x: pointerPosition.originX || 0, y: pointerPosition.originY || 0 };\n        }\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getMouseEvent(userEvent: IMouseEvent, _eventData: HTML5DNDEventData['eventData'], context: Context) {\n        const modifiers = _eventData?.modifiers || {};\n        const pos = getEventPosition(userEvent, context.isDrag, context.element!);\n        const button = _eventData?.button || 0;\n        const eventType = userEvent.event;\n        if (pointerEvents.includes(eventType)) {\n            return createPointerEvent(eventType, modifiers, pos.x, pos.y, button);\n        }\n        if (dragEvents.includes(eventType)) {\n            return createDragEvent(eventType, modifiers, pos.x, pos.y);\n        }\n        return createMouseEvent(eventType, modifiers, pos.x, pos.y, button);\n    }\n\n    function getEventDictionary(modifiers: Partial<Modifiers>, clientX: number, clientY: number): PointerEventInit {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: Boolean(modifiers.ctrl),\n            altKey: Boolean(modifiers.alt),\n            shiftKey: Boolean(modifiers.shift),\n            metaKey: Boolean(modifiers.meta),\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        };\n    }\n\n    function createPointerEvent(eventType: string, modifiers: Partial<Modifiers>, clientX: number, clientY: number, button: number) {\n        if (pointerEventConstructorSupported) {\n            const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n            eventProperties.pointerType = 'mouse';\n            eventProperties.isPrimary = true;\n            return new window.PointerEvent(eventType, eventProperties);\n        }\n        const event = document.createEvent('PointerEvent');\n        // @ts-expect-error this function was removed from all modern browsers\n        event.initPointerEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement,\n            0, /* offsetYArg */\n            0, /* offsetXArg */\n            0, /* widthArg */\n            0, /* heightArg */\n            0, /* pressure */\n            0, /* rotation */\n            0, /* tiltX */\n            0, /* tiltY */\n            0, /* pointerIdArg */\n            'mouse', /* pointerType */\n            0, /* hwTimestampArg */\n            true, /* isPrimary */\n        );\n        return event;\n    }\n\n    function createMouseEvent(eventType: string, modifiers: Partial<Modifiers>, clientX: number, clientY: number, button: number) {\n        const event = mouseEventConstructorSupported ? new MouseEvent('click', { composed: true }) : document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView!, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    }\n\n    function createDragEvent(eventType: string, modifiers: Partial<Modifiers>, clientX: number, clientY: number) {\n        if (eventType === 'dragstart') {\n            window.TSTA ||= {} as TstaType;\n            window.TSTA.dataTransfer = createDataTransfer();\n        }\n\n        if (!dragEventConstructorSupported) {\n            const event = document.createEvent('CustomEvent');\n            event.initCustomEvent(eventType, true, true, null);\n            Object.assign(event, { dataTransfer: window.TSTA.dataTransfer });\n            return event;\n        }\n\n        const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n        const event = new window.DragEvent(eventType, eventProperties);\n        Object.defineProperties(event, {\n            dataTransfer: { get() { return window.TSTA.dataTransfer; } },\n        });\n        return event;\n    }\n\n    function executeAsyncEvent(event: Event, context: Context, currentEvent: IMouseEvent) {\n        const element = getElement(event, context, currentEvent);\n        element?.dispatchEvent(event);\n    }\n\n    function shouldSkipEvent(currentEvent: IMouseEvent, context: Context) {\n        function isClickInDragAndDrop() {\n            return currentEvent.event === 'click' &&\n                context.isDrag &&\n                !context.allEventsOnSameElement;\n        }\n        return isClickInDragAndDrop();\n    }\n\n    function nextAsyncEvent(context: Context, currentEvent: IMouseEvent, nextEvent: IMouseEvent) {\n        if (nextEvent) {\n            const delay = Math.min(nextEvent.timeStamp! - currentEvent.timeStamp!, 40);\n            setTimeout(() => {\n                executeAsyncNext(context);\n            }, delay);\n        } else {\n            if (window.__unloadNavigator) {\n                window.removeEventListener('unload', window.__unloadNavigator);\n            }\n            resolve();\n        }\n    }\n\n    function executeAsyncNext(context: Context) {\n        let event;\n        const currentEvent = context.events[context.eventIndex];\n        const nextEvent = context.events[++context.eventIndex];\n        try {\n            context.element = getLocatedElement((currentEvent as any).locatedElement);\n            // @ts-expect-error we are passing the wrong eventData. not sure if changing this would be safe, or if it is needed.\n            event = getMouseEvent(currentEvent, eventData, context);\n        } catch (err) {\n            return reject(`exception in get event in drag step:${err.message}`);\n        }\n\n        if (shouldSkipEvent(currentEvent, context)) {\n            return nextAsyncEvent(context, currentEvent, nextEvent);\n        }\n\n        if (event) {\n            try {\n                executeAsyncEvent(event, context, currentEvent);\n            } catch (err) {\n                return reject(`exception in executeEvent in drag step:${err.message}`);\n            }\n        } else {\n            return reject(`cannot execute event ${currentEvent.event}`);\n        }\n        nextAsyncEvent(context, currentEvent, nextEvent);\n        return undefined;\n    }\n\n    const context: Context = {\n        eventIndex: 0,\n        allEventsOnSameElement: eventData.allEventsOnSameElement,\n        events: eventData.events,\n        eventType: eventData.eventType,\n        eventData: eventData.eventData,\n        stepId: eventData.id,\n        testResultId: eventData.testResultId,\n        isDrag: eventData.isDrag,\n        useRecordedMousedown: eventData.useRecordedMousedown,\n        trackActiveElement: eventData.trackActiveElement,\n    };\n\n    setTimeout(() => {\n        try {\n            executeAsyncNext(context);\n        } catch (err) {\n            reject(err);\n        }\n    }, 0);\n};\n", "import type { ExcludesFalseyTypeGuard } from '../../../utils';\nimport type { DispatchFocusFn } from './focusElement';\nimport type { StepQuirks } from 'clickim/src/common/models/step';\nimport type { IMouseEvent } from 'clickim/src/common/models/mouseStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\ndeclare const dispatchFocus: DispatchFocusFn;\n\nexport interface Modifiers { ctrl: boolean; alt: boolean; shift: boolean; meta: boolean }\ninterface DoClickEventData {\n    isRoot?: boolean;\n    locatedElement: ILocatedElement;\n    events: IMouseEvent[];\n    quirks?: StepQuirks;\n    modifiers?: Partial<Modifiers>;\n    button?: number;\n}\ninterface Context extends Pick<DoClickEventData, 'events' | 'quirks' | 'modifiers' | 'button'> {\n    element: Element;\n}\n\nexport const doClick = (eventData: DoClickEventData, done: (data: { status: 'done' | 'failed'; result?: string; success: boolean }) => void) => {\n    const eventConstructorSupported = typeof Event === 'function';\n\n    window.__unloadNavigator = resolve;\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    function handleReactSelectFocusQuirk(context: Context, event: MouseEvent) {\n        function focusReactSelect(element: Element) {\n            function getReactSelectRoot() {\n                return getParents(element).find((el) => [...(el as Element).classList || []].includes('Select-control'));\n            }\n\n            function getReactSelectInput() {\n                const root = getReactSelectRoot();\n                return root ? root.querySelector('input') : null;\n            }\n\n            const reactSelectInput = getReactSelectInput();\n            reactSelectInput?.focus();\n        }\n\n        const isReactSelectElement = context.quirks?.isReactSelect;\n        if (event.type === 'mousedown' && isReactSelectElement) {\n            focusReactSelect(context.element);\n        }\n    }\n\n    function handleCKEditorQuirk(context: Context, event: MouseEvent) {\n        const isCKEditorFrame = context.quirks?.isCKEditorFrame;\n        if (event.type === 'click' && isCKEditorFrame) {\n            document.body.focus();\n        }\n    }\n\n    function getParents(el: ParentNode) {\n        const parents: ParentNode[] = [];\n        while (el?.parentNode) {\n            parents.push(el);\n            el = el.parentNode;\n        }\n        return parents;\n    }\n\n    function resolve(result?: string) {\n        const status = {\n            status: 'done',\n            result,\n            success: true,\n            // @ts-expect-error isNonTextableElemnet doesn't exist here - looks like copy-paste that should be removed\n            ...(context.isNonTextableElemnet && { reason: 'Set text on non input element' }), // eslint-disable-line @typescript-eslint/no-use-before-define\n        };\n\n        done(status);\n    }\n\n    function reject(result: string) {\n        result ||= '';\n        const status = {\n            status: 'failed' as const,\n            result,\n            success: false,\n        };\n\n        done(status);\n    }\n\n    function dispatchMouseOver(element: Element) {\n        const event = eventConstructorSupported ? new Event('mouseover', { composed: true }) : document.createEvent('Events');\n        event.initEvent('mouseover', true, true);\n        element.dispatchEvent(event);\n    }\n\n    function dispatchMouseMove(element: Element) {\n        const modifiers = {};\n        const rect = element.getBoundingClientRect();\n        const clientX = rect.left + (rect.width / 2);\n        const clientY = rect.top + (rect.height / 2);\n        const button = 0;\n        const eventType = 'mousemove';\n        const event = createMouseEvent(eventType, modifiers, clientX, clientY, button);\n        element.dispatchEvent(event);\n    }\n\n    function getEventPosition(userEvent: IMouseEvent, element: Element) {\n        function isWithinBounds(start: number, end: number, point: number) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {} as Partial<NonNullable<IMouseEvent['pointerPosition']>>;\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getEventDictionary(modifiers: Partial<Modifiers>, clientX: number, clientY: number): PointerEventInit {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: Boolean(modifiers.ctrl),\n            altKey: Boolean(modifiers.alt),\n            shiftKey: Boolean(modifiers.shift),\n            metaKey: Boolean(modifiers.meta),\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        };\n    }\n\n    function createPointerEvent(eventType: string, modifiers: Partial<Modifiers>, clientX: number, clientY: number) {\n        if (!window.PointerEvent) {\n            return undefined;\n        }\n        const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n        eventProperties.pointerType = 'mouse';\n        eventProperties.isPrimary = true;\n        return new window.PointerEvent(eventType, eventProperties);\n    }\n\n    function createMouseEvent(eventType: string, modifiers: Partial<Modifiers>, clientX: number, clientY: number, button: number) {\n        const event = eventConstructorSupported ? new MouseEvent('click', { composed: true }) : document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true,\n            true,\n            document.defaultView!,\n            1,\n            0,\n            0,\n            clientX,\n            clientY,\n            Boolean(modifiers.ctrl),\n            Boolean(modifiers.alt),\n            Boolean(modifiers.shift),\n            Boolean(modifiers.meta),\n            button,\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    }\n\n    function getMouseEvent(userEvent: IMouseEvent, context: Context) {\n        const pointerEvents = ['pointerup', 'pointerdown', 'pointermove'];\n        const modifiers = context.modifiers || {};\n        const pos = getEventPosition(userEvent, context.element);\n        const button = context.button || 0;\n        const eventType = userEvent.event;\n        if (pointerEvents.includes(eventType)) {\n            return createPointerEvent(eventType, modifiers, pos.x, pos.y);\n        }\n        return createMouseEvent(eventType, modifiers, pos.x, pos.y, button);\n    }\n\n    function findEffectiveActiveElement() {\n        let activeElement = document.activeElement!;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    }\n\n    function executeSynchronousEventSequence(context: Context) {\n        context.events\n            .map((userEvent) => {\n                try {\n                    return getMouseEvent(userEvent, context);\n                } catch (e) {\n                    // pointer events not supported :shrug:\n                    return undefined;\n                }\n            })\n            .filter(Boolean as any as ExcludesFalseyTypeGuard)\n            .forEach((event) => {\n                context.element.dispatchEvent(event);\n                handleReactSelectFocusQuirk(context, event);\n                handleCKEditorQuirk(context, event);\n            });\n\n        if (window.__unloadNavigator) {\n            window.removeEventListener('unload', window.__unloadNavigator);\n        }\n    }\n\n    const element = eventData.isRoot ? document.documentElement : getLocatedElement(eventData.locatedElement)!;\n    const context = {\n        element,\n        events: eventData.events,\n        quirks: eventData.quirks,\n        modifiers: eventData.modifiers,\n        button: eventData.button,\n    };\n\n    if (!context.element) {\n        reject('element not found');\n        return;\n    }\n\n    dispatchMouseOver(context.element);\n    dispatchMouseMove(context.element);\n    try {\n        executeSynchronousEventSequence(context);\n        const oldActiveElement = findEffectiveActiveElement();\n        const quirks = context.quirks;\n        const isReactSelectElement = quirks?.isReactSelect;\n        const isCKEditorFrame = quirks?.isCKEditorFrame;\n        if (!isReactSelectElement && !isCKEditorFrame) {\n            // @ts-expect-error we never call doClick with such a property, likely a bad copy-paste\n            dispatchFocus(eventData.elementToFocusLocatedElement, oldActiveElement);\n        }\n        resolve();\n    } catch (e) {\n        reject(e.toString());\n    }\n};\n", "import type { Modifiers } from './doClick';\nimport type { StepQuirks } from 'clickim/src/common/models/step';\nimport type { IMouseEvent } from 'clickim/src/common/models/mouseStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\ninterface DoDragPathEventData {\n    isRoot?: boolean;\n    locatedElement: ILocatedElement;\n    events: IMouseEvent[];\n    quirks?: StepQuirks;\n    modifiers?: Partial<Modifiers>;\n    button: number | undefined;\n    isDrag: boolean;\n    allEventsOnSameElement: boolean | undefined;\n}\n\ninterface Context extends Pick<DoDragPathEventData, 'events' | 'quirks' | 'isDrag' | 'allEventsOnSameElement'> {\n    eventIndex: 0;\n    element: Element;\n    eventType: never;\n    eventData: never;\n    stepId: never;\n    testResultId: never;\n    isDoubleClick: never;\n    useRecordedMousedown: never;\n    trackActiveElement: never;\n}\n\nexport const doDragPath = function (eventData: DoDragPathEventData, done: (data: { status: 'done' | 'failed'; result?: string; success: boolean }) => void) {\n    const eventConstructorSupported = typeof Event === 'function';\n    const pointerEventConstructorSupported = typeof PointerEvent === 'function';\n    const MAX_EVENT_TIMEOUT = 40; //max msec between events\n\n    window.__unloadNavigator = resolve;\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    function resolve(result?: string) {\n        const status = {\n            status: 'done' as const,\n            result,\n            success: true,\n        };\n        done(status);\n    }\n\n    function reject(result: string) {\n        result ||= '';\n        const status = {\n            status: 'failed' as const,\n            result,\n            success: false,\n        };\n\n        done(status);\n    }\n\n    function dispatchMouseOver(element: Element) {\n        const event = eventConstructorSupported ? new Event('mouseover', { composed: true }) : document.createEvent('Events');\n        event.initEvent('mouseover', true, true);\n\n        element.dispatchEvent(event);\n    }\n\n    function dispatchMouseMove(element: Element) {\n        const modifiers = {};\n        const rect = element.getBoundingClientRect();\n        const clientX = rect.left + (rect.width / 2);\n        const clientY = rect.top + (rect.height / 2);\n        const button = 0;\n        const eventType = 'mousemove';\n        const event = createMouseEvent(eventType, modifiers, clientX, clientY, button);\n\n        element.dispatchEvent(event);\n    }\n\n    function getEventPosition(userEvent: IMouseEvent, element: Element) {\n        function isWithinBounds(start: number, end: number, point: number) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {} as Partial<NonNullable<IMouseEvent['pointerPosition']>>;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        if (context.isDrag) {\n            return { x: pointerPosition.originX || 0, y: pointerPosition.originY || 0 };\n        }\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getEventDictionary(modifiers: Partial<Modifiers>, clientX: number, clientY: number): PointerEventInit {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: Boolean(modifiers.ctrl),\n            altKey: Boolean(modifiers.alt),\n            shiftKey: Boolean(modifiers.shift),\n            metaKey: Boolean(modifiers.meta),\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        };\n    }\n\n    function createPointerEvent(eventType: string, modifiers: Partial<Modifiers>, clientX: number, clientY: number, button: number) {\n        if (pointerEventConstructorSupported) {\n            const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n            eventProperties.pointerType = 'mouse';\n            eventProperties.isPrimary = true;\n            return new window.PointerEvent(eventType, eventProperties);\n        }\n        const event = document.createEvent('PointerEvent');\n        // @ts-expect-error This smells like some IE hack that should be dropped\n        event.initPointerEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement,\n            0, /* offsetYArg */\n            0, /* offsetXArg */\n            0, /* widthArg */\n            0, /* heightArg */\n            0, /* pressure */\n            0, /* rotation */\n            0, /* tiltX */\n            0, /* tiltY */\n            0, /* pointerIdArg */\n            'mouse', /* pointerType */\n            0, /* hwTimestampArg */\n            true, /* isPrimary */\n        );\n\n        return event;\n    }\n\n    function createMouseEvent(eventType: string, modifiers: Partial<Modifiers>, clientX: number, clientY: number, button: number) {\n        const event = eventConstructorSupported ? new MouseEvent('click', { composed: true }) : document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView!, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    }\n\n    function getMouseEvent(userEvent: IMouseEvent, context: Context) {\n        const pointerEvents = ['pointerup', 'pointerdown', 'pointermove'];\n        // @ts-expect-error we never set modifiers to the context :(\n        const modifiers = context.modifiers || {};\n        const pos = getEventPosition(userEvent, context.element);\n        // @ts-expect-error we never set button to the context :(\n        const button = context.button || 0;\n        const eventType = userEvent.event;\n        if (pointerEvents.includes(eventType)) {\n            return createPointerEvent(eventType, modifiers, pos.x, pos.y, button);\n        }\n        return createMouseEvent(eventType, modifiers, pos.x, pos.y, button);\n    }\n\n    function shouldSkipEvent(currentEvent: MouseEvent, context: Context) {\n        function isClickInDragAndDrop() {\n            // @ts-expect-error not sure where this property comes from\n            return currentEvent.event === 'click' &&\n                context.isDrag &&\n                !context.allEventsOnSameElement;\n        }\n        return isClickInDragAndDrop();\n    }\n\n    function executeAsyncNextEventRecursive(index: number, context: Context, _done: VoidFunction) {\n        try {\n            const event = getMouseEvent(context.events[index], context);\n            if (!shouldSkipEvent(event, context)) {\n                context.element.dispatchEvent(event);\n            }\n        } catch (ignore) { /* ignored */ }\n\n        if (index + 1 === context.events.length) {\n            _done();\n        } else {\n            const delay = Math.min(context.events[index + 1].timeStamp! - context.events[index].timeStamp!, MAX_EVENT_TIMEOUT);\n            setTimeout(() => {\n                executeAsyncNextEventRecursive(index + 1, context, _done);\n            }, delay);\n        }\n    }\n\n    function executeAsyncEventSequence(context: Context, _done: VoidFunction) {\n        executeAsyncNextEventRecursive(0, context, () => {\n            if (window.__unloadNavigator) {\n                window.removeEventListener('unload', window.__unloadNavigator);\n            }\n            _done();\n        });\n    }\n\n    const element = eventData.isRoot ? document.documentElement : getLocatedElement(eventData.locatedElement)!;\n\n    const context: Context = {\n        eventIndex: 0,\n        element,\n        events: eventData.events,\n        // @ts-expect-error unused & invalid\n        eventType: eventData.eventType,\n        // @ts-expect-error unused & invalid\n        eventData: eventData.eventData,\n        // @ts-expect-error unused & invalid\n        stepId: eventData.id,\n        // @ts-expect-error unused & invalid\n        testResultId: eventData.testResultId,\n        quirks: eventData.quirks,\n        // @ts-expect-error unused & invalid\n        isDoubleClick: eventData.isDoubleClick,\n        isDrag: eventData.isDrag,\n        // @ts-expect-error unused & invalid\n        useRecordedMousedown: eventData.useRecordedMousedown,\n        // @ts-expect-error unused & invalid\n        trackActiveElement: eventData.trackActiveElement,\n        allEventsOnSameElement: eventData.allEventsOnSameElement,\n    };\n\n    if (!context.element) {\n        reject('element not found');\n        return;\n    }\n\n    dispatchMouseOver(context.element);\n    dispatchMouseMove(context.element);\n\n    executeAsyncEventSequence(context, () => {\n        resolve();\n    });\n};\n", "import * as _ from 'lodash';\nimport { StepAction } from './stepAction';\nimport { html5dndAction } from './scripts/html5dragAction';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport { html5dndAction as html5dndActionV2 } from './scripts/html5dragActionV2';\nimport type { SeleniumTarget } from './stepAction';\nimport type { VisibilityInfo } from 'clickim/src/background/visibilityUtils';\nimport type { IMouseEvent, MouseStep } from 'clickim/src/common/models/mouseStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\nexport interface DoubleClickEventData {\n    elementToFocusLocatedElement: false | ILocatedElement | undefined;\n    locatedElement: ILocatedElement;\n    events: IMouseEvent[];\n    timeout: number;\n}\n\nexport interface DnDRectsAndOffsets {\n    fromRect: VisibilityInfo;\n    fromX: number;\n    fromY: number;\n    toRect: VisibilityInfo;\n    toX: number;\n    toY: number;\n}\n\nexport class MouseStepAction extends StepAction<MouseStep> {\n    private getDnDRectsAndOffsets(target: SeleniumTarget, destTarget: SeleniumTarget, clickOffset?: { x: number; y: number }, toClickOffset?: { x: number; y: number }): DnDRectsAndOffsets {\n        const fromOffsets = this.stepActionUtils.getClickOffset(clickOffset, target.rectWithoutFrameOffset!);\n        const toOffsets = this.stepActionUtils.getClickOffset(toClickOffset, destTarget.rectWithoutFrameOffset!);\n\n        return {\n            fromRect: target.rectWithoutFrameOffset!,\n            fromX: fromOffsets.x,\n            fromY: fromOffsets.y,\n            toRect: destTarget.rectWithoutFrameOffset!,\n            toX: toOffsets.x,\n            toY: toOffsets.y,\n        };\n    }\n\n    private async clickJs() {\n        const { step, context } = this;\n        const target = this.getTarget();\n        const timeout = context.data.timeToPlayStep! + 3000;\n        const events = step.events;\n\n        if (!events?.length) {\n            return { success: false, reason: 'Malformed step: missing recorded events' };\n        }\n\n        const eventMessage = {\n            isRoot: target.isRoot,\n            locatedElement: target.locatedElement,\n            events,\n            quirks: step.quirks,\n            modifiers: step.modifiers,\n            button: step.button,\n        };\n\n        const [{ doClick: doClickScript }, { dispatchFocus }] = await Promise.all([import('./scripts/doClick'), import('./scripts/focusElement')]);\n\n        const doClickCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus.toString()};\n            var doClick = ${doClickScript.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return doClick.call(null, eventData, done);\n        `;\n\n\n        try {\n            type CallbackReturnType = Parameters<Parameters<typeof doClickScript>[1]>[0];\n            const result = await this.driver.executeCodeAsync<CallbackReturnType, [typeof eventMessage]>(doClickCode, timeout, eventMessage);\n            if (result.value?.success) {\n                return { success: true };\n            }\n            return { success: false };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n\n    private isWithinBounds(start: number, end: number, point: number) {\n        return (point > start) && (point < end);\n    }\n\n    private getEventSequenceOffset() {\n        const initialPosition = this.step.events![0]?.pointerPosition;\n        if (!initialPosition) {\n            return { xOffset: 0, yOffset: 0 };\n        }\n\n        const target = this.getTarget();\n        const targetElementRect = target.rectWithoutFrameOffset!;\n        const isXWithinBounds = this.isWithinBounds(targetElementRect.left, targetElementRect.left + targetElementRect.width, initialPosition.originX);\n        const isYWithinBounds = this.isWithinBounds(targetElementRect.top, targetElementRect.top + targetElementRect.height, initialPosition.originY);\n        const xOffset = isXWithinBounds ? 0 : targetElementRect.left + targetElementRect.width / 2 - initialPosition.originX;\n        const yOffset = isYWithinBounds ? 0 : targetElementRect.top + targetElementRect.height / 2 - initialPosition.originY;\n        return { xOffset, yOffset };\n    }\n\n    private addOffsetToEvents(offsetFromElement: { xOffset: number; yOffset: number }) {\n        this.step.events!.forEach(event => {\n            if (event?.pointerPosition) {\n                event.pointerPosition.originX += offsetFromElement.xOffset;\n                event.pointerPosition.originY += offsetFromElement.yOffset;\n            }\n        });\n    }\n\n    private generateEventOfType(baseEvent: IMouseEvent, type: string) {\n        const cloneEvent = _.cloneDeep(baseEvent);\n        cloneEvent.event = type;\n        return cloneEvent;\n    }\n\n    private fixAbsoluteDragEventSequence() {\n        const { events = [], allEventsOnSameElement, isHTML5Drag, toElement } = this.step;\n        const downEvent = events.find(event => ['mousedown', 'pointerdown'].includes(event.event));\n        if (downEvent) {\n            const mousedownEventIndex = events.indexOf(downEvent);\n            events.splice(mousedownEventIndex, 0, this.generateEventOfType(downEvent, 'mouseover'));\n        }\n\n        const { recordPointerMoveEvents = false } = this.context.project.defaults || {};\n        const mouseUpEvent = events.find(event => event.event === 'mouseup') || (recordPointerMoveEvents && events.find(event => event.event === 'pointerup'));\n        const lastMouseMoveEventIndex = Number(\n            _.findLastIndex(events, event => event.event === 'mousemove') ||\n            (recordPointerMoveEvents && _.findLastIndex(events, event => event.event === 'pointermove')),\n        );\n        if (mouseUpEvent && lastMouseMoveEventIndex > 0 && !allEventsOnSameElement) {\n            events.splice(lastMouseMoveEventIndex + 1, 0, this.generateEventOfType(mouseUpEvent, 'mouseover'));\n        }\n\n        if (isHTML5Drag && !toElement) {\n            this.step.events = this.addDragendIfNeeded(events);\n        }\n\n        this.addOffsetToEvents(this.getEventSequenceOffset());\n    }\n\n    private async dragPathJs() {\n        const { step, context } = this;\n        const target = this.getTarget();\n        const timeout = context.data.timeToPlayStep! + 3000;\n\n        if (!step.events?.length) {\n            return { success: false, reason: 'Malformed step: missing recorded events' };\n        }\n\n        this.fixAbsoluteDragEventSequence();\n\n        const events = step.events;\n\n        const eventMessage = {\n            isRoot: target.isRoot,\n            locatedElement: target.locatedElement,\n            events,\n            quirks: step.quirks,\n            modifiers: step.modifiers,\n            button: step.button,\n            isDrag: true,\n            allEventsOnSameElement: step.allEventsOnSameElement,\n        };\n\n        const [{ doDragPath: doDragPathScript }, { dispatchFocus }] = await Promise.all([import('./scripts/doDragPath'), import('./scripts/focusElement')]);\n\n        const doDragPathCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus.toString()};\n            var doDragPath = ${doDragPathScript.toString()};\n            return doDragPath.apply(null, arguments);\n        `;\n\n        try {\n            type CallbackReturnType = Parameters<Parameters<typeof doDragPathScript>[1]>[0];\n            const result = await this.driver.executeCodeAsync<CallbackReturnType, [typeof eventMessage]>(doDragPathCode, timeout, eventMessage);\n            if (result.value?.success) {\n                return { success: true };\n            }\n            return { success: false };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n\n    private async chooseAndRunAction() {\n        const target = this.getTarget();\n        const { locatedElement, seleniumElement, rectWithoutFrameOffset, rect } = target;\n\n        // used for fallback native click\n        const offsets = {\n            frameOffset: {\n                x: rect!.left - rectWithoutFrameOffset!.left,\n                y: rect!.top - rectWithoutFrameOffset!.top,\n            },\n            rect: rectWithoutFrameOffset!,\n            // webdriver performs offset from the center of the element, so make sure to tweak offsets accordingly\n            clickOffset: this.stepActionUtils.getClickOffset(this.step.element.clickOffset, rectWithoutFrameOffset!),\n        };\n\n        // will skip left click and double click on Edge.\n        const skipFileInputClick =\n            featureFlagsService.flags.skipFileInputClicks.isEnabled() &&\n            target.tagName === 'INPUT' &&\n            (target.elementSymbol!.includes('type=\"file\"') || target.elementSymbol!.includes('type=\\'file\\'') || target.elementSymbol!.includes('type=file'));\n\n        if (skipFileInputClick) {\n            return {\n                keep: true,\n                success: 'skipped',\n                reason: 'Clicking on input type=file is disabled',\n            };\n        }\n\n        // Be ware - due to bad typing `isDoubleClick` is considered a function, while it is a boolean property\n        if (this.step.isDoubleClick) {\n            const eventData: DoubleClickEventData = {\n                elementToFocusLocatedElement: target.elementToFocusLocatedElement,\n                locatedElement,\n                events: this.step.events!,\n                timeout: this.context.data.timeToPlayStep! + 3000,\n            };\n            return this.driver.doubleClick(seleniumElement, eventData, offsets);\n        }\n        if (this.step.isDrag) {\n            if (this.step.toElement) {\n                const destTarget = this.context.data.toElement as SeleniumTarget;\n                if (this.step.isHTML5Drag) {\n                    if (featureFlagsService.flags.usePortedHtml5DragDrop.isEnabled()) {\n                        const events = this.generateHTML5DragEventSequence();\n                        const timeout = this.context.data.timeToPlayStep! + 3000;\n                        const contextTarget = this.getTarget();\n                        const eventMessage = {\n                            transactionId: `${this.context.testResultId}:${this.step.id}`,\n                            id: this.step.id,\n                            testResultId: this.context.testResultId,\n                            eventType: this.step.type,\n                            events,\n                            eventData: {\n                                modifiers: this.step.modifiers,\n                                button: this.step.button,\n                            },\n                            quirks: this.step.quirks,\n                            isDrag: this.step.isDrag,\n                            useRecordedMousedown: this.step.useRecordedMousedown,\n                            allEventsOnSameElement: this.step.allEventsOnSameElement,\n                            elementToFocusLocatedElement: contextTarget.elementToFocusLocatedElement,\n                            trackActiveElement: this.step.trackActiveElement,\n                            locatedElement: contextTarget.locatedElement,\n                            isRoot: contextTarget.isRoot,\n                        };\n                        const html5DNDCode = `\n                        var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n                        var dnd = ${html5dndActionV2.toString()};\n                        var eventData = arguments[0];\n                        var done = arguments[1];\n                        return dnd.call(null, eventData, done);\n                    `;\n                        type CallbackReturnType = Parameters<Parameters<typeof html5dndActionV2>[1]>[0];\n                        return this.driver.executeCodeAsync<CallbackReturnType, [typeof eventMessage]>(html5DNDCode, timeout, eventMessage);\n                    }\n\n                    const html5DNDCode = `\n                        var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n                        var dnd = ${html5dndAction.toString()};\n                        var eventData = arguments[0];\n                        return dnd.call(null, eventData);\n                    `;\n\n                    const eventMessage = { fromLocatedElement: locatedElement, toLocatedElement: destTarget.locatedElement };\n                    return this.driver.executeJS<typeof html5dndAction>(html5DNDCode, eventMessage);\n                }\n\n                const rectsAndOffsets = this.getDnDRectsAndOffsets(target, destTarget, this.step.element.clickOffset, this.step.toElement.clickOffset);\n                return this.driver.dragAndDrop(seleniumElement, destTarget.seleniumElement, rectsAndOffsets);\n            }\n            return this.dragPathJs();\n\n            // This is the old way, which uses selenium action (AKA \"native\" drag).\n            // return this.driver.drag(seleniumElement, rectWithoutFrameOffset, xOffset, yOffset, this.step.events);\n        }\n        const useRightClickJS = this.driver.isSafari() && this.step.button === 2;\n        const forceNativeEvent = this.driver.isSafari() && target.tagName === 'SELECT';\n\n        if (forceNativeEvent) {\n            // NOTE:\n            // We want to skip click on SELECT elements because of a safari driver bug that not allowing to set the selected option after this click.\n            return {\n                keep: true, success: 'skipped', forceTreatAsWarning: true, reason: 'Safari does not support clicking on select elements',\n            };\n        }\n        if (!forceNativeEvent && (!this.step.nativeEvents || useRightClickJS)) {\n            return this.clickJs();\n        }\n        if (this.step.button === 2) {\n            return this.driver.rightClick(seleniumElement, offsets);\n        }\n        return this.driver.leftClick(seleniumElement, offsets);\n    }\n\n    override async performAction() {\n        let res: any = await this.chooseAndRunAction();\n        if (!res.status && res.value && res.value.keep) {\n            res = res.value;\n        }\n        if (res.keep) {\n            delete res.keep;\n            return res;\n        }\n        return undefined;\n    }\n\n    private addDragendIfNeeded(events: IMouseEvent[]) {\n        if (events.some(event => event.event === 'dragend')) {\n            return events;\n        }\n        const dragendDefaultEvent = {\n            event: 'dragend',\n            eventInfo: {\n                detail: 0,\n            },\n            pointerPosition: this.getToElementPosition(),\n        } as IMouseEvent;\n        return events.concat(dragendDefaultEvent);\n    }\n\n    private getToElementPosition() {\n        if (!(this.context.data?.toElement?.rect)) {\n            return undefined;\n        }\n        const { rect } = this.context.data.toElement;\n        return {\n            originX: rect.left + (rect.width / 2),\n            originY: rect.top + (rect.height / 2),\n        };\n    }\n\n    private addDragOverBeforeDragEnd(events: IMouseEvent[]) {\n        const dropOrEndEventIndex = events.findIndex(e => ['dragend', 'drop'].includes(e.event));\n        const oneBeforeLastEvent = events[dropOrEndEventIndex - 1];\n        if (!oneBeforeLastEvent || (oneBeforeLastEvent.event !== 'dragover')) {\n            const dragenterDefaultEvent = {\n                event: 'dragover',\n                eventInfo: {\n                    detail: 0,\n                },\n                pointerPosition: this.getToElementPosition(),\n                fireOnTarget: true,\n            } as any as IMouseEvent;\n            events.splice(dropOrEndEventIndex, 0, dragenterDefaultEvent);\n        } else {\n            Object.assign(oneBeforeLastEvent, { fireOnTarget: true });\n        }\n        return events;\n    }\n\n    private fixEventSequence(events: IMouseEvent[]) {\n        const withDragEnd = this.addDragendIfNeeded(events);\n        return this.addDragOverBeforeDragEnd(withDragEnd);\n    }\n\n    private addElementLocatedElementToDragEvents(events: IMouseEvent[], fromElementLocatedElement: ILocatedElement, toElementLocatedElement: ILocatedElement) {\n        const isOnToElement = (e: any) => e.fireOnTarget || ['drop', 'dragenter'].includes(e.event);\n        events.forEach(event => Object.assign(event, { locatedElement: isOnToElement(event) ? toElementLocatedElement : fromElementLocatedElement }));\n        return events;\n    }\n\n    private generateHTML5DragEventSequence() {\n        const fromElement = this.context.data.targetId;\n        const toElement = this.context.data.toElement;\n        let events = this.step.events!.filter(event => event.event !== 'mousemove' && event.event !== 'pointermove');\n        events = this.fixEventSequence(events);\n        events = this.addElementLocatedElementToDragEvents(events, fromElement.locatedElement, toElement.locatedElement);\n        if (this.step.dispatchDragEventsOnClosestDraggable) {\n            events.forEach(event => Object.assign(event, { dispatchDragEventsOnClosestDraggable: true }));\n        }\n        return events;\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { TextValidationStep } from 'clickim/src/common/models/textValidationStep';\n\nexport class TextValidationStepAction extends StepAction<TextValidationStep> {\n    override async performAction() {\n        const { step, context, sessionPlayerInit: { stepParamExpressionEvaluator: paramEvaluator, utils, commonConstants } } = this;\n        const target = this.getTarget();\n\n        try {\n            const actual = await this.stepActionUtils.extractTargetText(target);\n            const { evaluatedText: expected } = paramEvaluator.computeExpression(step.expression2!, context, this.exportsGlobal, this.exportsTest);\n            try {\n                const compareResult = utils.compareOrMatch(expected, actual);\n                if (compareResult) {\n                    return { success: true };\n                }\n                return {\n                    success: false,\n                    errorType: commonConstants.stepResult.TEXT_COMPARE_FAILURE,\n                    resultInfo: { expected: String(expected), actual },\n                };\n            } catch (err) {\n                return {\n                    success: false,\n                    errorType: commonConstants.stepResult.TEXT_COMPARE_FAILURE,\n                    resultInfo: { expected: expected.toString(), actual },\n                };\n            }\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n                shouldRetry: true,\n            };\n        }\n    }\n}\n", "import * as _ from 'lodash';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport type { IncomingParams } from 'clickim/src/background/playbackContext';\nimport type { EvaluateExpressionStep } from 'clickim/src/common/models/evaluateExpressionStep';\n\nconst logger = getLogger('evaluate-expression-step-action');\n\nexport class EvaluateExpressionStepAction extends StepAction<EvaluateExpressionStep> {\n    override async execute() {\n        const { step, context, exportsGlobal, exportsTest } = this;\n\n        try {\n            logger.info('runner running incoming params evaluation');\n            let incomingParams = context.incomingParams || {} as IncomingParams;\n            if (_.isEmpty(incomingParams)) {\n                incomingParams = this.sessionPlayerInit.StepParamsBuilder.getStepInputs(step as any as EvaluateExpressionStep, context, exportsGlobal, exportsTest);\n            }\n\n            const params = ['context', ...incomingParams.as.functionParameters];\n            const args = [context, ...incomingParams.as.functionArguments];\n            const expressionToEvaluate = step.subType === 'text' ? `'${step.expression!.replace(/'/g, \"\\\\'\")}'` : step.expression;\n            const code = `return ${expressionToEvaluate}`.replace(/\\n/g, '\\\\n');\n            const textEvaluateFunction = Function.apply(Function, params.concat([code]));\n            const evaluatedText = textEvaluateFunction(...args);\n\n            context.data[step.targetName!] = evaluatedText;\n            context.data[step.targetId!] = evaluatedText;\n            if (context.internalParams) {\n                context.internalParams.add(step.targetId!);\n            }\n\n            const result = {\n                success: true,\n                evaluatedText,\n                data: context.data,\n            };\n\n            return result;\n        } catch (e) {\n            const { stepResult } = this.sessionPlayerInit.commonConstants;\n            // TODO: Fix throwing non-error\n            // eslint-disable-next-line @typescript-eslint/only-throw-error\n            throw { errorType: stepResult.EVALUATE_EXPRESSION_EXCEPTION, resultInfo: { exception: e.toString() }, success: false };\n        }\n    }\n}\n", "import type { Modifiers } from './doClick';\nimport type { DispatchFocusFn } from './focusElement';\nimport type { StepQuirks } from 'clickim/src/common/models/step';\nimport type { TextStep } from 'clickim/src/common/models/textStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\ndeclare const dispatchFocus: DispatchFocusFn;\n\ninterface SetTextEventData {\n    eventType: string;\n    events: TextStep['events'];\n    quirks?: StepQuirks;\n    locatedElement: ILocatedElement;\n    isRoot?: boolean;\n    elementToFocusLocatedElement?: false | ILocatedElement;\n}\ntype BaseEvent = SetTextEventData['events'][number];\ninterface Context extends Pick<SetTextEventData, 'events' | 'quirks' | 'eventType'> {\n    eventIndex: number;\n    element: Element;\n    isContentEditable?: boolean;\n    isNonTextableElemnet?: boolean;\n    isFocusable?: boolean;\n    isSelectable?(e: Event): boolean;\n    noEventExecuter?(_context: Context, userEvent: BaseEvent): void;\n}\n\nexport const setText = function (eventData: SetTextEventData, done: (data: { status: 'done' | 'failed'; result?: string; success: boolean; reason?: string }) => void) {\n    const eventConstructorSupported = typeof Event === 'function';\n    const element = eventData.isRoot ? document.documentElement : getLocatedElement(eventData.locatedElement)!;\n    const context: Context = {\n        eventIndex: 0,\n        element,\n        events: eventData.events,\n        eventType: eventData.eventType,\n        quirks: eventData.quirks,\n    };\n\n    if (!element) {\n        throw new Error('element not found');\n    }\n\n    window.__unloadNavigator = function () {\n        resolve();\n    };\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    const keyboardEventNames = new Set(['keydown', 'keyup', 'keypress']);\n    const MAX_KEYBOARD_EVENT_TIMEOUT = 15; //max msec between keyboard events\n\n    function getTextInputEventObject(userEvent: BaseEvent) {\n        try {\n            if (!eventConstructorSupported) {\n                return undefined;\n            }\n\n            const event = new CustomEvent('textInput', {\n                bubbles: true,\n                cancelable: true,\n            });\n            if (userEvent.eventData) {\n                // @ts-expect-error both objects don't have a data property type\n                event.data = userEvent.eventData.data;\n            }\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function initTextInputEvent(userEvent: BaseEvent) {\n        try {\n            const event = document.createEvent('TextEvent');\n            // @ts-expect-error both objects don't have a data property type\n            event.data = userEvent.eventData.data;\n            const method = 1; // keyboard\n            // @ts-expect-error untyped?\n            const locale = userEvent.eventData.locale || 'en-US';\n            // @ts-expect-error untyped?\n            event.initTextEvent('textInput', true, true, window, userEvent.eventData.data, method, locale);\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function getTextInputEvent(userEvent: BaseEvent) {\n        return getTextInputEventObject(userEvent) || initTextInputEvent(userEvent);\n    }\n\n    function createKeyboardEventObject(eventType: string, _eventData: BaseEvent['eventData'], modifiers: Partial<Modifiers>) {\n        try {\n            return new KeyboardEvent(eventType, {\n                bubbles: true,\n                cancelable: true,\n                // @ts-expect-error we never pass these properties\n                location: _eventData.location || 0,\n                // @ts-expect-error we never pass these properties\n                key: _eventData.key || '',\n                ctrlKey: Boolean(modifiers.ctrl),\n                shiftKey: Boolean(modifiers.shift),\n                altKey: Boolean(modifiers.alt),\n                metaKey: Boolean(modifiers.meta),\n            });\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function initKeyboardEvent(eventType: string, _eventData: BaseEvent['eventData'], modifiers: Partial<Modifiers>) {\n        try {\n            const event = document.createEvent('KeyboardEvent');\n            // @ts-expect-error this function was removed from all modern browsers\n            event.initKeyEvent(\n                eventType, // typeArg,\n                true, // canBubbleArg,\n                true, // cancelableArg,\n                null, // viewArg,  Specifies UIEvent.view. This value may be null.\n                Boolean(modifiers.ctrl),\n                Boolean(modifiers.alt),\n                Boolean(modifiers.shift),\n                Boolean(modifiers.meta),\n                // @ts-expect-error there is no key called key\n                _eventData.key || '',\n                0, // charCodeArg\n            );\n\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function createKeyboardEvents(eventType: string, _eventData: BaseEvent['eventData'], modifiers: Partial<Modifiers>) {\n        try {\n            const event = document.createEvent('Events');\n            event.initEvent(eventType, true, true);\n            Object.assign(event, {\n                altKey: Boolean(modifiers.alt),\n                ctrlKey: Boolean(modifiers.ctrl),\n                metaKey: Boolean(modifiers.meta),\n                shiftKey: Boolean(modifiers.shift),\n                // @ts-expect-error we never pass this property\n                keyCode: _eventData.key || '',\n            });\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function createKeyboardEvent(eventType: string, _eventData: BaseEvent['eventData'], modifiers: Partial<Modifiers>) {\n        return createKeyboardEventObject(eventType, _eventData, modifiers)! ||\n            initKeyboardEvent(eventType, _eventData, modifiers) ||\n            createKeyboardEvents(eventType, _eventData, modifiers);\n    }\n\n    function getKeyboardEvent(userEvent: BaseEvent) {\n        if (!keyboardEventNames.has(userEvent.event)) {\n            return null;\n        }\n\n        const _eventData = userEvent.eventData;\n        // @ts-expect-error we never pass modifiers, this is possibly bad copy-pasting\n        const modifiers = _eventData.modifiers || {};\n\n        const event = createKeyboardEvent(userEvent.event, _eventData, modifiers);\n\n        // workaround for chromium bugs which make keycode etc readonly\n        Object.defineProperties(event, {\n            keyCode: {\n                enumerable: true,\n                get() {\n                    return this._keyCode_;\n                },\n            },\n            charCode: {\n                enumerable: true,\n                get() {\n                    return this._charCode_;\n                },\n            },\n            which: {\n                enumerable: true,\n                get() {\n                    return this._keyCode_;\n                },\n            },\n        });\n        Object.assign(event, {\n            // @ts-expect-error event might be badly typed\n            _keyCode_: _eventData.keyCode,\n            _charCode_: _eventData.charCode || 0,\n        });\n        return event;\n    }\n\n    function getEvent(userEvent: BaseEvent) {\n        return userEvent.event === 'textInput' ?\n            getTextInputEvent(userEvent) :\n            getKeyboardEvent(userEvent);\n    }\n\n    function shouldSkipEvent(currentEvent: BaseEvent, _context: Context) {\n        const isTextInputAuth0Form = () => currentEvent.event === 'textInput' && !_context.quirks?.isAuth0Form;\n        return isTextInputAuth0Form();\n    }\n\n    function getTextEventTimeout(currentEvent: BaseEvent, nextEvent: BaseEvent) {\n        return ((currentEvent.event === 'keyup') && (nextEvent.event === 'keydown')) ?\n            MAX_KEYBOARD_EVENT_TIMEOUT :\n            0;\n    }\n\n    function getTimeBetweenFiringEvents(currentEvent: BaseEvent, nextEvent: BaseEvent) {\n        const maxTimeout = getTextEventTimeout(currentEvent, nextEvent);\n        return Math.min(nextEvent.timeStamp! - currentEvent.timeStamp!, maxTimeout);\n    }\n\n    function handleReactFormFocus(_element: HTMLInputElement | HTMLTextAreaElement) {\n        // solution taken partially from https://github.com/vitalyq/react-trigger-change\n        const descriptor = Object.getOwnPropertyDescriptor(_element, 'value');\n        if (!descriptor) {\n            return;\n        }\n        const initialValue = _element.value;\n        _element.value = `${initialValue}#`;\n        if (descriptor.configurable) {\n            // @ts-expect-error force remove the value\n            delete _element.value;\n        }\n        _element.value = initialValue;\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('input', true, false);\n        _element.dispatchEvent(event);\n        Object.defineProperty(_element, 'value', descriptor);\n    }\n\n    function handleChangeEventIfNeeded(_context: Context) {\n        if (!isFocusableInput(_context.element)) {\n            return;\n        }\n        try {\n            handleReactFormFocus(_context.element);\n            if (eventConstructorSupported) {\n                _context.element.dispatchEvent(new Event('change'));\n            } else {\n                const event = document.createEvent('HTMLEvents');\n                event.initEvent('change', false, true);\n                _context.element.dispatchEvent(event);\n            }\n        } catch (e) { /* ignored */ }\n    }\n\n    function nextAsyncEvent(_context: Context, currentEvent: BaseEvent, nextEvent: BaseEvent) {\n        if (nextEvent) {\n            setTimeout(() => {\n                executeAsyncNext(_context);\n            }, getTimeBetweenFiringEvents(currentEvent, nextEvent));\n        } else {\n            if (window.__unloadNavigator) {\n                window.removeEventListener('unload', window.__unloadNavigator);\n            }\n            handleChangeEventIfNeeded(_context);\n            resolve();\n        }\n    }\n\n    function shouldDispatchOnParentElement(eventType: string, _context: Context) {\n        return (eventType === 'change' || eventType === 'blur') && _context.element.tagName === 'OPTION';\n    }\n\n    function getElement(event: Event, _context: Context, currentEvent: BaseEvent) {\n        if (shouldDispatchOnParentElement(event.type, _context)) {\n            return _context.element.parentElement;\n            // @ts-expect-error untyped\n        } if (currentEvent.locatedElement) {\n            // @ts-expect-error untyped\n            return getLocatedElement(currentEvent.locatedElement);\n        }\n        return _context.element;\n    }\n\n    function findTextNode(_element: Node, offsetData: { offset: number }): ChildNode | null {\n        let child = _element.firstChild;\n        let innerChild;\n        while (child) {\n            if (child.nodeType === 3) {\n                if (offsetData.offset-- <= 0) {\n                    return child;\n                }\n            } else if (child.nodeType === 1) {\n                innerChild = findTextNode(child, offsetData);\n                if (innerChild) {\n                    return innerChild;\n                }\n            }\n            child = child.nextSibling;\n        }\n        return null;\n    }\n\n    function setSelection(_element?: Element, selection?: { start: number; end: number; nodeOffset: number; textOffset: number }) {\n        if (!_element || !selection) {\n            return;\n        }\n        if (!isNaN(selection.start)) {\n            Object.assign(_element, {\n                selectionStart: selection.start,\n                selectionEnd: selection.end,\n            });\n        } else if (!isNaN(selection.nodeOffset)) {\n            let startNode;\n            if (_element.firstChild) {\n                startNode = findTextNode(_element, { offset: selection.nodeOffset });\n            } else {\n                startNode = _element;\n            }\n            if (startNode) {\n                const sel = window.getSelection()!;\n                const range = document.createRange();\n\n                try { // until we get our act together regarding contenteditable, this may throw when the numbers in the recorded data don't match the current text\n                    sel.removeAllRanges();\n                    range.setStart(startNode, selection.textOffset);\n                    range.setEnd(startNode, selection.textOffset);\n                    sel.addRange(range);\n                } catch (ignore) { /* ignored */ }\n            }\n        }\n    }\n\n    function isSubmitFormAction(eventType: string, _element: Element): _element is HTMLFormElement {\n        return eventType === 'submit' && Boolean((_element as HTMLFormElement).action);\n    }\n\n    function executeAsyncEvent(event: Event, _context: Context, currentEvent: BaseEvent) {\n        if (_context.isFocusable && _context.isSelectable!(event) && event.type !== 'submit') {\n            try {\n                // @ts-expect-error selection is untyped\n                setSelection(_context.element, currentEvent.eventData.selection);\n            } catch (ignore) { /* ignored */ }\n        }\n        const _element = getElement(event, _context, currentEvent);\n        if (!_element) {\n            throw new Error('could not find element');\n        }\n        if (isSubmitFormAction(event.type, _element)) {\n            _element.submit();\n        } else {\n            _element.dispatchEvent(event);\n        }\n    }\n\n    function executeAsyncNext(_context: Context) {\n        let event;\n        const currentEvent = _context.events[_context.eventIndex];\n        const nextEvent = _context.events[++_context.eventIndex];\n        try {\n            event = getEvent(currentEvent);\n        } catch (err) {\n            return reject(`exception in get event in text step:${err.message}`);\n        }\n\n        if (shouldSkipEvent(currentEvent, _context)) {\n            return nextAsyncEvent(_context, currentEvent, nextEvent);\n        } if (event) {\n            try {\n                executeAsyncEvent(event, _context, currentEvent);\n            } catch (err) {\n                return reject(`exception in executeEvent in text step:${err.message}`);\n            }\n        } else if (_context.noEventExecuter) {\n            _context.noEventExecuter(_context, currentEvent);\n        } else {\n            return reject(`cannot execute event ${currentEvent.event}`);\n        }\n        nextAsyncEvent(_context, currentEvent, nextEvent);\n        return undefined;\n    }\n\n    function isFocusableInput(target: Element): target is HTMLInputElement | HTMLTextAreaElement {\n        const tagName = target.tagName;\n        return (tagName === 'INPUT' || tagName === 'TEXTAREA');\n    }\n\n    function isContentEditable(target: Element) {\n        return target.getAttribute ?\n            Boolean(target.getAttribute('contenteditable') === 'true') :\n            false;\n    }\n\n    function executeSetValue(_context: Context, userEvent: BaseEvent) {\n        if (isFocusableInput(_context.element)) {\n            _context.element.value = userEvent.eventData.text;\n            const inputEvent = document.createEvent('Event');\n            inputEvent.initEvent('input', true, false);\n            _context.element.dispatchEvent(inputEvent);\n        } else if (_context.isContentEditable) {\n            _context.element.innerHTML = userEvent.eventData.text;\n        }\n    }\n\n    function findEffectiveActiveElement() {\n        let activeElement = document.activeElement!;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    }\n\n    function resolve(result?: never) {\n        const status = {\n            status: 'done' as const,\n            result,\n            success: true,\n            ...(context.isNonTextableElemnet && { reason: 'Set text on non input element' }),\n        };\n\n        done(status);\n    }\n\n    function reject(result?: string) {\n        result ||= '';\n        const status = {\n            status: 'failed' as const,\n            result,\n            success: false,\n            ...(context.isNonTextableElemnet && { reason: 'Set text on non input element' }),\n        };\n\n        done(status);\n    }\n\n    try {\n        const isInput = isFocusableInput(context.element);\n        context.isContentEditable = isContentEditable(context.element);\n        if (!isInput && !context.isContentEditable) {\n            context.isNonTextableElemnet = true;\n        }\n        context.isFocusable = isInput || context.isContentEditable;\n        context.isSelectable = event => event.type !== 'keyup';\n        context.noEventExecuter = executeSetValue;\n    } catch (err) {\n        reject(`exception in set text step:${err.message}`);\n        return;\n    }\n\n    const oldActiveElement = findEffectiveActiveElement();\n    dispatchFocus(eventData.elementToFocusLocatedElement, oldActiveElement);\n    executeAsyncNext(context);\n};\n", "import { StepAction } from './stepAction';\nimport { extractElementId, delay } from '../../utils';\nimport type { TextStep } from 'clickim/src/common/models/textStep';\n\nexport class TextStepAction extends StepAction<TextStep> {\n    private async setValueNative() {\n        const context = this.context;\n        const target = this.getTarget();\n        if (!this.step.delayBetweenChars) {\n            return this.driver.setValue(target.seleniumElement, context.stepText!);\n        }\n\n        await this.driver.elementIdClear(extractElementId(target.seleniumElement));\n        return await this.setTextDelayed();\n    }\n\n    private async setValueJS() {\n        const { step: { events, type: eventType, quirks }, context, sessionPlayerInit } = this;\n        const target = this.getTarget();\n        const timeout = context.data.timeToPlayStep! + 3000;\n\n        const { setTextDraftJs } = sessionPlayerInit.codeSnippets;\n        if (target.isDraftEditor && setTextDraftJs) {\n            return this.driver.executeJS(setTextDraftJs(target.locatedElement, context.stepText!));\n        }\n\n        if (!events?.length) {\n            return undefined;\n        }\n\n        const eventMessage = {\n            eventType,\n            events,\n            quirks,\n            locatedElement: target.locatedElement,\n            isRoot: target.isRoot,\n            elementToFocusLocatedElement: target.elementToFocusLocatedElement,\n        };\n\n        const [{ setText: setTextScript }, { dispatchFocus }] = await Promise.all([import('./scripts/setText'), import('./scripts/focusElement')]);\n\n        const setTextCode = `\n            var getLocatedElement = ${sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus};\n            var setText = ${setTextScript.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return setText.call(null, eventData, done);\n        `;\n\n        type CallbackReturnType = Parameters<Parameters<typeof setTextScript>[1]>[0];\n        const result = await this.driver.executeCodeAsync<CallbackReturnType, [typeof eventMessage]>(setTextCode, timeout, eventMessage);\n        return { success: Boolean(result.value?.success) };\n    }\n\n    private async setTextDelayed() {\n        const letters = this.context.stepText!;\n        const target = this.getTarget();\n        for (let i = 0; i < letters.length; i++) {\n            await this.driver.elementIdValue(extractElementId(target.seleniumElement), letters[i]);\n            // don't delay on last step.\n            if (i < letters.length - 1) {\n                await delay(this.step.delayBetweenChars || 0);\n            }\n        }\n    }\n\n    private async setValueAppendNative() {\n        const keys = [];\n        const context = this.context;\n        const target = this.getTarget();\n\n        if (target?.seleniumElement) {\n            if (!this.step.delayBetweenChars) {\n                keys.push(Array.from(context.stepText!));\n                // @ts-expect-error this is either a bug, ot a typing issue. but this is TDK only so \uD83D\uDCA9\n                // TODO: (Chemi) Fix later\n                return this.driver.elementIdValue(extractElementId(target.seleniumElement), keys);\n            }\n\n            return this.setTextDelayed();\n        }\n        throw new Error('missing selenium element');\n    }\n\n    override async performAction() {\n        const target = this.getTarget();\n        const forceJsEvent = this.driver.isSafari() &&\n            target.locatedElement && target.locatedElement.shadowPath &&\n            Array.isArray(target.locatedElement.shadowPath) && target.locatedElement.shadowPath.length > 1;\n\n        if (this.step.nativeEvents && !forceJsEvent) {\n            return this.setValueNative();\n        }\n        return this.setValueJS();\n    }\n}\n", "import type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\ninterface RunCodeEventData {\n    function: { params: string[]; args: any[] };\n    transactionId: string;\n    browser: string;\n    browserMajor: number;\n}\nexport interface RunCodeRes {\n    type?: never;\n    status: 'done' | 'failed';\n    success: boolean;\n    result: { resultValue: any; exports: object; exportsTest: object; exportsGlobal: object };\n}\nexport interface HangingPromiseRes {\n    type: 'promise';\n    status?: never;\n    success?: never;\n    result?: never;\n}\n\nexport const runCode = function (eventData: RunCodeEventData, preCompiledCode: ((...args: unknown[]) => any) | ((...args: unknown[]) => Promise<any>) | undefined) {\n    function appendToStorage(name: string, data: HangingPromiseRes | RunCodeRes) {\n        const sessionItem = `data-testim-${name}`;\n\n        const nativeFuncErrMsg = 'Native sessionStorage is not available';\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n        function isNativeFunction(fn: Function) {\n            if (!fn?.toString) {\n                return false;\n            }\n            return fn.toString().includes('[native code]');\n        }\n        try {\n            if (![window.sessionStorage.setItem, window.sessionStorage.getItem].every(isNativeFunction)) {\n                throw new Error(nativeFuncErrMsg);\n            }\n            const oldData = JSON.parse(window.sessionStorage.getItem(sessionItem) || '{}');\n            const newData = { ...oldData, ...data };\n            window.sessionStorage.setItem(sessionItem, JSON.stringify(newData));\n        } catch (err) {\n            // any variation QuotaExceededError from browsers\n            const isQuotaExceededError = err.message.toLowerCase().includes('quota');\n            const isNativeFunctionError = err.message === nativeFuncErrMsg;\n\n            if (\n                err.message.includes('sessionStorage') || // Chrome + Firefox\n                err.message.includes('The operation is insecure') || // Safari\n                isQuotaExceededError ||\n                isNativeFunctionError\n            ) {\n                let storage = document.head.querySelector('#testim-storage-backup');\n                if (!storage) {\n                    storage = document.createElement('meta');\n                    storage.id = 'testim-storage-backup';\n                    document.head.append(storage);\n                }\n                const oldData = JSON.parse(storage.getAttribute(sessionItem) || '{}');\n                const newData = { ...oldData, ...data };\n                storage.setAttribute(sessionItem, JSON.stringify(newData));\n                if (isQuotaExceededError || isNativeFunctionError) {\n                    try {\n                        window.sessionStorage.removeItem(sessionItem);\n                    } catch (e) {\n                        // Prevents future retries from looking in sessionStorage with old data\n                    }\n                }\n                return;\n            }\n            throw err;\n        }\n    }\n\n    function getExecutionArguments(_eventData: RunCodeEventData) {\n        // New code with stepParamsBuilder\n        if (_eventData.function) {\n            return _eventData.function.args\n                .map((arg) => (arg?.locatedElement ? getLocatedElement(arg.locatedElement) : arg));\n        }\n\n        // @ts-expect-error this is Old code, not sure it is relevant anymore\n        return _eventData.directParams\n            .map((p: any) => (p.selector ? document.querySelector(p.selector) : p.value))\n            // @ts-expect-error this is Old code, not sure it is relevant anymore\n            .concat(_eventData.otherParams);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    function constructWithArguments(constructor: Function, args: string[]) {\n        function F() {\n            // eslint-disable-next-line prefer-spread\n            return constructor.apply(null, args);\n        }\n\n        F.prototype = constructor.prototype;\n        // @ts-expect-error dark magic\n        return new F();\n    }\n\n    const exportedData = {};\n    const exportedTestData = {};\n    const exportedGlobalData = {};\n\n    // @ts-expect-error this property doesn't exist\n    const functionParams = eventData.functionParams;\n    const transactionId = eventData.transactionId;\n\n    try {\n        const args = getExecutionArguments(eventData);\n\n        args.push(exportedData, exportedTestData, exportedGlobalData);\n\n        const params = eventData.function?.params || functionParams;\n\n        const functionToRun = preCompiledCode || constructWithArguments(Function, params);\n        // eslint-disable-next-line prefer-spread\n        const result = functionToRun.apply(null, args);\n\n        if (typeof Promise !== 'undefined' && result instanceof Promise) {\n            appendToStorage(transactionId, { type: 'promise' });\n            result.then((res) => {\n                appendToStorage(transactionId, {\n                    status: 'done',\n                    success: true,\n                    result: {\n                        resultValue: res,\n                        exports: exportedData,\n                        exportsTest: exportedTestData,\n                        exportsGlobal: exportedGlobalData,\n                    },\n                });\n            }, (res) => {\n                appendToStorage(transactionId, {\n                    status: 'failed',\n                    success: false,\n                    result: {\n                        resultValue: res.toString(),\n                        exports: exportedData,\n                        exportsTest: exportedTestData,\n                        exportsGlobal: exportedGlobalData,\n                    },\n                });\n            });\n        } else {\n            appendToStorage(transactionId, {\n                status: 'done',\n                success: true,\n                result: {\n                    resultValue: result,\n                    exports: exportedData,\n                    exportsTest: exportedTestData,\n                    exportsGlobal: exportedGlobalData,\n                },\n            });\n        }\n    } catch (e) {\n        appendToStorage(transactionId, {\n            status: 'failed',\n            success: false,\n            result: {\n                resultValue: e.toString(),\n                exports: exportedData,\n                exportsTest: exportedTestData,\n                exportsGlobal: exportedGlobalData,\n            },\n        });\n    }\n};\n", "import * as _ from 'lodash';\nimport * as utils from '../../utils';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport type { RunContext } from './stepAction';\nimport type { RunCodeRes, HangingPromiseRes } from './scripts/runCode';\nimport type { ConsoleItem } from '../../agent/routers/cliJsCode/service';\nimport type { UserCodeStep } from 'clickim/src/common/models/userCodeStep';\nimport type { PlaybackContext, IncomingParams } from 'clickim/src/background/playbackContext';\nimport type { ISerializedStep } from 'clickim/src/common/models/step';\n\nconst logger = getLogger('base-js-step-action');\n\ninterface EventMessage {\n    transactionId: string;\n    id: string;\n    eventType: string;\n    code: string;\n    incomingParams: IncomingParams | undefined;\n    exportsGlobal: {};\n    exportsTest: {};\n    context: {\n        config: PlaybackContext['config'];\n        data: PlaybackContext['data'];\n    };\n    testResultId: string;\n    browser: string;\n    browserMajor: number;\n}\n\ninterface ExecutionResponse {\n    success: boolean;\n    nodeVersion?: string;\n    shouldRetry?: boolean;\n    type?: 'promise';\n    reason?: 'stopped';\n    status?: 'done' | 'failed';\n    tstConsoleLogs?: ConsoleItem[];\n    navigateToDifferentDomain?: boolean;\n    result?: Partial<{ resultValue: any; exports: object; exportsTest: object; exportsGlobal: object }>;\n}\n\nexport abstract class BaseJsStepAction extends StepAction<UserCodeStep, RunContext & { retryIndex: number }> {\n    protected startTimestamp?: number;\n\n    private isExceedingMaxResultSize(data: Pick<ExecutionResponse, 'result' | 'tstConsoleLogs'>, context: RunContext) {\n        try {\n            const shouldEnforceMaxSize = context.project.defaults?.enforceMaximumJsResultSize;\n            const maximumJsResultSize = featureFlagsService.flags.maximumJsResultSize.getValue();\n            const dataSizeExceeded = JSON.stringify(data).length > maximumJsResultSize;\n            if (!shouldEnforceMaxSize) {\n                if (dataSizeExceeded) {\n                    logger.warn(`js result size exceeded ${maximumJsResultSize}, stepId: ${this.step.id}`);\n                }\n                return false;\n            }\n            return dataSizeExceeded;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private executeGetStatus(transactionId: string) {\n        return this.driver.executeJS((_transactionId: string) => {\n            const sessionItem = `data-testim-${_transactionId}`;\n            try {\n                return window.sessionStorage.getItem(sessionItem);\n            } catch (err) {\n                if (\n                    err.message.includes('sessionStorage') || // Chrome + Firefox\n                    err.message.includes('The operation is insecure') // Safari\n                ) {\n                    const storage = document.head.querySelector('#testim-storage-backup');\n                    if (!storage) {\n                        return '{}';\n                    }\n                    return storage.getAttribute(sessionItem);\n                }\n                throw err;\n            }\n        }, transactionId);\n    }\n\n    private constructJSFunParams(eventData: EventMessage) {\n        const incomingParams = eventData.incomingParams!;\n\n        const params = [\n            'context', ...incomingParams.as.functionParameters,\n            'exports', 'exportsTest', 'exportsGlobal',\n        ];\n\n        const args = [eventData.context, ...incomingParams.as.functionArguments];\n\n        params.push(eventData.code);\n        args.forEach(arg => {\n            if (_.isObject(arg)) {\n                utils.removePropertyFromObject(arg, 'seleniumElement', _.isEqual);\n            }\n        });\n        return {\n            function: {\n                params,\n                args,\n            },\n            transactionId: eventData.transactionId,\n            browser: eventData.browser,\n            browserMajor: eventData.browserMajor,\n        };\n    }\n\n\n    private checkStatus(transactionId: string) {\n        const { context, stepActionUtils, step: { id: stepId = '' } } = this;\n        const retryInterval = context.config.retryTimeout;\n        let timeToPlayStep = context.data.timeToPlayStep! - retryInterval;\n        const checkScriptStatus = async (): Promise<ExecutionResponse> => {\n            let selRes;\n            try {\n                selRes = await this.executeGetStatus(transactionId);\n            } catch (err) {\n                logger.warn('failed to get js status', { err });\n                selRes = { value: '{ \"status\": \"exception\" }' };\n            }\n            let res;\n            try {\n                res = JSON.parse(selRes?.value || '{}') as RunCodeRes | HangingPromiseRes;\n            } catch (e) {\n                logger.warn('non object value', { selRes });\n                res = { status: 'exception' } as Omit<HangingPromiseRes, 'type' | 'status'> & { status: 'exception' };\n            }\n            const abortReason = stepActionUtils.abortedSteps.find(abortedStep => abortedStep.id === stepId);\n            if (abortReason) {\n                return abortReason;\n            }\n            if (!res) {\n                return { success: true };\n            }\n            if (res.status === 'done') {\n                return res;\n            }\n            if (res.status === 'failed') {\n                return { success: false, shouldRetry: true, result: res.result };\n            }\n            if (timeToPlayStep - retryInterval <= 0) {\n                return Object.assign(res, { success: false, shouldRetry: true });\n            }\n            timeToPlayStep -= retryInterval;\n            await utils.delay(retryInterval);\n            return checkScriptStatus();\n        };\n\n        return checkScriptStatus();\n    }\n\n    private async executeInAut(eventMessage: EventMessage) {\n        const useExperimentalPreCompilation = featureFlagsService.flags.experimentalPreCodeCompilation.isEnabled();\n        const experimentalAsyncCustomCode = featureFlagsService.flags.experimentalAsyncCustomCode.isEnabled();\n        const rawParams = this.constructJSFunParams(eventMessage);\n        const hasLocateParams = rawParams.function.args.some(x => Boolean(x?.locatedElement));\n        let funcToRunString = 'undefined';\n        if (useExperimentalPreCompilation) {\n            const paramNames = rawParams.function.params.slice(0, -1);\n            funcToRunString = experimentalAsyncCustomCode ? `async function(${paramNames.join(',')}) {\n                ${eventMessage.code}\n            };` : `function(${paramNames.join(',')}) {\n                ${eventMessage.code}\n            };`;\n            // remove code from call.\n            rawParams.function.params.pop();\n        }\n\n        const { codeSnippets } = this.sessionPlayerInit;\n        const { runCode: runCodeScript } = await import('./scripts/runCode');\n\n        const runCode = `\n            ${hasLocateParams ? `var getLocatedElement = ${codeSnippets.getLocatedElementCode};` : ';'}\n            var runCode = ${runCodeScript.toString()};\n            var eventData = arguments[0];\n            var funcToRun = ${funcToRunString};\n            return runCode.call(null, eventData, funcToRun);\n        `;\n        if (!useExperimentalPreCompilation) {\n            return this.driver.executeJS<(params: typeof rawParams) => RunCodeRes>(runCode, rawParams);\n        }\n\n        try {\n            return await this.driver.executeJS<(params: typeof rawParams) => RunCodeRes>(runCode, rawParams);\n        } catch (err) {\n            return this.handleExecutionError(err);\n        }\n    }\n\n    protected abstract isFailedResult(result: any): boolean;\n\n    private codeExecDone(resp: ExecutionResponse) {\n        const { stepResult: constants } = this.sessionPlayerInit.commonConstants;\n        const { context } = this;\n        const { result = {}, tstConsoleLogs, nodeVersion, navigateToDifferentDomain } = resp;\n\n        if (result.exports) {\n            context.data.exports = result.exports;\n        }\n\n        const resultObj = {\n            nodeVersion,\n            tstConsoleLogs,\n            data: context.data,\n        };\n\n        if (this.isFailedResult(result.resultValue)) {\n            return {\n                ...resultObj,\n                success: false,\n                errorType: constants.JS_ASSERTION_FAILED,\n            };\n        }\n        if (this.isExceedingMaxResultSize({ result, tstConsoleLogs }, context)) {\n            return {\n                ...resultObj,\n                success: false,\n                errorType: constants.JS_RESULT_MAX_SIZE_EXCEEDED,\n            };\n        }\n        return {\n            ...resultObj,\n            success: true,\n            exportsTest: result.exportsTest,\n            exportsGlobal: result.exportsGlobal,\n            ...(navigateToDifferentDomain && { navigateToDifferentDomain }),\n        };\n    }\n\n    private codeExecFailed(resp: ExecutionResponse) {\n        const { stepResult: constants } = this.sessionPlayerInit.commonConstants;\n        const { context } = this;\n        if (resp.type === 'promise') {\n            return {\n                data: context.data,\n                success: false,\n                shouldRetry: true,\n                isPendingPromise: true,\n                errorType: constants.JS_ASSERTION_FAILED,\n            };\n        }\n        if (resp.reason === 'stopped') {\n            return { ...resp, errorType: constants.STOPPED };\n        }\n        const { result = {}, tstConsoleLogs } = resp;\n        const message = {\n            tstConsoleLogs,\n            data: context.data,\n            exportsGlobal: result.exportsGlobal,\n            exportsTest: result.exportsTest,\n            success: false,\n            errorType: constants.UNWRAPPED_AUT_REJECT,\n            resultInfo: { error: result.resultValue },\n        };\n        return message;\n    }\n\n    protected checkCodeResponse(resp: ExecutionResponse) {\n        return resp?.success ? this.codeExecDone(resp) : this.codeExecFailed(resp);\n    }\n\n    protected getTransactionId(step: ISerializedStep<UserCodeStep>, context: RunContext) {\n        let transactionIdStepSegment = step.id;\n        if (!step.id) {\n            logger.warn('step.id doesn\\'t exist on step', { step, context });\n            transactionIdStepSegment = context.stepResultId;\n        }\n        if ('stepResultId' in context && context.stepResultId?.length) {\n            transactionIdStepSegment = context.stepResultId;\n        } else {\n            logger.warn('stepResultId is not present in context', { step, context });\n        }\n        return `${context.testResultId}:${transactionIdStepSegment}`;\n    }\n\n    override async performAction(): Promise<any> {\n        const { step, context } = this;\n\n        this.startTimestamp = Date.now();\n\n        const browserAndOS = await this.driver.getBrowserAndOS();\n        const eventMessage: EventMessage = {\n            transactionId: this.getTransactionId(step, context),\n            id: step.id!,\n            eventType: step.type,\n            code: step.code!,\n            incomingParams: context.incomingParams,\n            exportsGlobal: this.exportsGlobal,\n            exportsTest: this.exportsTest,\n            context: {\n                config: context.config,\n                data: context.data,\n            },\n            testResultId: context.testResultId,\n            browser: browserAndOS.browser,\n            browserMajor: browserAndOS.browserMajor,\n        };\n\n        if (!context.isPendingPromise) {\n            await this.executeInAut(eventMessage);\n        }\n\n        const resp = await this.checkStatus(eventMessage.transactionId);\n        return this.checkCodeResponse(resp);\n    }\n\n    private handleExecutionError(err: any): never {\n        const canExtractError = err?.name === 'javascript error';\n\n        if (canExtractError) {\n            throw new Error(err.message);\n        }\n\n        throw err;\n    }\n}\n", "import { BaseJsStepAction } from './baseJsStepAction';\n\nexport class JsCodeStepAction extends BaseJsStepAction {\n    protected isFailedResult(resultValue: any) {\n        return resultValue === false;\n    }\n}\n", "import { BaseJsStepAction } from './baseJsStepAction';\n\nexport class JsConditionStepAction extends BaseJsStepAction {\n    protected isFailedResult(resultValue: any) {\n        return !resultValue;\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { extractElementId } from '../../utils';\nimport { KEY_MAP } from '../utils/stepActionUtils';\nimport type { SpecialKeyStep } from 'clickim/src/common/models/specialKeyStep';\n\nexport class SpecialKeyStepAction extends StepAction<SpecialKeyStep> {\n    private setWithValueApi(keys: string[]) {\n        const target = this.getTarget();\n        if (target?.seleniumElement) {\n            return this.driver.elementIdValue(extractElementId(target.seleniumElement), keys);\n        }\n        return Promise.reject(new Error('missing selenium element'));\n    }\n\n    override performAction() {\n        const keys = [];\n        const keyCode = this.step.events![0].eventData.keyCode;\n\n        if (keyCode >= 32 && keyCode <= 127) {\n            keys.push(String.fromCharCode(keyCode));\n        } else {\n            keys.push(KEY_MAP[keyCode as keyof typeof KEY_MAP]);\n        }\n        return this.setWithValueApi(keys);\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { KEY_MAP } from '../utils/stepActionUtils';\nimport type { KeyboardShortcutStep } from 'clickim/src/common/models/keyboardShortcutStep';\n\nexport class KeyboardShortcutStepAction extends StepAction<KeyboardShortcutStep> {\n    override async performAction() {\n        const isMac = this.context.config.os.startsWith('Mac');\n\n        if ((isMac && !this.step.keys?.mac) || (!isMac && !this.step.keys?.windows)) {\n            return undefined;\n        }\n\n        const keys = [];\n        const shortcutKeys = isMac ? this.step.keys!.mac! : this.step.keys!.windows!;\n\n        if (shortcutKeys.altKey) {\n            keys.push('\\uE052');\n        }\n\n        if (shortcutKeys.ctrlKey) {\n            keys.push('\\uE051');\n        }\n\n        if (shortcutKeys.metaKey) {\n            keys.push('\\uE03D');\n        }\n\n        if (shortcutKeys.shiftKey) {\n            keys.push('\\uE050');\n        }\n\n        const keyCode = shortcutKeys.keyCode;\n\n        // TODO keyCode is deprecated. https://tricentis.atlassian.net/browse/TES-19019\n        if (keyCode >= 32 && keyCode <= 127) {\n            keys.push(shortcutKeys.key);\n        } else if (KEY_MAP[keyCode as keyof typeof KEY_MAP]) {\n            keys.push(KEY_MAP[keyCode as keyof typeof KEY_MAP]);\n        } else {\n            throw new Error(`Invalid key with keyCode ${keyCode}.`);\n        }\n\n        return await this.driver.sendKeyboardShortcut(keys);\n    }\n}\n", "import type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\ndeclare function isNativeFunction(fn: any): boolean;\n\nexport function selectOption(locatedElement: ILocatedElement, dispatchEventOnSelectElement: boolean) {\n    function closest(el: Element, selectors: string) {\n        const originalMatches = Element.prototype.matches;\n        // @ts-expect-error TS seems unaware of the fact the HTMLElement has a __proto__\n        // Some customers override the native Element prototype, so we need to create a new one if they messed it up.\n        const matches = originalMatches && isNativeFunction(originalMatches) ? originalMatches : document.createElement(el.tagName).__proto__.matches; // eslint-disable-line no-proto\n        do {\n            if (matches.call(el, selectors)) return el as HTMLSelectElement;\n            el = el.parentElement || el.parentNode as HTMLElement;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    }\n\n    try {\n        // This code depends on pre-injecting this function as well.\n        const optionEl = getLocatedElement(locatedElement) as HTMLOptionElement | null;\n        if (!optionEl) {\n            return { success: false, status: 'failed', result: 'option element not found' };\n        }\n\n        const selectEl = closest(optionEl, 'select');\n        if (!selectEl) {\n            return { success: false, status: 'failed', result: 'select element not found' };\n        }\n        selectEl.focus();\n        if (optionEl.selected) {\n            return { success: true, status: 'done' };\n        }\n        optionEl.selected = true;\n\n        const events = [\n            'input',\n            'change',\n        ];\n        events.map((userEvent) => {\n            const event = document.createEvent('HTMLEvents');\n            event.initEvent(userEvent, true, false);\n            return event;\n        }).forEach((event) => {\n            if (dispatchEventOnSelectElement) {\n                selectEl.dispatchEvent(event);\n                return;\n            }\n            optionEl.dispatchEvent(event);\n        });\n\n        return { success: true, status: 'done' };\n    } catch (err) {\n        return { success: false, status: 'failed', result: err.toString() };\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { extractElementId } from '../../utils';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport type { SelectOptionStep } from 'clickim/src/common/models/selectOptionStep';\n\nexport class SelectOptionStepAction extends StepAction<SelectOptionStep> {\n    override async performAction() {\n        const target = this.getTarget();\n        const { seleniumElement, locatedElement } = target;\n\n        const browserAndOS = await this.driver.getBrowserAndOS();\n\n        const browserMajor = browserAndOS.browserMajor;\n        const isSafari = this.driver.isSafari();\n        const isShadowed = Boolean(this.step.element?.isShadowed);\n\n        // Force use js code when element is shadow dom in Safari older than 13\n        if (!isSafari || (isSafari && browserMajor >= 13 && !isShadowed)) {\n            try {\n                const res = await this.driver.elementIdClick(extractElementId(seleniumElement));\n                return res;\n            } catch (err) {\n                // If customer overrides the native Element prototype, this click will fail for this reason. in such a case, fallback to use js code.\n                if (!err.message.includes('Cannot check the displayedness of a non-Element argument')) {\n                    throw err;\n                }\n            }\n        }\n\n        const { selectOption } = await import('./scripts/selectOption');\n        const safariSelectOptionDispatchEventOnSelectElement = featureFlagsService.flags.safariSelectOptionDispatchEventOnSelectElement.isEnabled();\n        const selectOptionCode = `\n            const getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            const isNativeFunction = ${this.sessionPlayerInit.utils.isNativeFunction.toString()};\n            const selectOption = ${selectOption.toString()};\n            return selectOption.apply(null, arguments);\n        `;\n\n        const result = await this.driver.executeJS<typeof selectOption>(selectOptionCode, locatedElement, safariSelectOptionDispatchEventOnSelectElement);\n        if (result.value?.success) {\n            return { success: true };\n        }\n        return { success: false };\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { SubmitStep } from 'clickim/src/common/models/submitStep';\n\nexport class SubmitStepAction extends StepAction<SubmitStep> {\n    override async performAction() {\n        await this.driver.submit(this.getTarget().seleniumElement);\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { HoverStep } from 'clickim/src/common/models/hoverStep';\n\nconst toDOMRect = (height: number, width: number, x: number, y: number) => ({\n    x,\n    y,\n    width,\n    height,\n    get top() { return this.y; },\n    get left() { return this.x; },\n    get right() { return this.x + this.width; },\n    get bottom() { return this.y + this.height; },\n    toJSON() { /* noop */ },\n});\n\nexport class HoverStepAction extends StepAction<HoverStep> {\n    getRect() {\n        return this.driver.isFirefox() ?\n            this.getTarget().rectWithoutFrameOffset :\n            this.getTarget().rect;\n    }\n\n    override async performAction() {\n        const target = this.getTarget();\n        const { seleniumElement, rectWithoutFrameOffset, rect } = target;\n\n        const { width, height } = rect!;\n\n        let clickOffsetX = width / 2;\n        let clickOffsetY = height / 2;\n\n        const offset = this.step.element.clickOffset;\n        if (offset && this.step.shouldAccountForMouseOffsetInHover) {\n            const { x, y } = offset;\n\n            if (this.sessionPlayerInit.utils.isWithinTargetRect(toDOMRect(height, width, 0, 0), x, y)) {\n                clickOffsetX = x;\n                clickOffsetY = y;\n            }\n        }\n\n        const offsets = {\n            frameOffset: {\n                x: rect!.left - rectWithoutFrameOffset!.left,\n                y: rect!.top - rectWithoutFrameOffset!.top,\n            },\n            rect: rectWithoutFrameOffset!,\n            clickOffset: { x: Math.floor(clickOffsetX), y: Math.floor(clickOffsetY) },\n        };\n\n        await this.driver.hover(seleniumElement, offsets);\n        return { success: true };\n    }\n}\n", "import type { IMouseEvent } from 'clickim/src/common/models/mouseStep';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ninterface EventMessage {\n    events: IMouseEvent[];\n    eventData: {\n        modifiers: Record<'ctrl' | 'alt' | 'shift' | 'meta', boolean | undefined>;\n        button: number;\n    };\n    locatedElement: ILocatedElement;\n}\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\n\nexport const wheel = function (eventData: EventMessage, done: (data: { state: 'success' }) => void) {\n    const MAX_WHEEL_EVENT_TIMEOUT = 200;\n\n    function getEventPosition(userEvent: IMouseEvent, element: Element) {\n        function isWithinBounds(start: number, end: number, point: number) {\n            return (point > start) && (point < end);\n        }\n        const pointerPosition: Partial<IMouseEvent['pointerPosition']> = userEvent.pointerPosition || {};\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getWheelEvent(userEvent: IMouseEvent, _eventData: EventMessage['eventData'], element: Element) {\n        const pos = getEventPosition(userEvent, element);\n        const modifiers = _eventData?.modifiers || {};\n        const dict = {\n            deltaX: (userEvent as any).deltaX,\n            deltaY: (userEvent as any).deltaY,\n            deltaZ: (userEvent as any).deltaZ,\n            deltaMode: (userEvent as any).deltaMode,\n            clientX: pos.x,\n            clientY: pos.y,\n            bubbles: true,\n            cancelable: true,\n            ctrl: Boolean(modifiers.ctrl),\n            alt: Boolean(modifiers.alt),\n            shift: Boolean(modifiers.shift),\n            meta: Boolean(modifiers.meta),\n        };\n        return new WheelEvent('wheel', dict);\n    }\n\n    function executeEvents(events: IMouseEvent[], element: Element | null) {\n        if (events.length === 0) {\n            done({ state: 'success' });\n            return;\n        }\n        if (!element) {\n            throw new Error('element not found');\n        }\n\n        const event = events.shift()!;\n        const currentEvent = getWheelEvent(event, eventData.eventData, element);\n        const timeout = events[0] ? Math.min(events[0].timeStamp! - event.timeStamp!, MAX_WHEEL_EVENT_TIMEOUT) : MAX_WHEEL_EVENT_TIMEOUT;\n        element.dispatchEvent(currentEvent);\n        setTimeout(() => {\n            executeEvents(events, element);\n        }, timeout);\n    }\n\n    const element = getLocatedElement(eventData.locatedElement);\n    executeEvents(eventData.events, element);\n};\n", "import { StepAction } from './stepAction';\nimport type { WheelStep } from 'clickim/src/common/models/wheelStep';\nimport type { MouseStep } from 'clickim/src/common/models/mouseStep';\n\nexport class WheelStepAction extends StepAction<WheelStep> {\n    override async performAction() {\n        const { step, context } = this;\n        const { events, modifiers, button } = step as any as MouseStep;\n\n        if (!events?.length) {\n            return undefined;\n        }\n\n        const eventMessage = {\n            events,\n            eventData: {\n                modifiers,\n                button,\n            },\n            locatedElement: this.getTarget().locatedElement,\n        };\n\n        const timeout = context.data.timeToPlayStep! + 3000;\n        const { wheel: wheelScript } = await import('./scripts/wheel');\n\n        const wheelCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var wheel = ${wheelScript.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return wheel.call(null, eventData, done);\n        `;\n\n        const result = await this.driver.executeCodeAsync(wheelCode, timeout, eventMessage);\n        return { success: result.value?.state === 'success' };\n    }\n}\n", "import type { FileUrl } from 'clickim/src/common/models/step';\nimport type { ILocatedElement } from 'clickim/src/background/codeSnippets/getLocatedElement';\n\ninterface BlobWithName { blob: Blob; name: string }\ndeclare function getLocatedElement(locatedElement: ILocatedElement | string): Element | null;\ndeclare function createDropEvent(blobs: BlobWithName[]): DragEvent;\n\nexport const downloadFileAndFireDropEvent = function (locatedElement: ILocatedElement, fileUrls: FileUrl[]) {\n    const element = getLocatedElement(locatedElement);\n\n    if (!element) {\n        throw new Error('element not found');\n    }\n\n    function simpleBarrier() {\n        let callbackIndex = -1;\n        let doneCallbacks = 0;\n        const results: BlobWithName[] = [];\n        const instance = {\n            endWithCallback: undefined as ((blobs: BlobWithName[]) => void) | undefined,\n            waitOn() {\n                const curIndex = ++callbackIndex;\n                return function (result: BlobWithName) {\n                    if (curIndex in results) {\n                        return;\n                    }\n                    results[curIndex] = result;\n                    doneCallbacks++;\n                    if (fileUrls.length === doneCallbacks) {\n                        instance.endWithCallback!(results);\n                    }\n                };\n            },\n            endWith(fn: (blobs: BlobWithName[]) => void) { instance.endWithCallback = fn; },\n        };\n        return instance;\n    }\n\n    function getBlob(url: string, name: string, cb: (res: BlobWithName) => void) {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.responseType = 'blob';\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                cb({ blob: xhr.response, name });\n            } else {\n                throw new Error('Failed to load blob response code is not between 200 - 300');\n            }\n        };\n        xhr.onerror = function () {\n            throw new Error('Failed to load blob');\n        };\n        xhr.send();\n    }\n\n    const barrier = simpleBarrier();\n    fileUrls.forEach((fileUrl) => {\n        getBlob(fileUrl.url, fileUrl.name, barrier.waitOn());\n    });\n    barrier.endWith((blobs: BlobWithName[]) => {\n        const event = createDropEvent(blobs);\n        element.dispatchEvent(event);\n    });\n};\n", "import { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport type { DropFileStep } from 'clickim/src/common/models/dropFileStep';\n\nconst logger = getLogger('drop-file-step-action');\n\nexport class DropFileStepAction extends StepAction<DropFileStep> {\n    override async performAction() {\n        const { sessionPlayerInit: { codeSnippets, utils }, context, step } = this;\n        const target = this.getTarget();\n        const overrideAzureStorageUrl = featureFlagsService.flags.overrideAzureStorageUrl.isEnabled();\n        const fileUrls = await utils.addTokenToFileUrls(\n            context.project.id,\n            step.fileUrls!,\n            this.stepActionUtils.testimServicesApi,\n            overrideAzureStorageUrl,\n            logger,\n        );\n        const { downloadFileAndFireDropEvent } = await import('./scripts/dropEvent');\n\n        const dropFileCode = `\n            const getLocatedElement = ${codeSnippets.getLocatedElementCode};\n            const createDropEvent = ${codeSnippets.createDropEvent.toString()};\n            const downloadFileAndFireDropEvent = ${downloadFileAndFireDropEvent.toString()};\n            return downloadFileAndFireDropEvent.apply(null, arguments)\n        `;\n\n        return await this.driver.executeJS<typeof downloadFileAndFireDropEvent>(dropFileCode, target.locatedElement, fileUrls);\n    }\n}\n", "import * as os from 'os';\nimport * as httpRequest from './commons/httpRequest';\nimport { promises as fsPromises } from 'fs';\nimport { promiseMap } from './utils';\nimport { getLogger } from './commons/logger';\nimport type { FileUrl } from 'clickim/src/common/models/step';\n\nconst logger = getLogger('input-file-utils');\n\nexport function getVisibleElementScript(positionAndSize = {\n    width: '2px', height: '2px', left: '0px', top: '400px',\n}) {\n    const zIndex = 100000000;\n    const opacity = 1;\n    return `function getVisibleElement(locatedElement) {\n        var input = getLocatedElement(locatedElement);\n        if(input) {\n            function parents(element, _elements) {\n                _elements = _elements || [];\n                _elements.push(element);\n                if(element.parentNode && element.tagName !== 'BODY') {\n                    return parents(element.parentNode, _elements);\n                }\n                return _elements;\n            }\n\n            function forceStyle(el, name, value) {\n                el.style.setProperty(name, value, 'important');\n            }\n\n            Array.apply(null, parents(input)).forEach(function(el) {\n                let element = el;\n                if (element instanceof DocumentFragment) {\n                    element = element.host\n                }\n\n                var displayMode = window.getComputedStyle(element).display;\n                if(displayMode === \"none\") {\n                    forceStyle(element, 'display', 'block');\n                }\n            })\n\n            forceStyle(input, 'visibility', 'visible');\n            forceStyle(input, 'width', '${positionAndSize.width}');\n            forceStyle(input, 'max-width', '${positionAndSize.width}');\n            forceStyle(input, 'height', '${positionAndSize.height}');\n            forceStyle(input, 'max-height', '${positionAndSize.height}');\n            forceStyle(input, 'z-index', ${zIndex});\n            forceStyle(input, 'opacity', ${opacity});\n            forceStyle(input, 'top', '${positionAndSize.top}');\n            forceStyle(input, 'left', '${positionAndSize.left}');\n            forceStyle(input, 'position', 'fixed');\n            forceStyle(input, 'pointer-events', 'all');\n            input.removeAttribute(\"disabled\");\n            input.focus();\n        }\n    }`;\n}\n\nasync function downloadFile(fileUrl: string, fileName: string) {\n    let body = null;\n    try {\n        const res = await httpRequest.download(fileUrl);\n        body = res.body;\n    } catch (err) {\n        logger.error('failed to download input-file content',\n            { err: { message: err.message, stack: err.stack, status: err.status } });\n        if (err.response) {\n            // try to emulate what we essentially do in clickim\n            body = err.response.body;\n        } else {\n            // we have a circular object\n            if (err.cause) {\n                throw new Error(err.message);\n            }\n            throw err;\n        }\n    }\n\n    const localFileLocation = `${os.tmpdir()}/${fileName}`;\n    await fsPromises.writeFile(localFileLocation, body);\n    return localFileLocation;\n}\n\nfunction downloadFiles(fileUrls: FileUrl[]) {\n    return promiseMap(fileUrls, file => downloadFile(file.url, file.name));\n}\n\nfunction uploadFileToGrid(localFileLocation: string, uploadFileFn: (fileLocation: string) => Promise<undefined | { value: string }>) {\n    return uploadFileFn(localFileLocation);\n}\n\nexport async function downloadFilesAndUploadToGrid(fileUrls: FileUrl[], uploadFileFn: (fileLocation: string) => Promise<undefined | { value: string }>) {\n    const filesOnDisk = await downloadFiles(fileUrls);\n    const gridLocalFiles = await promiseMap(filesOnDisk, localFileLocation => uploadFileToGrid(localFileLocation, uploadFileFn));\n    return Array.isArray(gridLocalFiles) && gridLocalFiles.map(gridLocalFile => gridLocalFile?.value);\n}\n", "import * as inputFileUtils from '../../inputFileUtils';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { extractElementId, download } from '../../utils';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport type { InputFileStep } from 'clickim/src/common/models/inputFileStep';\n\nconst logger = getLogger('input-file-step-action');\n\nexport class InputFileStepAction extends StepAction<InputFileStep> {\n    private uploadFile = (localFileLocation: string) => this.driver.uploadFile(localFileLocation);\n\n    private forceInputToBeVisible(target: ReturnType<InputFileStepAction['getTarget']>, visibleScriptOptions?: { width: string; height: string; left: string; top: string }) {\n        logger.info('workaround - stepaction - move element to visible position');\n\n        const getVisibleElementCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var getVisibleElement = ${inputFileUtils.getVisibleElementScript(visibleScriptOptions)};\n            return getVisibleElement.apply(null, arguments);\n        `;\n\n        return this.driver.executeJS(getVisibleElementCode, target.locatedElement);\n    }\n\n    private async safariPreUploadActions(target: ReturnType<InputFileStepAction['getTarget']>) {\n        const options = {\n            width: '150px',\n            height: '150px',\n            left: '10px',\n            top: '10px',\n        };\n        try {\n            return await this.forceInputToBeVisible(target, options);\n        } catch (err) {\n            logger.error('failed to set input file in Safari recovery', { err });\n            throw err;\n        }\n    }\n\n    private async uploadFilesAndForceVisibility(gridLocalFiles: string[], target: ReturnType<InputFileStepAction['getTarget']>) {\n        try {\n            if (this.driver.isSafari()) {\n                await this.safariPreUploadActions(target);\n            }\n            await this.uploadFiles(gridLocalFiles, target);\n        } catch (err) {\n            const edgeErrorEditableMessage = 'The element is not editable';\n            const edgeErrorFocusableMessage = 'The element is not focusable';\n            const safariErrorVisibleMessage = 'An element command could not be completed because the element is not visible on the page.';\n            const elementNotInteractable = 'element not interactable';\n            const elementNotPointerOrKeyboardInteractable = 'element is not pointer- or keyboard interactable';\n            const invalidStateMsg = 'invalid element state: Element is not currently interactable and may not be manipulated';\n            const mustBeVisibleMsg = 'Element must not be hidden, disabled or read-only';\n            const notReachableByKeyboard = 'is not reachable by keyboard';\n            const errorMsg: string = err ? err.message : '';\n            // Workaround move element if element is not visible or disabled\n            if (\n                errorMsg === invalidStateMsg ||\n                errorMsg.startsWith(mustBeVisibleMsg) ||\n                errorMsg.startsWith(edgeErrorEditableMessage) ||\n                errorMsg.startsWith(edgeErrorFocusableMessage) ||\n                errorMsg.startsWith(safariErrorVisibleMessage) ||\n                errorMsg.includes(notReachableByKeyboard) ||\n                errorMsg.includes(elementNotInteractable) ||\n                errorMsg.includes(elementNotPointerOrKeyboardInteractable)\n            ) {\n                await this.forceInputToBeVisible(target);\n                await this.uploadFiles(gridLocalFiles, target);\n                return;\n            }\n\n            logger.error('failed to set input file', { err });\n            throw err;\n        }\n    }\n\n    private async uploadFiles(gridLocalFiles: string[], target: ReturnType<InputFileStepAction['getTarget']>) {\n        for (const file of gridLocalFiles) {\n            await this.driver.elementIdValue(extractElementId(target.seleniumElement), file);\n        }\n    }\n\n    override async performAction() {\n        const target = this.getTarget();\n        const overrideAzureStorageUrl = featureFlagsService.flags.overrideAzureStorageUrl.isEnabled();\n        const downloadToBase64 = featureFlagsService.flags.downloadToBase64.isEnabled();\n        const { sessionPlayerInit, context, step, stepActionUtils, driver } = this;\n\n        let fileUrls = await sessionPlayerInit.utils.addTokenToFileUrls(\n            context.project.id,\n            step.fileUrls!,\n            stepActionUtils.testimServicesApi,\n            overrideAzureStorageUrl,\n            logger,\n        );\n\n        if (fileUrls.length === 0) {\n            throw new Error('No files urls to upload');\n        }\n\n        if (downloadToBase64) {\n            fileUrls = await Promise.all(fileUrls.map(async ({ name, url }) => {\n                const res = await download(url);\n                return { name, url: `data:${res.type};base64,${Buffer.from(res.body).toString('base64')}` };\n            }));\n        }\n\n        if (driver.isSafari() || driver.isFirefox() || driver.isEdgeChromium()) {\n            await this.driver.executeJS(`\n                const getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n                const downloadAndUploadFile = ${downloadAndUpload()};\n                return downloadAndUploadFile.apply(null, arguments);`, target.locatedElement, fileUrls);\n            return;\n        }\n\n        const gridLocalFiles = await inputFileUtils.downloadFilesAndUploadToGrid(fileUrls, this.uploadFile) as string[];\n        await this.uploadFilesAndForceVisibility(gridLocalFiles, target);\n    }\n}\n\nfunction downloadAndUpload() {\n    return `async function downloadAndUpload(locatedElement, fileUrls) {\n        const fileIsNative = typeof window.File === 'function' && (window.File.toString().indexOf('native code') > -1);\n        const File = fileIsNative ? window.File : (function obtainSafeGlobals() {\n            const attachTo  = document.body || document.documentElement;\n            if (attachTo) {\n                let tempIFrame;\n                try {\n                    tempIFrame = document.createElement('iframe');\n                    tempIFrame.style.setProperty('display', 'none');\n                    tempIFrame.style.setProperty('pointer-events', 'none');\n                    attachTo.appendChild(tempIFrame);\n                    const { File } = tempIFrame.contentWindow;\n                    return File;\n                } finally {\n                    if (tempIFrame) {\n                        tempIFrame.parentElement.remove(frame);\n                    }\n                }\n            } else {\n                return window.File;\n            }\n        })();\n        const element = getLocatedElement(locatedElement);\n        if(!element) {\n            throw new Error('element not found');\n        }\n\n        function getFileBlob(url) {\n            return new Promise((resolve, reject) => {\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.responseType = 'blob';\n\n                xhr.onload = function() {\n                    if (this.status === 200) {\n                        resolve(this.response);\n                    } else {\n                        reject(new Error('Could not load file, failure status:' + this.status));\n                    }\n                }\n                xhr.onerror = function(e) {\n                    reject(new Error(\"Error \" + e.target.status + \" occurred while loading the file.\"));\n                };\n                xhr.send();\n            });\n\n        }\n\n        const fileList = await Promise.all(fileUrls.map(async ({ url, name }) => {\n            let blob;\n            try {\n                const res = await fetch(url)\n                blob = await res.blob();\n            } catch (err) {\n                blob = await getFileBlob(url); // Sometimes the fetch fails, try using XHR as fallback\n            }\n            return new File([blob], name, { type: blob.type });\n        }));\n\n        const dt = new DataTransfer();\n        for (const file of fileList) {\n            dt.items.add(file);\n        }\n        element.files = dt.files;\n\n        let changeWasFired = false;\n        const changeFiredHandler = (e) => {\n            changeWasFired = true;\n        };\n\n        element.addEventListener(\"change\", changeFiredHandler, true);\n        await Promise.resolve(); // wait microtick\n        element.dispatchEvent(new Event(\"input\", { bubbles: true }));\n        if (!changeWasFired) {\n            element.dispatchEvent(new Event(\"change\", { bubbles: true }));\n        }\n        element.removeEventListener(\"change\", changeFiredHandler, true);\n    }`;\n}\n", "import { URL } from 'url';\nimport { StepAction } from './stepAction';\nimport type { NavigationStep } from 'clickim/src/common/models/navigationStep';\n\nexport class NavigationStepAction extends StepAction<NavigationStep> {\n    private async updateBaseUrl(location: string) {\n        const orgUrl = new URL(location);\n        const baseLocation = new URL(this.context.recordedBaseUrl);\n        const newBaseLocation = new URL(this.context.baseUrl);\n        if (orgUrl.host === baseLocation.host && baseLocation.host !== newBaseLocation.host) {\n            orgUrl.host = newBaseLocation.host;\n        }\n        return orgUrl.href;\n    }\n\n    override async performAction() {\n        // @ts-expect-error This needs to be further checked. not sure if this is a bug or bad typing.\n        const url: string = this.context.data.testimNavigationStepDestination || this.context.data.url;\n        // Opens a new tab and switches to new tab\n        if (this.step.openInNewTab) {\n            await this.driver.client!.newWindow(url);\n            return;\n        }\n        const updatedUrl = await this.updateBaseUrl(url);\n        await this.driver.url(updatedUrl);\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { delay } from '../../utils';\nimport type { SleepStep } from 'clickim/src/common/models/sleepStep';\n\nexport class SleepStepAction extends StepAction<SleepStep> {\n    override async performAction() {\n        await delay(this.step.durationMS || 0);\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class RefreshStepAction extends StepAction {\n    override async execute() {\n        try {\n            await this.driver.reloadTab();\n            return { success: true };\n        } catch (error) {\n            return { success: false, reason: error.message };\n        }\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { ApiStep } from 'clickim/src/common/models/apiStep';\nimport type { ApiResult, EventData } from 'clickim/src/common/playback/apiCall';\n\nexport class ApiStepAction extends StepAction<ApiStep> {\n    private async runApiInAut(eventData: EventData) {\n        eventData.withCredentials = true;\n        const timeout = this.context.data.timeToPlayStep! + 3000;\n        const { apiCall } = this.sessionPlayerInit;\n        try {\n            const autRes = await this.driver.executeCodeAsync(apiCall, timeout, eventData) as { value: ApiResult };\n            const resp = autRes?.value;\n            return resp || {};\n        } catch (err) {\n            if (err?.message?.includes('Javascript execution context no longer exists')) {\n                throw new Error('The page refreshed or changed while executing this step. Please consider unchecking \"Send via web page\" if this is expected.');\n            }\n            throw err;\n        }\n    }\n\n    private runApiInBg(eventData: EventData) {\n        const { apiCall } = this.sessionPlayerInit;\n        return apiCall(eventData);\n    }\n\n    override async performAction() {\n        const { sessionPlayerInit: { commonConstants }, step, context } = this;\n\n        const eventData: EventData = {\n            id: step.id,\n            url: context.apiUrl!,\n            method: step.method,\n            headers: context.apiHeaders,\n            body: context.apiBody,\n            timeout: context.data.maxTotalStepTime!,\n            omitCookies: step.omitCookies,\n            forceUseFetch: ['android', 'ios'].includes(context.project.type),\n            formData: step.formData as EventData['formData'],\n            fileUrls: context.fileUrls,\n        };\n\n        const resp = step.sendViaWebApp ? await this.runApiInAut(eventData) : await this.runApiInBg(eventData);\n        const result = resp.result || {};\n        const resultInfo = {\n            method: step.method,\n            status: result.status,\n            url: step.url,\n        };\n        if (resp.success) {\n            if (result.status === 0) {\n                return {\n                    result,\n                    resultInfo,\n                    shouldRetry: false,\n                    success: false,\n                    reason: 'Connection problem',\n                    errorType: commonConstants.stepResult.API_REQUEST_NETWORK_ERROR,\n                };\n            }\n            return {\n                result,\n                resultInfo,\n                shouldRetry: false,\n                success: true,\n            };\n        }\n        return {\n            result,\n            resultInfo,\n            shouldRetry: false,\n            success: false,\n            reason: result.error || commonConstants.error.REQUEST_TIMED_OUT,\n            errorType: result.exception ? undefined : (result.error ? commonConstants.stepResult.API_FAILURE : commonConstants.stepResult.API_REQUEST_NETWORK_ERROR),\n        };\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { ExtractTextStep } from 'clickim/src/common/models/extractTextStep';\n\nexport class ExtractTextStepAction extends StepAction<ExtractTextStep> {\n    async performAction() {\n        const paramName = this.step.extractTextParamName!;\n\n        const extractedText = await this.stepActionUtils.extractTargetText(this.getTarget());\n        this.context.data.exports ||= {};\n        this.context.data.exports[paramName] = extractedText;\n        return {\n            success: true,\n            data: this.context.data,\n        };\n    }\n}\n", "import spec from '@applitools/spec-driver-webdriverio';\nimport { dependencies } from '../../../package.json';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\nimport type { Core } from '@applitools/eyes-sdk-core';\nimport type { SpecType } from 'clickim/src/background/eyeSdkService';\nimport type { EyeSdkBuilder } from 'clickim/src/background/eyeSdkBuilder';\nimport type { ApplitoolsIntegrationData } from 'clickim/src/common/api/testimApplitoolsApi';\n\ntype HandleApplitoolsSdkResult = typeof EyeSdkBuilder.handleApplitoolsSdkResult;\n\nclass EyeSdkService {\n    private sdk: Core<SpecType, 'ufg'>;\n    public handleApplitoolsSdkResult: HandleApplitoolsSdkResult;\n    constructor() {\n        const { EyeSdkBuilder } = getSessionPlayer();\n        const sdkVersion = dependencies['@applitools/eyes-sdk-core'] || 'N/A';\n        const { makeSDK } = require('@applitools/eyes-sdk-core') as typeof import('@applitools/eyes-sdk-core');\n\n        this.sdk = makeSDK({\n            name: 'Testim.io',\n            version: `4.0.1/eyes-sdk-core/${sdkVersion}`,\n            spec,\n        });\n        this.handleApplitoolsSdkResult = EyeSdkBuilder.handleApplitoolsSdkResult;\n    }\n    public async getManager(useVisualGrid: boolean | undefined, concurrency: number | undefined, batchId: string, applitoolsIntegrationData: ApplitoolsIntegrationData) {\n        const { EyeSdkBuilder } = getSessionPlayer();\n        // @ts-expect-error Applitools types are wrong once again https://github.com/applitools/eyes.sdk.javascript1/blob/master/js/packages/eyes-sdk-core/src/make-manager.js#L6\n        const manager = await this.sdk.makeManager({ type: useVisualGrid ? 'ufg' : 'classic', concurrency });\n        EyeSdkBuilder.rememberCreatedBatch(batchId, applitoolsIntegrationData);\n        return manager;\n    }\n}\n\nexport const eyeSdkService = new EyeSdkService();\n", "import * as _ from 'lodash';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { eyeSdkService } from '../utils/eyeSdkService';\nimport type { RunContext } from './stepAction';\nimport type { ExtendedContext } from 'clickim/src/background/eyesUtils';\nimport type { SimpleUIVerificationStep } from 'clickim/src/common/models/simpleUiVerificationStep';\nimport type { ExecutionResult } from 'clickim/src/background/stepActions/pixelValidationStepAction';\n\nconst logger = getLogger('pixel-validation-step-action');\n\nexport class PixelValidationStepAction extends StepAction<SimpleUIVerificationStep, ExtendedContext> {\n    private runContext!: RunContext;\n\n    override async performAction() {\n        const { shouldUseVisualGrid, applitoolsSdkConfig: config, applitoolsSdkLogger, testResultId } = this.context;\n        this.runContext = this.context.getRunContext(undefined);\n        const finalParams = this.runContext.incomingParams?.final || {};\n        // @ts-expect-error Applitools types in current SDK version are a pile of poopoo\n        const batchId = config.batch?.id || testResultId;\n        const eyeManager = await eyeSdkService.getManager(shouldUseVisualGrid, this.context.config.applitoolsConcurrency || 5, batchId, this.runContext.applitoolsIntegrationData!);\n        const targetElementData = this.getTarget() || {};\n        let result: ExecutionResult;\n        try {\n            // @ts-expect-error Applitools types in current SDK version are a pile of poopoo\n            const openedEye = await eyeManager.openEyes({ driver: this.driver.client, config, logger: applitoolsSdkLogger });\n            const region = (this.step.action === 'element' && targetElementData.seleniumElement) || undefined;\n            const settings = { region, fully: this.step.action === 'stitched' };\n            if (_.isPlainObject(finalParams.applitoolsStepSettings)) {\n                Object.assign(settings, finalParams.applitoolsStepSettings);\n                logger.info('Applitools SDK step executed with applitoolsStepSettings parameter', { applitoolsStepSettings: finalParams.applitoolsStepSettings });\n            }\n            // @ts-expect-error Applitools types in current SDK version are a pile of poopoo\n            await openedEye.check({ settings });\n            const eyesResults = await openedEye.close();\n\n            // @ts-expect-error Applitools types in current SDK version are a pile of poopoo\n            result = { isApplitoolsSdkResult: true, success: true, eyesResults };\n        } catch (err) {\n            logger.error('Applitools SDK step failed', { err, info: err.info });\n            result = { isApplitoolsSdkResult: true, success: false, err };\n        }\n        return await eyeSdkService.handleApplitoolsSdkResult(this.context, result, this.step as unknown as SimpleUIVerificationStep);\n    }\n}\n", "import * as service from '../../agent/routers/cliJsCode/service';\nimport { TimeoutError } from '../../errors';\nimport { BaseJsStepAction } from './baseJsStepAction';\n\nexport abstract class BaseCliJsStepAction extends BaseJsStepAction {\n    private async executeCliCode() {\n        const { step, context } = this;\n        const isMobile = this.stepActionUtils.driver.isMobile;\n        const hasCliAction = context.company?.activePlan?.premiumFeatures?.cliAction;\n\n        if (!hasCliAction && !isMobile) {\n            return {\n                success: 'skipped',\n                reason: 'CLI action is not enabled in your current plan',\n            };\n        }\n\n        const { code = '', id = '' } = step;\n        const { incomingParams, testResultId, retryIndex, stepResultId } = context;\n        const contextData = {\n            config: context.config,\n            data: context.data,\n        };\n        const runTimeout = context.data.timeToPlayStep!;\n        const data = await service.runCodeWithPackages(code, id, incomingParams, contextData, testResultId, retryIndex, stepResultId!, runTimeout);\n        return this.checkCodeResponse(data);\n    }\n\n    override async performAction() {\n        try {\n            return await this.executeCliCode();\n        } catch (err) {\n            const { stepResult } = this.sessionPlayerInit.commonConstants;\n            if (err instanceof TimeoutError) {\n                return {\n                    success: false,\n                    errorType: stepResult.ACTION_TIMEOUT,\n                };\n            }\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n}\n", "import { BaseCliJsStepAction } from './baseCliJsStepAction';\n\nexport class CliJsStepAction extends BaseCliJsStepAction {\n    protected isFailedResult(resultValue: any) {\n        return resultValue === false;\n    }\n}\n", "import { BaseCliJsStepAction } from './baseCliJsStepAction';\n\nexport class CliConditionStepAction extends BaseCliJsStepAction {\n    protected isFailedResult(resultValue: any) {\n        return !resultValue;\n    }\n}\n", "import * as service from '../../agent/routers/cliJsCode/service';\nimport { StepAction } from './stepAction';\nimport { NpmPackageError, TimeoutError } from '../../errors';\nimport type { RunContext } from './stepAction';\nimport type { Step } from 'clickim/src/common/models/step';\n\nexport interface NodePackageStepActionContext extends RunContext {\n    stepId: string;\n    packageData: { packageName: string; packageVersion: string; targetId: string; targetName: string }[];\n    resultId: string;\n    retryIndex: number;\n    timeToPlayBeforeExec: number;\n}\nexport class NodePackageStepAction extends StepAction<Step, NodePackageStepActionContext> {\n    override async performAction() {\n        const { stepId, packageData, resultId, retryIndex, stepResultId, timeToPlayBeforeExec } = this.context;\n\n        try {\n            const data = await service.installPackage(\n                stepId,\n                resultId,\n                retryIndex,\n                packageData,\n                stepResultId!,\n                timeToPlayBeforeExec,\n            );\n            return { data, success: true };\n        } catch (err) {\n            if (err instanceof NpmPackageError) {\n                return {\n                    success: false,\n                    code: 'invalid-node-package',\n                    message: err.message,\n                };\n            }\n            if (err instanceof TimeoutError) {\n                return {\n                    success: false,\n                    code: 'timeout',\n                };\n            }\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class ExtensionOnlyStepAction extends StepAction {\n    override async performAction() {\n        return {\n            success: 'skipped',\n            reason: 'This step can run only in \u2018extension\u2019 run mode with either Chrome or Edge Chromium',\n        };\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { LogLevel } from 'sfdc-engine/src/log';\nimport type { SfdcStep } from 'clickim/src/common/models/sfdcStep';\nimport type { ExtendedSfdcContext } from 'clickim/src/common/playback/stepPlayers/sfdcBaseStepPlayback';\n\nexport class SfdcStepAction extends StepAction<SfdcStep, ExtendedSfdcContext> {\n    override async performAction() {\n        const { sfdc } = this.sessionPlayerInit;\n        const page = sfdc.sfdcNewSePage(this.driver as any, this.context.sfdcLogHandler || ((level: LogLevel, message: string) => this.context.playback.sfdcAddLog(level, message)));\n        page.log.info(`BEGIN STEP '${this.step.getStepPreview?.()}'`);\n        try {\n            const actions = this.context.sfdcTestActions;\n            if (actions === undefined) {\n                throw new Error('No test actions were compiled');\n            }\n            const warnings = await sfdc.sfdcExecute(page, actions, this.context);\n            return { success: true, reason: warnings };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.reason || err.message,\n                exception: err,\n                shouldRetry: false, // TODO - check this.  Our (bFormat) steps are probably not retryable?\n            };\n        } finally {\n            page.releaseObjects();\n        }\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { LogLevel } from 'sfdc-engine/src/log';\nimport type { SfdcRecordedStep } from 'clickim/src/common/models/sfdcRecordedStep';\nimport type { ExtendedSfdcContext } from 'clickim/src/common/playback/stepPlayers/sfdcBaseStepPlayback';\n\nexport class SfdcRecordedStepAction extends StepAction<SfdcRecordedStep, ExtendedSfdcContext> {\n    override async performAction() {\n        const { sfdc } = this.sessionPlayerInit;\n        const page = sfdc.sfdcNewSePage(this.driver as any, this.context.sfdcLogHandler || ((level: LogLevel, message: string) => this.context.playback.sfdcAddLog(level, message)));\n        page.log.info(`BEGIN STEP '${this.step.getStepPreview?.()}'`);\n        try {\n            const warnings = await sfdc.sfdcExecuteRecordedStep(page, this.step.recordedData, this.context);\n            return { success: true, reason: warnings };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.reason || err.message,\n                exception: err,\n                shouldRetry: false, // TODO - check this.  Our (bFormat) steps are probably not retryable?\n            };\n        } finally {\n            page.releaseObjects();\n        }\n    }\n}\n", "import { StepAction } from './stepAction';\nimport type { UserCodeStep } from 'clickim/src/common/models/userCodeStep';\nimport type { ExtendedSfdcContext } from 'clickim/src/common/playback/stepPlayers/sfdcBaseStepPlayback';\n\nexport class SfdcInternalTestStepAction extends StepAction<UserCodeStep, ExtendedSfdcContext> {\n    override async performAction() {\n        const { sfdc } = this.sessionPlayerInit;\n        const page = sfdc.sfdcNewSePage(this.driver as any, this.context.sfdcLogHandler);\n        try {\n            await sfdc.sfdcExecuteJavascript(page, this.step.code || '', this.context);\n            return { success: true };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.reason || err.message,\n                exception: err,\n                shouldRetry: false,\n            };\n        } finally {\n            page.releaseObjects();\n        }\n    }\n}\n", "import { LocateStepAction } from './locateStepAction';\nimport { ScrollStepAction } from './scrollStepAction';\nimport { MouseStepAction } from './mouseStepAction';\nimport { TextValidationStepAction } from './textValidationStepAction';\nimport { EvaluateExpressionStepAction } from './evaluateExpressionStepAction';\nimport { TextStepAction } from './textStepAction';\nimport { JsCodeStepAction } from './jsCodeStepAction';\nimport { JsConditionStepAction } from './jsConditionStepAction';\nimport { SpecialKeyStepAction } from './specialKeyStepAction';\nimport { KeyboardShortcutStepAction } from './keyboardShortcutStepAction';\nimport { SelectOptionStepAction } from './selectOptionStepAction';\nimport { SubmitStepAction } from './submitStepAction';\nimport { HoverStepAction } from './hoverStepAction';\nimport { WheelStepAction } from './wheelStepAction';\nimport { DropFileStepAction } from './dropFileStepAction';\nimport { InputFileStepAction } from './inputFileStepAction';\nimport { NavigationStepAction } from './navigationStepAction';\nimport { SleepStepAction } from './sleepStepAction';\nimport { RefreshStepAction } from './RefreshStepAction';\nimport { ApiStepAction } from './apiStepAction';\nimport { ExtractTextStepAction } from './extractTextStepAction';\nimport { PixelValidationStepAction } from './pixelValidationStepAction';\nimport { CliJsStepAction } from './cliJsStepAction';\nimport { CliConditionStepAction } from './cliConditionStepAction';\nimport { NodePackageStepAction } from './nodePackageStepAction';\nimport { ExtensionOnlyStepAction } from './extensionOnlyStepAction';\nimport { SfdcStepAction } from './sfdcStepAction';\nimport { SfdcRecordedStepAction } from './sfdcRecordedStepAction';\nimport { SfdcInternalTestStepAction } from './sfdcInternalTestStepAction';\nimport type { WebDriver } from '../webdriver';\nimport type { StepActionFactory } from 'clickim/src/background/stepActions/stepActionFactory';\n\n\nfunction register(stepActionByType: typeof STEP_ACTION_MAPPING, stepActionFactory: StepActionFactory) {\n    (Object.keys(stepActionByType) as (keyof typeof STEP_ACTION_MAPPING)[]).forEach(type => {\n        stepActionFactory.registerStepAction(type, stepActionByType[type] as any);\n    });\n}\n\nconst STEP_ACTION_MAPPING = {\n    locate: LocateStepAction,\n    scroll: ScrollStepAction,\n    mouse: MouseStepAction,\n    submit: SubmitStepAction,\n    text: TextStepAction,\n    'special-key': SpecialKeyStepAction,\n    'user-code': JsCodeStepAction,\n    'validation-code-step': JsCodeStepAction,\n    'wait-for-code-step': JsCodeStepAction,\n    'action-code-step': JsCodeStepAction,\n    'condition-step': JsConditionStepAction,\n    'skip-code-step': JsConditionStepAction,\n    'element-code-step': JsConditionStepAction,\n    'evaluate-expression': EvaluateExpressionStepAction,\n    'text-validation': TextValidationStepAction,\n    'wait-for-text-validation': TextValidationStepAction,\n    'select-option': SelectOptionStepAction,\n    'drop-file': DropFileStepAction,\n    'input-file': InputFileStepAction,\n    hover: HoverStepAction,\n    navigation: NavigationStepAction,\n    wheel: WheelStepAction,\n    sleep: SleepStepAction,\n    refresh: RefreshStepAction,\n    'keyboard-shortcut-step': KeyboardShortcutStepAction,\n    'api-validation': ApiStepAction,\n    'api-action': ApiStepAction,\n    'api-code-step': JsCodeStepAction,\n    'extract-text': ExtractTextStepAction,\n    'simple-ui-verification': PixelValidationStepAction,\n    'wait-for-simple-ui-verification': PixelValidationStepAction,\n\n    'cli-validation-download-file': ExtensionOnlyStepAction,\n    'cli-wait-for-download-file': ExtensionOnlyStepAction,\n    'network-validation-step': ExtensionOnlyStepAction,\n\n    'cli-validation-code-step': CliJsStepAction,\n    'cli-wait-for-code-step': CliJsStepAction,\n    'cli-action-code-step': CliJsStepAction,\n    'cli-api-code-step': CliJsStepAction,\n\n    'cli-condition-step': CliConditionStepAction,\n    'node-package': NodePackageStepAction,\n\n    'email-code-step': JsCodeStepAction,\n    'cli-email-code-step': CliJsStepAction,\n\n    'sfdc-internal-test-step': SfdcInternalTestStepAction,\n    'sfdc-recorded-step': SfdcRecordedStepAction,\n    'sfdc-step-login': SfdcStepAction,\n    'sfdc-step-loginas': SfdcStepAction,\n    'sfdc-step-logout': SfdcStepAction,\n    'sfdc-step-sobjectcreate': SfdcStepAction,\n    'sfdc-step-sobjectdelete': SfdcStepAction,\n    'sfdc-step-findrecord': SfdcStepAction,\n    'sfdc-step-quickaction': SfdcStepAction,\n    'sfdc-step-sobjectedit': SfdcStepAction,\n    'sfdc-step-sobjectvalidate': SfdcStepAction,\n    'sfdc-step-launchapp': SfdcStepAction,\n    'sfdc-step-wait-for-page-load': SfdcStepAction,\n    'sfdc-step-closeconsoletabs': SfdcStepAction,\n    'sfdc-step-relatedlistaction': SfdcStepAction,\n    'sfdc-step-permission-validation': SfdcStepAction,\n    'sfdc-step-convert-lead-to-opportunity': SfdcStepAction,\n    'sfdc-step-quotelineeditor': SfdcStepAction,\n    'sfdc-document-validation': ExtensionOnlyStepAction,\n    'sfdc-step-flow-screen-completion': SfdcStepAction,\n    'sfdc-step-sobjectverifyoptions': SfdcStepAction,\n};\n\nexport function stepActionRegistrar(driver: WebDriver, stepActionFactory: StepActionFactory) {\n    register(STEP_ACTION_MAPPING, stepActionFactory);\n    stepActionFactory.registerLocateStepActionUtils(LocateStepAction.getUtils(driver));\n}\n", "import type { SfdcStep } from 'clickim/src/common/models/sfdcStep';\nimport type { SleepStep } from 'clickim/src/common/models/sleepStep';\nimport type { StepPlayback } from 'clickim/src/common/playback/stepPlayers/stepPlayback';\nimport type { IPlaybackTimeoutCalculator } from 'clickim/src/background/playbackTimeoutCalculator';\n\nconst COMMUNICATION_BUFFER_TIME = 1000;\nconst UI_VERIFICATION_STEPS = ['simple-ui-verification', 'wait-for-simple-ui-verification'];\nconst FULL_TIMEOUT_STEP_TYPES = [\n    ...UI_VERIFICATION_STEPS,\n    'custom-validation',\n    'sfdc-internal-test-step',\n    'sfdc-recorded-step',\n    'sfdc-step-login',\n    'sfdc-step-loginas',\n    'sfdc-step-logout',\n    'sfdc-step-sobjectcreate',\n    'sfdc-step-sobjectdelete',\n    'sfdc-step-findrecord',\n    'sfdc-step-quickaction',\n    'sfdc-step-sobjectvalidate',\n    'sfdc-step-launchapp',\n    'sfdc-step-wait-for-page-load',\n    'sfdc-step-closeconsoletabs',\n    'sfdc-step-sobjectedit',\n    'sfdc-step-relatedlistaction',\n    'sfdc-step-permission-validation',\n    'sfdc-step-convert-lead-to-opportunity',\n    'sfdc-step-quotelineeditor',\n    'sfdc-document-validation',\n    'sfdc-step-flow-screen-completion',\n    'sfdc-step-sobjectverifyoptions',\n];\n\ninterface RetryTimeReport {\n    tab?: number;\n    frame?: number;\n    condition?: number;\n    'pre-locate'?: number;\n    locate?: number;\n    action?: number;\n}\n\nexport class PlaybackTimeoutCalculator implements IPlaybackTimeoutCalculator {\n    private totalStepTime: number = 0;\n    public currentRetryStart = 0;\n    private lastUpdateTime: number | undefined;\n    private totalStepTimesReport: RetryTimeReport[] = [];\n    private currentRetryTimes: number[] = [];\n    private currentRetryTimesReport: RetryTimeReport = {};\n\n    constructor(private readonly isDebuggerConnected: boolean) {\n        this.resetStepVariables();\n        this.resetRetryVariables();\n    }\n\n    private resetStepVariables(totalStepTime?: number, currentRetryTimes?: number[]) {\n        this.currentRetryTimes = currentRetryTimes || [];\n        this.totalStepTime = totalStepTime || 0;\n        this.totalStepTimesReport = [];\n        this.currentRetryTimesReport = {};\n        const now = Date.now();\n        this.currentRetryStart = now;\n        this.lastUpdateTime = now;\n    }\n\n    private resetRetryVariables() {\n        const now = Date.now();\n        this.currentRetryStart = now;\n        this.lastUpdateTime = now;\n        this.totalStepTimesReport.push(this.currentRetryTimesReport);\n        this.currentRetryTimesReport = {};\n    }\n\n    public initStepRun(stepPlayback: StepPlayback) {\n        const getRetryTimeoutSuggestions = (totalStepTime: number) => {\n            const timeToPlayStep = this.getTotalStepTimeLeftToPlay(stepPlayback, totalStepTime);\n            const MINIMAL_RETRY_TIME = 5000;\n            if (timeToPlayStep <= MINIMAL_RETRY_TIME) {\n                return [MINIMAL_RETRY_TIME];\n            }\n            return [Math.max(MINIMAL_RETRY_TIME, timeToPlayStep / 3)];\n        };\n        stepPlayback.setStartTimestamp();\n        const totalStepTime = this.getTotalStepRunTime(stepPlayback);\n        const currentRetryTimes = FULL_TIMEOUT_STEP_TYPES.includes(stepPlayback.stepType) ? [totalStepTime] : getRetryTimeoutSuggestions(totalStepTime);\n        this.resetStepVariables(totalStepTime, currentRetryTimes);\n        stepPlayback.context.data.maxTotalStepTime = totalStepTime;\n    }\n\n    public initRetryTime() {\n        this.resetRetryVariables();\n    }\n\n    private getTotalStepRunTime(stepPlayback: StepPlayback) {\n        const HALF_HOUR_IN_MS = 30 * 60 * 1000;\n        let fallbackTimeout = stepPlayback.context.config.stepTimeout;\n        if (UI_VERIFICATION_STEPS.includes(stepPlayback.stepType)) {\n            fallbackTimeout = stepPlayback.context.config.applitoolsStepTimeout || HALF_HOUR_IN_MS;\n        }\n        if (stepPlayback.step.type.startsWith('sfdc-')) {\n            fallbackTimeout = (stepPlayback.step as SfdcStep).defaultTimeout;\n        }\n        return (stepPlayback.step.useStepTimeout && stepPlayback.step.stepTimeout) ? stepPlayback.step.stepTimeout : fallbackTimeout;\n    }\n\n    public getTotalStepTimeLeftToPlay(stepPlayback: StepPlayback, totalStepTime = this.totalStepTime) {\n        const playTimeSoFar = Date.now() - stepPlayback.startTimestamp!;\n        return totalStepTime - playTimeSoFar;\n    }\n\n    private getCurrentRetryTime(stepPlayback: StepPlayback) {\n        return (stepPlayback.retryIndex! < this.currentRetryTimes.length) ?\n            this.currentRetryTimes[stepPlayback.retryIndex!] :\n            this.getTotalStepTimeLeftToPlay(stepPlayback);\n    }\n\n    private getTotalCurrentRetryTimeLeft(stepPlayback: StepPlayback) {\n        const totalRetryTime = Date.now() - this.currentRetryStart;\n        return this.getCurrentRetryTime(stepPlayback) - totalRetryTime + COMMUNICATION_BUFFER_TIME;\n    }\n\n    public getTabTimeout(stepPlayback: StepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n\n    public getDynamicParentTimeout(stepPlayback: StepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n\n    public getFrameTimeout(stepPlayback: StepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n\n    public getLocateTimeout(stepPlayback: StepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n\n    public getActionTimeout(stepPlayback: StepPlayback) {\n        if (this.isDebuggerConnected) {\n            return 6e5;\n        }\n        const SLEEP_ERROR_MARGIN_MS = 5000;\n        const actionType = stepPlayback.step.type;\n        const MIN_ACTION_PLAYBACK_TIME = 30000;\n\n        if (actionType === 'sleep') {\n            return (stepPlayback.step as SleepStep).durationMS + SLEEP_ERROR_MARGIN_MS;\n        }\n\n        return Math.max(this.getTotalStepTimeLeftToPlay(stepPlayback), MIN_ACTION_PLAYBACK_TIME);\n    }\n}\n", "import * as utils from '../utils';\nimport { makeSDK } from '@applitools/eyes-sdk-core';\nimport { WebDriver } from './webdriver';\nimport { TimeoutError } from '../errors';\nimport { getLogger } from '../commons/logger';\nimport { CookieUtils } from './utils/cookieUtils';\nimport { TabService } from './services/tabService';\nimport { portSelectorMock } from './services/portSelector';\nimport { StepActionUtils } from './utils/stepActionUtils';\nimport { frameLocatorFactory } from './services/frameLocator';\nimport { isDebuggerConnected } from '../commons/detectDebugger';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { stepActionRegistrar } from './stepActions/stepActionRegistrar';\nimport { PlaybackTimeoutCalculator } from './services/playbackTimeoutCalculator';\nimport * as config from '../commons/config';\nimport type { Step } from 'clickim/src/common/models/step';\nimport type { SessionPlayer } from 'clickim/src/background/session/sessionPlayer';\nimport type { StepActionFactory } from 'clickim/src/background/stepActions/stepActionFactory';\n\nconst logger = getLogger('SeleniumTestPlayer');\n\nexport class SeleniumTestPlayer {\n    public driver: WebDriver;\n    public readonly sessionPlayer: SessionPlayer;\n    private readonly tabService: TabService;\n    private readonly stepActionFactory: StepActionFactory;\n    private readonly playbackTimeoutCalculator = new PlaybackTimeoutCalculator(isDebuggerConnected());\n\n    constructor(\n        public readonly id: number,\n        userParamsData: object,\n        shouldMonitorPerformance: boolean | undefined,\n        driver: WebDriver | null | undefined,\n        testRetryCount: number = undefined!,\n        previousTestResultId: string | undefined = undefined,\n    ) {\n        const { SessionPlayer, commonConstants, StepActionFactory } = getSessionPlayer();\n        this.driver = driver ?? new WebDriver();\n\n        const stepActionUtils = new StepActionUtils(this.driver);\n        this.stepActionFactory = new StepActionFactory(stepActionUtils);\n        stepActionRegistrar(this.driver, this.stepActionFactory);\n\n        this.tabService = this.driver.tabService || new TabService(this.driver);\n        // expose the tabService on the driver so future sessions reusing the driver know the tabs (for example - a ******** step)\n        this.driver.tabService = this.tabService;\n\n        this.tabService.createSesion(id);\n\n        const FrameLocator = frameLocatorFactory(this.driver);\n\n        this.sessionPlayer = new SessionPlayer(\n            id,\n            {\n                tabService: this.tabService,\n                cookieUtils: new CookieUtils(this.driver) as any,\n                FrameLocator,\n                portSelector: portSelectorMock,\n                LocateElementPlayer: null,\n                stepActionUtils,\n                stepActionFactory: this.stepActionFactory,\n                playbackTimeoutCalculator: this.playbackTimeoutCalculator,\n                makeSDK,\n            },\n        );\n\n        this.sessionPlayer.setShouldMonitorPerformance(Boolean(shouldMonitorPerformance));\n\n        this.tabService.setAddFrameHandlerCallBack(this.sessionPlayer.addPlaybackFrameHandler.bind(this.sessionPlayer));\n\n        this.sessionPlayer.playbackManager.isRemoteSession = true;\n        this.sessionPlayer.playbackManager.isLocalRun = false;\n        this.sessionPlayer.playbackManager.testRetryCount = testRetryCount;\n        this.sessionPlayer.playbackManager.previousTestResultId = previousTestResultId;\n\n        this.sessionPlayer.playbackManager.userParamsData = userParamsData || {};\n\n        this.onStepCompleted = this.onStepCompleted.bind(this);\n\n        this.sessionPlayer.playbackManager.on(commonConstants.playback.RESULT, this.onStepCompleted);\n    }\n\n    private onStepCompleted(result: any, testId: string, resultId: string, step: Step) {\n        if (step?.isTabOpener) {\n            this.tabService.addNewPopup(this.id, step.id).catch(() => null);\n        }\n    }\n\n    public async onDone() {\n        const { commonConstants } = getSessionPlayer();\n        const END_DRIVER_TIMEOUT = 1000 * 60 * 2;\n        try {\n            await utils.promiseTimeout(this.driver?.end(), END_DRIVER_TIMEOUT);\n        } catch (error) {\n            if (error instanceof TimeoutError) {\n                await this.driver?.forceEnd().catch(() => null);\n            }\n        }\n        this.sessionPlayer.playbackManager.off(commonConstants.playback.RESULT, this.onStepCompleted);\n        Object.assign(this, { sessionPlayer: null, tabService: null, stepActionFactory: null, driver: null });\n    }\n\n    public clearSessionTabs() {\n        this.tabService.clearAllTabs(this.id);\n    }\n\n    public async addTab(openerStepId?: string, options: { skipLoadInfo?: boolean; loadInfo?: boolean } = { loadInfo: true }) {\n        const ids = await this.driver.getTabIds();\n        if (!Array.isArray(ids)) {\n            logger.error('addTab: driver.getTabIds() returned a non-array', { ids });\n            return;\n        }\n        const lastId = ids.at(-1)!;\n        await this.tabService.addNewTab(this.id, lastId, openerStepId, options);\n        await this.sessionPlayer.addPlaybackFrameHandler(lastId as any as number, undefined, { emptyPage: true });\n    }\n\n    public async addAllTabs(openerStepId?: string | null, options = { loadInfo: true, checkForMainTab: true, takeScreenshots: true }, blockList: string[] = []) {\n        const ids = await this.driver.getTabIds();\n        // the ids are reversed so we search first in the last tab opened - otherwise it starts looking from the testim editor and not the AUT\n\n        const PROHIBITED_URLS = [new URL(config.EDITOR_URL || config.DEFAULT_EDITOR_URL).hostname].concat(blockList);\n        for (const id of ids.reverse()) {\n            await this.tabService.addNewTab(this.id, id, openerStepId!, { ...options, forceSwitch: true });\n            const tabInfo = this.tabService.getTabInfo(this.id, id);\n            if (PROHIBITED_URLS.some(bad => tabInfo.url.includes(bad))) {\n                this.tabService.removeTabInfo(this.id, id);\n                continue;\n            }\n            await this.sessionPlayer.addPlaybackFrameHandler(id as any as number, undefined, { emptyPage: true });\n        }\n        if (this.tabService.tabCount(this.id) === 1) {\n            // if we only have one tab because we removed the editor tab - we have to switchTab to one of the other tabs, otherwise tabService will assume it's on a good context but it's not.\n            const tabInfo = this.tabService.getMainTabInfo(this.id);\n            const tabUtils = this.tabService.getTabUtils(this.id, tabInfo);\n            await this.tabService.switchTab(tabUtils.tabId, this.id, { forceSwitch: true });\n        }\n        // deal with checkForMainTab failing due to the page refreshing or JavaScript not responding or a similar issue\n        this.tabService.fixMissingMainTab(this.id);\n    }\n\n    public getSessionId() {\n        return this.driver.getSessionId();\n    }\n}\n", "import * as utils from '../utils';\nimport * as perf from '../commons/performance-logger';\nimport { BaseWorker } from './BaseWorker';\nimport { getLogger } from '../commons/logger';\nimport { reporter } from '../reports/reporter';\nimport { preloadTests } from '../commons/preloadTests';\nimport { CLI_MODE, timeoutMessages } from '../commons/constants';\nimport { WindowUtils } from '../player/utils/windowUtils';\nimport { PageNotAvailableError, TimeoutError } from '../errors';\nimport { SeleniumTestPlayer } from '../player/seleniumTestPlayer';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { gridAccessWhitelistedIp, wasInitializedFromCache } from '../commons/testimCustomToken';\nimport type { FailedSessionPlayerTestResult } from 'clickim/src/background/session/sessionPlayer';\nimport type { PlaybackEvent } from 'clickim/src/background/playbackManagerEventsMapping';\nimport type { TestResult } from 'clickim/src/common/models/TestResult';\nimport type { TestResultWithStats } from './BaseWorker';\nimport type { TestRunHandler } from '../testRunHandler';\n\nconst logger = getLogger('worker-selenium');\n\n// this navigation timeout is handled from outside the worker, so don't pass a small timeout to navigate\nconst NO_NAVIGATION_TIME_LIMIT = 1e9;\n\nexport class WorkerSelenium extends BaseWorker<SeleniumTestPlayer> {\n    private windowUtils?: WindowUtils;\n\n    override initPlayer(testRunHandler: TestRunHandler) {\n        return new SeleniumTestPlayer(\n            this.id,\n            testRunHandler.runParams,\n            this.options.shouldMonitorPerformance,\n            undefined,\n            testRunHandler.retryCount,\n            testRunHandler.previousTestResultId,\n        );\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, seleniumTestPlayer: SeleniumTestPlayer, gridInfo: any) {\n        perf.log('in WorkerSelenium getBrowserOnce');\n        reporter.onGetSession(this.id, this.testName, testRunHandler.runMode);\n        const { driver } = seleniumTestPlayer;\n\n        this.windowUtils = new WindowUtils(this.id, driver);\n        seleniumTestPlayer.clearSessionTabs();\n\n        const { browserValue } = this.testRunConfig as { browserValue: string };\n        const baseUrl = testRunHandler.baseUrl;\n\n        try {\n            const fastInit = this.options.useLocalChromeDriver;\n            await driver.init({\n                browserOptions: this.options,\n                testName: this.testName!,\n                testRunConfig: this.testRunConfig!,\n                gridInfo,\n                customExtensionLocalLocation,\n                executionId: this.executionId,\n                testResultId: this.testResultId!,\n                seleniumPerfStats: testRunHandler.seleniumPerfStats,\n                fastInit,\n                lambdatestService: this.lambdatestService,\n                printFinalCaps: this.options.printFinalCaps,\n                mode: CLI_MODE.SELENIUM,\n            });\n\n            perf.log('in WorkerSelenium after driver.init');\n            await seleniumTestPlayer.addTab(undefined, { skipLoadInfo: fastInit });\n            perf.log('in WorkerSelenium after addTab');\n            if (!fastInit) {\n                await this.windowUtils.navigate(baseUrl!, NO_NAVIGATION_TIME_LIMIT);\n            }\n            await this.windowUtils.validatePageIsAvailable();\n            perf.log('in WorkerSelenium after navigate');\n        } catch (err) {\n            const firefoxPageNotAvailable = err.message && (err.message.startsWith('Malformed URL') || err.message.includes('Reached error page: about:neterror')) &&\n                browserValue === 'firefox';\n\n            const invalidURL = (err.message && err.message === 'invalid argument');\n\n            if (err instanceof PageNotAvailableError || firefoxPageNotAvailable || invalidURL) {\n                throw new PageNotAvailableError(`Page '${baseUrl}' is not available`);\n            }\n\n            logger.error('failed to navigate to page', {\n                baseUrl,\n                err,\n                whitelistedPublicIp: gridAccessWhitelistedIp(),\n                initializedFromCache: wasInitializedFromCache(),\n            });\n            throw err;\n        }\n    }\n\n    override async runTestOnce(testRunHandler: TestRunHandler, seleniumTestPlayer: SeleniumTestPlayer) {\n        const { manifestVersion, localAssetService } = getSessionPlayer();\n        const { driver, sessionPlayer } = seleniumTestPlayer;\n\n        const version = manifestVersion || 'runner';\n\n        reporter.onWaitToTestComplete(this.id);\n\n        setupCliPerformanceMonitoring(sessionPlayer);\n\n        sessionPlayer.playbackManager.executionId = testRunHandler.executionId;\n        sessionPlayer.playbackManager.executionName = testRunHandler.executionName;\n        // Mode can be undefined, we don't want to pass turbo mode options to Selenium player.\n        if (this.options.mode === CLI_MODE.SELENIUM) {\n            sessionPlayer.setLightweightMode(this.options.lightweightMode);\n        }\n        if (testRunHandler.sfdcCredential) {\n            sessionPlayer.setSfdcCredential(testRunHandler.sfdcCredential);\n        }\n        localAssetService.initialize({ serverUrl: this.options.localRCASaver });\n\n        let preloadedTest: any = null;\n        if (this.options.lightweightMode?.preloadTests) {\n            const preloadedTests = await preloadTests(this.options);\n            preloadedTest = preloadedTests[this.testId!];\n        }\n\n        const runSeleniumTest = async () => utils.promiseTimeout(\n            // TODO: Fix promise constructor anti-pattern\n            new Promise<TestResult | FailedSessionPlayerTestResult>((resolve, reject) => {\n                sessionPlayer.playByTestId({\n                    testId: this.testId!,\n                    executionId: this.executionId,\n                    resultId: this.testResultId!,\n                    baseUrl: this.baseUrl,\n                    userData: this.userData!,\n                    version,\n                    resolve,\n                    isLocalRun: false,\n                    overrideTestConfigId: this.overrideTestConfigId,\n                    branch: this.branch!,\n                    incognito: false,\n                    remoteRunId: testRunHandler.remoteRunId,\n                    preloadedTest,\n                }).catch(reject);\n            }),\n            this.testRunTimeout,\n            timeoutMessages.TEST_COMPLETE_TIMEOUT_MSG,\n        )\n            .catch((err) => {\n                if (err instanceof TimeoutError) {\n                    sessionPlayer.stopPlayingOnTestTimeout?.();\n                }\n                throw err;\n            })\n            .then(async (testResult) => {\n                await localAssetService.drain();\n                testResult.stepsResults = null;\n                testResult.resultId = this.testResultId!;\n                if (!driver.isAlive()) {\n                    logger.warn(`possible grid unresponsive for test ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                    testResult.gridIssues = 'could not validate grid is alive';\n                }\n                const maxKeepAliveGap = driver.maxKeepAliveGap();\n                const MAX_KEEP_ALIVE_GAP = 30000;\n                if (maxKeepAliveGap >= MAX_KEEP_ALIVE_GAP) {\n                    logger.warn(`possible browser keep alive issue ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                    testResult.keepAliveIssue = maxKeepAliveGap;\n                }\n                const resultWithStats: TestResultWithStats = { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() } as TestResultWithStats;\n                if (this.lambdatestService.isLambdatestRun()) {\n                    await driver.executeJS(`lambda-status=${!resultWithStats.success ? 'failed' : 'passed'}`).catch(() => { /* ignore */ });\n                }\n                return resultWithStats;\n            });\n\n        driver.start();\n\n        perf.log('right before super.runTestOnce in workerSelenium');\n        try {\n            await super.runTestOnce(testRunHandler, seleniumTestPlayer);\n            perf.log('right after super.runTestOnce in workerSelenium');\n            const testResult = await runSeleniumTest();\n            perf.log('right after runSeleniumTest');\n            return testResult;\n        } catch (err) {\n            logger.error('failed to run test once', { err });\n            throw err;\n        }\n    }\n}\n\nfunction setupCliPerformanceMonitoring(sessionPlayer: SeleniumTestPlayer['sessionPlayer']) {\n    const { playback } = getSessionPlayer().commonConstants;\n    for (const event of Object.values(playback)) {\n        sessionPlayer.playbackManager.on(event as PlaybackEvent, () => perf.log(`Got event ${event}`));\n    }\n}\n", "import ora from 'ora';\nimport { Jimp } from 'jimp';\nimport * as config from '../commons/config';\nimport * as httpRequest from '../commons/httpRequest';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport { getLogger } from '../commons/logger';\nimport { gridTypes } from '../commons/constants';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport type { RunnerOptions } from '../runOptions';\nimport type { SerializedGrid } from './gridService';\nimport type { TestRunHandler } from 'src/testRunHandler';\nimport type { TvcCapabilitiesResponse, WebdriverAppiumSessionCapabilities } from 'clickim/src/background/session/MobileAgentSessionManager';\nimport type { RawMobileAppVersion } from 'services/src/commons/mongo/models/mobileAppVersion';\nimport type { TmaMobileDevice } from 'clickim/src/background/mobile/types';\nimport type { PlaybackMobileDevice } from 'services/src/grid/mobileGridService';\n\nconst logger = getLogger('mobile-grid-service');\n\nconst TDC_BASE_URL = 'https://tdc.tricentis-cloud.com';\nconst HEADSPIN_BASE_URL = 'https://ui.headspin.io';\ninterface BrowserStackSessionData {\n    automation_session: {\n        public_url: string;\n    };\n}\n\nexport interface HeadSpinConnectionOptions {\n    hostname: string;\n    port: number;\n    protocol: string;\n    path: string;\n}\ninterface GetAppInfoParams {\n    options: RunnerOptions;\n    testRunHandler: TestRunHandler;\n    pendingAppUploads: Map<string, { isUploaded: boolean; uploadedAppId: string }>;\n}\n\ninterface VerifyAppAlreadyUploadedParams extends Omit<GetAppInfoParams, 'options'> {\n    projectId: string;\n    gridId: string;\n    gridType: string;\n    mobileAppId: string;\n}\ninterface AppPathGetterParams {\n    testRunHandler: TestRunHandler;\n    mobileApp?: RawMobileAppVersion;\n    gridHost?: string;\n}\ninterface GridsAppIdGetter {\n    [key: string]: (appPathGetterParams: AppPathGetterParams) => string | undefined | null;\n}\n\nexport interface Capabilities extends WebdriverAppiumSessionCapabilities {\n    device?: string;\n    mobile?: {\n        browser: string;\n        version: string; // browserstack: deviceName and version combined\n    };\n    os_version?: string; // TVC\n    replayUrl?: string; // TVC\n    deviceScreenSize: `${number}x${number}`; // headspin\n    screen?: { scale?: number; width: number; height: number }; // TVC\n    pCloudy_DeviceFullName?: string; // pCloudy\n    testobject_device_name?: string; // saucelabs device name\n    testobject_test_report_url?: string; // saucelabs\n}\n\ninterface GetDeviceNameFromSessionCapsParams {\n    capabilities: Capabilities;\n    gridType: string;\n    projectId: string;\n    projectType: string;\n    companyId: string;\n    gridId: string;\n}\ninterface GetGridAppIdParams {\n    gridData: SerializedGrid;\n    testRunHandler: TestRunHandler;\n    projectId: string;\n}\n\nexport class MobileGridService {\n    isTdcOrHeadSpinGrid(gridType?: string): boolean {\n        return gridType === gridTypes.TESTIM_TDC || gridType === gridTypes.TESTIM_HEADSPIN;\n    }\n\n    getLockDeviceApiUrl(gridInfo: SerializedGrid) {\n        const apiBase = this.getBaseApiUrl(gridInfo);\n        if (this.isTdcOrHeadSpinGrid(gridInfo.type)) {\n            return `${apiBase}/lock`;\n        }\n        return '';\n    }\n\n    getBaseApiUrl(gridInfo: SerializedGrid) {\n        const { type: gridType, apiUrl } = gridInfo;\n        if (gridType === gridTypes.TESTIM_HEADSPIN) {\n            const baseApi = apiUrl || config.HEADSPIN_MOBILE_API_BASE_URL;\n            return `${baseApi}/${config.HEADSPIN_TDC_DEVICES_API_PATH}/devices`;\n        }\n        if (gridType === gridTypes.TESTIM_TDC) {\n            const baseApi = apiUrl || config.TDC_MOBILE_API_BASE_URL;\n            return `${baseApi}/${config.HEADSPIN_TDC_DEVICES_API_PATH}/devices`;\n        }\n        return '';\n    }\n\n    getHeaders(gridInfo: SerializedGrid) {\n        const headers = {\n            ...(this.isTdcOrHeadSpinGrid(gridInfo.type) && {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${gridInfo.accessToken!}`,\n            }),\n        };\n        return headers;\n    }\n\n    buildRequestBody(gridInfo: SerializedGrid, deviceId: string) {\n        const body = {\n            // eslint-disable-next-line camelcase\n            ...(this.isTdcOrHeadSpinGrid(gridInfo.type) && { device_id: deviceId }),\n        };\n        return body;\n    }\n\n    async lockDevice(gridInfo: SerializedGrid, deviceId: string) {\n        const url = this.getLockDeviceApiUrl(gridInfo);\n        const headers = this.getHeaders(gridInfo);\n        const body = this.buildRequestBody(gridInfo, deviceId);\n        try {\n            await httpRequest.post({ url, headers, body });\n        } catch (error) {\n            logger.debug(`error while locking device ${deviceId}`, { error });\n            if (error.status === 401) throw new Error(`failed to lock device ${deviceId}, device may be already locked and in use`);\n            throw error;\n        }\n    }\n\n    async getHeadSpinDeviceConnection(gridInfo: SerializedGrid, deviceId: string): Promise<HeadSpinConnectionOptions> {\n        const apiBase = this.getBaseApiUrl(gridInfo);\n        const url = `${apiBase}/device_id:${deviceId}/automation-config`;\n        try {\n            const automationConfig = await httpRequest.get<{ [keys: string]: { driver_url: string } }>(url, undefined, this.getHeaders(gridInfo));\n            return this.extractHeadSpinDeviceConnection(automationConfig, gridInfo.accessToken!);\n        } catch (error) {\n            logger.error('error while getting automation config for device', { error, deviceId });\n            throw error;\n        }\n    }\n\n    async getPCloudyAuthToken(host: string, user: string, key: string) {\n        const authRes = await httpRequest.getText(`https://${host}/api/access`, undefined, { Authorization: `Basic ${Buffer.from(`${user}:${key}`).toString('base64')}` });\n        const authResJSON = JSON.parse(authRes);\n\n        return authResJSON.result.token;\n    }\n\n    extractHeadSpinDeviceConnection(automationConfig: any, token: string): HeadSpinConnectionOptions {\n        const firstKey = Object.keys(automationConfig)[0];\n        const driverUrl = automationConfig[firstKey].driver_url;\n        const url = new URL(driverUrl);\n        return {\n            hostname: url.hostname,\n            port: Number(url.port),\n            protocol: url.protocol.slice(0, -1),\n            path: `/v0/${token}/wd/hub`,\n        };\n    }\n\n    async getGridDirectConnection(gridInfo: SerializedGrid, deviceId: string): Promise<HeadSpinConnectionOptions> {\n        let connection = {} as HeadSpinConnectionOptions;\n        if (this.isTdcOrHeadSpinGrid(gridInfo.type)) {\n            connection = await this.getHeadSpinDeviceConnection(gridInfo, deviceId);\n        }\n        return connection;\n    }\n\n    public getGridConnection(gridInfo: SerializedGrid) {\n        if (this.isTdcOrHeadSpinGrid(gridInfo.type)) {\n            const path = gridInfo.host?.includes('ulb.tdc.tricentis-cloud.com') ? `/ulb/appium/v0/${gridInfo.accessToken}/wd/hub` : `/v0/${gridInfo.accessToken}/wd/hub`;\n            return {\n                protocol: gridInfo.protocol || 'https',\n                hostname: gridInfo.host,\n                port: gridInfo.port,\n                path,\n            };\n        }\n        if (gridInfo.type === gridTypes.TESTIM_TVC) {\n            return {\n                protocol: gridInfo.protocol || 'https',\n                hostname: gridInfo.host,\n                port: 443,\n                path: '/wd/hub',\n            };\n        }\n        if (gridInfo.type === gridTypes.P_CLOUDY) {\n            return {\n                protocol: gridInfo.protocol || 'https',\n                hostname: gridInfo.host,\n                port: 443, //default for mobile grids\n                path: '/appiumcloud/wd/hub',\n                user: gridInfo.user,\n                key: gridInfo.key,\n            };\n        }\n        const otherMobileGrids = [gridTypes.BROWSERSTACK, gridTypes.SAUCELABS] as string[];\n        if (otherMobileGrids.includes(gridInfo.type!)) {\n            return {\n                protocol: gridInfo.protocol || 'https',\n                hostname: gridInfo.host,\n                port: 443, //default for mobile grids\n                path: '/wd/hub',\n                user: gridInfo.user,\n                key: gridInfo.key,\n            };\n        }\n        return undefined;\n    }\n\n    async getDeviceNameFromSessionCaps({ capabilities, gridType, projectId, projectType, companyId, gridId }: GetDeviceNameFromSessionCapsParams): Promise<string | undefined> {\n        if (gridType === gridTypes.TESTIM_HEADSPIN || gridType === gridTypes.TESTIM_TDC) {\n            const selectedDeviceArr = await testimServicesApi.getMobileDevicesFromGrid({\n                projectId,\n                projectType,\n                companyId,\n                gridId,\n                selectors: `device_id:${capabilities.udid}`,\n            });\n            return selectedDeviceArr?.[0]?.name || capabilities.device;\n        }\n        if (gridType === gridTypes.BROWSERSTACK) {\n            return capabilities.mobile?.version.split('-')[0] || capabilities.desired?.deviceName;\n        }\n        if (gridType === gridTypes.SAUCELABS) {\n            return capabilities.testobject_device_name;\n        }\n        if (gridType === gridTypes.P_CLOUDY) {\n            if (capabilities.pCloudy_DeviceFullName) {\n                const pCloudyDevice = capabilities.pCloudy_DeviceFullName.split('_');\n                return `${pCloudyDevice[0]} ${pCloudyDevice[1]}`;\n            }\n            return capabilities.deviceModel;\n        }\n        return capabilities.device;\n    }\n\n    public async updateDeviceOnRemoteTestResult(testRunHandler: TestRunHandler, activeSession: WebdriverIO.Browser, sessionUrl: string, options: RunnerOptions, isInEnhancedDomMode = false) {\n        const { executionId, testId, testResultId } = testRunHandler;\n        const { project: projectId, projectData: { type: projectType } = {}, company: { companyId = '' } = {}, gridData: { gridId = '', type: gridType = '' } = {} } = options;\n        const capabilities = activeSession.capabilities as Capabilities;\n\n        const osType = capabilities.platformName as 'ios' | 'android';\n        let device: PlaybackMobileDevice;\n        if (gridType === gridTypes.TESTIM_TVC) {\n            const { getTvcDeviceInfoFromSessionCaps } = getSessionPlayer();\n            device = getTvcDeviceInfoFromSessionCaps(activeSession.capabilities as TvcCapabilitiesResponse, isInEnhancedDomMode);\n        } else {\n            device = await this.getDeviceFromAppiumCapabilities(capabilities, activeSession, sessionUrl, osType, gridType, projectId, projectType!, companyId, gridId, isInEnhancedDomMode);\n        }\n\n        const remoteResultLink = await this.buildRemoteResultLink(options.gridData!, activeSession.sessionId, capabilities);\n        await testimServicesApi.updateTestStatus(projectId, executionId, testId, testResultId, 'RUNNING', { device, ...(remoteResultLink && { remoteResultLink }) });\n        logger.info('device details updated on testResult', { testResultId, executionId, testId, device, remoteResultLink, gridType });\n        return device;\n    }\n\n    private getOsVersion(capabilities: Capabilities, gridType: string) {\n        const osVersion: string | undefined = capabilities.platformVersion;\n        if (!osVersion && gridType === gridTypes.BROWSERSTACK) {\n            return capabilities.mobile?.version.split('-')[1];\n        }\n\n        return osVersion;\n    }\n\n    private async getScaleFactorAndSize(capabilities: Capabilities, sessionUrl: string, activeSession: WebdriverIO.Browser, osType: string, isInEnhancedDomMode: boolean) {\n        if (capabilities.pixelRatio && typeof capabilities.deviceScreenSize === 'string') {\n            const res = capabilities.deviceScreenSize.split('x');\n            const width = Number(res[0]);\n            const height = Number(res[1]);\n            return { scaleFactor: capabilities.pixelRatio, width, height };\n        }\n        try {\n            const { AppiumApi } = getSessionPlayer();\n            const appiumApi = new AppiumApi(sessionUrl, activeSession.sessionId, null!, isInEnhancedDomMode);\n            const [base64Screenshot, appiumSize] = await Promise.all([appiumApi.getScreenshot(), appiumApi.getDeviceSize()]);\n            const buffer = Buffer.from(base64Screenshot, 'base64');\n            const image = await Jimp.fromBuffer(buffer);\n            const width = image.bitmap.width;\n            const height = image.bitmap.height;\n            return { scaleFactor: width / appiumSize.width, width, height };\n        } catch (err) {\n            logger.warn('failed to get device scale factor from appium, applying default scale factor', { err });\n            return { scaleFactor: osType === 'android' ? 1 : 2 };\n        }\n    }\n\n    public async getDeviceFromAppiumCapabilities(\n        capabilities: Capabilities,\n        activeSession: WebdriverIO.Browser,\n        sessionUrl: string,\n        osType: 'android' | 'ios',\n        gridType: string,\n        projectId: string,\n        projectType: string,\n        companyId: string,\n        gridId: string,\n        isInEnhancedDomMode: boolean,\n    ): Promise<PlaybackMobileDevice> {\n        const [scaleFactorAndSize, deviceName] = await Promise.all([\n            this.getScaleFactorAndSize(capabilities, sessionUrl, activeSession, osType, isInEnhancedDomMode),\n            this.getDeviceNameFromSessionCaps({ capabilities, gridType, projectId, projectType, companyId, gridId }),\n        ]);\n        const osVersion = this.getOsVersion(capabilities, gridType);\n\n        return {\n            name: deviceName ?? '',\n            model: capabilities.deviceModel,\n            udid: capabilities.udid,\n            osVersion,\n            osType,\n            //TODO:  improve this once we support virtual devices on Browserstack and SauceLabs\n            isVirtual: false,\n            ...scaleFactorAndSize,\n        } as PlaybackMobileDevice;\n    }\n\n    private async buildRemoteResultLink(gridInfo: SerializedGrid, sessionId: string, caps: Capabilities | TvcCapabilitiesResponse) {\n        if (gridInfo.type === gridTypes.BROWSERSTACK) {\n            const sessionMetaData: BrowserStackSessionData = await this.fetchWithUserAndPasswordAuth({\n                url: `${config.BROWSERSTACK_MOBILE_API_URL}/sessions/${sessionId}.json`,\n                user: gridInfo.user!,\n                key: gridInfo.key!,\n            });\n            return sessionMetaData.automation_session.public_url;\n        }\n        if (gridInfo.type === gridTypes.SAUCELABS) {\n            // not public, not supported  https://docs.saucelabs.com/test-results/sharing-test-results/#:~:text=This%20solution%20is%20not%20supported%20for%20RDC.\n            return (caps as Capabilities).testobject_test_report_url!;\n        }\n        if (gridInfo.type === gridTypes.TESTIM_TVC) {\n            return caps.replayUrl!;\n        }\n\n        if (gridInfo.type === gridTypes.TESTIM_HEADSPIN || gridInfo.type === gridTypes.TESTIM_TDC) {\n            const baseUrl = gridInfo.type === gridTypes.TESTIM_HEADSPIN ? HEADSPIN_BASE_URL : TDC_BASE_URL;\n            return `${baseUrl}/sessions/${sessionId}/waterfall`;\n        }\n        return '';\n    }\n\n    private async getTmaDeviceDetails(localTmaUrl: string, deviceId: string): Promise<PlaybackMobileDevice> {\n        const tmaDevices = await httpRequest.get<TmaMobileDevice[]>(`${localTmaUrl}/api/devices`);\n        const device = tmaDevices.find((d) => d.udid === deviceId);\n        if (!device) {\n            throw new Error(`device ${deviceId} not found`);\n        }\n        return {\n            udid: device.udid,\n            name: device.name,\n            model: device.model,\n            height: device.height,\n            width: device.width,\n            geo: 'local',\n            osVersion: device.osVersion,\n            osType: device.deviceType.toLowerCase() as 'android' | 'ios',\n            scaleFactor: device.scaleFactor ?? 0,\n            isVirtual: device.virtual ?? false,\n            minApiVersion: device.minApiVersion,\n        };\n    }\n\n    public async updateTmaDeviceDetails(deviceId: string, options: RunnerOptions, testRunHandler: TestRunHandler) {\n        const { executionId, testId, testResultId } = testRunHandler;\n        const { project: projectId, localTmaUrl } = options;\n        const device = await this.getTmaDeviceDetails(localTmaUrl!, deviceId);\n        await testimServicesApi.updateTestStatus(projectId, executionId, testId, testResultId, 'RUNNING', { device });\n        logger.info('device details updated on testResult', { testResultId, executionId, testId, device });\n        return device;\n    }\n\n    gridsAppIdGetter: GridsAppIdGetter = {\n        [gridTypes.TESTIM_TDC]: ({ testRunHandler, mobileApp }) => testRunHandler.getAppPath('testimTdcAppId', mobileApp),\n        [gridTypes.TESTIM_TVC]: ({ testRunHandler, mobileApp }) => testRunHandler.getAppPath('testimTvcAppId', mobileApp),\n        [gridTypes.P_CLOUDY]: ({ testRunHandler, mobileApp }) => testRunHandler.getAppPath('pCloudyAppId', mobileApp),\n        [gridTypes.TESTIM_HEADSPIN]: ({ testRunHandler, mobileApp }) => testRunHandler.getAppPath('headSpinAppId', mobileApp),\n        [gridTypes.BROWSERSTACK]: ({ testRunHandler, mobileApp }) => testRunHandler.getAppPath('browserStackAppId', mobileApp),\n        [gridTypes.SAUCELABS]: ({ testRunHandler, mobileApp, gridHost }) => testRunHandler.getSauceLabsAppPath(gridHost!, mobileApp),\n    };\n\n\n    async getGridAppId({ gridData, testRunHandler, projectId }: GetGridAppIdParams) {\n        const gridType = gridData.type!;\n        const mobileApp = testRunHandler.mobileApp as RawMobileAppVersion;\n\n        const gridAppId = this.gridsAppIdGetter[gridType]({ testRunHandler, mobileApp, gridHost: gridData.host });\n        // TODO:[2024-04-20] remove this if block. This is a temporary fix for the gridAppId structure (auto fix)\n        if (gridAppId) {\n            const allowFixGridAppIDStructure = featureFlagsService.flags.allowFixingAppIdStructure.isEnabled();\n            if (allowFixGridAppIDStructure) {\n                logger.info('fixing gridAppId structure', { gridAppId, projectId, testResultId: testRunHandler.testResultId, executionId: testRunHandler.executionId });\n                await testimServicesApi.fixGridAppIDStructure({ gridAppId, gridId: gridData.gridId!, projectId, gridType, appId: mobileApp.appId, gridHost: gridData.host! });\n            }\n            return gridAppId;\n        }\n        // end of TODO\n        return testRunHandler.getAppPathByGridType(gridType, gridData.gridId!, mobileApp);\n    }\n\n    async getMobileAppDataByAppId({ appId, projectId, token }: { appId: string; projectId: string; token: string }) {\n        const mobileApp = await testimServicesApi.getAppDetails({ appId, projectId });\n        return { appUrl: `${config.SERVICES_HOST()}/storage${mobileApp.filePath}?access_token=${token}`, mobileApp };\n    }\n\n    calculateUploadRequestTimeOut(size: number) {\n        let dynamicTimeout = 0;\n        const fileSizeInKB = Math.ceil(size / 1024);\n        const uploadTimeInMinutes = Math.ceil(fileSizeInKB / (config.MINIMUM_KNOWN_UPLOAD_SPEED_PER_SECONDS * 60));\n        dynamicTimeout = (uploadTimeInMinutes + 1) * 60 * 1000;\n\n        return Math.max(config.APP_UPLOAD_TIMEOUT, dynamicTimeout);\n    }\n\n    async uploadAppToGrid({\n        projectId,\n        testRunHandler,\n        mobileApp,\n        gridId,\n        gridType,\n    }: {\n        projectId: string;\n        testRunHandler: TestRunHandler;\n        mobileApp?: RawMobileAppVersion;\n        gridId: string;\n        gridType: string;\n    }) {\n        const gridDic: { [key: string]: { name: string } } = {\n            [gridTypes.BROWSERSTACK]: { name: 'Browserstack' },\n            [gridTypes.TESTIM_TVC]: { name: 'Mobile Virtual Grid' },\n            [gridTypes.P_CLOUDY]: { name: 'pCloudy' },\n        };\n\n        const gridName = gridDic[gridType].name;\n        if (testRunHandler.isAppFromDevice) {\n            throw new Error(`Application from your device, ${gridName} grid dose not support application from device. Please choose a compatible application for testing.`);\n        }\n        const app = mobileApp || (testRunHandler.mobileApp as RawMobileAppVersion);\n        const spinner = ora(`uploading app to ${gridName} please wait..`).start();\n        try {\n            logger.info(`uploading app to ${gridName} during test run`, { mobileApp, projectId, testResultId: testRunHandler.testResultId, executionId: testRunHandler.executionId });\n            const result = await testimServicesApi.uploadAppToGrid({ projectId, gridId, app, timeout: this.calculateUploadRequestTimeOut(app.fileSize!) });\n            spinner.succeed(`app uploaded successfully to ${gridName}`);\n            return result.gridAppId;\n        } catch (error) {\n            spinner.fail(`failed to upload app to ${gridName}`);\n            logger.error(`failed to upload app to ${gridName}`, { error, mobileApp, projectId, testResultId: testRunHandler.testResultId, executionId: testRunHandler.executionId });\n            throw new Error(`failed to upload app to ${gridName}`);\n        }\n    }\n\n    async verifyAppAlreadyUploaded({ testRunHandler, pendingAppUploads, projectId, gridId, gridType, mobileAppId }: VerifyAppAlreadyUploadedParams) {\n        const appUploadStatus = pendingAppUploads.get(mobileAppId);\n        if (appUploadStatus?.isUploaded) {\n            return appUploadStatus.uploadedAppId;\n        }\n        const appPath = await this.uploadAppToGrid({ projectId, testRunHandler, gridId, gridType });\n        pendingAppUploads.set(mobileAppId, { isUploaded: true, uploadedAppId: appPath });\n        return appPath;\n    }\n\n    async getAppIdFromGridOrTestimPublicLink({ testRunHandler, options, pendingAppUploads }: GetAppInfoParams): Promise<string> {\n        let appPath = '';\n        let overriddenMobileApp;\n        const { executionId, testResultId } = testRunHandler;\n        const { appId = '', project: projectId, authData: { token = '' } = {}, gridData = {} } = options;\n        const { gridId = '', type: gridType = '' } = gridData;\n\n        if (!appId && testRunHandler.isAppFromDevice) {\n            return appPath;\n        }\n\n        if (appId) {\n            logger.info('getting appData by appId', { appId, projectId, testResultId, executionId });\n            const appData = await this.getMobileAppDataByAppId({ appId, projectId, token });\n            appPath = appData.appUrl;\n            overriddenMobileApp = appData.mobileApp;\n            testRunHandler.nativeApp = overriddenMobileApp;\n        } else {\n            logger.info('no appId setting appPath from app associated with the test', { projectId, testResultId, executionId });\n            appPath = testRunHandler.downloadableAppPublicLink || '';\n        }\n\n        const mobileAppId = appId || (testRunHandler.mobileApp as RawMobileAppVersion).appId;\n\n        const gridAppId = await this.getGridAppId({ projectId, gridData, testRunHandler });\n        const isReUploadAppNeeded = gridType === gridTypes.BROWSERSTACK || gridType === gridTypes.TESTIM_TVC || gridType === gridTypes.P_CLOUDY;\n\n        if (gridAppId) {\n            const projectType = options.projectData!.type! as 'ios' | 'android';\n            const isAppExistsOnGrid = await this.verifyAppStillExistsOnGrid({ gridAppId, gridData, projectType });\n\n            if (isAppExistsOnGrid) {\n                logger.info('app exists on grid, using gridAppId', { gridAppId, projectId, testResultId, executionId, mobileAppId });\n                appPath = gridAppId;\n            }\n            if (!isAppExistsOnGrid && isReUploadAppNeeded) {\n                logger.info('app not exists on grid, uploading it', { gridAppId, projectId, testResultId, executionId, mobileAppId });\n                appPath = await this.verifyAppAlreadyUploaded({ testRunHandler, pendingAppUploads, projectId, gridId, gridType, mobileAppId });\n            }\n            if (!isAppExistsOnGrid && !isReUploadAppNeeded) {\n                logger.info('app not exists on grid, using testimStorage url', { projectId, testResultId, executionId });\n            }\n        }\n\n        if (!gridAppId && isReUploadAppNeeded) {\n            appPath = await this.verifyAppAlreadyUploaded({ testRunHandler, pendingAppUploads, projectId, gridId, gridType, mobileAppId });\n        }\n        return appPath;\n    }\n\n    async verifyAppStillExistsOnGrid({ gridAppId, gridData, projectType }: { gridAppId: string; gridData: SerializedGrid; projectType: 'ios' | 'android' }) {\n        const { accessToken, user, host, key, type, apiUrl } = gridData;\n\n\n        if (type === gridTypes.BROWSERSTACK) {\n            const url = `${config.BROWSERSTACK_MOBILE_API_URL}/recent_apps`;\n            const response = await this.fetchWithUserAndPasswordAuth<{ app_url: string }[]>({ url, user: user!, key: key! });\n            if (Array.isArray(response)) {\n                return response.some(app => app.app_url === gridAppId);\n            }\n            return false;\n        }\n\n        if (type === gridTypes.SAUCELABS) {\n            const url = `https://${host?.replace('ondemand', 'api')}/v1/storage/files`;\n            const response = await this.fetchWithUserAndPasswordAuth<{ items: { id: string }[] }>({ url, user: user!, key: key! });\n            return response.items.some(app => app.id === gridAppId);\n        }\n\n        if (type === gridTypes.TESTIM_HEADSPIN || type === gridTypes.TESTIM_TDC) {\n            let url = `${apiUrl}/${config.HEADSPIN_TDC_APPS_API_PATH}/apps`;\n            if (!apiUrl) {\n                const base = type === gridTypes.TESTIM_HEADSPIN ? config.HEADSPIN_MOBILE_API_BASE_URL : config.TDC_MOBILE_API_BASE_URL;\n                url = `${base}/${config.HEADSPIN_TDC_APPS_API_PATH}/apps`;\n            }\n            const response = await this.fetchWithTokenAuth<{ apps: { app_id: string }[] }>({ url, accessToken: accessToken!, authType: 'Bearer' });\n            return response.apps.some((app: { app_id: string }) => app.app_id === gridAppId);\n        }\n\n        if (type === gridTypes.TESTIM_TVC) {\n            const url = `${config.TVC_MOBILE_API_URL}/versions/${gridAppId}/info`;\n            const token = gridData[`${projectType}Token`];\n            try {\n                await this.fetchWithTokenAuth<{ id: string }[]>({ url, accessToken: token!, authType: 'Upload-Token', userAgent: 'Testim-CLI' });\n                return true;\n            } catch (error) {\n                if (error.status !== 404) {\n                    logger.error('error while verifying app exists on TVC', { error });\n                }\n                return false;\n            }\n        }\n\n        if (type === gridTypes.P_CLOUDY) {\n            const pCloudyAuthToken = await this.getPCloudyAuthToken(host!, user!, key!);\n            const url = `https://${host}/api/drive`;\n            const response = await httpRequest.postText({ url, body: { token: pCloudyAuthToken, filter: 'all' }, headers: { contentType: null } });\n            const resJSON = JSON.parse(response);\n            return resJSON.result?.files?.some((app: { file: string }) => app.file === gridAppId);\n        }\n        throw new Error(`grid type ${type} is not supported`);\n    }\n\n    async fetchWithUserAndPasswordAuth<T>({ url, user, key }: { url: string; user: string; key: string }) {\n        const headers = { Authorization: `Basic ${Buffer.from(`${user}:${key}`).toString('base64')}` };\n        return await httpRequest.get<T>(url, undefined, headers);\n    }\n\n    async fetchWithTokenAuth<T>({ url, accessToken, authType, userAgent }: { url: string; accessToken: string; authType: string; userAgent?: string }) {\n        const headers = {\n            Authorization: `${authType} ${accessToken}`,\n            ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        return await httpRequest.get<T>(url, undefined, headers);\n    }\n}\n\nexport const mobileGridService = new MobileGridService();\n", "/* eslint-disable camelcase */\nimport ms from 'ms';\nimport { featureFlagsService } from './featureFlagsService';\nimport { gridTypes } from './constants';\nimport { mobileGridService } from '../services/mobileGridService';\nimport { isEmpty, omit } from 'lodash';\nimport * as utils from '../utils';\nimport { P_CLOUDY_DEFAULT_ANDROID_DEVICE_NAME, P_CLOUDY_DEFAULT_TEST_DURATION } from './config';\nimport { getMobileDevicesFromGrid } from './testimServicesApi';\nimport type { ProjectData, RunnerOptions } from '../runOptions';\nimport type { SerializedGrid } from '../services/gridService';\nimport type { MobileConfig } from 'services/src/commons/mongo/models/testConfig';\nimport type { ProjectType } from 'services/src/commons/mongo/types/DbProject';\nimport type { NativeAppData } from 'src/testRunHandler';\n\nexport interface SessionTags {\n    testName?: string;\n    executionId: string;\n    executionName?: string;\n    testResultId: string;\n    project: string;\n    customTag?: string;\n    testId?: string;\n    branch?: string;\n    pCloudyIndividual?: string;\n}\nexport interface AppiumOptionsParams {\n    projectData?: ProjectData;\n    projectType: ProjectType;\n    gridInfo: any;\n    testRunConfig?: any;\n    nativeAppMetadata: NativeAppData;\n    options: RunnerOptions;\n    appPath: string | null;\n    androidActivityWait: string | null;\n    sessionTags: SessionTags;\n    shouldRunInEnhancedMode?: boolean;\n}\n\ninterface HeadSpinSelector {\n    model?: string;\n    os_version?: string;\n    device_id?: string;\n    manufacturer?: string;\n}\n\ninterface MobileSessionCaps {\n    platformName?: 'iOS' | 'Android';\n    'headspin:sessionTags'?: Array<{ [tag: string]: string }>;\n    'headspin:capture'?: boolean;\n    'headspin:controlLock'?: boolean;\n    'headspin:selector'?: string;\n    'headspin:retryNewSessionFailure'?: boolean; //skip HS-Load-balancer retry\n    'headspin:app.id'?: string;\n    'tdc:sessionTags'?: Array<{ [tag: string]: string }>;\n    'tdc:capture'?: boolean;\n    'tdc:controlLock'?: boolean;\n    'tdc:selector'?: string;\n    'tdc:retryNewSessionFailure'?: boolean; //skip HS-Load-balancer retry\n    'tdc:app.id'?: string;\n    'appium:autoAcceptAlerts'?: boolean; //ios flag\n    'appium:noReset'?: boolean;\n    'appium:autoGrantPermissions'?: boolean; //android flag\n    'appium:automationName'?: 'XCUITest' | 'UiAutomator2';\n    'appium:fullReset'?: boolean;\n    'appium:bundleId'?: string;\n    'appium:app'?: string;\n    'appium:appPackage'?: string;\n    'appium:appActivity'?: string;\n    'appium:udid'?: string;\n}\ninterface ValidateMobileRunCapabilitiesParams {\n    nativeAppMetadata: NativeAppData;\n    appPath: string | null;\n    gridInfo: SerializedGrid;\n}\n\ninterface MobileConfigBuilderParams {\n    osVersion?: string;\n    deviceName?: string;\n    mobileConfig?: MobileConfig;\n    projectType?: string;\n    gridType?: string;\n}\n\ninterface IsAppium2RequiredParams {\n    osVersion: string;\n    projectType: string;\n    isBrowserStack?: boolean;\n    appiumVersion?: string;\n}\n\ninterface AppiumCapsByProjectTypeHeadSpinOrTDC extends Omit<AppiumOptionsParams, 'gridInfo' | 'testRunConfig' | 'sessionTags'> {\n    sessionCaps: any;\n    appiumPrefix?: string;\n}\n\ninterface AppiumCapsByProjectType extends Omit<AppiumCapsByProjectTypeHeadSpinOrTDC, 'options'> {\n    appiumVersion?: string;\n    lunchTimeout?: string;\n    newCommandTimeout?: number;\n    uiautomator2ServerInstallTimeout?: number;\n    uiautomator2ServerLaunchTimeout?: number;\n    pCloudy_Username?: string;\n    pCloudy_ApiKey?: string;\n    pCloudy_Individual?: string;\n    pCloudy_EnableVideo?: boolean;\n    pCloudy_EnablePerformanceData?: boolean;\n    pCloudy_EnableDeviceLogs?: boolean;\n    pCloudy_DurationInMinutes?: number;\n    pCloudy_ApplicationName?: string;\n    pCloudy_DeviceVersion?: string;\n    pCloudy_DeviceManufacturer?: string;\n    pCloudy_DeviceFullName?: string;\n    'appium:pCloudy_Username'?: string;\n    'appium:pCloudy_ApiKey'?: string;\n    'appium:pCloudy_Individual'?: string;\n    'appium:pCloudy_EnableVideo'?: boolean;\n    'appium:pCloudy_EnablePerformanceData'?: boolean;\n    'appium:pCloudy_EnableDeviceLogs'?: boolean;\n    'appium:pCloudy_DurationInMinutes'?: number;\n    'appium:pCloudy_ApplicationName'?: string;\n    'appium:pCloudy_DeviceVersion'?: string;\n    'appium:pCloudy_DeviceManufacturer'?: string;\n    'appium:pCloudy_DeviceFullName'?: string;\n    'appium:appiumVersion'?: string;\n    'appium:lunchTimeout'?: string;\n    'appium:platformVersion'?: string;\n    'appium:newCommandTimeout'?: number;\n    'appium:uiautomator2ServerInstallTimeout'?: number;\n    'appium:uiautomator2ServerLaunchTimeout'?: number;\n}\n\nconst APPIUM_PREFIX = 'appium:';\nconst MOBILE_GRIDS = [gridTypes.BROWSERSTACK, gridTypes.SAUCELABS, gridTypes.TESTIM_HEADSPIN, gridTypes.TESTIM_TDC, gridTypes.TESTIM_TVC, gridTypes.P_CLOUDY] as string[];\n\nfunction validateMobileRunCapabilities({ nativeAppMetadata, appPath, gridInfo }: ValidateMobileRunCapabilitiesParams) {\n    if (!nativeAppMetadata && !appPath) {\n        throw Error('Application not specified. Please provide the required application for execution and try again.');\n    }\n\n    if (!nativeAppMetadata) {\n        throw Error('Application not specified. Please provide the required application for execution and try again.');\n    }\n\n    if (!nativeAppMetadata.id && !nativeAppMetadata.activity && !nativeAppMetadata.packageName) {\n        throw Error('The application appears to be corrupted. Please ensure the application is in a valid state before running the test.');\n    }\n    if (gridInfo.mode !== 'local' && !MOBILE_GRIDS.includes(gridInfo.type!)) {\n        throw Error(`unsupported grid was detected please make sure to select supported mobile grid (${gridInfo.type})`);\n    }\n}\n\nfunction validateDirectConnectionOptions({ deviceUdid, gridInfo, testRunConfig }: { gridInfo: SerializedGrid; testRunConfig: any; deviceUdid?: string }) {\n    const { staticAllocation } = testRunConfig?.mobile || {};\n    if (gridInfo.type !== gridTypes.TESTIM_TDC && gridInfo.type !== gridTypes.TESTIM_HEADSPIN) {\n        throw Error('unsupported grid was detected please make sure to select supported mobile grid for direct connection');\n    }\n    if (!deviceUdid && !staticAllocation?.deviceUdid) {\n        throw Error('missing device udid or test run config is not static');\n    }\n    if (!deviceUdid && staticAllocation?.deviceUdid) {\n        const totalDevices = staticAllocation.deviceUdid.split(',').length;\n        if (totalDevices !== 1) {\n            throw Error('provided static config contains multi devices');\n        }\n    }\n}\n\nfunction buildTagsHeadSpinOrTDC(sessionTags: SessionTags) {\n    const { testName, executionId, testResultId, customTag } = sessionTags;\n    const tags: Array<{ [tag: string]: string }> = [{ executionId }, { testResultId }];\n\n    if (testName) {\n        tags.push({ testName });\n    }\n    if (customTag) {\n        tags.push({ customTag });\n    }\n    return tags;\n}\n\nfunction buildCommonCapsForHeadSpinOrTDC(gridType: string, options: RunnerOptions, sessionTags: SessionTags) {\n    const { fullReset, setNoReset, skipLoadBalancer } = options;\n    const isTDC = gridType === gridTypes.TESTIM_TDC;\n    const isHeadspin = gridType === gridTypes.TESTIM_HEADSPIN;\n    const provider = isTDC ? 'tdc' : 'headspin';\n    const enableBatchHeadSpin = isHeadspin && featureFlagsService.flags.enableBatchHeadSpin.isEnabled();\n    const enableBatchTDC = isTDC && (featureFlagsService.flags.enableBatchTDC.isEnabled() || featureFlagsService.flags.headSpinTdcEnableFlagCapability.isEnabled());\n    const increaseTDCRequestTimeout = featureFlagsService.flags.increaseTDCRequestTimeout.isEnabled();\n    return {\n        [`${provider}:capture.video`]: true,\n        ...(featureFlagsService.flags.tdcHsPreventNetworkCapture.isEnabled() && { [`${provider}:capture.network`]: false }),\n        ...(skipLoadBalancer && { [`${provider}:controlLock`]: true }),\n        [`${provider}:retryNewSessionFailure`]: false,\n        [`${provider}:sessionTags`]: buildTagsHeadSpinOrTDC(sessionTags),\n        [`${provider}:enableBatch`]: enableBatchHeadSpin || enableBatchTDC,\n        ...(!fullReset && { 'appium:noReset': setNoReset }),\n        ...(increaseTDCRequestTimeout && { [`${provider}:newCommandTimeout`]: 600, 'appium:newCommandTimeout': 600 }), // 10 minutes\n    } as MobileSessionCaps;\n}\n\nfunction getApplicationIdentifier(nativeAppMetadata: NativeAppData) {\n    return 'id' in nativeAppMetadata ? nativeAppMetadata.id : nativeAppMetadata.packageName;\n}\n\nfunction getGridAppCapability(appIdOnGrid: string, gridType: string) {\n    const provider = gridType === gridTypes.TESTIM_TDC ? 'tdc' : 'headspin';\n    const appCapKey = `${provider}:app.id` as const;\n    return { [appCapKey]: appIdOnGrid };\n}\n\nfunction mergeCapsByProjectTypeHeadSpinOrTDC({\n    projectType,\n    sessionCaps,\n    options,\n    nativeAppMetadata,\n    appPath,\n    androidActivityWait,\n}: AppiumCapsByProjectTypeHeadSpinOrTDC) {\n    const { fullReset, setNoReset } = options;\n    let appCap: { [key in 'appium:app' | 'tdc:app.id' | 'headspin:app.id']?: string | null } = { 'appium:app': appPath };\n\n    const isAppPathUrl = appPath?.startsWith('http');\n    const isAppPathHoldsAppIdOnGrid = appPath && !isAppPathUrl;\n    if (isAppPathHoldsAppIdOnGrid) {\n        appCap = getGridAppCapability(appPath, options.gridData!.type!);\n    }\n\n    const setFullResetForIos = () => {\n        if (fullReset === undefined && appPath) {\n            return true;\n        }\n        if (typeof fullReset === 'string') {\n            return fullReset !== 'false';\n        }\n        return fullReset;\n    };\n\n    switch (projectType) {\n        case 'ios':\n            return {\n                ...sessionCaps,\n                platformName: 'iOS',\n                'appium:autoAcceptAlerts': true,\n                'appium:automationName': 'XCUITest',\n                'appium:fullReset': setFullResetForIos(),\n                ...(nativeAppMetadata && { 'appium:bundleId': getApplicationIdentifier(nativeAppMetadata) }),\n                ...(appPath && appCap),\n            };\n        case 'android':\n            return {\n                ...sessionCaps,\n                platformName: 'Android',\n                'appium:fullReset': !!fullReset,\n                'appium:autoGrantPermissions': !setNoReset, //noReset need to be false in order to set autoGrantPermissions to true, otherwise it will be ignored\n                'appium:automationName': 'UiAutomator2',\n                ...(androidActivityWait && { 'appium:appWaitActivity': `${androidActivityWait}, *` }),\n                ...(nativeAppMetadata && {\n                    'appium:appPackage': getApplicationIdentifier(nativeAppMetadata),\n                    'appium:appActivity': nativeAppMetadata.activity ?? '.*',\n                }),\n                ...(appPath && appCap),\n            };\n        default:\n            throw Error(`unsupported mobile project ${projectType}`);\n    }\n}\n\nfunction mergeAppiumCapsByProjectType({ projectType, sessionCaps, nativeAppMetadata, appPath, androidActivityWait, appiumPrefix = '', shouldRunInEnhancedMode }: AppiumCapsByProjectType) {\n    switch (projectType) {\n        case 'ios':\n            return {\n                platformName: 'iOS',\n                [`${appiumPrefix}autoAcceptAlerts`]: true,\n                [`${appiumPrefix}automationName`]: shouldRunInEnhancedMode ? 'WaldoTestim' : 'XCUITest',\n                [`${appiumPrefix}fullReset`]: true,\n                ...(nativeAppMetadata && { [`${appiumPrefix}bundleId`]: getApplicationIdentifier(nativeAppMetadata) }),\n                ...(appPath && { [`${appiumPrefix}app`]: appPath }),\n                // override the default values\n                ...sessionCaps,\n            };\n        case 'android':\n            return {\n                platformName: 'Android',\n                [`${appiumPrefix}autoGrantPermissions`]: true,\n                [`${appiumPrefix}automationName`]: shouldRunInEnhancedMode ? 'WaldoTestim' : 'UiAutomator2',\n                ...(androidActivityWait && { [`${appiumPrefix}appWaitActivity`]: `${androidActivityWait}, *` }),\n                ...(nativeAppMetadata && {\n                    [`${appiumPrefix}appPackage`]: getApplicationIdentifier(nativeAppMetadata),\n                    [`${appiumPrefix}appActivity`]: nativeAppMetadata.activity ?? '.*',\n                }),\n                ...(appPath && { [`${appiumPrefix}app`]: appPath }),\n                ...sessionCaps,\n            };\n        default:\n            throw Error(`unsupported mobile project ${projectType}`);\n    }\n}\n\nfunction buildHeadspinOrTdcCaps({\n    projectType,\n    nativeAppMetadata,\n    appPath,\n    androidActivityWait,\n    sessionTags,\n    options,\n    gridInfo,\n    shouldRunInEnhancedMode,\n}: Omit<AppiumOptionsParams, 'testRunConfig'>): MobileSessionCaps {\n    const sessionCaps = buildCommonCapsForHeadSpinOrTDC(gridInfo.type, options, sessionTags);\n    return mergeCapsByProjectTypeHeadSpinOrTDC({ projectType, sessionCaps, options, nativeAppMetadata, appPath, androidActivityWait, shouldRunInEnhancedMode });\n}\n\nfunction getOsVersion({ osVersion, mobileConfig }: MobileConfigBuilderParams) {\n    const { staticAllocation, dynamicAllocation } = mobileConfig!;\n    if (osVersion) {\n        return osVersion;\n    }\n    if (staticAllocation?.osVersion) {\n        return staticAllocation?.osVersion;\n    }\n    if (dynamicAllocation?.osVersionRegex) {\n        return dynamicAllocation?.osVersionRegex;\n    }\n    return '.*';\n}\n\nfunction getDeviceName({ deviceName, mobileConfig, projectType, gridType }: MobileConfigBuilderParams) {\n    const { staticAllocation, dynamicAllocation } = mobileConfig!;\n    const isPcloudy = gridType === gridTypes.P_CLOUDY;\n    if (deviceName) {\n        return deviceName;\n    }\n    if (staticAllocation?.deviceName) {\n        if (isPcloudy) {\n            return staticAllocation.deviceUdid;\n        }\n        return staticAllocation.deviceName;\n    }\n    if (dynamicAllocation?.deviceNameRegex) {\n        if (projectType === 'android' && dynamicAllocation.deviceNameRegex === '.*' && isPcloudy) {\n            return P_CLOUDY_DEFAULT_ANDROID_DEVICE_NAME;\n        }\n        return dynamicAllocation.deviceNameRegex;\n    }\n    //  Browser Stack not accepting .* for iOS devices. This is their way of distinguishing between iPhones and iPads.\n    if (projectType === 'ios' && gridType === gridTypes.BROWSERSTACK) {\n        return 'iPhone.*';\n    }\n    // pcoudy don't accept regex\n    if (isPcloudy) {\n        return projectType === 'ios' ? 'apple' : P_CLOUDY_DEFAULT_ANDROID_DEVICE_NAME;\n    }\n    return '.*';\n}\n\nfunction getTestimVirtualCloudToken(gridInfo: SerializedGrid, projectType: string) {\n    const { androidToken, iosToken } = gridInfo;\n    const isIosProject = projectType === 'ios';\n\n    if (!androidToken && !iosToken) {\n        throw Error('missing access token for testim virtual cloud');\n    }\n\n    if (isIosProject && !iosToken) {\n        throw Error('missing ios token for testim virtual cloud');\n    }\n\n    if (!isIosProject && !androidToken) {\n        throw Error('missing android token for testim virtual cloud');\n    }\n\n    return isIosProject ? iosToken : androidToken;\n}\n\nfunction pCloudyAppium2Format(caps: Partial<AppiumCapsByProjectType>) {\n    const newCaps = addPrefixToCaps(caps, APPIUM_PREFIX);\n    return {\n        'appium:appiumVersion': '2.0.0',\n        // not applied but need to be included with the caps\n        'appium:platformVersion': '10',\n        ...newCaps,\n    };\n}\n\nfunction extractCapsFromJson(caps: any, predicate: (key: string) => boolean, replaceString?: string) {\n    if (!caps) {\n        return {};\n    }\n    return Object.entries(caps).reduce<any>((acc, [key, value]) => {\n        if (predicate(key)) {\n            if (!replaceString) {\n                acc[key] = value;\n                return acc;\n            }\n            const newKey = key.replace(replaceString, '');\n            acc[newKey] = value;\n        }\n        return acc;\n    }, {});\n}\n\nfunction extractBrowserStackOptionsFromJson(caps: any) {\n    return extractCapsFromJson(caps, key => key.startsWith('browserstack.'), 'browserstack.');\n}\n\nfunction extractAppiumCapsFromBrowserStackJson(caps: any) {\n    return extractCapsFromJson(caps, key => !key.startsWith('browserstack.'));\n}\n\nfunction setAppiumVersion(appiumVersion?: string) {\n    if (!appiumVersion || !isAppium2(appiumVersion)) {\n        return '2.0.0';\n    }\n    return appiumVersion;\n}\n\nfunction isAppium2(platformVersion: string) {\n    // https://docs.saucelabs.com/mobile-apps/automated-testing/appium/appium-versions/#real-devices\n    // browserstack follow regular appium versioning\n    return platformVersion.split('.')[0] === '2' || platformVersion.includes('appium2') || platformVersion === 'latest';\n}\n\nfunction isAppium2Required({ osVersion, projectType, appiumVersion, isBrowserStack = false }: IsAppium2RequiredParams) {\n    const android14andAbovePattern = /^(1[4-9](\\.\\d+){0,2})$|^\\^\\(\\?=1[4-9]((\\.\\d+){0,2})\\.\\*\\)\\.\\*$/;\n    const androidTenPattern = /^(10(\\.\\d+){0,2})$|^\\^\\(\\?=10((\\.\\d+){0,2})\\.\\*\\)\\.\\*$/;\n    const ios17andAbovePattern = /^(1[7-9](\\.\\d+){0,2})$|^\\^\\(\\?=1[7-9]((\\.\\d+){0,2})\\.\\*\\)\\.\\*$/;\n    const isBrowserStackRunOnAndroidTen = isBrowserStack && androidTenPattern.test(osVersion);\n    const isAppium2RequiredForAndroid = projectType === 'android' && (android14andAbovePattern.test(osVersion) || isBrowserStackRunOnAndroidTen);\n    const isAppium2RequiredForIOS = projectType === 'ios' && ios17andAbovePattern.test(osVersion);\n    const appium2Required = isAppium2RequiredForAndroid || isAppium2RequiredForIOS;\n\n    if (appiumVersion) {\n        const isAppium2Requested = isAppium2(appiumVersion);\n        if (!isAppium2Requested && appium2Required) {\n            // eslint-disable-next-line no-console\n            console.warn(`Appium 2 is required for version: ${osVersion}, forcing appium 2 for current session.`);\n            return true;\n        }\n        return isAppium2Requested;\n    }\n    return appium2Required;\n}\n\nfunction addPrefixToCaps(caps: any, prefix: string) {\n    const newCaps = {} as any;\n    Object.entries(caps).forEach(([key, value]) => {\n        const newKey = `${prefix}${key}`;\n        newCaps[newKey] = value;\n    });\n    return newCaps;\n}\n\nasync function buildTvcCaps({ projectType, nativeAppMetadata, appPath, androidActivityWait, options, gridInfo, sessionTags, testRunConfig, shouldRunInEnhancedMode }: AppiumOptionsParams) {\n    const { osVersion, deviceName } = options;\n    const mobileConfig = testRunConfig?.mobile || {};\n    const { type: gridType } = gridInfo;\n    const token = getTestimVirtualCloudToken(gridInfo, projectType);\n\n    const gridDevices = await getMobileDevicesFromGrid({\n        gridId: gridInfo.gridId,\n        projectType,\n        projectId: options.project,\n        companyId: options.company!.companyId,\n    });\n\n    const matchingDeviceFromGrid = gridDevices?.find(({ udid }) => mobileConfig.staticAllocation?.deviceUdid === udid);\n\n    // The VMG capabilities object does not support Dynamic allocation.\n    // Proposal by Ed to remove Dynamic allocation was made on https://tricentis.atlassian.net/browse/TES-23313?focusedCommentId=882834\n    const osVersionCap = matchingDeviceFromGrid?.osVersion ?? getOsVersion({ osVersion, mobileConfig });\n    const deviceNameCap = matchingDeviceFromGrid?.name ?? getDeviceName({ deviceName, mobileConfig, projectType, gridType });\n    const testResultUrl = utils.getTestUrl(options.editorUrl!, options.project, sessionTags.testId!, sessionTags.testResultId, sessionTags.branch);\n\n    const commonCapabilities = {\n        device: deviceNameCap,\n        os_version: osVersionCap,\n        'waldo:displayName': `${sessionTags.testName}-${sessionTags.executionId}-${sessionTags.testResultId}`,\n        'waldo:externalUrl': testResultUrl,\n        ...(shouldRunInEnhancedMode && { 'waldo:automationName': 'WaldoTestim' }),\n        'waldo:options': {\n            token,\n        },\n    };\n    return mergeAppiumCapsByProjectType({ projectType, sessionCaps: commonCapabilities, nativeAppMetadata, appPath, androidActivityWait, shouldRunInEnhancedMode });\n}\n\nfunction buildPCloudyCaps({ projectType, nativeAppMetadata, appPath, androidActivityWait, options, gridInfo, sessionTags, testRunConfig }: AppiumOptionsParams) {\n    const { osVersion, deviceName } = options;\n    const mobileConfig = testRunConfig?.mobile || {};\n    const { user, key, type: gridType } = gridInfo;\n    const isAppium2Enabled = featureFlagsService.flags.enableAppium2pCloudy.isEnabled();\n    const osVersionCap = getOsVersion({ osVersion, mobileConfig });\n    const deviceNameCap = getDeviceName({ deviceName, mobileConfig, projectType, gridType });\n\n    const isGenericDeviceName = /^[a-zA-Z]+$/.test(deviceNameCap);\n\n    const deviceSelectorCap = {\n        ...(osVersionCap !== '.*' && { pCloudy_DeviceVersion: osVersionCap }),\n        ...(isGenericDeviceName && { pCloudy_DeviceManufacturer: deviceNameCap }),\n        ...(!isGenericDeviceName && { pCloudy_DeviceFullName: deviceNameCap }),\n    };\n\n    let sessionCaps: Partial<AppiumCapsByProjectType> = {\n        pCloudy_Username: user,\n        pCloudy_ApiKey: key,\n        pCloudy_Individual: sessionTags.pCloudyIndividual,\n        pCloudy_EnableVideo: true,\n        pCloudy_EnablePerformanceData: true,\n        pCloudy_EnableDeviceLogs: true,\n        ...deviceSelectorCap,\n        // mandatory field for pCloudy\n        pCloudy_DurationInMinutes: options.duration ? Number(options.duration) : Number(P_CLOUDY_DEFAULT_TEST_DURATION),\n        pCloudy_ApplicationName: appPath!,\n        appiumVersion: '1.21.0',\n        newCommandTimeout: 600,\n        lunchTimeout: '90000',\n        uiautomator2ServerInstallTimeout: 150000,\n        uiautomator2ServerLaunchTimeout: 200000,\n    };\n\n    if (isAppium2Enabled) {\n        sessionCaps = pCloudyAppium2Format(sessionCaps);\n    }\n\n    //don't send appium app capability for pCloudy\n    appPath = '';\n    return mergeAppiumCapsByProjectType({ projectType, sessionCaps, nativeAppMetadata, appPath, androidActivityWait, ...(isAppium2Enabled && { appiumPrefix: APPIUM_PREFIX }) });\n}\n\nfunction buildSauceLabCaps({ projectType, nativeAppMetadata, appPath, androidActivityWait, options, gridInfo, sessionTags, testRunConfig }: AppiumOptionsParams) {\n    const { osVersion, deviceName } = options;\n    const mobileConfig = testRunConfig?.mobile || {};\n    const { type: gridType } = gridInfo;\n    const osVersionCap = getOsVersion({ osVersion, mobileConfig });\n    const deviceNameCap = getDeviceName({ deviceName, mobileConfig, projectType, gridType });\n\n    const jsonAppiumCaps = omit({ ...options.saucelabs }, ['automationName', 'platformName']);\n    const jsonOptions = { ...jsonAppiumCaps['sauce:options'] };\n    delete jsonAppiumCaps['sauce:options'];\n\n    if (isAppium2Required({ osVersion: jsonAppiumCaps.platformVersion || osVersionCap, projectType, appiumVersion: jsonOptions.appiumVersion })) {\n        const commonOptions = {\n            debug: true,\n            networkLogs: true,\n        };\n        const slOptions = {\n            user: gridInfo.user,\n            key: gridInfo.key,\n            name: sessionTags.testResultId,\n            build: sessionTags.executionId,\n            appiumVersion: setAppiumVersion(jsonOptions.appiumVersion),\n            deviceName: deviceNameCap,\n            tags: Object.values(sessionTags),\n        };\n        const sessionCaps = {\n            'appium:platformVersion': osVersionCap,\n            'appium:deviceName': deviceNameCap,\n            ...addPrefixToCaps(jsonAppiumCaps, APPIUM_PREFIX),\n            'sauce:options': {\n                ...commonOptions,\n                ...slOptions,\n                ...omit(jsonOptions, 'appiumVersion'),\n            },\n        };\n        return mergeAppiumCapsByProjectType({ projectType, sessionCaps, appiumPrefix: APPIUM_PREFIX, nativeAppMetadata, appPath, androidActivityWait });\n    }\n    const commonCapabilities = {\n        'saucelabs.user': gridInfo.user,\n        'saucelabs.key': gridInfo.key,\n        platformVersion: osVersionCap,\n        deviceName: deviceNameCap,\n        tags: Object.values(sessionTags),\n        name: sessionTags.testResultId,\n        build: sessionTags.executionId,\n        ...jsonAppiumCaps,\n        ...jsonOptions,\n    };\n    return mergeAppiumCapsByProjectType({ projectType, sessionCaps: commonCapabilities, nativeAppMetadata, appPath, androidActivityWait });\n}\n\nfunction buildBrowserStackCaps({ projectData, projectType, nativeAppMetadata, appPath, androidActivityWait, options, gridInfo, sessionTags, testRunConfig }: AppiumOptionsParams) {\n    const { osVersion, deviceName } = options;\n    const mobileConfig = testRunConfig?.mobile || {};\n    const { type: gridType } = gridInfo;\n    const osVersionCap = getOsVersion({ osVersion, mobileConfig });\n    const deviceNameCap = getDeviceName({ deviceName, mobileConfig, projectType, gridType });\n    const jsonOptions = extractBrowserStackOptionsFromJson(options.browserstack);\n    const jsonAppiumCaps = omit(extractAppiumCapsFromBrowserStackJson(options.browserstack), ['automationName', 'platformName', 'project', 'build', 'name']);\n\n    const baseOptions = {\n        buildName: `${sessionTags.executionName} - ${sessionTags.executionId}`,\n        projectName: `${projectData!.name} - ${projectData!.projectId}`,\n        sessionName: `${sessionTags.testName} - ${sessionTags.testId}`,\n    };\n\n    const shouldForceAppium2 = featureFlagsService.flags.enableAppium2BrowserStack.isEnabled();\n    if (shouldForceAppium2 || isAppium2Required({ osVersion: jsonAppiumCaps.platformVersion || osVersionCap, projectType, isBrowserStack: true, appiumVersion: jsonOptions.appiumVersion })) {\n        const browserstackOptions = {\n            ...baseOptions,\n            userName: gridInfo.user,\n            accessKey: gridInfo.key,\n            appiumVersion: shouldForceAppium2 ? '2.0.1' : setAppiumVersion(jsonOptions.appiumVersion),\n            debug: true,\n            networkLogs: true,\n        };\n\n        const sessionCaps = {\n            'appium:platformVersion': osVersionCap,\n            'appium:deviceName': deviceNameCap,\n            ...addPrefixToCaps(jsonAppiumCaps, APPIUM_PREFIX),\n            'bstack:options': {\n                ...browserstackOptions,\n                ...omit(jsonOptions, 'appiumVersion'),\n            },\n        };\n\n        return mergeAppiumCapsByProjectType({ projectType, sessionCaps, appiumPrefix: APPIUM_PREFIX, nativeAppMetadata, appPath, androidActivityWait });\n    }\n\n    const commonCapabilities = {\n        ...baseOptions,\n        // required because we force clients to follow W3C format for appium capabilities.\n        os_version: jsonAppiumCaps.platformVersion || osVersionCap,\n        device: jsonAppiumCaps.deviceName || deviceNameCap,\n        realDevice: true,\n        buildTags: Object.values(sessionTags).join(','),\n        'browserstack.user': gridInfo.user,\n        'browserstack.key': gridInfo.key,\n        'browserstack.debug': true,\n        'browserstack.networkLogs': true,\n        ...jsonAppiumCaps,\n        ...addPrefixToCaps(jsonOptions, 'browserstack.'),\n    };\n    return mergeAppiumCapsByProjectType({ projectType, sessionCaps: commonCapabilities, nativeAppMetadata, appPath, androidActivityWait });\n}\n\nasync function buildAppiumSessionCapabilities(appiumOptions: AppiumOptionsParams) {\n    if (gridTypes.TESTIM_TDC === appiumOptions.gridInfo.type || gridTypes.TESTIM_HEADSPIN === appiumOptions.gridInfo.type) {\n        return buildHeadspinOrTdcCaps(appiumOptions);\n    }\n    if (gridTypes.TESTIM_TVC === appiumOptions.gridInfo.type) {\n        return await buildTvcCaps(appiumOptions);\n    }\n    if (gridTypes.P_CLOUDY === appiumOptions.gridInfo.type) {\n        return buildPCloudyCaps(appiumOptions);\n    }\n    if (gridTypes.SAUCELABS === appiumOptions.gridInfo.type) {\n        return buildSauceLabCaps(appiumOptions);\n    }\n    if (gridTypes.BROWSERSTACK === appiumOptions.gridInfo.type) {\n        return buildBrowserStackCaps(appiumOptions);\n    }\n    throw new Error(`unsupported grid type ${appiumOptions.gridInfo.type}`);\n}\n\nfunction generateHSorTDCgridSelectors(options: RunnerOptions, mobileConfig?: MobileConfig) {\n    const { staticAllocation, dynamicAllocation, type } = mobileConfig || {};\n    const { deviceName, osVersion, deviceUdid } = options;\n    const headspinSelector = {} as HeadSpinSelector;\n\n    if (type === 'dynamic') {\n        if (!deviceName && dynamicAllocation?.selector?.manufacturer) {\n            headspinSelector.manufacturer = dynamicAllocation.selector.manufacturer;\n        }\n        if (!osVersion && dynamicAllocation?.selector?.osVersion) {\n            headspinSelector.os_version = dynamicAllocation.selector.osVersion;\n        }\n    }\n    if (type === 'static' && !deviceUdid && staticAllocation?.deviceUdid) {\n        headspinSelector.device_id = staticAllocation.deviceUdid;\n    }\n\n    if (deviceName) {\n        headspinSelector.manufacturer = deviceName;\n    }\n    if (osVersion) {\n        headspinSelector.os_version = osVersion;\n    }\n\n    if (deviceUdid) {\n        headspinSelector.device_id = deviceUdid;\n        delete headspinSelector.os_version;\n        delete headspinSelector.manufacturer;\n    }\n    return headspinSelector;\n}\n\nexport async function buildAppiumLoadBalancerOptions(appiumOptions: AppiumOptionsParams) {\n    const { gridInfo, nativeAppMetadata, options, appPath, testRunConfig } = appiumOptions;\n    const { selectedGrid } = testRunConfig?.mobile || {};\n    if (testRunConfig?.mobile && selectedGrid?.type !== gridInfo.type) {\n        throw Error(`selected grid type ${selectedGrid.type} is not equal to grid type ${gridInfo.type}`);\n    }\n    validateMobileRunCapabilities({ nativeAppMetadata, appPath, gridInfo });\n\n    const connection = mobileGridService.getGridConnection(gridInfo);\n    const sessionCaps = await buildAppiumSessionCapabilities(appiumOptions);\n\n    //only for headspin/tdc grid\n    if (gridInfo.type === gridTypes.TESTIM_HEADSPIN || gridInfo.type === gridTypes.TESTIM_TDC) {\n        const provider = gridInfo.type === gridTypes.TESTIM_HEADSPIN ? 'headspin' : 'tdc';\n        const headspinSelector = generateHSorTDCgridSelectors(options, testRunConfig?.mobile);\n        if (!isEmpty(headspinSelector)) {\n            const selector = Object.entries(headspinSelector)\n                .map(([key, value]) =>\n                    value\n                        .split(',')\n                        .map((val: string) => (val === '.*' || val === '=' ? '' : `${key}:${val}`))\n                        .join(','),\n                )\n                .join(' ')\n                .trim();\n            sessionCaps[`${provider}:selector` as keyof typeof sessionCaps] = selector;\n        }\n    }\n    const capabilities = gridInfo.type === gridTypes.TESTIM_TVC ? { alwaysMatch: sessionCaps } : sessionCaps;\n\n    const increaseTDCRequestTimeout = featureFlagsService.flags.increaseTDCRequestTimeout.isEnabled();\n    const DISABLE_RETRIES = 0;\n    const DEFAULT_REQUEST_TIMEOUT = ms('2m');\n    const TWELVE_MINUTES = ms('12m');\n    const connectionRetryCount = utils.sanitizeNumberValue(featureFlagsService.flags.appiumConnectionRetryCount.getValue(), DISABLE_RETRIES);\n    let connectionRetryTimeout = utils.sanitizeNumberValue(featureFlagsService.flags.appiumConnectionRequestTimeout.getValue(), DEFAULT_REQUEST_TIMEOUT);\n    if (increaseTDCRequestTimeout && connectionRetryTimeout < TWELVE_MINUTES) {\n        connectionRetryTimeout = TWELVE_MINUTES;\n    }\n\n    return {\n        ...connection,\n        desiredCapabilities: sessionCaps,\n        connectionRetryTimeout,\n        capabilities,\n        connectionRetryCount,\n        logLevel: options.appiumLogLevel,\n    };\n}\n\nexport async function buildAppiumDirectConnectionOptions(appiumOptions: AppiumOptionsParams) {\n    const {\n        projectType, gridInfo, nativeAppMetadata, options, appPath, androidActivityWait, sessionTags, testRunConfig,\n    } = appiumOptions;\n    const { deviceUdid } = options;\n    validateMobileRunCapabilities({ nativeAppMetadata, appPath, gridInfo });\n    validateDirectConnectionOptions({ deviceUdid, gridInfo, testRunConfig });\n    //cli flag overrides given config\n    const deviceId = deviceUdid || testRunConfig.mobile?.staticAllocation?.deviceUdid;\n    const connection = await mobileGridService.getGridDirectConnection(gridInfo, deviceId);\n    const params = {\n        projectType,\n        nativeAppMetadata,\n        appPath,\n        androidActivityWait,\n        options,\n        sessionTags,\n        testRunConfig,\n        gridInfo,\n    };\n    const sessionCaps = buildHeadspinOrTdcCaps(params);\n\n    if (deviceId) {\n        sessionCaps['appium:udid'] = deviceId;\n    }\n\n    return {\n        ...connection,\n        desiredCapabilities: sessionCaps,\n        capabilities: sessionCaps,\n        connectionRetryCount: 0,\n        logLevel: options.appiumLogLevel,\n    };\n}\n\nexport function buildAppiumLocalTmaCapabilities(appiumOptions: AppiumOptionsParams) {\n    const { projectType, nativeAppMetadata, appPath, androidActivityWait } = appiumOptions;\n    const sessionCaps = {\n        // Set to true to keep the app's process alive during testing (appium inspector)\n        dontStopAppOnReset: true,\n        // prevent app from being uninstalled on session start for ios runs\n        fullReset: false,\n    };\n\n    const mergedCaps = mergeAppiumCapsByProjectType({ projectType, sessionCaps, nativeAppMetadata, appPath, androidActivityWait });\n\n    if (projectType === 'ios') {\n        // iOS cause the app to be installed on the device, so we need to delete the app before creating the session\n        delete mergedCaps.app;\n    }\n    return mergedCaps;\n}\n\nexport function removeAccessDataFromCapabilities(capabilities: any) {\n    const caps = { ...capabilities };\n    delete caps.path;\n    delete caps.user;\n    delete caps.key;\n    delete caps.desiredCapabilities;\n    delete caps.capabilities['saucelabs.user'];\n    delete caps.capabilities['saucelabs.key'];\n    delete caps.capabilities['browserstack.user'];\n    delete caps.capabilities['browserstack.key'];\n    delete caps.capabilities['sauce:options']?.user;\n    delete caps.capabilities['sauce:options']?.key;\n    delete caps.capabilities.key;\n    delete caps.capabilities.user;\n    return caps;\n}\n", "import type { ITabService, ITabUtils, TabInfo } from 'clickim/src/background/session/ITabService';\n\n/** This is just a mock class hopefully we can remove after we set up types and backwards-compatibility in clickim */\nexport class TabServiceMock implements ITabService {\n    public sessionTabs = {};\n\n    on() { /* noop */ }\n\n    tabCount() {\n        return undefined;\n    }\n\n    getAllOpenTabIds() {\n        return [];\n    }\n\n    isSessionTab() {\n        return false;\n    }\n\n    getAllTabInfos() {\n        return {};\n    }\n\n    async addNewTab() { /* noop */ }\n    addOpenerStepId() { /* noop - probably safe to remove */ }\n    addOpenerStep() { /* noop */ }\n\n    getTabUtilsByTabIdAndSessionId() {\n        return undefined;\n    }\n\n    getTabUtilsByTabId() {\n        return {} as ITabUtils;\n    }\n\n    getTabInfo() {\n        return {} as TabInfo;\n    }\n\n    getTabUtils() {\n        return {} as ITabUtils;\n    }\n\n    getMainTabInfo() { /* noop - probably safe to remove */ }\n\n    getMainTabUtils() {\n        return {} as ITabUtils;\n    }\n\n    getMainTabId() {\n        return null;\n    }\n\n    async isMainTabExists() {\n        return false;\n    }\n\n    clearAllTabs() { /* noop */ }\n\n    async switchTab() { /* noop */ }\n\n    async getTabDetails() { /* noop */ }\n\n    async isMainTabIncognito() {\n        return false;\n    }\n\n    async getTabIdByTabInfo() {\n        return NaN;\n    }\n}\n", "import { getLinksFromUnescapeHTML, unescapeHTML } from '../../utils';\nimport type { WebDriver } from '../webdriver';\nimport type { TestimServicesApi } from 'clickim/src/common/TestimServicesApi';\nimport type { IStepActionUtils } from 'clickim/src/background/stepActions/stepActionUtils';\n\n/**\n * Dummy class to match weird interface with web\n * Most of this is not used\n * */\nexport class MobileStepActionUtils implements IStepActionUtils {\n    // @ts-expect-error value is set in the sessionPlayer's constructor\n    public readonly testimServicesApi: TestimServicesApi;\n    private readonly _abortedSteps: any[] = [];\n\n    constructor(public readonly driver: WebDriver) {}\n\n    resetAbort() {\n        this._abortedSteps.length = 0;\n    }\n\n    abort(result: any) {\n        this._abortedSteps.push(result);\n    }\n\n    get abortedSteps() {\n        return this._abortedSteps;\n    }\n\n    async executeInAut(context: any, code: string) {\n        throw new Error('not implemented (mobile)');\n    }\n\n    extractTargetText(target: never): Promise<any> {\n        throw new Error('not implemented (mobile)');\n    }\n\n    getCookie(name: string): any {\n        throw new Error('not implemented (mobile)');\n    }\n\n    setCookie(cookieObject: never): any {\n        throw new Error('not implemented (mobile)');\n    }\n\n    async getNextDynamicParent(frameHandler: never, dynamicParentOptions: never): Promise<never> {\n        throw new Error('not implemented (mobile)');\n    }\n\n    public unescapeHTML = unescapeHTML;\n\n    public getLinksFromUnescapeHTML = getLinksFromUnescapeHTML;\n}\n", "import { getLogger } from '../../commons/logger';\nimport type { FrameHandler } from 'clickim/src/locators/dynamicParentUtils';\nimport type { FrameLocatorInstance } from 'clickim/src/background/frameLocator';\n\nconst logger = getLogger('mobile-frame-locator-mock');\n\n/** This is just a mock class hopefully we can remove after we set up types and backwards-compatibility in clickim */\nexport class FrameLocatorMock implements FrameLocatorInstance {\n    foundFrameCallback() {\n        logger.info('foundFrameCallback-mock invoked');\n        return {};\n    }\n\n\n    locate() {\n        logger.info('locate-mock invoked');\n        return {};\n    }\n\n    async findFrame() {\n        logger.info('findFrame-mock invoked');\n        return {} as FrameHandler;\n    }\n}\n", "import * as webdriverio from 'webdriverio';\nimport { makeSDK } from '@applitools/eyes-sdk-core';\nimport { TabServiceMock } from './services/tabServiceMock';\nimport { portSelectorMock } from './services/portSelector';\nimport { getLogger } from '../commons/logger';\nimport { MobileStepActionUtils } from './utils/mobileStepActionUtils';\nimport { isDebuggerConnected } from '../commons/detectDebugger';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { stepActionRegistrar } from './stepActions/stepActionRegistrar';\nimport { FrameLocatorMock } from './services/mobileFrameLocatorMock';\nimport { PlaybackTimeoutCalculator } from './services/playbackTimeoutCalculator';\nimport type { StepActionFactory } from 'clickim/src/background/stepActions/stepActionFactory';\nimport type { SessionPlayer } from 'clickim/src/background/session/sessionPlayer';\n\nconst logger = getLogger('appium-test-player');\n\ntype WebdriverIO = typeof webdriverio;\nexport class AppiumTestPlayer {\n    public readonly sessionPlayer: SessionPlayer;\n    private readonly stepActionFactory: StepActionFactory;\n    private readonly playbackTimeoutCalculator: PlaybackTimeoutCalculator;\n\n    constructor(\n        public readonly id: number,\n        userParamsData: object,\n        shouldMonitorPerformance: boolean | undefined,\n        public readonly driver: WebdriverIO = webdriverio,\n        testRetryCount: number | undefined = undefined,\n        previousTestResultId: string | undefined = undefined,\n    ) {\n        const { SessionPlayer, commonConstants, StepActionFactory, MobileLocateElementPlayer } = getSessionPlayer();\n\n        // @ts-expect-error TODO: We are using webdriverio directly, which can cause bad errors in here\n        const stepActionUtils = new MobileStepActionUtils(this.driver);\n        this.stepActionFactory = new StepActionFactory(stepActionUtils);\n        // @ts-expect-error TODO: We are using webdriverio directly, which can cause bad errors in here\n        stepActionRegistrar(this.driver, this.stepActionFactory);\n\n        this.playbackTimeoutCalculator = new PlaybackTimeoutCalculator(isDebuggerConnected());\n\n        this.sessionPlayer = new SessionPlayer(\n            id,\n            {\n                tabService: new TabServiceMock(),\n                cookieUtils: undefined!,\n                FrameLocator: FrameLocatorMock,\n                portSelector: portSelectorMock,\n                LocateElementPlayer: MobileLocateElementPlayer,\n                stepActionUtils,\n                stepActionFactory: this.stepActionFactory,\n                playbackTimeoutCalculator: this.playbackTimeoutCalculator,\n                makeSDK,\n            },\n        );\n\n        this.sessionPlayer.setShouldMonitorPerformance(Boolean(shouldMonitorPerformance));\n        this.sessionPlayer.playbackManager.isRemoteSession = true;\n        this.sessionPlayer.playbackManager.isLocalRun = false;\n        this.sessionPlayer.playbackManager.testRetryCount = testRetryCount;\n        this.sessionPlayer.playbackManager.previousTestResultId = previousTestResultId;\n\n        this.sessionPlayer.playbackManager.userParamsData = userParamsData || {};\n        this.onStepCompleted = this.onStepCompleted.bind(this);\n\n        this.sessionPlayer.playbackManager.on(commonConstants.playback.RESULT, this.onStepCompleted);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onStepCompleted(result: any, testId: string, resultId: string, step: any) {\n        // One day something will happen here\n    }\n\n    async onDone() {\n        const { playbackManager } = this.sessionPlayer;\n        const { executionId, testResult: { resultId } = {}, appiumApi } = playbackManager;\n        const logData = {\n            executionId,\n            testResultId: resultId,\n            sessionId: appiumApi?.sessionId,\n        };\n        try {\n            if (appiumApi?.sessionId) {\n                await appiumApi?.endSession();\n                logger.info('appium session deleted', { ...logData });\n            }\n        } catch (error) {\n            logger.error('error while deleting appium session', {\n                ...logData,\n                error,\n            });\n        } finally {\n            const { commonConstants } = getSessionPlayer();\n            playbackManager.off(commonConstants.playback.RESULT);\n        }\n    }\n\n    getSessionId() {\n        return this.sessionPlayer.playbackManager.appiumApi?.sessionId;\n    }\n}\n", "import * as httpRequest from '../commons/httpRequest';\n\nasync function getTmaStatus(localTmaUrl: string) {\n    return await httpRequest.get<{ fsmState: 'Ready' | 'Stopping' | 'Developing' }>(`${localTmaUrl}/api/status`);\n}\n\nexport async function getDeviceStatusFromTma(localTmaUrl: string, deviceUdid: string) {\n    return await httpRequest.get<{ isVirtual: boolean }>(`${localTmaUrl}/api/devices/${deviceUdid}/status`);\n}\n\nexport async function checkIfTmaIsReady(localTmaUrl: string) {\n    const tmaStatus = await getTmaStatus(localTmaUrl);\n\n    if (tmaStatus.fsmState !== 'Ready') {\n        throw new Error('TMA is not ready');\n    }\n}\n", "import * as httpRequest from '../commons/httpRequest';\nimport * as appiumCapabilitiesBuilder from '../commons/appiumCapabilitiesBuilder';\nimport { BaseWorker } from './BaseWorker';\nimport { download } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { reporter } from '../reports/reporter';\nimport { AppiumTestPlayer } from '../player/appiumTestPlayer';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { checkIfTmaIsReady, getDeviceStatusFromTma } from '../utils/tmaUtils';\nimport { mobileGridService } from '../services/mobileGridService';\nimport type { FailedSessionPlayerTestResult } from 'clickim/src/background/session/sessionPlayer';\nimport type { SerializedGrid } from '../services/gridService';\nimport type { TestResult } from 'clickim/src/common/models/TestResult';\nimport type { NativeAppData, TestRunHandler } from '../testRunHandler';\nimport type { TmaAppiumSession } from 'clickim/src/background/session/MobileAgentSessionManager';\nimport type { AttachOptions } from 'webdriverio';\nimport type { PlaybackMobileDevice } from 'services/src/grid/mobileGridService';\n\nconst logger = getLogger('worker-appium');\n\nclass LocalDeviceNotFoundError extends Error { }\nclass FailedToInstallDeviceError extends Error { }\nclass FailedToCreateDriverSessionError extends Error { }\n\ninterface InstallAppResponse {\n    bundleId: string;\n    androidPackage: string;\n    activities?: any[];\n    version: string;\n}\n\ninterface IosApp {\n    id: string;\n    name: string;\n    version: string;\n}\n\ninterface AndroidApp {\n    packageName: string;\n    activity: string;\n    name: string;\n    version: string;\n}\n\nexport class WorkerLocalTma extends BaseWorker<AppiumTestPlayer> {\n    private sessionData!: TmaAppiumSession;\n    private device!: PlaybackMobileDevice;\n    override initPlayer(testRunHandler: TestRunHandler) {\n        return new AppiumTestPlayer(\n            this.id,\n            testRunHandler.runParams,\n            this.options.shouldMonitorPerformance,\n            undefined,\n            testRunHandler.retryCount,\n            testRunHandler.previousTestResultId,\n        );\n    }\n\n    private async initAndGetAppiumAPI(appiumTestPlayer: AppiumTestPlayer) {\n        if (appiumTestPlayer.sessionPlayer.playbackManager.appiumApi) {\n            return appiumTestPlayer.sessionPlayer.playbackManager.appiumApi;\n        }\n\n        const { AppiumApi } = getSessionPlayer();\n        const { DOMParser } = await import('linkedom');\n        const appiumApi = new AppiumApi(this.sessionData.serverAddress, this.sessionData.sessionId, DOMParser, false);\n        appiumTestPlayer.sessionPlayer.playbackManager.appiumApi = appiumApi;\n\n        return appiumApi;\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, appiumTestPlayer: AppiumTestPlayer, gridInfo: SerializedGrid) {\n        reporter.onGetSession(this.id, this.testName, testRunHandler.runMode);\n\n        if (!this.options.localTmaUrl || !this.options.deviceUdid) {\n            throw new Error('Missing localTmaUrl or deviceUdid');\n        }\n\n        const { localTmaUrl, deviceUdid, projectData } = this.options;\n        await checkIfTmaIsReady(localTmaUrl);\n\n        const { project: projectId, authData: { token = '' } = {} } = this.options;\n        const { driver } = appiumTestPlayer;\n        const projectType = projectData!.type!;\n        const appId = this.options.appId;\n        if (appId) {\n            const { mobileApp } = await mobileGridService.getMobileAppDataByAppId({ appId, projectId, token });\n            // Override the nativeApp associated with the testRunHandler.\n            testRunHandler.nativeApp = mobileApp!;\n        }\n        const androidActivityWait = projectType === 'android' ? testRunHandler.androidActivityWait : null;\n        const nativeAppMetadata = testRunHandler.nativeAppMetadata;\n        const appPath: string | null = testRunHandler.downloadableAppPublicLink;\n        const appPackageNameOrBundleId = testRunHandler.appPackageNameOrBundleId;\n        if (!nativeAppMetadata) {\n            throw new Error('Application not specified. Please provide the required application for execution and try again.');\n        }\n\n        if (!appPackageNameOrBundleId) {\n            throw new Error('The application appears to be corrupted. Please ensure the application is in a valid state before running the test.');\n        }\n        const [{ appInstalled, version }, deviceStatus] = await Promise.all([\n            this.getAppStateFromDevice(localTmaUrl, deviceUdid, appPackageNameOrBundleId),\n            getDeviceStatusFromTma(localTmaUrl, deviceUdid),\n        ]).catch(err => {\n            this.handleDeviceNotFoundError(err);\n            throw err;\n        });\n        logger.info('device status and app state', { deviceStatus, appInstalled, version, executionId: this.executionId, testResultId: this.testResultId });\n\n        if (!appInstalled && testRunHandler.isAppFromDevice && !appId) {\n            throw new Error('The application is not installed on the target device. Please ensure the application is installed and try again.');\n        }\n\n        if (!appInstalled && appPath) {\n            await this.installApp(localTmaUrl, deviceUdid, appPath);\n            logger.info('Application installed successfully', { deviceUdid, executionId: this.executionId, testResultId: this.testResultId });\n        }\n\n        try {\n            const sessionTags: appiumCapabilitiesBuilder.SessionTags = {\n                testName: this.testName,\n                executionId: this.executionId,\n                testResultId: this.testResultId!,\n                project: `${this.options.projectData?.name}-${this.options.project}`,\n            };\n            const capabilities = appiumCapabilitiesBuilder.buildAppiumLocalTmaCapabilities({\n                projectType,\n                nativeAppMetadata,\n                appPath,\n                androidActivityWait,\n                sessionTags,\n                gridInfo,\n                options: this.options,\n                testRunConfig: this.testRunConfig,\n            }) as AttachOptions;\n            const tmaSessionSettings = {\n                capabilities: {\n                    udid: deviceUdid,\n                    ...capabilities,\n                },\n            };\n            logger.info('requesting new appium session from TMA', { tmaSessionSettings, executionId: this.executionId, testResultId: this.testResultId });\n            const sessionData = await this.requestNewAppiumSessionFromTma(localTmaUrl, tmaSessionSettings, nativeAppMetadata);\n\n            this.sessionData = sessionData;\n\n            const activeSession = await driver.attach({\n                sessionId: sessionData.sessionId,\n                capabilities,\n                options: {\n                    capabilities,\n                },\n            });\n\n            this.device = await mobileGridService.updateTmaDeviceDetails(deviceUdid, this.options, testRunHandler);\n            logger.info(`init new appium session with local TMA testName: ${this.testName}`,\n                {\n                    sessionId: activeSession.sessionId,\n                    testResultId: this.testResultId,\n                    nativeAppMetadata,\n                    sessionCaps: activeSession.capabilities,\n                });\n        } catch (err) {\n            //TODO:  catch app status validation\n            logger.error('failed to start application', { err });\n            throw err;\n        }\n    }\n\n    private async requestNewAppiumSessionFromTma(localTmaUrl: string, settings: { capabilities: any }, appMetadata: NativeAppData): Promise<TmaAppiumSession> {\n        try {\n            const sessionData = await httpRequest.post<Omit<TmaAppiumSession, 'env'>>({\n                url: `${localTmaUrl}/api/session`,\n                headers: { 'Content-Type': 'application/json' },\n                body: settings,\n                timeout: 60_000,\n            });\n            const appInfo = { name: appMetadata.name, version: appMetadata.version };\n            return { ...sessionData, appInfo, env: 'local-tma' };\n        } catch (error) {\n            this.handleDeviceNotFoundError(error);\n            const message: unknown = error.response?.body?.message;\n            if (error.status === 500 && typeof message === 'string' && message.startsWith('Failed to create driver session')) {\n                throw new FailedToCreateDriverSessionError(message);\n            }\n            // Can get here as well if using localhost instead of 127.0.0.1 since TMA doesn't listen to ipv6 :(\n            throw error;\n        }\n    }\n\n    private baseDevicePath = (localTmaUrl: string, deviceId: string) => `${localTmaUrl}/api/devices/${deviceId}`;\n\n    private async getAppStateFromDevice(localTmaUrl: string, deviceId: string, appIdentifier: string): Promise<{ appInstalled: boolean; version: string }> {\n        const path = this.options.projectData!.type === 'ios' ? 'bundles' : 'apps';\n        const url = `${this.baseDevicePath(localTmaUrl, deviceId)}/${path}`;\n\n        const results = await httpRequest.get<(IosApp | AndroidApp)[]>(url);\n        const appFromResults = results.find(app => ('id' in app ? app.id === appIdentifier : app.packageName === appIdentifier));\n        return !appFromResults ? { appInstalled: false, version: '' } : { appInstalled: true, version: appFromResults.version };\n    }\n\n    private async installApp(localTmaUrl: string, deviceId: string, appPath: string) {\n        try {\n            const app = await download(appPath);\n            await httpRequest.postForm<InstallAppResponse>(`${this.baseDevicePath(localTmaUrl, deviceId)}/apps`, {}, { file: { buffer: app.body, fileName: 'app' } });\n            // todo: check the app was installed.\n        } catch (error) {\n            this.handleDeviceNotFoundError(error);\n            const tmaErrorMessage: string | undefined = error.response?.body?.message;\n            let message = 'Failed to install app';\n            if (tmaErrorMessage) {\n                message = `${message}: ${tmaErrorMessage}`;\n            }\n            throw new FailedToInstallDeviceError(message, { cause: error });\n        }\n    }\n\n    private handleDeviceNotFoundError(error: any) {\n        const tmaErrorMessage: unknown = error.response?.body?.message;\n        if (error.status === 404 && typeof tmaErrorMessage === 'string' && tmaErrorMessage?.startsWith('Ensure that the requested device')) {\n            throw new LocalDeviceNotFoundError(`Device Unavailable: Please ensure that the specified device ${this.options.deviceUdid} is currently connected`);\n        }\n    }\n\n    async runTestOnce(testRunHandler: TestRunHandler, appiumTestPlayer: AppiumTestPlayer) {\n        const { manifestVersion, localAssetService } = getSessionPlayer();\n        const { sessionPlayer } = appiumTestPlayer;\n        const version = manifestVersion || 'runner';\n\n        reporter.onWaitToTestComplete(this.id);\n\n        sessionPlayer.playbackManager.executionId = testRunHandler.executionId;\n        sessionPlayer.playbackManager.executionName = testRunHandler.executionName;\n        sessionPlayer.playbackManager.appiumSessionData = { ...this.sessionData, device: this.device, nativeApp: testRunHandler.nativeApp as unknown as NativeAppData };\n        await this.initAndGetAppiumAPI(appiumTestPlayer);\n        localAssetService.initialize({ serverUrl: this.options.localRCASaver });\n        const runAppiumTest = async () => {\n            try {\n                const testResult = await new Promise<TestResult | FailedSessionPlayerTestResult>((resolve, reject) => {\n                    sessionPlayer.playByTestId({\n                        testId: this.testId!,\n                        executionId: this.executionId,\n                        resultId: this.testResultId!,\n                        baseUrl: this.baseUrl,\n                        userData: this.userData!,\n                        version,\n                        resolve,\n                        isLocalRun: false,\n                        overrideTestConfigId: this.overrideTestConfigId,\n                        branch: this.branch!,\n                        remoteRunId: testRunHandler.remoteRunId,\n                    }).catch(reject);\n                });\n                await localAssetService.drain();\n                testResult.stepsResults = null;\n                testResult.resultId = this.testResultId!;\n                const resultWithStats = { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                return resultWithStats;\n            } catch (err) {\n                //TODO: add test timeout and handle Timeout Error TBD\n                // if (err instanceof TimeoutError && sessionPlayer.stopPlayingOnTestTimeout) {\n                //     sessionPlayer.stopPlayingOnTestTimeout();\n                // }\n                logger.error('error while running appium tests', { err });\n                throw err;\n            }\n        };\n        try {\n            await super.runTestOnce(testRunHandler, appiumTestPlayer);\n            return await runAppiumTest();\n        } catch (err) {\n            logger.error('failed to run test once', { err });\n            throw err;\n        }\n    }\n}\n", "import * as utils from '../utils';\nimport * as appiumCapabilitiesBuilder from '../commons/appiumCapabilitiesBuilder';\nimport { DOMParser } from 'linkedom';\nimport { BaseWorker } from './BaseWorker';\nimport { getLogger } from '../commons/logger';\nimport { reporter } from '../reports/reporter';\nimport { AppiumTestPlayer } from '../player/appiumTestPlayer';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { mobileGridService } from '../services/mobileGridService';\nimport { gridTypes } from '../commons/constants';\nimport * as concurrencyCompanyService from '../services/concurrencyCompanyService';\nimport type { FailedSessionPlayerTestResult } from 'clickim/src/background/session/sessionPlayer';\nimport type { SerializedGrid } from '../services/gridService';\nimport type { TestResult } from 'clickim/src/common/models/TestResult';\nimport type { NativeAppData, TestRunHandler } from '../testRunHandler';\nimport type { WebdriverAppiumSessionCapabilities } from 'clickim/src/background/session/MobileAgentSessionManager';\nimport type { RemoteOptions } from 'webdriverio';\nimport type { PlaybackMobileDevice } from 'services/src/grid/mobileGridService';\nimport type { AppiumApi } from 'clickim/src/common/mobile/appiumApi';\n\nconst logger = getLogger('worker-appium');\n\nexport class WorkerAppium extends BaseWorker<AppiumTestPlayer> {\n    private activeSession!: WebdriverIO.Browser;\n    private device!: PlaybackMobileDevice;\n    private keepAliveIndex?: ReturnType<typeof setInterval>;\n\n    override initPlayer(testRunHandler: TestRunHandler) {\n        return new AppiumTestPlayer(\n            this.id,\n            testRunHandler.runParams,\n            this.options.shouldMonitorPerformance,\n            undefined,\n            testRunHandler.retryCount,\n            testRunHandler.previousTestResultId,\n        );\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, appiumTestPlayer: AppiumTestPlayer, gridInfo: SerializedGrid) {\n        const projectType = this.options.projectData!.type!;\n        const shouldRunInEnhancedMode = (projectType === 'android' || projectType === 'ios') &&\n            await testRunHandler.isTestRecordedWithEnhancedMode();\n\n        if (gridInfo.type !== gridTypes.TESTIM_TVC && shouldRunInEnhancedMode) {\n            throw Error('The provided test(s) were authored in Enhanced Mode and can run only on VMG!');\n        }\n\n        reporter.onGetSession(this.id, this.testName, testRunHandler.runMode);\n        const { driver } = appiumTestPlayer;\n        const appPath = await mobileGridService.getAppIdFromGridOrTestimPublicLink({\n            testRunHandler,\n            options: this.options,\n            pendingAppUploads: this.executionQueue.pendingAppUploads,\n        });\n        const androidActivityWait = projectType === 'android' ? testRunHandler.androidActivityWait : null;\n        const nativeAppMetadata = testRunHandler.nativeAppMetadata;\n\n        if (!nativeAppMetadata) {\n            throw new Error('Application not specified. Please provide the required application for execution and try again.');\n        }\n        try {\n            const sessionTags: appiumCapabilitiesBuilder.SessionTags = {\n                testName: this.testName,\n                executionId: this.executionId,\n                executionName: testRunHandler.executionName,\n                testResultId: this.testResultId!,\n                project: `${this.options.projectData!.name}-${this.options.project}`,\n                ...(this.options.customTag && { customTag: this.options.customTag }),\n                testId: this.testId!,\n                branch: this.branch!,\n                pCloudyIndividual: `${this.executionId}-${this.uniqueId}`,\n            };\n            const appiumOptions: appiumCapabilitiesBuilder.AppiumOptionsParams = {\n                projectData: this.options.projectData,\n                projectType,\n                nativeAppMetadata,\n                appPath,\n                androidActivityWait,\n                sessionTags,\n                gridInfo,\n                options: this.options,\n                testRunConfig: this.testRunConfig,\n                shouldRunInEnhancedMode,\n            };\n            let capabilities: RemoteOptions;\n\n            if (this.options.skipLoadBalancer && this.options.deviceUdid) {\n                if (this.options.lockDevice) {\n                    await mobileGridService.lockDevice(gridInfo, this.options.deviceUdid);\n                }\n                capabilities = await appiumCapabilitiesBuilder.buildAppiumDirectConnectionOptions(appiumOptions);\n            } else {\n                capabilities = await appiumCapabilitiesBuilder.buildAppiumLoadBalancerOptions({ ...appiumOptions, shouldRunInEnhancedMode }) as RemoteOptions;\n            }\n            logger.info('starting appium session', {\n                testResultId: this.testResultId,\n                executionId: this.executionId,\n                sessionTags,\n                nativeAppMetadata,\n                capabilities: appiumCapabilitiesBuilder.removeAccessDataFromCapabilities(capabilities),\n            });\n            capabilities.headers = { 'User-Agent': this.getUserAgentString() };\n            const serverAddress = this.getServerAddressFromGrid();\n            this.activeSession = await driver.remote(capabilities);\n            this.device = await mobileGridService.updateDeviceOnRemoteTestResult(testRunHandler, this.activeSession, serverAddress, this.options, shouldRunInEnhancedMode);\n            const sessionUrl = `${serverAddress}/session/${this.activeSession.sessionId}`;\n            this.updateSlotData(sessionUrl);\n\n            logger.info('appium session started successfully', {\n                sessionId: this.activeSession.sessionId,\n                testResultId: this.testResultId,\n                executionId: this.executionId,\n                sessionCaps: this.activeSession.capabilities,\n            });\n        } catch (err) {\n            //TODO: catch app status validation\n            logger.error('failed to start application', {\n                testResultId: this.testResultId,\n                executionId: this.executionId,\n                err,\n            });\n            throw err;\n        }\n    }\n\n    private startKeepAlive(appiumApi: AppiumApi) {\n        const { errors } = getSessionPlayer();\n        const keepAlive = async () => {\n            try {\n                await appiumApi.getOrientation();\n            } catch (err) {\n                logger.error('failed to keep appium session alive', { err });\n                if (errors?.AppiumSessionTerminatedError && err instanceof errors.AppiumSessionTerminatedError) {\n                    this.stopKeepAlive();\n                }\n            }\n        };\n        // VMG default session timeout is 30 seconds\n        this.keepAliveIndex = setInterval(keepAlive, 25_000);\n    }\n\n    private stopKeepAlive() {\n        if (this.keepAliveIndex) {\n            clearTimeout(this.keepAliveIndex);\n        }\n    }\n\n    private updateSlotData(sessionUrl: string) {\n        try {\n            if (this.options.slotService === 'redis') {\n                concurrencyCompanyService.updateSlotDataCache(\n                    this.options.company!.companyId,\n                    this.options.projectData!.projectId,\n                    { testResultId: this.testResultId, executionId: this.executionId, type: 'execution', source: this.options.source, sessionUrl },\n                    this.id,\n                );\n            }\n        } catch (err) {\n            logger.error('failed to update slot data', { err });\n        }\n    }\n\n    private getServerAddressFromGrid() {\n        const { host, port, accessToken, type } = this.options.gridData!;\n        if (type === gridTypes.TESTIM_HEADSPIN || type === gridTypes.TESTIM_TDC) {\n            return `https://${host}:${port}/v0/${accessToken}/wd/hub`;\n        }\n        if (type === gridTypes.P_CLOUDY) {\n            return `https://${host}/appiumcloud/wd/hub`;\n        }\n        return `https://${host}:${port}/wd/hub`;\n    }\n\n    private getDirectAddressConnection() {\n        const { protocol, hostname, port, path } = this.activeSession.options;\n        if (protocol && hostname && port && path) {\n            return `${protocol}://${hostname}:${port}${path}`;\n        }\n        return undefined;\n    }\n\n    async runTestOnce(testRunHandler: TestRunHandler, appiumTestPlayer: AppiumTestPlayer) {\n        const { manifestVersion, AppiumApi, localAssetService } = getSessionPlayer();\n        const { sessionPlayer } = appiumTestPlayer;\n        const version = manifestVersion || 'runner';\n        const testTimeout = this.options.timeout;\n\n        reporter.onWaitToTestComplete(this.id);\n\n        sessionPlayer.playbackManager.executionId = testRunHandler.executionId;\n        sessionPlayer.playbackManager.executionName = testRunHandler.executionName;\n\n        let serverAddress;\n        if (this.options.skipLoadBalancer) {\n            const deviceId = this.options.deviceUdid || (this.testRunConfig as any).mobile?.staticAllocation.deviceUdid;\n            const { protocol, hostname, port, path } = await mobileGridService.getHeadSpinDeviceConnection(this.options.gridData!, deviceId);\n            serverAddress = `${protocol}://${hostname}:${port}${path}`;\n        } else {\n            serverAddress = this.getDirectAddressConnection() || this.getServerAddressFromGrid();\n        }\n        const capabilities = this.activeSession.capabilities as WebdriverAppiumSessionCapabilities;\n        sessionPlayer.playbackManager.appiumSessionData = {\n            env: 'remote',\n            capabilities,\n            sessionId: this.activeSession.sessionId,\n            sessionToken: this.options.gridData!.accessToken,\n            gridType: this.options.gridData!.type,\n            projectType: this.options.projectData!.type,\n            gridId: this.options.gridData!.gridId,\n            companyId: this.options.company?.companyId,\n            device: this.device,\n            nativeApp: testRunHandler.nativeApp as unknown as NativeAppData,\n        };\n        sessionPlayer.playbackManager.appiumApi = new AppiumApi(serverAddress, this.activeSession.sessionId, DOMParser, this.device?.domMode === 'enhanced');\n        this.startKeepAlive(sessionPlayer.playbackManager.appiumApi);\n        localAssetService.initialize({ serverUrl: this.options.localRCASaver });\n        const runAppiumTest = async () => {\n            try {\n                const testResult = await new Promise<TestResult | FailedSessionPlayerTestResult>((resolve, reject) => {\n                    sessionPlayer.playByTestId({\n                        testId: this.testId!,\n                        executionId: this.executionId,\n                        resultId: this.testResultId!,\n                        baseUrl: this.baseUrl,\n                        userData: this.userData!,\n                        version,\n                        resolve,\n                        isLocalRun: false,\n                        overrideTestConfigId: this.overrideTestConfigId,\n                        branch: this.branch!,\n                        remoteRunId: testRunHandler.remoteRunId,\n                    }).catch(reject);\n                });\n                this.stopKeepAlive();\n                await localAssetService.drain();\n                testResult.stepsResults = null;\n                testResult.resultId = this.testResultId!;\n                const resultWithStats = { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                return resultWithStats;\n            } catch (err) {\n                logger.error('error while running appium tests', {\n                    testResultId: this.testResultId,\n                    executionId: this.executionId,\n                    err,\n                });\n                this.stopKeepAlive();\n                throw err;\n            }\n        };\n        try {\n            await super.runTestOnce(testRunHandler, appiumTestPlayer);\n            return await utils.promiseTimeout(runAppiumTest(), testTimeout);\n        } catch (err) {\n            logger.error('failed to run test once', { err });\n            throw err;\n        }\n    }\n\n    private getUserAgentString() {\n        if (global.meta?.IS_RELEASE) {\n            return `Testim/production:${utils.getRunnerVersion()}` as const;\n        }\n        if (!global.meta?.IS_LOCAL && global.meta?.BRANCH_NAME) {\n            return `Testim/CI-Branch:${global.meta.BRANCH_NAME}` as const;\n        }\n        return 'Testim/local' as const;\n    }\n}\n", "import * as utils from '../utils';\nimport { WebDriver } from './webdriver';\nimport { TimeoutError } from '../errors';\n\nexport class ExtensionTestPlayer {\n    driver = new WebDriver();\n    constructor(public readonly id: number) {\n    }\n\n    async onDone() {\n        const END_DRIVER_TIMEOUT = 1000 * 60 * 2;\n        try {\n            await utils.promiseTimeout(this.driver.end(), END_DRIVER_TIMEOUT);\n        } catch (error) {\n            if (error instanceof TimeoutError) {\n                await this.driver.forceEnd().catch(() => null);\n            }\n        }\n        // @ts-expect-error why do we need to make this null?\n        this.driver = null;\n    }\n\n    getSessionId() {\n        return this.driver.getSessionId();\n    }\n}\n", "import * as httpRequest from '../commons/httpRequest';\n\nconst EXTERNAL_IP_MIRRORS = ['https://api.ipify.org?format=json', 'https://ipinfo.io/json', 'https://api.my-ip.io/ip.json'];\n\n/* Query 3rd party IP mirroring services like my-ip for the public IP address that they see for this machine\n* This function will return the first successful response from the mirror. If all mirrors fail, it will return null;\n*\n* Note: In some clouds the machine might not have a sticky IP and then each request can potentially come out from a different IP.\n* Note 2: It's possibble to add caching for this but it should be done after considering the implcations and probably behind an FF and possibly with a TTL.\n*\n* @returns {Promise<string | null>} - The public IP address\n**/\nexport async function getPublicIp() {\n    const result = await Promise.any(EXTERNAL_IP_MIRRORS.map(async (url) => {\n        try {\n            return await httpRequest.get(url);\n        } catch (e) {\n            return null;\n        }\n    }));\n    return result?.ip;\n}\n\nexport const generateWebSocketOptions = ({ timeout }: { timeout?: number }) => {\n    return {\n        timeout,\n        ...(global.proxyUri && { agent: new global.ProxyAgent!(global.proxyUri) }),\n    };\n};\n", "import WebSocket from 'ws';\nimport { promiseFromCallback } from './utils';\nimport { generateWebSocketOptions } from './utils/network';\n\nexport class CDPTestRunner {\n    private _lastWsId: number | undefined;\n    private _cdpWs: Promise<WebSocket> | null = null;\n    private _cdpUrl: string | null = null;\n    private _cdpCallbacks = new Map<number, { resolve(value: any): void; reject(e: Error): void }>();\n\n    async initSession(cdpUrl: string, timeout = 500) {\n        await this.stopSession();\n        this._cdpUrl = cdpUrl;\n        await this.initCDPWebsocket(timeout);\n    }\n\n    async initCDPWebsocket(timeout = 500) {\n        if (this._cdpWs) {\n            return this._cdpWs;\n        }\n        const options = generateWebSocketOptions({ timeout });\n        const websocket = new WebSocket(this._cdpUrl!, options);\n\n        const openPromise = promiseFromCallback((cb) => {\n            websocket.once('open', cb);\n        });\n\n        const errorPromise = promiseFromCallback((cb) => {\n            websocket.once('error', cb);\n        }).catch(() => {\n            websocket.close();\n            websocket.removeAllListeners();\n        });\n\n        websocket.on('message', (message) => this.onCDPMessage(message));\n\n        this._cdpWs = Promise.race([openPromise, errorPromise]).then(() => websocket);\n        return this._cdpWs;\n    }\n\n    onCDPMessage(message: WebSocket.RawData) {\n        // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n        const object = JSON.parse(message);\n        const callback = this._cdpCallbacks.get(object.id);\n        if (!callback) {\n            return;\n        }\n        this._cdpCallbacks.delete(object.id);\n        if (object.error) {\n            callback.reject(new Error(object.error));\n        } else if (object.result.exceptionDetails?.exception) {\n            callback.reject(new Error(object.result.exceptionDetails.exception.description));\n        } else {\n            callback.resolve(object.result);\n        }\n    }\n\n    async stopSession() {\n        const websocket = this._cdpWs;\n        this._cdpUrl = null;\n        this._cdpWs = null;\n        this._cdpCallbacks.clear();\n        if (websocket) {\n            try {\n                return (await websocket).close();\n            } catch {\n                return undefined;\n            }\n        }\n        return undefined;\n    }\n\n    async cdpCommand<T = any>(method: string, params?: object, sessionId?: string) {\n        const websocket = await this.initCDPWebsocket();\n        this._lastWsId ||= 0;\n        const id = this._lastWsId++;\n        const result = new Promise<T>((resolve, reject) => {\n            this._cdpCallbacks.set(id, { resolve, reject });\n        });\n        const msg = { method, params, id };\n        if (sessionId) {\n            Object.assign(msg, { sessionId });\n        }\n        websocket.send(JSON.stringify(msg));\n        return result;\n    }\n}\n", "import * as utils from '../utils';\nimport * as launcher from 'chrome-launcher';\nimport * as desiredCapabilitiesBuilder from '../commons/testimDesiredCapabilitiesBuilder';\nimport { CDPTestRunner } from '../cdpTestRunner';\nimport { registerExitHook } from '../processHandler';\nimport type { InitOptions } from './webdriver';\n\nexport type LauncherDriverType = LauncherDriver;\nclass LauncherDriver {\n    _isAlive = false;\n    cdpTestRunner = new CDPTestRunner();\n    chrome: undefined | launcher.LaunchedChrome;\n    constructor(private readonly sessionId: string) {\n    }\n\n    async init(options: InitOptions) {\n        const { browserOptions, testName, testRunConfig, gridInfo, customExtensionLocalLocation, executionId, testResultId, printFinalCaps, mode } = options;\n        const capabilities = desiredCapabilitiesBuilder.buildSeleniumOptions({\n            browserOptions, testName, testRunConfig, gridInfo, customExtensionLocalLocation, executionId, testResultId, printFinalCaps, mode,\n        });\n        const chromeFlags = [\n            // @ts-expect-error This seems to be broken due to wdio7 migration\n            ...(capabilities.desiredCapabilities?.chromeOptions.args ?? []),\n            ...(capabilities.capabilities?.alwaysMatch?.['goog:chromeOptions']?.args ?? []),\n            ...launcher.Launcher.defaultFlags().filter((flag) => flag !== '--disable-extensions'),\n        ];\n        this.chrome = await launcher.launch({ chromeFlags, startingUrl: undefined, ignoreDefaultFlags: true });\n        this.chrome.process.once('exit', () => { this._isAlive = false; });\n        this.chrome.process.once('close', () => { this._isAlive = false; });\n        this._isAlive = true;\n        const webSocketDebuggerUrl = await utils.getCdpAddressForHost(`localhost:${this.chrome.port}`);\n        await this.cdpTestRunner.initSession(webSocketDebuggerUrl);\n\n        registerExitHook(() => this.chrome!.kill());\n    }\n\n    isAlive() {\n        return this._isAlive;\n    }\n\n    start() {\n        // noop\n    }\n\n    async stop() {\n        await this.cdpTestRunner.stopSession();\n        if (this.chrome) {\n            await this.chrome.kill();\n        }\n        this._isAlive = false;\n    }\n\n    getSessionId() {\n        return this.sessionId;\n    }\n}\n\nexport class ChromeLauncherTestPlayer {\n    sessionId = utils.guid();\n    driver = new LauncherDriver(this.sessionId);\n    constructor(public readonly id: number) {\n    }\n\n    async onDone() {\n        return this.driver.stop();\n    }\n\n    getSessionId() {\n        return this.sessionId;\n    }\n}\n", "import * as perf from '../commons/performance-logger';\nimport { TimeoutError } from '../errors';\nimport { BaseWorker } from './BaseWorker';\nimport { promiseAbort, promiseTimeout } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { reporter } from '../reports/reporter';\nimport { timeoutMessages, stepResult, CLI_MODE } from '../commons/constants';\nimport { ExtensionTestPlayer } from '../player/extensionTestPlayer';\nimport { ChromeLauncherTestPlayer } from '../player/chromeLauncherTestPlayer';\nimport { gridAccessWhitelistedIp, wasInitializedFromCache } from '../commons/testimCustomToken';\nimport type { WebDriver } from '../player/webdriver';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { SerializedGrid } from 'src/services/gridService';\n\nconst logger = getLogger('worker-ext');\n\nexport type ExtensionPlayer = ChromeLauncherTestPlayer | ExtensionTestPlayer;\n\nexport class WorkerExtension extends BaseWorker<ExtensionPlayer> {\n    override initPlayer() {\n        if (this.options.useChromeLauncher) {\n            return new ChromeLauncherTestPlayer(this.id);\n        }\n        return new ExtensionTestPlayer(this.id);\n    }\n\n    protected async _getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, player: ExtensionPlayer, gridInfo: SerializedGrid) {\n        const { driver } = player;\n        try {\n            return await driver.init({\n                projectData: this.options.projectData,\n                overrideConfiguration: testRunHandler.overrideTestConfig,\n                browserOptions: this.options,\n                testId: testRunHandler.testId,\n                testName: this.testName!,\n                testRunConfig: this.testRunConfig!,\n                gridInfo,\n                customExtensionLocalLocation,\n                executionId: this.executionId,\n                executionName: testRunHandler.executionName,\n                testResultId: this.testResultId!,\n                seleniumPerfStats: testRunHandler.seleniumPerfStats,\n                fastInit: this.options.lightweightMode?.general,\n                lambdatestService: this.lambdatestService,\n                printFinalCaps: this.options.printFinalCaps,\n                mode: CLI_MODE.EXTENSION,\n            });\n        } catch (err) {\n            logger.error('failed to get browser', {\n                err,\n                gridInfo,\n                whitelistedPublicIp: gridAccessWhitelistedIp(),\n                initializedFromCache: wasInitializedFromCache(),\n                testId: testRunHandler.testId,\n                resultId: testRunHandler.testResultId,\n                publicIps: this.options.publicIps,\n            });\n            throw err;\n        }\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, player: ExtensionPlayer, gridInfo: SerializedGrid) {\n        reporter.onGetSession(this.id, this.testName, testRunHandler.runMode);\n        return this._getBrowserOnce(testRunHandler, customExtensionLocalLocation, player, gridInfo);\n    }\n\n    protected isUsingChromeLauncher(player: ExtensionPlayer): player is ChromeLauncherTestPlayer {\n        return Boolean(this.options.useChromeLauncher);\n    }\n\n    protected async updateTestStatusOnGrid(driver: WebDriver, success: boolean, reason?: string) {\n        const status = success ? 'passed' : 'failed';\n        if (this.lambdatestService.isLambdatestRun()) {\n            await driver.executeJS(`lambda-status=${status}`);\n        }\n\n        if ('browserstack' in this.options && this.options.browserstack?.['browserstack.user']) {\n            const executorConfig = { action: 'setSessionStatus', arguments: { status, reason } };\n            await driver.execute(`browserstack_executor: ${JSON.stringify(executorConfig)}`);\n        }\n    }\n\n    override async runTestOnce(testRunHandler: TestRunHandler, player: ExtensionPlayer) {\n        const { testResultId, executionId, testId } = this;\n        perf.log('WorkerExtension runTestOnce');\n\n        const runViaCdpOrFallbackToAPI = async (driver: ChromeLauncherTestPlayer['driver']) => {\n            const testTimeout = this.options.timeoutWasGiven ? Math.max(10000, this.options.timeout) : this.options.testStartTimeout;\n            try {\n                return await promiseTimeout(testRunHandler.runTestUsingCDP(driver.cdpTestRunner), testTimeout, timeoutMessages.TEST_START_TIMEOUT_MSG);\n            } catch (err) {\n                if (!(err instanceof TimeoutError)) {\n                    throw err;\n                }\n                logger.warn('timeout while running test using CDP. Running checkViaRestAPIIfTestStarted', { testResultId });\n                return await testRunHandler.checkViaRestAPIIfTestStarted();\n            }\n        };\n        interface StartStatusDetails { driverUrlFinished: boolean; testRunHandlerOnStartedHadFinished: boolean }\n        const navigateChromeSessionToRunTestim = async (driver: ExtensionTestPlayer['driver'], url: string, startStatusDetails: StartStatusDetails) => {\n            try {\n                const res = await driver.url(url); //driver.url doesn't return anything\n                startStatusDetails.driverUrlFinished = true;\n                return res;\n            } catch (err) {\n                logger.error('error from driver.url', { err, testResultId, executionId, testId, url, urlLength: url.length });\n                throw err;\n            }\n        };\n        const updateRunHandlerThatTestStartedAndChangeStatusDetails = async (startStatusDetails: StartStatusDetails) => {\n            const res = await testRunHandler.onStarted(this.options.testStartTimeout);\n            startStatusDetails.testRunHandlerOnStartedHadFinished = true;\n            return res;\n        };\n\n        const runExtTest = async () => {\n            perf.log('WorkerExtension runExtTest');\n            const disableRemoteStep = this.options.lightweightMode?.disableRemoteStep || this.options.disableSockets;\n            if (!disableRemoteStep) {\n                testRunHandler.listenToRemoteStep(player.driver);\n            }\n            if (this.isUsingChromeLauncher(player)) {\n                reporter.onWaitToTestStart(this.id);\n                reporter.onWaitToTestComplete(this.id);\n                try {\n                    const testResult = await runViaCdpOrFallbackToAPI(player.driver);\n                    return { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                } catch (err) {\n                    logger.warn('failed to run test via CDP', { err });\n                    throw err;\n                }\n            }\n            const { driver } = player;\n            const startStatusDetails = { driverUrlFinished: false, testRunHandlerOnStartedHadFinished: false }; //for logging / debugging purposes\n\n            try {\n                const url = await testRunHandler.getRunTestUrl();\n                reporter.onWaitToTestStart(this.id);\n                try {\n                    await promiseTimeout(Promise.all([\n                        navigateChromeSessionToRunTestim(player.driver, url, startStatusDetails),\n                        updateRunHandlerThatTestStartedAndChangeStatusDetails(startStatusDetails),\n                    ]), this.options.testStartTimeout, timeoutMessages.TEST_START_TIMEOUT_MSG);\n                } catch (err) {\n                    if (!(err instanceof TimeoutError)) {\n                        throw err;\n                    }\n                    logger.warn('timeout occurred (see log\\'s payload). Running checkViaRestAPIIfTestStarted', { testResultId, executionId, testId, ...startStatusDetails });\n                    await testRunHandler.checkViaRestAPIIfTestStarted();\n                }\n\n                reporter.onWaitToTestComplete(this.id);\n                const abortController = new AbortController();\n                const onBrowserClosed = (err: any) => {\n                    testRunHandler.onCompletedCleanup();\n                    logger.warn('on browser closed error detected', { err, testResultId, executionId, testId });\n                    driver.unregisterToClosedBrowser(onBrowserClosed);\n                    err.type = stepResult.BROWSER_CLOSED;\n                    abortController.abort(err);\n                };\n                driver.registerToClosedBrowser(onBrowserClosed);\n                try {\n                    const testRunPromise = promiseTimeout(testRunHandler.onCompleted(), this.testRunTimeout, timeoutMessages.TEST_COMPLETE_TIMEOUT_MSG);\n                    const testResult = await promiseAbort(testRunPromise, abortController.signal);\n                    driver.unregisterToClosedBrowser(onBrowserClosed);\n\n                    try {\n                        await this.updateTestStatusOnGrid(driver, Boolean(testResult.success), testResult.reason);\n                    } catch (err) {\n                        logger.error('Could not update the grid about the test status', { err });\n                    }\n\n                    if (!driver.isAlive()) {\n                        logger.warn(`possible grid unresponsive for test ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                        testResult.gridIssues = 'could not validate grid is alive';\n                    }\n                    const maxKeepAliveGap = driver.maxKeepAliveGap();\n                    const MAX_KEEP_ALIVE_GAP = 30000;\n                    if (maxKeepAliveGap >= MAX_KEEP_ALIVE_GAP) {\n                        logger.warn(`possible browser keep alive issue ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                        testResult.keepAliveIssue = maxKeepAliveGap as any as string;\n                    }\n                    return { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                } catch (err) {\n                    logger.warn('timeout wait until test completed', { err, testResultId, executionId, testId });\n                    // complete time out\n                    throw buildError(err);\n                } finally {\n                    driver.unregisterToClosedBrowser(onBrowserClosed);\n                }\n            } catch (err) {\n                logger.warn('failed to start url', { err });\n                throw buildError(err);\n            }\n        };\n\n        player.driver.start();\n\n        try {\n            await super.runTestOnce(testRunHandler, player);\n            perf.log('WorkerExtension super.runTestOnce');\n            return await runExtTest();\n        } catch (err) {\n            logger.error('failed to run test', {\n                err,\n                testId: testRunHandler.testId,\n                resultId: testRunHandler.testResultId,\n            });\n            throw err;\n        }\n    }\n}\n\nfunction isTypedError(err: any): err is (Error & { type: string }) {\n    return err instanceof Error && 'type' in err && typeof err.type === 'string';\n}\n\nfunction buildError(err: any) {\n    return isTypedError(err) ? err : new Error(err);\n}\n", "import * as perf from '../commons/performance-logger';\nimport { delay } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { releasePlayer } from './workerUtils';\nimport { reporter } from '../reports/reporter';\nimport { WorkerExtension } from './WorkerExtension';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { ExtensionPlayer } from './WorkerExtension';\nimport type { SerializedGrid } from 'src/services/gridService';\n\nconst logger = getLogger('base-worker');\nconst DELAY_BETWEEN_TESTS = 500;\n\nexport class WorkerExtensionSingleBrowser extends WorkerExtension {\n    private testPlayer: ExtensionPlayer | null | undefined;\n\n    async _releasePlayer() {\n        if (!this.testPlayer) {\n            return;\n        }\n        const { projectId } = this.userData || {};\n        await releasePlayer(this.id, this.releaseSlotOnTestFinished, projectId!, this.options.company!.companyId, this.options.slotService, this.testPlayer);\n        this.testPlayer = null;\n    }\n\n    override onQueueCompleted() {\n        return this._releasePlayer();\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, player: ExtensionPlayer, gridInfo: SerializedGrid) {\n        reporter.onGetSession(this.id, `worker ${this.id}`, testRunHandler.runMode);\n        return this._getBrowserOnce(testRunHandler, customExtensionLocalLocation, player, gridInfo);\n    }\n\n    override async getTestPlayer(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined) {\n        if (this.testPlayer && !this.testPlayer.driver.isAlive()) {\n            logger.warn('WorkerExtensionSingleBrowser is releasing a dead player', { workerId: this.id });\n            await this._releasePlayer();\n        }\n        if (!this.testPlayer) {\n            this.testPlayer = await super.getTestPlayer(testRunHandler, customExtensionLocalLocation);\n        }\n        return this.testPlayer;\n    }\n\n    override async runTest(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, shouldRerun: boolean | undefined) {\n        const quarantineResult = this.handleQuarantine(testRunHandler);\n        if (quarantineResult) {\n            return quarantineResult;\n        }\n\n        perf.log('before runTest onTestStarted single browser');\n        const test = await this.onTestStarted(this.id, testRunHandler.testId, testRunHandler.testResultId, shouldRerun, testRunHandler.retryKey);\n        testRunHandler.baseUrl = test.config.baseUrl;\n        const testPlayer = await this.getTestPlayer(testRunHandler, customExtensionLocalLocation);\n\n        testRunHandler.markClearBrowser();\n        return await this.runTestOnce(testRunHandler, testPlayer);\n    }\n\n    override async runTestCleanup() {\n        if (!this.executionQueue.hasMoreTests()) {\n            await this.onQueueCompleted();\n            return;\n        }\n        if (this.options.lightweightMode?.general) {\n            await delay(DELAY_BETWEEN_TESTS);\n        }\n    }\n}\n", "import '../player/webdriver'; // preload\nimport * as config from '../commons/config';\nimport * as perf from '../commons/performance-logger';\nimport * as analyticsService from '../services/analyticsService';\nimport * as testimCustomToken from '../commons/testimCustomToken';\nimport { labFeaturesService } from '../services/labFeaturesService';\nimport { ArgError, StopRunOnError } from '../errors';\nimport { getLogger } from '../commons/logger';\nimport { CLI_MODE } from '../commons/constants';\nimport { ExecutionQueue } from '../executionQueue';\nimport { extensionBrowsers, seleniumBrowsers } from './runnerUtils';\nimport type { BrowserType, RunnerMode } from './runnerUtils';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from './TestPlanRunner';\nimport type { TestRunStatus } from '../testRunStatus';\nimport type { SerializedGrid } from '../services/gridService';\nimport type { TestResultWithStats } from '../workers/BaseWorker';\nimport type { PartialLoginData } from 'clickim/src/common/authenticationService';\n\nconst logger = getLogger('worker-manager');\n\ntype RemoveFirst<T extends unknown[]> = T extends [unknown, ...infer R] ? R : T;\nexport type BaseWorkerArgs = RemoveFirst<ConstructorParameters<typeof import('../workers/BaseWorker').BaseWorker>>;\nexport interface TestResultUpdates {\n    show?: true;\n    seleniumStats?: any;\n    gridIssues?: any;\n    keepAliveIssue?: any;\n    gridHost?: string;\n    gridName?: string;\n    gridType?: string;\n    gridProvider?: string;\n}\n\nexport interface IgnoredTestResult {\n    name?: string;\n    testId: string;\n    resultId: string;\n    runnerStatus: 'SKIPPED';\n    testStatus?: string;\n    mobile?: { [key in 'isAppFromDevice' | 'isAppForIosVirtualDevice']?: boolean };\n}\n\n/*\n    * WorkerManager is responsible for running tests and to maintain parallel based on user input.\n    * It creates workers based on the browser type, or based on runner mode (if specified).\n    * It also manages the number of parallel workers running at a time, to not exceed the user specified parallel count.\n    * The magic occurs when runTests is being called, then runAndWaitToComplete is a promise that resolves when all tests are done using onTestCompleted callback.\n    * The onTestCompleted callback is called when a test is done, and it updates the test status and the combinedTestResults object, which eventually resolves the promise.\n*/\nexport class WorkerManager {\n    private workerIdCount = 0;\n    private parallelCount = 0;\n    private workers = new Map();\n    private executionQueue!: ExecutionQueue;\n    private combinedTestResults: { [testResultId: string]: any } = {};\n    private workerUniqueIds: string[] = [];\n    constructor(private readonly customExtensionLocalLocation?: string) { }\n\n    // Public for UT purposes.\n    public async getWorkerType({ mode, localTmaUrl }: { mode?: RunnerMode; localTmaUrl?: string }, browser: BrowserType) {\n        if (mode) {\n            switch (mode) {\n                case CLI_MODE.SELENIUM:\n                    return (await import('../workers/WorkerSelenium')).WorkerSelenium;\n                case CLI_MODE.APPIUM:\n                    if (localTmaUrl) {\n                        return (await import('../workers/WorkerLocalTma')).WorkerLocalTma;\n                    }\n                    return (await import('../workers/WorkerAppium')).WorkerAppium;\n                default:\n                    if (labFeaturesService.isFeatureAvailableForProject('useSameBrowserForMultiTests')) {\n                        return (await import('../workers/WorkerExtensionSingleBrowser')).WorkerExtensionSingleBrowser;\n                    }\n                    return (await import('../workers/WorkerExtension')).WorkerExtension;\n            }\n        } else { // The user didn't specify a mode, select worker based on browser type.\n            switch (browser) {\n                case extensionBrowsers.find(b => b === browser) && labFeaturesService.isFeatureAvailableForProject('useSameBrowserForMultiTests'):\n                    return (await import('../workers/WorkerExtensionSingleBrowser')).WorkerExtensionSingleBrowser;\n                case extensionBrowsers.find(b => b === browser):\n                    return (await import('../workers/WorkerExtension')).WorkerExtension;\n                case seleniumBrowsers.find(b => b === browser):\n                    return (await import('../workers/WorkerSelenium')).WorkerSelenium;\n                default:\n                    throw new ArgError(`browser ${browser} is not supported`);\n            }\n        }\n    }\n\n    private async createWorker(\n        browser: BrowserType,\n        ...args: BaseWorkerArgs\n    ) {\n        const runnerOptions = args[0];\n        const Worker = await this.getWorkerType({ mode: runnerOptions.mode, localTmaUrl: runnerOptions.localTmaUrl }, browser);\n        try {\n            perf.log('before new Worker', runnerOptions.mode);\n            return new Worker(this.executionQueue, ...args);\n        } finally {\n            perf.log('after new Worker', runnerOptions.mode);\n        }\n    }\n\n    public async runTests(\n        testList: ExecutionList,\n        testStatus: TestRunStatus,\n        executionId: string,\n        executionName: string,\n        options: RunnerOptions,\n        branchToUse: string,\n        workerCount: number,\n        stopOnError: boolean,\n    ) {\n        if (testList && testList.length === 0) {\n            return undefined;\n        }\n        let stoppedOnError = false;\n        let runningTests = 0;\n        const runAndWaitToComplete = (token: string, userAccessKey?: string) => new Promise<{ [testResultId: string]: any }>((resolve) => {\n            const projectId = options.project;\n            const testCount = testList.length;\n            this.parallelCount = workerCount;\n            this.workerUniqueIds = this.generateUniqueIds(this.parallelCount);\n\n            this.executionQueue = new ExecutionQueue(executionId, executionName, testList, options, branchToUse, testStatus);\n            this.combinedTestResults = {};\n\n            const ucid = options.company?.ucid || '';\n            const companyId = options.company?.companyId;\n            const companyName = options.company?.name;\n            const source = options.source || 'cli';\n            const user = options.user;\n            const companyPlan = options.company?.planType;\n            const isStartUp = options.company?.isStartUp;\n            const projectName = options.projectData?.name;\n            const projectType = options.projectData?.type;\n            const lightweightMode = options.lightweightMode;\n            const gridType = options.gridData?.type;\n\n            const onTestStarted = (wid: number, testId: string, resultId: string, isRerun: boolean | undefined, testRetryKey: `${number}:${number}`, appSource?: string) => {\n                runningTests++;\n                analyticsService.analyticsTestStart({\n                    executionId,\n                    projectId,\n                    testId,\n                    resultId,\n                    ucid,\n                    companyId,\n                    companyName,\n                    projectName,\n                    companyPlan,\n                    source,\n                    user,\n                    lightweightMode,\n                    isStartUp,\n                    projectType,\n                    appSource,\n                    gridType,\n                });\n                return testStatus.testStartAndReport(wid, executionId, resultId, isRerun, testRetryKey);\n            };\n\n            const onTestCompleted = async (wid: number, testId: string, testResult: TestResultWithStats, sessionId: string, isRerun: boolean | undefined, appSource?: string) => {\n                runningTests--;\n                const update: TestResultUpdates = {\n                    ...(lightweightMode?.onlyTestIdsNoSuite && { show: true }),\n                    ...(testResult.seleniumStats && { seleniumStats: testResult.seleniumStats }),\n                    ...(testResult.gridIssues && { gridIssues: testResult.gridIssues }),\n                    ...(testResult.keepAliveIssue && { keepAliveIssue: testResult.keepAliveIssue }),\n                    ...(options.host && { gridHost: options.host }),\n                };\n                if (testResult.seleniumPerfMarks) {\n                    testStatus.concatSeleniumPerfMarks(testResult.seleniumPerfMarks);\n                    // @ts-expect-error it's probably not a good idea to combine the testResult with the stats just to remove them later\n                    delete testResult.seleniumPerfMarks;\n                }\n                if (options.grid || options.gridId) {\n                    update.gridName = options.grid || options.gridData?.name;\n                    update.gridType = options.gridData?.type;\n                    update.gridProvider = options.gridData?.provider;\n                } else if (options.localTmaUrl) {\n                    update.gridName = 'local-tma-from-options';\n                    update.gridType = 'local-tma';\n                } else if (options.useLocalChromeDriver) {\n                    update.gridName = 'local-chrome-driver-from-options';\n                    update.gridType = 'local-chrome';\n                } else if (options.useChromeLauncher) {\n                    update.gridName = 'chrome-launcher-from-options';\n                    update.gridType = 'local-chrome';\n                } else if (options.browserstack) {\n                    update.gridName = 'browserstack-from-options';\n                } else if (options.saucelabs) {\n                    update.gridName = 'saucelabs-from-options';\n                }\n\n                await testStatus.testEndAndReport(wid, testResult, executionId, sessionId, isRerun, update)\n                    .catch(err => logger.error('testEndAndReport threw an error', { err }));\n\n                if (isRerun) {\n                    return;\n                }\n                this.combinedTestResults[testResult.resultId] = testResult;\n                analyticsService.analyticsTestEnd({\n                    executionId,\n                    projectId,\n                    testId,\n                    resultId: testResult.resultId,\n                    result: testResult,\n                    ucid,\n                    companyId,\n                    companyName,\n                    projectName,\n                    companyPlan,\n                    source,\n                    user,\n                    lightweightMode,\n                    logger,\n                    isStartUp,\n                    projectType,\n                    appSource,\n                });\n                if (stopOnError && !testResult.success) {\n                    this.executionQueue.stop();\n                    stoppedOnError = true;\n                }\n                const completedTests = Object.keys(this.combinedTestResults).length;\n                if (completedTests === testCount || (stoppedOnError && runningTests === 0)) {\n                    resolve(this.combinedTestResults);\n                }\n            };\n\n            const onTestIgnored = (wid: number, testResult: IgnoredTestResult) => {\n                this.combinedTestResults[testResult.resultId] = testResult;\n                testStatus.onTestIgnored(wid, testResult.resultId);\n                runningTests--;\n                const completedTests = Object.keys(this.combinedTestResults).length;\n                if (completedTests === testCount || (stoppedOnError && runningTests === 0)) {\n                    resolve(this.combinedTestResults);\n                }\n            };\n\n            const onGridSlot = (resultId: string, gridInfo: SerializedGrid) => testStatus.onGridSlot(resultId, gridInfo);\n\n            options.userData = {\n                loginData: {\n                    ...testimCustomToken.getTokenV3UserData(),\n                    refreshToken: testimCustomToken.getRefreshToken()!,\n                    authData: testimCustomToken.getTokenV3UserData(),\n                    token,\n                    userAccessKey,\n                } as PartialLoginData,\n                projectId: options.project,\n                company: options.company!,\n                servicesUrl: config.SERVICES_HOST(),\n            };\n            perf.log('in localStrategy before createWorker');\n            // We create workers based on the parallel count.\n            // Each worker is responsible for running a test, and when it's done if there is another test it will create a new Worker.\n            while (this.workers.size < this.parallelCount && this.executionQueue.hasMoreTests()) {\n                this.runWorker(\n                    options,\n                    this.customExtensionLocalLocation,\n                    executionId,\n                    onTestStarted,\n                    onTestCompleted,\n                    onGridSlot,\n                    onTestIgnored,\n                );\n            }\n        });\n\n        try {\n            const token = await testimCustomToken.getCustomTokenV3();\n            const userAccessKey = await testimCustomToken.getUserAccessKey();\n            const result = await runAndWaitToComplete(token, userAccessKey);\n            // After all tests are done, there shouldn't be any workers running.\n            if (this.workers.size > 0) {\n                this.workers.clear();\n            }\n            if (stoppedOnError) {\n                throw new StopRunOnError();\n            }\n            return result;\n        } catch (err) {\n            logger.error('failed running parallel workers', { executionId, err });\n            throw err;\n        }\n    }\n\n    private onWorkerFinished = async (workerId: number, ...args: BaseWorkerArgs) => {\n        if (!this.workers.has(workerId)) {\n            return;\n        }\n        this.workers.delete(workerId);\n        if (this.executionQueue.hasMoreTests() && this.workers.size < this.parallelCount) {\n            this.runWorker(...args);\n        }\n    };\n    private generateUniqueIds(count: number): string[] {\n        return Array.from({ length: count }, (_, index) => `worker-${index + 1}`);\n    }\n\n    private runWorker = async (...args: BaseWorkerArgs) => {\n        const id = ++this.workerIdCount;\n        // We set the worker to null to create the exact numbers of workers in the while loop.\n        // As we don't want each worker to wait for the other to be created.\n        this.workers.set(id, null);\n        const testRunHandler = this.executionQueue.getNext();\n        if (!testRunHandler) {\n            this.workers.delete(id);\n            return;\n        }\n        const uniqueId = this.workerUniqueIds[id % this.parallelCount];\n        const Worker = await this.createWorker(testRunHandler.runConfig.browserValue, ...args);\n        this.workers.set(id, Worker);\n        Worker.id = id;\n        Worker.uniqueId = uniqueId;\n        Worker.run(testRunHandler, this.onWorkerFinished, ...args);\n    };\n}\n\n", "// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class Color {\n    static readonly Reset: string = '\\x1b[0m';\n    static readonly Bright: string = '\\x1b[1m';\n    static readonly Dim: string = '\\x1b[2m';\n    static readonly Underscore: string = '\\x1b[4m';\n    static readonly Blink: string = '\\x1b[5m';\n    static readonly Reverse: string = '\\x1b[7m';\n    static readonly Hidden: string = '\\x1b[8m';\n    static readonly FgBlack: string = '\\x1b[30m';\n    static readonly FgRed: string = '\\x1b[31m';\n    static readonly FgGreen: string = '\\x1b[32m';\n    static readonly FgYellow: string = '\\x1b[33m';\n    static readonly FgBlue: string = '\\x1b[34m';\n    static readonly FgMagenta: string = '\\x1b[35m';\n    static readonly FgCyan: string = '\\x1b[36m';\n    static readonly FgWhite: string = '\\x1b[37m';\n    static readonly FgGray: string = '\\x1b[90m';\n    static readonly BgBlack: string = '\\x1b[40m';\n    static readonly BgRed: string = '\\x1b[41m';\n    static readonly BgGreen: string = '\\x1b[42m';\n    static readonly BgYellow: string = '\\x1b[43m';\n    static readonly BgBlue: string = '\\x1b[44m';\n    static readonly BgMagenta: string = '\\x1b[45m';\n    static readonly BgCyan: string = '\\x1b[46m';\n    static readonly BgWhite: string = '\\x1b[47m';\n    static readonly BgGray: string = '\\x1b[100m';\n\n    static colorString(color: string, msg: string): string {\n        return `${color}${msg}${Color.Reset}`;\n    }\n}\n", "/* eslint-disable no-console */\n\nimport _ from 'lodash';\nimport * as utils from '../utils';\nimport * as Logger from '../commons/logger';\nimport * as config from '../commons/config';\nimport * as constants from '../commons/constants';\nimport * as perf from '../commons/performance-logger';\nimport * as gridService from '../services/gridService';\nimport * as branchService from '../services/branchService';\nimport * as analyticsService from '../services/analyticsService';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { reporter } from '../reports/reporter';\nimport { TestRunStatus } from '../testRunStatus';\nimport { StopRunOnError, ArgError } from '../errors';\nimport { WorkerManager } from './WorkerManager';\nimport { getSuite, calcTestResultStatus, validateConfig } from './runnerUtils';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Color } from '../utils/color';\nimport type { RunnerOptions } from 'src/runOptions';\nimport type { RunListResult } from 'services/src/suite/service';\n\nconst { CLI_MODE } = constants;\nconst logger = Logger.getLogger('test-plan-runner');\n\nexport type ExecutionList = Awaited<ReturnType<typeof getSuite>>['tests'][number];\n\nexport class TestPlanRunner {\n    startTime = Date.now();\n    constructor(private readonly customExtensionLocalLocation: string | undefined) { }\n\n    private static _id: string = uuidv4();\n\n    public static get id() { return TestPlanRunner._id; }\n\n    private async runTestAllPhases(\n        beforeTests: ExecutionList,\n        tests: ExecutionList,\n        afterTests: ExecutionList,\n        branchToUse: string,\n        tpOptions: RunnerOptions,\n        executionId: string,\n        executionName: string,\n        testStatus: TestRunStatus,\n    ) {\n        const executionResults: { [testResultId: string]: any } = {};\n        const workerManager = new WorkerManager(this.customExtensionLocalLocation);\n        const runBeforeTests = async () => {\n            const workerCount = tpOptions.beforeParallel || 1;\n            const stopOnError = true;\n            const beforeTestsResults = await workerManager.runTests(beforeTests, testStatus, executionId, executionName, tpOptions, branchToUse, workerCount, stopOnError);\n            Object.assign(executionResults, beforeTestsResults);\n        };\n\n        const runTestPlanTests = async () => {\n            const workerCount = config.TESTIM_CONCURRENT_WORKER_COUNT || tpOptions.parallel;\n            const stopOnError = false;\n            perf.log('right before this.workerManager.runTests');\n            const testsResults = await workerManager.runTests(tests, testStatus, executionId, executionName, tpOptions, branchToUse, workerCount, stopOnError);\n            perf.log('right after this.workerManager.runTests');\n            Object.assign(executionResults, testsResults);\n        };\n\n        const runAfterTests = async () => {\n            const workerCount = tpOptions.afterParallel || 1;\n            const stopOnError = false;\n            const afterTestsResults = await workerManager.runTests(afterTests, testStatus, executionId, executionName, tpOptions, branchToUse, workerCount, stopOnError);\n            Object.assign(executionResults, afterTestsResults);\n        };\n\n        analyticsService.analyticsExecsStart({ executionId, projectId: tpOptions.project });\n        perf.log('right before runBeforeTests');\n        try {\n            await runBeforeTests();\n            perf.log('right before runTestPlanTests');\n            await runTestPlanTests();\n            perf.log('right after runTestPlanTests');\n            await runAfterTests();\n            return executionResults;\n        } catch (err) {\n            logger.error('error running test plan', { err });\n            if (err instanceof StopRunOnError) {\n                return testStatus.markAllQueuedTests(executionId, constants.runnerTestStatus.ABORTED, 'aborted', false);\n            }\n            throw err;\n        } finally {\n            await handlePixelValidationBatches();\n        }\n\n        async function handlePixelValidationBatches() {\n            if (tpOptions.lightweightMode?.disablePixelValidation) {\n                return;\n            }\n            // When sessionPlayer is available, use it - as it only attempts to close batches that exist.\n            if (tpOptions.mode === CLI_MODE.SELENIUM) {\n                const [{ getSessionPlayer }, { makeSDK }] = await Promise.all([import('../commons/getSessionPlayerRequire'), import('@applitools/eyes-sdk-core')]);\n                const { EyeSdkBuilder } = getSessionPlayer();\n                await EyeSdkBuilder.closeBatch(executionId, makeSDK);\n                return;\n            }\n            let applitoolsIntegrationData: Awaited<ReturnType<typeof testimServicesApi['getApplitoolsIntegrationData']>> | undefined;\n            try {\n                if (!tpOptions.company?.activePlan?.premiumFeatures?.applitools) {\n                    return;\n                }\n                applitoolsIntegrationData = await testimServicesApi.getApplitoolsIntegrationData(tpOptions.project);\n                if (_.isEmpty(applitoolsIntegrationData) || !executionId) {\n                    return;\n                }\n                const { runKey: apiKey, url: serverUrl } = applitoolsIntegrationData;\n                const tmpSDK = (require('@applitools/eyes-sdk-core') as typeof import('@applitools/eyes-sdk-core')).makeSDK({ name: 'Testim.io', version: '4.0.0', spec: {} });\n                await tmpSDK.closeBatches({ settings: { batchIds: [executionId], serverUrl, apiKey } });\n            } catch {\n                // No need to log\n            }\n        }\n    }\n\n    private async runTestPlan(\n        beforeTests: ExecutionList,\n        tests: ExecutionList,\n        afterTests: ExecutionList,\n        tpOptions: RunnerOptions,\n        testPlanName: string,\n        testPlanId: string | null,\n        branch: string,\n        isAnonymous?: boolean,\n    ) {\n        const executionId = utils.guid();\n        const projectId = tpOptions.project;\n        Logger.setExecutionId(executionId);\n        beforeTests.forEach(test => Object.assign(test, { isBeforeTestPlan: true }));\n        afterTests.forEach(test => Object.assign(test, { isAfterTestPlan: true }));\n        const fullTestList = [...beforeTests, ...tests, ...afterTests] as ExecutionList;\n        const testStatus = new TestRunStatus(fullTestList, tpOptions, testPlanId, branch);\n\n        const configs = _.chain(fullTestList)\n            .map<string>(test => (test as any).overrideTestConfig?.name || '')\n            .uniq()\n            .compact()\n            .value();\n        const configName = configs?.length === 1 ? configs[0] : null;\n\n        const testNames = tpOptions.lightweightMode?.onlyTestIdsNoSuite ? [] : fullTestList.map(test => (test as { name: string }).name);\n\n        const testListInfoPromise = tpOptions.lightweightMode?.onlyTestIdsNoSuite ?\n            { beforeTests, tests, afterTests } :\n            testStatus.executionStart(executionId, projectId, this.startTime, testPlanName, testNames);\n        perf.log('before testListInfoPromise');\n        const testListInfo = await testListInfoPromise;\n        if (!tpOptions.lightweightMode?.onlyTestIdsNoSuite) {\n            reporter.onTestPlanStarted(testListInfo.beforeTests, testListInfo.tests, testListInfo.afterTests, testPlanName, executionId, isAnonymous, configName);\n        }\n\n        perf.log('before runTestAllPhases');\n        const results = await this.runTestAllPhases(testListInfo.beforeTests, testListInfo.tests, testListInfo.afterTests, branch, tpOptions, executionId, testPlanName || 'All Tests', testStatus);\n\n        perf.log('before executionEnd');\n        await testStatus.executionEnd(executionId);\n        perf.log('after executionEnd');\n        return { results, executionId, testPlanName, configName };\n    }\n\n    private isJsonString(value: string) {\n        try {\n            JSON.parse(value);\n        } catch {\n            return false;\n        }\n        return true;\n    }\n\n    private handleReportFailure(error: any, message: string) {\n        try {\n            if (error.text) {\n                message = error.text;\n            } else {\n                message = JSON.stringify(error);\n            }\n        } catch {\n            // ignored\n        }\n        console.error(Color.colorString(Color.FgMagenta, message));\n        process.exit(-1);\n    }\n\n    private async reportTestRunnerStarted(projectId: string, tpOptions: RunnerOptions) {\n        try {\n            return await testimServicesApi.reportRunnerStarted(projectId, tpOptions.testOptimization);\n        } catch (error) {\n            return this.handleReportFailure(error, 'Failed Report: Test Runner Started');\n        }\n    }\n\n    private async reportTestRunnerFinished(projectId: string) {\n        try {\n            return await testimServicesApi.reportRunnerFinished(projectId);\n        } catch (error) {\n            return this.handleReportFailure(error, 'Failed Report: Test Runner Finished');\n        }\n    }\n\n    private async runTestPlans(options: RunnerOptions, branchToUse: string) {\n        logger.info('start to run test plan', {\n            options: { ...options, token: undefined, userParamsData: undefined },\n            branchToUse,\n        });\n        type TestPlans = Awaited<ReturnType<typeof testimServicesApi['getTestPlanTestList']>>['testPlans'];\n        type TestPlansData = Awaited<ReturnType<typeof testimServicesApi['getTestPlanTestList']>>['testPlansData'];\n        type TestPlansDataTests = TestPlansData[string][number]['tests'];\n        function flattenTestListData(testPlansData: TestPlansData): any[] {\n            return _.flattenDeep(Object.values(testPlansData)).reduce<TestPlansDataTests>((all, testRun) => all.concat(testRun.beforeTests, testRun.tests, testRun.afterTests), []);\n        }\n\n        const testPlansResults: { [testPlanId: string]: { [executionId: string]: { [testResultId: string]: any } } } = {};\n        const testPlansTests = {};\n        const projectId = options.project;\n        let data = {\n            testPlans: [] as TestPlans,\n            testPlansData: {} as TestPlansData,\n        };\n        if (featureFlagsService.flags.enableTestPlanAggregation.isEnabled()) {\n            await utils.promiseMap(options.testPlanIds, async planId => {\n                const plan = await testimServicesApi.getTestPlanTestList(projectId, options.testPlan, [planId], branchToUse, options.intersections);\n                plan.testPlans.forEach(testPlan => {\n                    data.testPlans.push(testPlan);\n                    const testPlanId = testPlan._id;\n                    data.testPlansData[testPlanId] = plan.testPlansData[testPlanId];\n                });\n            });\n            await utils.promiseMap(options.testPlan, async planName => {\n                const plan = await testimServicesApi.getTestPlanTestList(projectId, [planName], options.testPlanIds, branchToUse, options.intersections);\n                plan.testPlans.forEach(testPlan => {\n                    data.testPlans.push(testPlan);\n                    const testPlanId = testPlan._id;\n                    data.testPlansData[testPlanId] = plan.testPlansData[testPlanId];\n                });\n            });\n        } else {\n            data = await testimServicesApi.getTestPlanTestList(projectId, options.testPlan, options.testPlanIds, branchToUse, options.intersections);\n\n        }\n        const testPlans = data.testPlans;\n        const testPlansData = data.testPlansData;\n        if (!testPlans || testPlans.length === 0) {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            throw new ArgError(`no test plan to run ${options.testPlan}`);\n        }\n        if (!testPlansData || Object.keys(testPlansData).length === 0) {\n            if (options.passZeroTests) {\n                return [];\n            }\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            throw new ArgError(`no test to run in test plan ${options.testPlan}`);\n        }\n        //TODO: add validation for mobile config\n        if (options.mode !== CLI_MODE.APPIUM) {\n            await validateConfig(options, flattenTestListData(testPlansData));\n        }\n        return await utils.promiseMap(testPlans, async testPlan => {\n            const id = testPlan.testPlanId;\n            testPlansResults[id] = {};\n\n            const testPlanOptions = { ...options };\n            testPlanOptions.baseUrl ||= testPlan.startUrl;\n            testPlanOptions.appId ||= testPlan.mobileApp?.appId || undefined;\n            testPlanOptions.gridId ||= testPlan.gridId;\n            //if user pass --grid with test plan we want to use grid option instead of host and port\n            if (options.grid) {\n                delete testPlanOptions.gridId;\n            }\n\n            testPlanOptions.gridData = await gridService.getTestPlanGridData(options, testPlan);\n\n            const testPlanName = testPlanOptions.overrideExecutionName || testPlan.name;\n            return await utils.promiseMap(testPlansData[id], async testPlanTests => {\n                const res = await this.runTestPlan(testPlanTests.beforeTests, testPlanTests.tests, testPlanTests.afterTests, testPlanOptions, testPlanName, id, branchToUse);\n                reporter.onTestPlanFinished(res.results, testPlan.name, this.startTime, res.executionId, false);\n                testPlansResults[id][res.executionId] = res.results;\n                // TODO: looks like everything below this line, should happen outside of this promiseMap (as it handles the result of all plan-data, but happens on each occurrence)\n                const executions = Object.keys(testPlansResults[id]).map(exeId => ({\n                    executionId: exeId,\n                    status: calcTestResultStatus(testPlansResults[id][exeId]),\n                }));\n                const tests = Object.keys(testPlansResults[id]).map(exeId => testPlansResults[id][exeId]).reduce((testResult, test) => Object.assign(testResult, test), {});\n                const success = calcTestResultStatus(tests);\n                Object.assign(testPlansTests, tests);\n                const executionId = success ? executions[0].executionId : executions.find(exec => !exec.status)!.executionId;\n                await testimServicesApi.saveTestPlanResult(projectId, id, { success, executions, executionId });\n                return res;\n            });\n        });\n    }\n\n    private async runAnonymousTestPlan(options: RunnerOptions, branchToUse: string) {\n        logger.info('start to run anonymous', {\n            options: { ...options, token: undefined },\n            branchToUse,\n        });\n\n        perf.log('before getSuite');\n        const suiteResult = await getSuite(options, branchToUse);\n        perf.log('after getSuite');\n\n        if (!suiteResult?.tests[0]?.length) {\n            if (options.rerunFailedByRunId) {\n                throw new ArgError('No failed tests found in the provided run');\n            }\n            if (options.passZeroTests) {\n                return [];\n            }\n            throw new ArgError('No tests to run');\n        }\n        branchToUse = ('branch' in suiteResult && suiteResult.branch) || branchToUse;\n        const runListResult = suiteResult as RunListResult;\n        if (options.rerunFailedByRunId && !runListResult.runName) {\n            if (!runListResult.runExists) {\n                throw new ArgError('Invalid run ID - no such run.');\n            }\n            const isAnonymouslyNamedRun = runListResult.runName === '';\n            if (isAnonymouslyNamedRun) {\n                runListResult.runName = `rerun-${options.rerunFailedByRunId}`;\n            }\n        }\n        const testPlanName = options.overrideExecutionName || runListResult.runName || ([] as string[]).concat(options.label, options.name, options.suites).join(' ');\n        const isAnonymous = true;\n        perf.log('Right before validateConfig + runAnonymousTestPlan tests map');\n\n        let nativeAppFromCLIParam: Awaited<ReturnType<typeof testimServicesApi.getAppDetails>>;\n        if (options.appId && options.mode === CLI_MODE.APPIUM) {\n            nativeAppFromCLIParam = await testimServicesApi.getAppDetails({ appId: options.appId, projectId: options.project });\n        }\n\n        return await utils.promiseMap(suiteResult.tests, async suiteTests => { // array of results per execution\n            if (nativeAppFromCLIParam) {\n                suiteTests.forEach(suiteTest => {\n                    if ('nativeApp' in suiteTest) {\n                        suiteTest.nativeApp = nativeAppFromCLIParam;\n                    }\n                });\n            }\n            // override result id for remote run mode and run only the first test data.\n            if (options.resultId) {\n                const firstTest = suiteTests[0];\n                firstTest.resultId = options.resultId;\n                suiteTests = [firstTest];\n            }\n            //TODO: add validation for mobile config\n            if (options.mode !== CLI_MODE.APPIUM) {\n                await validateConfig(options, suiteTests);\n            }\n            perf.log('right before runTestPlan');\n            const res = await this.runTestPlan([], suiteTests, [], options, testPlanName, null, branchToUse, isAnonymous);\n            perf.log('right after runTestPlan');\n            await reporter.onTestPlanFinished(res.results, testPlanName, this.startTime, res.executionId, isAnonymous);\n            return res;\n        });\n    }\n\n    async run(options: RunnerOptions) {\n        const branchToUse = branchService.getCurrentBranch();\n        let results = [];\n\n        await this.reportTestRunnerStarted(options.project, options);\n        if (utils.hasTestPlanFlag(options)) {\n            results = await this.runTestPlans(options, branchToUse);\n        } else {\n            results = await this.runAnonymousTestPlan(options, branchToUse);\n        }\n        await this.reportTestRunnerFinished(options.project);\n\n        const flattenResults = _.flattenDeep(results);\n        perf.log('right before onAllTestPlansFinished');\n        await reporter.onAllTestPlansFinished(flattenResults);\n        perf.log('right after onAllTestPlansFinished');\n        return flattenResults.map(res => res.results).reduce((total, cur) => Object.assign(total, cur), {});\n    }\n}\n", "import chalk from 'chalk';\nimport * as _ from 'lodash';\nimport * as pako from 'pako';\nimport * as utils from '../utils';\nimport * as config from './config';\nimport * as constants from './constants';\nimport * as httpRequest from './httpRequest';\nimport * as testimCustomToken from './testimCustomToken';\nimport pRetry from 'p-retry';\nimport hash from 'object-hash';\nimport { ArgError } from '../errors';\nimport { getLogger } from './logger';\nimport { TestPlanRunner } from '../runners/TestPlanRunner';\nimport type { SerializedSlot } from '../services/concurrencyCompanyService';\nimport type { GridSerializationInput } from '../services/gridService';\nimport type { AwaitedReturnType } from '../utils';\nimport type { RawGrid } from 'services/src/commons/mongo/models/grid';\nimport type { LightweightSettings, RunnerOptions } from '../runOptions';\nimport type { TestRunStatus, TestRunStatusTestResult } from '../testRunStatus';\nimport type { RawBranchesData } from 'services/src/commons/mongo/models/branchesData';\nimport type { Defaults } from 'services/src/commons/mongo/types/DbProject';\nimport type { ApplitoolsIntegrationData } from 'clickim/src/common/api/testimApplitoolsApi';\nimport type { TestBundle } from 'clickim/src/common/api/testimTestApi';\nimport type { RawMobileAppVersion } from 'services/src/commons/mongo/models/mobileAppVersion';\nimport type { TestOptimization } from '../../../services/src/commons/mongo/models/testOptimization.ts';\n\nconst runnerVersion = utils.getRunnerVersion();\nconst logger = getLogger('testim service api');\n\nconst DEFAULT_REQUEST_RETRY = 3;\nconst GRID_PATH = '/grid';\nconst TEST_RESULT_ARTIFACTS_BUCKET_PATH = 'test-result-artifacts';\n\ntype TestStatus = typeof constants.runnerTestStatus[keyof typeof constants.runnerTestStatus];\n\n// #region utilities\nasync function getDefaultHeaders() {\n    const bearerToken = await testimCustomToken.getCustomTokenV3();\n    if (!bearerToken) {\n        throw new Error('Failed to get token from server');\n    }\n\n    return {\n        [constants.X_HEADER_RUNNER_ID]: TestPlanRunner.id,\n        Authorization: `Bearer ${bearerToken}`,\n    };\n}\n\nasync function postAuth<T = any>({\n    url, body, headers = {}, timeout, retry,\n}: { url: string; body: object; headers?: { [key: string]: any }; timeout?: number; retry?: number }) {\n    const tokenHeaders = await getDefaultHeaders();\n    const finalHeaders = { ...headers, ...tokenHeaders };\n    return httpRequest.post<T>({\n        url: `${config.SERVICES_HOST()}${url || ''}`,\n        body,\n        headers: finalHeaders,\n        timeout,\n        retry,\n    });\n}\n\nasync function postAuthFormData<T = any>(url: string, fields: { [fieldName: string]: any }, files: httpRequest.Files, headers: object = {}, timeout: number | undefined = undefined) {\n    const tokenHeaders = await getDefaultHeaders();\n    const finalHeaders = { ...headers, ...tokenHeaders };\n    return await httpRequest.postForm<T>(`${config.SERVICES_HOST()}${url || ''}`, fields, files, finalHeaders, timeout);\n}\n\nasync function putAuth<T = any>(url: string, body: object) {\n    const headers = await getDefaultHeaders();\n    return await httpRequest.put<T>(`${config.SERVICES_HOST()}${url || ''}`, body, headers);\n}\n\nasync function deleteAuth<T = any>(url: string, body: object) {\n    const headers = await getDefaultHeaders();\n    return await httpRequest.deleteReq<T>(`${config.SERVICES_HOST()}${url || ''}`, body, headers);\n}\n\nasync function getTextWithAuth(url: string, query?: string | object | null) {\n    const headers = await getDefaultHeaders();\n    return await httpRequest.getText(`${config.SERVICES_HOST()}${url || ''}`, query || undefined, headers);\n}\nasync function getWithAuth<T = any>(url: string, query?: string | object | null, options?: { isBinary?: boolean; skipProxy?: boolean }, timeout?: number) {\n    const headers = await getDefaultHeaders();\n    return await httpRequest.get<T>(`${config.SERVICES_HOST()}${url || ''}`, query || undefined, headers, timeout, options);\n}\n// #endregion\n\nexport function getS3Artifact<T = any>(url: string, timeout?: number) {\n    return pRetry(() => getWithAuth<T>(`/storage${url}`, null, { isBinary: true }, timeout), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function getS3ArtifactText(url: string) {\n    return pRetry(() => getTextWithAuth(`/storage${url}`));\n}\n\nexport async function reportRunnerStarted(projectId: string, testOptimization: TestOptimization) {\n    return await postAuth<void>({ url: '/test-runner', body: { projectId, testOptimization } });\n}\n\nexport async function reportRunnerFinished(projectId: string) {\n    return await deleteAuth<void>('/test-runner', { projectId });\n}\n\n// TODO: unused?\nexport async function getTestPlan(projectId: string, testPlanNames: string[]) {\n    //TODO: need to be checked after 3 months to prevent users from using old version\n    const parseProperty = (dataValue?: string | string[] | null): string[] => (dataValue === null ? [] : (typeof (dataValue) === 'string' && JSON.parse(dataValue)) || dataValue);\n    type TestPlans = AwaitedReturnType<typeof import('services/src/test-plan/service')['testPlan']['getAll']>;\n    const body = await pRetry(() => getWithAuth<TestPlans>('/testPlan', { projectId, name: testPlanNames.join(',') }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n    return body.map(({ testConfigIds, beforeAllLabels, testLabels, afterAllLabels, ...testPlan }) => Object.assign(testPlan, {\n        testConfigIds: parseProperty(testConfigIds),\n        beforeAllLabels: parseProperty(beforeAllLabels),\n        testLabels: parseProperty(testLabels),\n        afterAllLabels: parseProperty(afterAllLabels),\n    }));\n}\n\nexport async function loadSfdcCredential({ branch, projectId }: { projectId: string; branch: string }) {\n    const branchData = await pRetry(() => getWithAuth<RawBranchesData>(`/branch/branchData/${encodeURIComponent(branch)}`, {\n        projectId,\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n    return branchData?.sfdcCredential;\n}\n\ninterface LoadTestParams { testId: string; branch: string; projectId: string; skipSharedSteps?: boolean; useBranchMap?: boolean }\n\nexport function loadTest({ testId, branch, projectId, skipSharedSteps = false, useBranchMap = true }: LoadTestParams) {\n    return pRetry(() => getWithAuth<TestBundle>(`/test/${testId}`, {\n        projectId,\n        branch,\n        skipSharedSteps,\n        useBranchMap,\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function saveTestPlanResult(projectId: string, testPlanId: string, result: { success: boolean; executions: { executionId: string; status: boolean }[]; executionId: string }) {\n    return pRetry(() => postAuth<void>({ url: '/testPlan/result', body: { projectId, testPlanId, result } }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function updateTestStatus(projectId: string, executionId: string, testId: string, resultId: string, status: string, data: object, retries = DEFAULT_REQUEST_RETRY) {\n    return pRetry(() => putAuth<void>('/result/run/test', {\n        runId: executionId,\n        testId,\n        resultId,\n        status,\n        projectId,\n        runnerVersion,\n        ...data,\n    }), { retries, factor: 1 });\n}\n\nexport function updateExecutionTests(\n    executionId: string, runnerStatuses: string[], status: TestStatus, reason: string, success: boolean, startTime: number | null, endTime: number | null, projectId: string,\n) {\n    return pRetry(() => putAuth<void>('/result/run/tests', {\n        runId: executionId,\n        runnerStatuses,\n        status,\n        reason,\n        success,\n        startTime,\n        endTime,\n        projectId,\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\ninterface ReportExecutionStartedParams {\n    executionId: string;\n    projectId: string;\n    labels: string | never[];\n    startTime: number;\n    executions: { [testResultId: string]: TestRunStatusTestResult };\n    config: TestRunStatus['execConfig'];\n    resultLabels: string[];\n    remoteRunId: string | undefined;\n    localRunUserId: string | undefined;\n    isLocalRun: boolean;\n    intersections: RunnerOptions['intersections'];\n}\nexport async function reportExecutionStarted({\n    executionId,\n    projectId,\n    labels,\n    startTime,\n    executions,\n    config: _config,\n    resultLabels,\n    remoteRunId,\n    localRunUserId,\n    isLocalRun,\n    intersections,\n}: ReportExecutionStartedParams) {\n    const { isCi: isCiRun } = await import('../cli/isCiRun');\n    return postAuth<void>({\n        timeout: 90000,\n        url: '/result/run',\n        body: {\n            runId: executionId,\n            projectId,\n            labels,\n            startTime,\n            execution: executions,\n            status: 'RUNNING',\n            config: _config,\n            resultLabels,\n            remoteRunId,\n            intersections,\n            metadata: {\n                isCiRun,\n                localRunUserId,\n                isLocalRun,\n            },\n        },\n        retry: 3, // TODO: add a log in the callback\n    });\n}\n\nexport function reportExecutionFinished(\n    status: string,\n    executionId: string,\n    projectId: string,\n    success: boolean,\n    tmsOptions: object = {},\n    remoteRunId: string | undefined = undefined,\n    resultExtraData: any = undefined,\n) {\n    const endTime = Date.now();\n\n    return pRetry(() => putAuth<void>('/result/run', {\n        runId: executionId,\n        projectId,\n        endTime,\n        status,\n        success,\n        tmsOptions,\n        remoteRunId,\n        resultExtraData,\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport async function getTestPlanTestList(projectId: string, names: string[], planIds: string[], branch: string, intersections: RunnerOptions['intersections']) {\n    return pRetry(() => postAuth<AwaitedReturnType<typeof import('services/src/test-plan/service')['testPlan']['getTestPlanTestList']>>({\n        url: '/testPlan/list',\n        body: { projectId, names, planIds, branch, intersections },\n        // people who send insane lists get a timeout :(\n        timeout: 120000,\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\ninterface GetSuiteTestListParams {\n    projectId: string;\n    labels: string[];\n    testIds: string[];\n    testNames: string[];\n    testConfigNames?: string[];\n    suiteNames: string[];\n    suiteIds: string[];\n    branch: string;\n    rerunFailedByRunId?: string;\n    testConfigIds?: string[];\n    intersections: import('../runOptions').RunnerOptions['intersections'];\n}\nexport function getSuiteTestList({\n    projectId, labels, testIds, testNames, testConfigNames, suiteNames, suiteIds, branch, rerunFailedByRunId, testConfigIds, intersections,\n}: GetSuiteTestListParams) {\n    return pRetry(() => postAuth<import('services/src/suite/service').RunListResult>({\n        url: '/suite/v2/list',\n        body: {\n            projectId,\n            labels,\n            testIds,\n            testNames,\n            testConfigNames,\n            suiteNames,\n            suiteIds,\n            branch,\n            rerunFailedByRunId,\n            testConfigIds,\n            intersections,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport async function getAppDetails({ appId, projectId }: { appId: string; projectId: string }): Promise<RawMobileAppVersion> {\n    try {\n        return await pRetry(() => getWithAuth<RawMobileAppVersion>(`/mobile-app/app/${appId}?projectId=${projectId}`), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n    } catch (error) {\n        throw new Error(`Could not load app with the ID ${appId}`, { cause: error });\n    }\n}\n\nexport async function getUsageForCurrentBillingPeriod(projectId: string) {\n    try {\n        type UsageCurrentBillingPeriod = AwaitedReturnType<typeof import('services/src/plan/planService')['getUsageStatusForCurrentBillingPeriodByProjectId']>;\n        return await pRetry(() => getWithAuth<UsageCurrentBillingPeriod>(`/plan/project/${projectId}/usage-current-billing-period`), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n    } catch (error) {\n        logger.error('failed getting usage for current billing period', { projectId, error });\n        return undefined;\n    }\n}\n\nexport function isTestResultCompleted(resultId: string, projectId: string, testRetryKey: `${number}:${number}`) {\n    return pRetry(() => getWithAuth<{ isComplete: boolean }>(`/result/${resultId}/isComplete`, { projectId, testRetryKey }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function getTestResults(testId: string, resultId: string, projectId: string, branch: string) {\n    type TestResult = AwaitedReturnType<typeof import('services/src/test/service').TestService['getTestResultV2']>;\n    return pRetry(() => getWithAuth<TestResult>(`/test/v2/${testId}/result/${resultId}`, { projectId, branch }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function keepAliveGrid(projectId: string, slots: { gridId: string; slotId: string }[]) {\n    return postAuth<{ status: 'success' }>({\n        url: `/grid/keep-alive?reqId=${utils.guid()}`,\n        body: { projectId, slots },\n        timeout: 10000,\n    });\n}\n\nexport function releaseGridSlot(companyId: string, projectId: string, slotId: string, gridId: string, browser: string) {\n    return postAuth<{ status: 'success' }>({\n        url: `/grid/release?reqId=${utils.guid()}`,\n        body: {\n            companyId, projectId, slotId, gridId, browser,\n        },\n    });\n}\n\nexport function getHybridGridProvider(body: { companyId: string; gridId: string; maxRetries: number; currentRetry: number; browser: string; usingTunnel: boolean }) {\n    return postAuth<AwaitedReturnType<typeof import('services/src/grid/hybridGridService')['getGridProvider']>>({\n        url: '/grid/hybrid/provider',\n        body,\n    });\n}\n\ninterface GetSlotRequest { testResultId?: string; host?: string; gridId?: string; companyId?: string; projectId: string; gridName?: string; browser?: any; executionId: string; isRunningLocalMode?: boolean }\nexport function getGridSlot(data: GetSlotRequest) {\n    return pRetry(() => getWithAuth<{ status: 'success'; grid: GridSerializationInput } | { status: 'error'; code: string }>(\n        '/grid/grid-slot',\n        { ...data, reqId: utils.guid() },\n    ), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\ninterface InitializeUserWithAuthParams {\n    projectId: string;\n    token: string;\n    branchName?: string;\n    lightweightMode?: LightweightSettings;\n    localGrid: boolean;\n    publicIp?: string;\n    gridId?: string;\n    grid?: string;\n    clientCliVersion?: string;\n    clientNodeVersion?: string;\n    clientNpmVersion?: string;\n}\nexport interface InitializedUserWithAuth {\n    authData: { token: string; refreshToken: string; uid: string; ngrokToken?: string; isNgrokWhitelisted?: boolean };\n    companyByProjectId: AwaitedReturnType<typeof import('services/src/company/companyService')['getCompanyByProjectIdUsingCache']>;\n    projectById: NonNullable<AwaitedReturnType<typeof import('services/src/commons/testimCache')['project']['getById']>>;\n    allGrids: RawGrid[];\n    branchName: string | RawBranchesData | null;\n    clientPublicIp?: string;\n    clientConfig: {\n        clientMessages: [{ text: string; color: string; bgColor: string }] | [];\n        serviceUrl: string;\n        editorUrl: string;\n        region: 'euc1' | 'usw2';\n        [key: string]: any;\n    };\n}\nexport async function initializeUserWithAuth({\n    projectId, token, branchName, lightweightMode, localGrid,\n    publicIp, gridId, grid, clientCliVersion, clientNodeVersion, clientNpmVersion }: InitializeUserWithAuthParams) {\n    try {\n        return await pRetry(() => httpRequest.post<InitializedUserWithAuth>({\n            url: `${config.SERVICES_HOST()}/executions/initialize`,\n            body: {\n                projectId,\n                token,\n                branchName: branchName || 'master',\n                lightweightMode,\n                localGrid,\n                publicIp,\n                gridId,\n                gridName: grid,\n                clientCliVersion,\n                clientNodeVersion,\n                clientNpmVersion,\n            },\n            // Before adding the WAF to the flow of the initialize endpoint our default timeout was 30 seconds and this was enough. Now, it seems that our work with WAF, sometimes, might take longer\n            // than 30 seconds thus we need to increase the timeout to 1 minute.\n            timeout: 60_000,\n        }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n    } catch (e) {\n        logger.error('error initializing info from server', e);\n        if (e.message?.includes('Bad Request')) {\n            throw new ArgError(\n                'Error trying to retrieve CLI token. ' +\n                'Your CLI token and project might not match. ' +\n                'Please make sure to pass `--project` and `--token` that' +\n                ' match to each other or make sure they match in your ~/.testim file.');\n        }\n        if (e.code?.includes('ENOTFOUND')) {\n            throw new ArgError('Due to network connectivity issues, Testim CLI has been unable to connect to the Testim backend.');\n        }\n        if (e.text) {\n            try {\n                const errorMessage = JSON.parse(e.text);\n                const messageColor = errorMessage.clientMessage.color as typeof chalk.Color || 'red';\n                const bgColor = errorMessage.clientMessage.bgColor as typeof chalk.BackgroundColor || 'bgBlack';\n                // eslint-disable-next-line no-console\n                console.log(chalk[bgColor](chalk[messageColor](errorMessage.clientMessage.text)));\n                if (errorMessage.exitCode) {\n                    process.exit(errorMessage.exitCode);\n                }\n            } catch {\n                logger.error('Error parsing error message from server', e);\n            }\n        }\n        throw e;\n    }\n}\n\nexport async function getEditorUrl() {\n    if (config.EDITOR_URL) {\n        return { editorUrl: config.EDITOR_URL };\n    }\n    try {\n        return await pRetry(() => getWithAuth<{ editorUrl: string }>('/system-info/editor-url'), {\n            retries: DEFAULT_REQUEST_RETRY,\n            onFailedAttempt: error => {\n                if (error.attemptNumber >= DEFAULT_REQUEST_RETRY) {\n                    throw error;\n                }\n            },\n            factor: 1,\n        });\n    } catch (err) {\n        logger.error('cannot retrieve editor-url from server', { err });\n        return { editorUrl: 'https://app.testim.io' };\n    }\n}\n\nexport function getAllGrids(companyId: string) {\n    return pRetry(() => getWithAuth<AwaitedReturnType<typeof import('services/src/grid/gridService')['GridService']['getAllGrids']>>('/grid', { companyId }),\n        { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport const fetchLambdatestConfig = async (companyId: string) => pRetry(\n    () => getWithAuth<ReturnType<typeof import('services/src/grid/gridService')['GridService']['getLtConfig']>>('/grid/lt/config', { companyId }),\n    { retries: DEFAULT_REQUEST_RETRY, factor: 1 },\n);\n\nexport const getLabFeaturesByProjectId = async (projectId: string) => pRetry(\n    () => getWithAuth<NonNullable<AwaitedReturnType<typeof import('services/src/commons/testimCache')['labFeatures']['getLabFeaturesByProjectIdV2']>>>(`/labFeature/v2/project/${projectId}`),\n    { retries: DEFAULT_REQUEST_RETRY, factor: 1 },\n);\n\nexport function getRealData(projectId: string, channel: string, query: string) {\n    interface RealDataRes { success: boolean; data: AwaitedReturnType<typeof import('services/src/real-data/realDataService')['getDataByModel']> }\n    return pRetry(\n        () => getWithAuth<RealDataRes>(`/real-data/${channel}?${query}&projectId=${projectId}`),\n        { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function updateTestResult(projectId: string, resultId: string, testId: string, testResult: object, remoteRunId?: string) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/result/test',\n        body: {\n            projectId,\n            resultId,\n            testId,\n            testResult,\n            remoteRunId,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function clearTestResult(projectId: string, resultId: string, testId: string, testResult: object) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/result/test/clear',\n        body: {\n            projectId,\n            resultId,\n            testId,\n            testResult,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function saveRemoteStep(projectId: string, resultId: string, stepId: string, remoteStep: object) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/remoteStep',\n        body: {\n            projectId,\n            resultId,\n            stepId,\n            remoteStep,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nfunction relativize(uri: string) {\n    return uri.startsWith('/') ? uri : `/${uri}`;\n}\n\nfunction getStorageRelativePath(filePath: string, bucket: string, projectId: string) {\n    let fullPath = relativize(filePath);\n    if (projectId) {\n        fullPath = `/${projectId}${fullPath}`;\n    }\n    if (bucket) {\n        fullPath = `/${bucket}${fullPath}`;\n    }\n\n    return fullPath;\n}\n\nasync function uploadArtifact(projectId: string, testId: string, testResultId: string, content: string, subType: string, mimeType = 'application/octet-stream') {\n    let fileSuffix = null;\n    if (mimeType === 'application/json') {\n        fileSuffix = '.json';\n    }\n    const fileName = `${subType}_${utils.guid()}${fileSuffix || ''}`;\n    const path = `${testId}/${testResultId}/${fileName}`;\n    const storagePath = getStorageRelativePath(path, TEST_RESULT_ARTIFACTS_BUCKET_PATH, projectId);\n\n    const buffer = Buffer.from(pako.gzip(content, {\n        level: 3, // sufficient time/size ratio.\n    }));\n\n    const files = {\n        file: {\n            fileName,\n            buffer,\n        },\n    };\n\n    await pRetry(\n        () => postAuthFormData(`/storage${storagePath}`, {}, files, { 'X-Asset-Encoding': 'gzip' }),\n        { retries: DEFAULT_REQUEST_RETRY, factor: 1 },\n    );\n    return storagePath;\n}\n\nexport const uploadRunDataArtifact = _.memoize(async (projectId: string, testId: string, testResultId: string, runData: object) => {\n    if (_.isEmpty(runData)) {\n        return undefined;\n    }\n    return await uploadArtifact(projectId, testId, testResultId, JSON.stringify(runData), 'test-run-data', 'application/json');\n}, (projectId, testId, testResultId, runData) => `${hash(runData)}:${testId}:${testResultId}`);\n\nexport const updateTestDataArtifact = _.memoize(async (projectId: string, testId: string, testResultId: string, testData: object | undefined, projectDefaults: Defaults) => {\n    if (!testData || _.isEmpty(testData)) {\n        return undefined;\n    }\n    const removeHiddenParamsInTestData = () => {\n        const testDataValueClone = _.clone(testData);\n        if (projectDefaults?.hiddenParams) {\n            const hiddenParams = projectDefaults.hiddenParams || [];\n            const hiddenParamsArray = Array.isArray(hiddenParams) ? hiddenParams : Object.keys(hiddenParams);\n            hiddenParamsArray.forEach((param) => {\n                if (testDataValueClone[param as keyof typeof testDataValueClone]) {\n                    Object.assign(testDataValueClone, { [param]: constants.test.HIDDEN_PARAM });\n                }\n            });\n        }\n        return testDataValueClone;\n    };\n\n    return await uploadArtifact(projectId, testId, testResultId, JSON.stringify(removeHiddenParamsInTestData()), 'test-test-data', 'application/json');\n}, (projectId, testId, testResultId, testData) => `${hash(testData!)}:${testId}:${testResultId}`);\n\nexport function addTestRetry({\n    projectId,\n    runId,\n    testId,\n    newResultId,\n    originalTestResultId,\n    previousTestResultId,\n    testResult,\n}: { projectId: string; runId: string; testId: string; newResultId: string; originalTestResultId?: string; previousTestResultId?: string; testResult: object }) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/result/test/retry',\n        body: {\n            projectId,\n            newResultId,\n            originalTestResultId,\n            previousTestResultId,\n            testId,\n            runId,\n            testResult,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport async function getApplitoolsIntegrationData(projectId: string) {\n    try {\n        return await getWithAuth<ApplitoolsIntegrationData>(`/integration/applitools/v3/connected?projectId=${projectId}`);\n    } catch (err) {\n        logger.warn('could\\'nt get applitools integration data.', { err });\n        return {} as Partial<ApplitoolsIntegrationData>;\n    }\n}\n\ntype AcquiredTunnels = AwaitedReturnType<typeof import('services/src/tunnel/service')['tunnelService']['acquireTunnel']>;\nexport async function getCloudflareTunnel(companyId: string, routes: string[]) {\n    try {\n        return await putAuth<AcquiredTunnels>('/tunnel', { companyId, routes });\n    } catch (err) {\n        logger.warn('could\\'nt get tunnel.', { err });\n        return {} as AcquiredTunnels;\n    }\n}\n\nexport async function forceUpdateCloudflareTunnelRoutes(companyId: string, tunnelId: string) {\n    try {\n        return await postAuth<void>({ url: `/tunnel/${tunnelId}`, body: { companyId } });\n    } catch (err) {\n        logger.warn('could\\'nt get tunnel.', { err });\n        return undefined;\n    }\n}\n\nexport async function deleteCloudflareTunnel(companyId: string, tunnelId: string) {\n    try {\n        return await deleteAuth<void>(`/tunnel/${tunnelId}`, { companyId });\n    } catch (err) {\n        logger.warn('could\\'nt get tunnel.', { err });\n        return undefined;\n    }\n}\n\nexport function updateRemoteRunFailure(body: { remoteRunId: string; projectId: string; token: string; error: string }) {\n    return httpRequest.post<void>({ url: `${config.SERVICES_HOST()}/result/remoteRunFailure`, body });\n}\n\ninterface GetMobileDevicesFromGridParams { projectId: string; projectType: string; gridId: string; companyId: string; selectors?: string }\nexport async function getMobileDevicesFromGrid({ projectId, projectType, gridId, companyId, selectors }: GetMobileDevicesFromGridParams) {\n    let url = `${GRID_PATH}/mobileDevices/${gridId}/${companyId}?projectType=${projectType}`;\n    url = selectors ? `${url}&selectors=${encodeURIComponent(selectors)}` : url;\n    try {\n        return await pRetry(() => getWithAuth<import('services/src/grid/mobileGridService').PlaybackMobileDevice[]>(url, { projectId }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n    } catch (err) {\n        logger.warn('could\\'nt get devices from headspin grid.', { err });\n        return null;\n    }\n}\n\ninterface UploadToGridParams {\n    projectId: string;\n    gridId: string;\n    app: RawMobileAppVersion;\n    timeout?: number;\n}\n\ninterface FixGridAppIDStructureParams {\n    projectId: string;\n    gridId: string;\n    appId: string;\n    gridAppId: string;\n    gridType: string;\n    gridHost: string;\n}\n\nexport async function uploadAppToGrid({ projectId, gridId, app, timeout }: UploadToGridParams) {\n    return pRetry(\n        () =>\n            postAuth<{ gridAppId: string; gridType: string; gridId: string }>(\n                {\n                    url: `/mobile-app/app/upload-to-grid?projectId=${projectId}&gridId=${gridId}`,\n                    body: app,\n                    timeout,\n                },\n            ),\n        {\n            retries: DEFAULT_REQUEST_RETRY, factor: 1,\n        },\n    );\n}\n\nexport async function fixGridAppIDStructure(body: FixGridAppIDStructureParams) {\n    return pRetry(() => postAuth<void>({ url: '/mobile-app/app/fix-grid-app-id', body }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport async function requestCompanySlot(companyId: string, projectId: string) {\n    return pRetry(() => postAuth<{ status: 'success'; slotId: string } | { status: 'error'; code: string }>(\n        {\n            url: '/slot-management/request-slot',\n            body: {\n                companyId,\n                projectId,\n            },\n        }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport async function releaseCompanySlot(companyId: string, projectId: string, slotId: string) {\n    return pRetry(() => postAuth<{ status: 'success' }>({\n        url: '/slot-management/release-slot',\n        body: {\n            companyId,\n            projectId,\n            slotId,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport async function updateCompanySlot(companyId: string, projectId: string, slot: Partial<SerializedSlot>) {\n    return pRetry(() => putAuth<{ status: 'success' }>('/slot-management/update-slot',\n        {\n            slotId: slot.slotId,\n            companyId,\n            projectId,\n            slot,\n        },\n    ), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function keepAliveCompanySlots(companyId: string, projectId: string, slots: Partial<SerializedSlot>[]) {\n    return postAuth<{ status: 'success' }>({\n        url: `/slot-management/keep-alive?reqId=${utils.guid()}`,\n        body: { slots, companyId, projectId },\n        timeout: 10000,\n    });\n}\n\nexport async function getBrowserStackSessionMetaData(sessionId: string, gridInfo: { user: string; key: string }) {\n    return await httpRequest.get<{ automation_session: { public_url: string } }>(\n        `${config.BROWSERSTACK_MOBILE_API_URL}/sessions/${sessionId}`,\n        undefined,\n        { Authorization: `Basic ${Buffer.from(`${gridInfo.user}:${gridInfo.key}`).toString('base64')}` },\n    );\n}\n\nexport async function validateUserAccessKey(data: { userAccessKey: string; projectId: string }) {\n    try {\n        await getWithAuth('/v2/project/validateUserAccessKey', data);\n        return true;\n    } catch (error) {\n        logger.error('error validating user access key', { error });\n        return false;\n    }\n}\n", "import * as utils from './utils';\n\nexport function getPackageVersion() {\n    return utils.getRunnerVersion();\n}\n", "import chalk from 'chalk';\nimport * as perf from './performance-logger';\nimport * as servicesApi from './testimServicesApi';\nimport * as localRunnerCache from './runnerFileCache';\nimport * as testimCustomToken from './testimCustomToken';\nimport { getPublicIp } from '../utils/network';\nimport { CLI_MODE, REGION_CONFIG } from './constants';\nimport { getLogger } from './logger';\nimport { featureFlagsService } from './featureFlagsService';\nimport { getPackageVersion } from '../testimNpmDriver';\nimport { getEnginesVersion } from '../utils';\nimport { getNpmVersion } from './npmWrapper';\nimport { setServicesHost } from './config';\nimport type { RunnerOptions } from '../runOptions';\nimport type { CommonSharedOptions } from '../runner';\n\nconst logger = getLogger('initializeUserWithAuth');\n\nconst FIVE_MINUTES_MS = 1000 * 60 * 5;\nconst TEN_HOURS_MS = 1000 * 60 * 60 * 10;\n\nfunction preloadSlowRequires(mode?: RunnerOptions['mode']) {\n    if (CLI_MODE.EXTENSION === mode) {\n        return;\n    }\n    process.nextTick(() => {\n        // heuristic to pay the cost of loading the sessionPlayer here while we are waiting for the backend\n        try {\n            require('./getSessionPlayerRequire').getSessionPlayer();\n        } catch {\n            //silent catch\n        }\n    });\n}\n\nfunction printMessagesFromServer(result: servicesApi.InitializedUserWithAuth) {\n    if (result.clientConfig?.clientMessages?.length) {\n        result.clientConfig.clientMessages.forEach((message) => {\n            const textColor = message.color as typeof chalk.Color || 'yellow';\n            const bgColor = message.bgColor as typeof chalk.BackgroundColor || 'bgBlack';\n            // eslint-disable-next-line no-console\n            console.log(chalk[bgColor](chalk[textColor](message.text)));\n        });\n    }\n}\n\nfunction setRegionConfig(regionConfig: servicesApi.InitializedUserWithAuth['clientConfig']) {\n    const { serviceUrl } = regionConfig;\n    setServicesHost(serviceUrl);\n    localRunnerCache.memoize(\n        async () => regionConfig,\n        REGION_CONFIG.CACHE_FN_NAME,\n        REGION_CONFIG.TTL,\n        { serviceUrl },\n    )();\n}\n\nexport async function initializeUserWithAuth(options: CommonSharedOptions) {\n    const { project, token, userAccessKey, lightweightMode, useLocalChromeDriver, useChromeLauncher, mode, gridId, grid } = options;\n\n    const lightweightModeGeneral = Boolean(lightweightMode?.general);\n    const localGrid = Boolean(useLocalChromeDriver || useChromeLauncher);\n    const memoizationTTL = lightweightModeGeneral ? TEN_HOURS_MS : FIVE_MINUTES_MS;\n    const clientCliVersion = getPackageVersion();\n    const clientNodeVersion = getEnginesVersion();\n    const clientNpmVersion = await getNpmVersion();\n\n    let publicIp = null;\n    if (featureFlagsService.flags.getPublicIpFrom3rdPartyServices.isEnabled() && !localGrid) {\n        try {\n            publicIp = await getPublicIp();\n        } catch (e) {\n            logger.error('failed to get public ip', e);\n        }\n    }\n    let initializedFromCache = true;\n    perf.log('before initializeUserWithAuth');\n    const result = await localRunnerCache.memoize(async () => {\n        preloadSlowRequires(mode);\n        initializedFromCache = false;\n        return await servicesApi.initializeUserWithAuth({\n            projectId: project,\n            token,\n            branchName: options.branch,\n            lightweightMode,\n            localGrid,\n            publicIp,\n            gridId,\n            grid,\n            clientCliVersion,\n            clientNodeVersion,\n            clientNpmVersion,\n        });\n    }, 'initializeUserWithAuth', memoizationTTL, { project, token, branchName: options.branch, lightweightModeGeneral, localGrid, gridId, grid, publicIp })();\n    // Printing messages to the user from the server.\n    printMessagesFromServer(result);\n    setRegionConfig(result.clientConfig);\n    options.publicIps = [result.clientPublicIp];\n    perf.log('after initializeUserWithAuth');\n    if (publicIp && result.clientPublicIp && (result.clientPublicIp !== publicIp)) { // There might be situations services don't see our public ip\n        logger.error('public ip mismatch', { publicIpFromExternalService: publicIp, publicIpFromServices: result.clientPublicIp });\n        options.publicIps.push(publicIp);\n    }\n    testimCustomToken.initFromData(result.authData, { projectId: project, token, userAccessKey, publicIp: result.clientPublicIp, initializedFromCache });\n    return result;\n}\n", "import * as os from 'node:os';\nimport * as utils from '../utils';\nimport * as mockNetworkRuleFileSchema from './mockNetworkRuleFileSchema.json';\nimport * as prepareRunnerAndTestimStartUtils from './prepareRunnerAndTestimStartUtils';\nimport Ajv from 'ajv';\nimport { CLI_MODE } from './constants';\nimport { downloadAndInstallChromium } from '../chromiumInstaller';\nimport { getLogger } from './logger';\nimport type { RunnerOptions } from '../runOptions';\n\nconst MAX_RULE_FILE_SIZE_IN_MB = 1;\nconst PREPARE_MOCK_NETWORK_ERROR_PREFIX = 'JSON file supplied to --mock-network-pattern';\n\nconst logger = getLogger('prepare runner');\n\nexport async function prepare(options: RunnerOptions) {\n    let chromeDriverPromise = Promise.resolve();\n\n    if (options.useLocalChromeDriver) {\n        options.chromeBinaryLocation = options.downloadBrowser ? await downloadAndInstallChromium() : options.chromeBinaryLocation;\n        chromeDriverPromise = prepareRunnerAndTestimStartUtils.prepareChromeDriver(\n            { projectId: options.project, userId: options.user },\n            { chromeBinaryLocation: options.chromeBinaryLocation },\n            Boolean(options.lightweightMode?.general),\n        );\n        options.useLocalChromeDriver = true;\n    }\n\n    if (!options.playerRequirePath && options.mode !== CLI_MODE.EXTENSION) {\n        await prepareRunnerAndTestimStartUtils.preparePlayer(options.playerLocation, options.canary);\n    }\n    // Unless the user specified different mode than Extension/passed ext as a flag, we want to prepare the extension.\n    if (options.mode !== CLI_MODE.SELENIUM && options.mode !== CLI_MODE.APPIUM && !options.ext) {\n        await prepareRunnerAndTestimStartUtils.prepareExtension(options.extensionLocation);\n    }\n\n    let customExtensionLocation;\n\n    if (options.installCustomExtension) {\n        const unlimitedSize = Boolean(options.useLocalChromeDriver || options.useChromeLauncher);\n        customExtensionLocation = await prepareRunnerAndTestimStartUtils.prepareCustomExtension(options.installCustomExtension, unlimitedSize);\n    }\n\n    await chromeDriverPromise;\n\n    return customExtensionLocation;\n}\n\nexport async function prepareMockNetwork(location: string) {\n    logger.info('prepare MockNetwork', { location });\n    const _rulesJson = await utils.getSourceAsBuffer(location);\n    const rulesJsonBuf = Buffer.isBuffer(_rulesJson) ? _rulesJson : _rulesJson.body;\n    if (rulesJsonBuf.byteLength > MAX_RULE_FILE_SIZE_IN_MB * 1_000_000) {\n        throw new Error(`${PREPARE_MOCK_NETWORK_ERROR_PREFIX} exceeded ${MAX_RULE_FILE_SIZE_IN_MB}MB`);\n    }\n\n    let rulesJson;\n    try {\n        rulesJson = JSON.parse(rulesJsonBuf.toString('utf-8'));\n    } catch (error) {\n        throw new Error(`${PREPARE_MOCK_NETWORK_ERROR_PREFIX} cannot be parsed.${os.EOL}${error}`);\n    }\n\n    const ajv = new Ajv();\n    const valid = ajv.validate(mockNetworkRuleFileSchema, rulesJson);\n    if (!valid) {\n        const errors = ajv.errors?.map((e, i) => `${++i}) ${e.dataPath} ${e.message}`).join(os.EOL);\n        throw new Error(`${PREPARE_MOCK_NETWORK_ERROR_PREFIX} is malformed.${os.EOL}${errors}`);\n    }\n\n    return rulesJson.entries;\n}\n\nexport { initializeUserWithAuth } from './initializeUserWithAuth';\n", "import * as runOptionsUtils from './runOptionsUtils';\nimport * as analytics from './commons/testimAnalytics';\nimport { ArgError } from './errors';\nimport type { OptionValues } from 'commander';\nimport type { AgentModeOptions } from './runOptions';\n\n\nexport function isAgentFlow(program: OptionValues) {\n    if (program.start) {\n        analytics.track(null, 'cli-start-command', { downloadBrowser: Boolean(program.downloadBrowser) });\n    }\n    if (program.startV2 || program.start || program.agent) {\n        return true;\n    }\n\n    return false;\n}\n\nexport async function runAgentFlow(program: OptionValues): Promise<AgentModeOptions> {\n    const startTestimBrowser = !!program.start;\n\n    if (Number.isNaN(program.agentPort)) {\n        throw new ArgError('Agent port is not number');\n    }\n\n    const playerUrl = runOptionsUtils.getPlayerUrl(program);\n\n    // eslint-disable-next-line no-console\n    console.log('Start Testim CLI on Agent mode');\n    return {\n        project: program.project,\n        token: program.token,\n        agentMode: true,\n        agentPort: program.agentPort,\n        agentBind: program.agentBind,\n        openEditor: program.openEditor,\n        startTestimBrowser,\n        ext: program.ext,\n        extensionPath: program.extensionPath,\n        playerLocation: program.playerPath || playerUrl,\n        canary: program.canary,\n        playerPath: program.playerPath,\n        playerRequirePath: program.playerRequirePath,\n        downloadBrowser: Boolean(program.downloadBrowser),\n    };\n}\n", "/**\n * This module provides utilities for handling secret values during runtime execution\n *\n * Core Features:\n * - Injects a Proxy (`SECRETS`) into globalThis, dynamically\n *      generating secret placeholders for context when compiling test data (e.g., SECRETS.apiKey \u2192 \"SECRETS.apiKey\").\n * - Detects if a code block or object contains secret placeholders.\n * - Extracts all used secret keys from a code block or object to send to the server for specific decryption.\n * - Replaces secret placeholders with their corresponding decrypted values from a provided secrets record.\n *\n *   Supports for nested structures - test data values can be a complex object or an array, we want to allow nested structures.\n * - Mutates the provided test data directly (in-place modification) of run parameters.\n **/\n\nexport interface NewSecretEntryPayload {\n    key: string;\n    value: string;\n    projectId: string;\n    description: string;\n}\n\nexport interface SecretsEntry extends NewSecretEntryPayload {\n    _id: string;\n    createdBy: string;\n    created_at: string;\n    updated_at: string;\n}\n\nexport interface SecretsRecord {\n    [secretKey: string]: string;\n}\n\ndeclare global {\n    // eslint-disable-next-line no-var\n    var SECRETS: SecretsRecord;\n}\n\nconst key = 'SECRETS';\n\nexport const secretsUtils = {\n    get secretsKey() {\n        return key;\n    },\n    get proxySecrets() {\n        return new Proxy({}, {\n            get(_, secretKey: string) {\n                return `${key}.${secretKey}`;\n            },\n        });\n    },\n    injectProxySecretsStoreToGlobal() {\n        Object.assign(globalThis, { [key]: this.proxySecrets });\n    },\n    containsSecrets(code: object | string) {\n        return typeof code === 'string' ? code.includes(key) : JSON.stringify(code).includes(key);\n    },\n    extractSecretKeysFromCode(code: object | string) {\n        const secretKeys = new Set<string>();\n        const stringifiedCode = typeof code === 'string' ? code : JSON.stringify(code);\n        const matches = stringifiedCode.match(new RegExp(`${key}\\\\.\\\\w+`, 'g'));\n        matches?.map((match) => {\n            const secretName = match.split('.')[1];\n            if (secretName) {\n                secretKeys.add(secretName);\n            }\n        });\n        return secretKeys;\n    },\n    replaceValuesWithDecryptedSecrets({ testData, secretsRecord }: { testData: Record<string, any>; secretsRecord: SecretsRecord }) {\n        const secretsKey = this.secretsKey;\n        const escapedSecretsKey = secretsKey.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        const secretRegex = new RegExp(`^${escapedSecretsKey}\\\\.(\\\\w+)$`);\n\n        const replaceTestDataRecursively = (testDataEntry: any) => {\n            if (Array.isArray(testDataEntry)) {\n                testDataEntry.forEach((val, index) => {\n                    if (typeof val === 'string') {\n                        const match = val.match(secretRegex);\n                        if (match) {\n                            const secretName = match[1];\n                            testDataEntry[index] = secretsRecord[secretName] ?? val;\n                        }\n                    } else if (typeof val === 'object' && val !== null) {\n                        replaceTestDataRecursively(val);\n                    }\n                });\n            } else if (testDataEntry && typeof testDataEntry === 'object') {\n                Object.entries(testDataEntry).forEach(([key, value]) => {\n                    if (typeof value === 'string') {\n                        const match = value.match(secretRegex);\n                        if (match) {\n                            const secretName = match[1];\n                            testDataEntry[key] = secretsRecord[secretName] ?? value;\n                        }\n                    } else if (typeof value === 'object' && value !== null) {\n                        replaceTestDataRecursively(value);\n                    }\n                });\n            }\n        };\n\n        replaceTestDataRecursively(testData);\n    },\n};\n", "import * as os from 'os';\nimport * as path from 'path';\nimport * as YAML from 'yaml';\nimport * as utils from './utils';\nimport { promises as fsPromises } from 'fs';\nimport { TimeoutError } from './errors';\nimport { launchChrome } from './commons/chrome-launcher';\nimport * as config from './commons/config';\nimport type { AddressInfo } from 'net';\nimport type { Project } from 'clickim/src/app/services/projectsService';\n\nexport async function getProjectId() {\n    return getCredentialProperty('projectId');\n}\n\nexport async function getToken() {\n    return getCredentialProperty('token');\n}\n\nfunction timeout<T>(promise: Promise<T>, ms: number) {\n    // we need this to time out even if we disabled timeouts system wide\n    return Promise.race([promise, utils.delay(ms).then(() => { throw new TimeoutError('timeout'); })]);\n}\n\nasync function getCredentialsFromChrome() {\n    const app = (await import('express')).default();\n    const loginInfoFromChrome = (async function waitForChromeToSendData() {\n        return timeout(new Promise<Project[]>(resolve => {\n            app.get('/loginInfo', (req, res) => {\n                resolve(JSON.parse(Buffer.from(req.query.info as string, 'base64').toString()));\n                res.status(200).end();\n            });\n        }), 60000).catch(() => null);\n    }());\n    await new Promise((resolve, reject) => {\n        // @ts-expect-error this doesn't behave as defined in types\n        const server = app.listen(42543, (err) => {\n            if (err) {\n                reject(err);\n            }\n            resolve((server.address() as AddressInfo).port);\n        });\n    });\n\n    try {\n        const { getEditorUrl } = await import('./commons/testimServicesApi');\n        const { editorUrl } = await getEditorUrl();\n        launchChrome(`${editorUrl}/#/new-test`);\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log(`Unable to open Testim automatically - please manually go to ${config.EDITOR_URL || config.DEFAULT_EDITOR_URL}`);\n    }\n\n    const data = await loginInfoFromChrome;\n    return data;\n}\n\nexport async function doLogin({ overwriteExisting = true, projects = null }: { overwriteExisting?: boolean; projects?: Project[] | null } = {}) {\n    const homedir = os.homedir();\n\n    const testimCredentialsFile = path.join(homedir, '.testim');\n\n    const isExist = await utils.doesPathExist(testimCredentialsFile);\n\n    if (isExist && !overwriteExisting) {\n        return;\n    }\n\n    const credentials: { token?: string; projectId?: string } = {};\n\n    const [{ default: prompts }, { default: ora }] = await Promise.all([import('prompts'), import('ora')]);\n\n    const spinner = ora('Getting credentials from Tricentis Testim extension ...').start();\n\n    if (!projects) {\n        projects = await timeout(getCredentialsFromChrome(), 62000).catch(() => null);\n    }\n\n    // @ts-expect-error old version, can probably be removed safely\n    if (projects?.token) { // V1(legacy) of the login extension API\n        // @ts-expect-error old version, can probably be removed safely\n        credentials.token = projects.token;\n        // @ts-expect-error old version, can probably be removed safely\n        credentials.projectId = projects.projectId;\n        spinner.succeed();\n\n        await writeCredentials(testimCredentialsFile, credentials);\n        return;\n    } if (projects?.length) { // V2(current) of the login extension API\n        spinner.succeed();\n\n        const response = projects.length === 1 ?\n            { project: projects[0] } :\n            await prompts({\n                type: 'select',\n                name: 'project',\n                message: 'There are multiple projects associated with your user account. Please select the project you would like to connect to:',\n                choices: projects.map(p => ({ title: p.name, value: p })),\n            });\n\n        credentials.token = response.project.ci.token;\n        credentials.projectId = response.project.id;\n        await writeCredentials(testimCredentialsFile, credentials);\n        return;\n    }\n\n    spinner.fail();\n    // eslint-disable-next-line no-console\n    console.log('Error getting credentials - please pass `--token` and `--project` to the CLI or try again');\n}\n\nasync function writeCredentials(testimCredentialsFile: string, credentials: { token?: string; projectId?: string }) {\n    await fsPromises.writeFile(testimCredentialsFile, YAML.stringify(credentials));\n    // eslint-disable-next-line no-console\n    console.log(`Testim credentials saved in '${testimCredentialsFile}'`);\n}\n\nasync function getCredentialProperty(property: 'projectId' | 'token') {\n    const homedir = os.homedir();\n\n    const testimCredentialsFile = path.join(homedir, '.testim');\n\n    const isExist = await utils.doesPathExist(testimCredentialsFile);\n\n    let credentials: { token?: string; projectId?: string } = {};\n\n    if (isExist) {\n        try {\n            credentials = YAML.parse((await fsPromises.readFile(testimCredentialsFile)).toString());\n        } catch (err) {\n            // just use new credentials.\n        }\n    }\n\n    // YAML.parse can return `null` or `undefined` if we fail with an empty/malformed file.\n    credentials ||= {};\n\n    return credentials[property];\n}\n", "/* eslint-disable no-console */\nimport ms from 'ms';\nimport chalk from 'chalk';\nimport * as fs from 'node:fs';\nimport * as url from 'node:url';\nimport * as _ from 'lodash';\nimport * as path from 'node:path';\nimport * as utils from './utils';\nimport * as runOptionsUtils from './runOptionsUtils';\nimport * as analytics from './commons/testimAnalytics';\nimport * as runOptionsAgentFlow from './runOptionsAgentFlow';\nimport * as localRunnerCache from './commons/runnerFileCache';\nimport { Command } from 'commander';\nimport { CLI_MODE, REGION_CONFIG } from './commons/constants';\nimport { NoArgsError, ArgError } from './errors';\nimport { EDGE_CHROMIUM_MIN_VERSION } from './player/constants';\nimport { replaceArgsWithNoDashes } from './utils';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { secretsUtils } from './commons/secretsUtils';\nimport { extensionBrowsers, seleniumBrowsers } from './runners/runnerUtils';\nimport { setServicesHost, RUNNER_ENVIRONMENT, TESTIM_REGION } from './commons/config';\nimport type { RunnerMode } from './runners/runnerUtils';\nimport type { InitializedUserWithAuth } from './commons/testimServicesApi';\nimport type { SerializedGrid } from './services/gridService';\nimport type { TestRunStatusTestResult } from './testRunStatus';\nimport type { UserData } from 'clickim/src/background/session/sessionPlayer';\nimport type { TestOptimization } from '../../services/src/commons/mongo/models/testOptimization.ts';\n\nconst TEST_STAGE_NAME = 'Testim Automation';\n\nconst camelizeHyphenValues = (prop: string) => prop.replace(/-([a-z])/g, (m, w) => w.toUpperCase());\n\nconst collect = (val: string, col: string[]) => {\n    col.push(val);\n    return col;\n};\n\nconst cli = new Command();\n\nconst list = (val: string) => val.split(',');\n\nconst mergeValues = (first: any, second: any) => ((!first || first.length === 0) ? second : first);\n\nconst allowedChromeFlags = ['enable-heavy-ad-intervention', 'heavy-ad-privacy-mitigations', 'use-fake-device-for-media-stream', 'use-fake-ui-for-media-stream', 'proxy-server'];\n\nconst printUsage = () => {\n    function isDefaultHelpLine(line: string) {\n        return line.includes('-h, --help');\n    }\n\n    function isParamsJsonOption(line: string) {\n        return line.includes('--params [params-json-string]');\n    }\n\n    function isExtOnlyOption(line: string) {\n        return line.includes('--ext') || line.includes('--extension-path') || line.includes('--headless-extension-download-path');\n    }\n\n    function isPlayerOption(line: string) {\n        return line.includes('--player-path') || line.includes('--player-require-path');\n    }\n\n    function isScheduler(line: string) {\n        return (\n            line.includes('--executionId') ||\n            line.includes('--source') ||\n            line.includes('--resultId') ||\n            line.includes('--remoteRunId') ||\n            line.includes('--schedulerId')\n        );\n    }\n\n    function isWebdriverTimeout(line: string) {\n        return (\n            line.includes('--get-browser-timeout') ||\n            line.includes('--get-browser-retries') ||\n            line.includes('--get-session-timeout') ||\n            line.includes('--get-session-retries') ||\n            line.includes('--driver-request-timeout') ||\n            line.includes('--driver-request-retries')\n        );\n    }\n\n    function isUserId(line: string) {\n        return line.includes('--user');\n    }\n\n    function isMonitorPerformance(line: string) {\n        return line.includes('shouldMonitorPerformance');\n    }\n\n    function isSaveRCALocally(line: string) {\n        return line.includes('--save-rca-locally');\n    }\n\n    function isExitCodeIgnoreFailingTests(line: string) {\n        return line.includes('--exit-code-ignore-failing-tests');\n    }\n\n    function isDeprecatedHighSpeed(line: string) {\n        return line.includes('--high-speed'); // high speed mode was renamed to turbo mode\n    }\n\n    function isUrls(line: string) {\n        return line.includes('--urls');\n    }\n\n    function isTestStartTimeout(line: string) {\n        return line.includes('--test-start-timeout');\n    }\n\n    function isInstallLazyDeps(line: string) {\n        return line.includes('--install-lazy-deps');\n    }\n\n    function isPrintGridsOrCaps(line: string) {\n        return line.includes('--print-final-caps') || line.includes('--print-grids');\n    }\n\n    cli.help((txt) => {\n        const lines = txt.split('\\n');\n        return lines\n            .filter( // hide CLI options\n                (ln) =>\n                    !isExtOnlyOption(ln) &&\n                    !isParamsJsonOption(ln) &&\n                    !isDefaultHelpLine(ln) &&\n                    !isPlayerOption(ln) &&\n                    !isScheduler(ln) &&\n                    !isMonitorPerformance(ln) &&\n                    !isUserId(ln) &&\n                    !isWebdriverTimeout(ln) &&\n                    !isSaveRCALocally(ln) &&\n                    !isExitCodeIgnoreFailingTests(ln) &&\n                    !isDeprecatedHighSpeed(ln) &&\n                    !isUrls(ln) &&\n                    !isTestStartTimeout(ln) &&\n                    !isInstallLazyDeps(ln) &&\n                    !isPrintGridsOrCaps(ln),\n            )\n            .join('\\n');\n    });\n};\n\nconst printDeprecationWarning = (deprecatedUsage: string, newUsage: string) => {\n    const newUsageString = newUsage ? `Please use ${newUsage} instead.` : '';\n    console.log(chalk.yellow(`\\nWARNING: ${deprecatedUsage} is deprecated. ${newUsageString}\\n`));\n};\n\nconst CODE_COVERAGE_REPORTER_OPTIONS = [\n    'clover',\n    'html',\n    'json-summary',\n    'json',\n    'lcov',\n    'lcovonly',\n    'teamcity',\n    'text-lcov',\n    'text-summary',\n    'text',\n];\n\nconst { env, argv, exit, cwd } = global.process;\n\nconst regionConfigsMaps = {\n    development: {\n        usw2: { servicesUrl: 'https://services.dev.testim.io' },\n        euc1: { servicesUrl: 'https://services-eu.dev.testim.io' },\n    },\n    staging: {\n        usw2: { servicesUrl: 'https://services.staging.testim.io' },\n        euc1: { servicesUrl: 'https://services-eu.staging.testim.io' },\n    },\n    production: {\n        usw2: { servicesUrl: 'https://services.testim.io' },\n        euc1: { servicesUrl: 'https://services-eu.prod.testim.io' },\n    },\n};\n\nconst regionPrefixMap = {\n    'us-west-2': 'usw2',\n    'eu-central-1': 'euc1',\n};\n\nconst PRE_MULTIREGION_PROJECTID_LENGTH = 16;\n\nconst setRegionConfig = async (projectId: string) => {\n    // TESTIM_REGION is set when starting pod from services, and is used to determine the region prefix for region-shared projects (e.g. demo projects).\n    const region = projectId.length > PRE_MULTIREGION_PROJECTID_LENGTH ? projectId.slice(0, 4) : regionPrefixMap[TESTIM_REGION];\n    const cachedRegionConfig = await localRunnerCache.get(REGION_CONFIG.CACHE_FN_NAME);\n\n    // For internal users that might run tests from different regions, we want to check the region before extracting it from cache.\n    if (cachedRegionConfig && cachedRegionConfig.region === region) {\n        setServicesHost(cachedRegionConfig.servicesUrl);\n        return;\n    }\n\n    const regionConfigMap = regionConfigsMaps[RUNNER_ENVIRONMENT as keyof typeof regionConfigsMaps] || regionConfigsMaps.production;\n    const regionConfig = regionConfigMap[region as keyof typeof regionConfigMap] || { servicesUrl: 'https://services.testim.io' };\n    // If the user specified a services host, we will not override it (example - local debugging for localhost:8080).\n    if (!env.SERVICES_HOST) {\n        setServicesHost(regionConfig.servicesUrl);\n    }\n};\n\nconst LOG_LEVEL_OPTIONS = new Set(['trace', 'debug', 'info', 'warn', 'error', 'silent']);\n\nreplaceArgsWithNoDashes(argv, new Set(['run', 'connect', 'agent', 'tunneld', 'start', 'init', 'install-lazy-deps']));\n\ncli\n    .description('Testim.io CLI')\n    .option('-h --help', 'output usage information', printUsage)\n    .option('-o --options-file [options-file.json]', '')\n    .option('-c --config-file [config-file.js]', '')\n    .option('--test-config [test-config]', 'test config name to override for all tests in current execution', collect, [])\n    .option('--test-config-id [test-config-id]', 'test config ID to override for all tests in current execution', collect, [])\n    .option('--params-file [params-file.json | params-file.js]', '')\n    .option('--params [params-json-string]', '')\n    .option('-t, --testId [test-id]', 'test ID to run', collect, [])\n    .option('--test-id [test-id]', 'test ID to run', collect, [])\n    .option('-l, --label [label]', 'labels to search test by', collect, [])\n    .option('-n, --name [test-name]', 'test name to run', collect, [])\n    .option('--project [project-id]', 'project ID')\n    .option('-r, --report-file [report junit xml path]', 'where to save junit xml results file')\n    .option('--urls', 'add step urls to the junit report')\n    .option('--override-report-file-classname [override-report-file-classname]', 'custom junit class name for the junit reporter')\n    .option('--reporters [names]', 'report types', list)\n    .option('-h, --host [host-name]', 'host name or ip containing the selenium grid')\n    .option('-p, --port [host-port]', 'host port')\n    .option('-g, --grid [grid-name]', 'grid name')\n    .option('--path [grid-path]', 'grid path')\n    .option('--protocol [grid-protocol]', 'grid protocol http or https')\n    .option('--grid-username [grid-username]', 'grid http basic auth username')\n    .option('--grid-password [grid-password]', 'grid http basic auth password')\n    .option('-gi --grid-id [grid-id]', 'grid ID')\n    .option('-b, --browser [browser-type]', 'browser type (chrome/firefox)')\n    .option('-h, --headless [headless]', 'run in headless mode')\n    .option('-m, --mode [runner-mode]', 'use extension or selenium mode (extension/selenium/appium)')\n    .option('--branch [branch]', 'branch name', undefined)\n    .option('--base-url [base-url]', 'change base-url to a specified url for all tests in current execution')\n    .option('--token [token]', 'identification token to testim')\n    .option('--parallel [number-of-tests]', 'number of tests to run in parallel')\n    .option('--before-parallel [number-of-tests]', 'number of tests to run in parallel during the before phase of a test plan')\n    .option('--after-parallel [number-of-tests]', 'number of tests to run in parallel during the after phase of a test plan')\n    .option('--canary [canary-mode]', 'enable canary mode', false)\n    .option('--test-plan [test-plan-name]', 'test plan to run', collect, [])\n    .option('--test-plan-id [test-plan-id]', 'test plan to run', collect, [])\n    .option('--suite [suite-name]', 'suite to run', collect, [])\n    .option('--suite-id [suite-id]', 'suite ID to run', collect, [])\n    .option('--rerun-failed-by-run-id [run-id]', 'allows re-running failed tests from a specific run ID')\n    .option('--disable-grid-check [boolean]', 'disable checking if selenium grid is available', false)\n    .option('--disable-native-events [boolean]', 'pass nativeEvents=false capability to the selenium browser (in selenium mode)', false)\n    .option('--disable-timeout-retry [boolean]', 'disable retry after test pass test timeout', false)\n    .option('--ca-file [ca-file-location]', 'ca certificate file location')\n    .option('--proxy [proxy-url]', 'proxy url to all requests')\n    .option('--proxy-for-grid [proxy-for-grid]', 'used together with --proxy to also router grid traffic through a proxy')\n    .option('--result-label [result-label]', 'result label', collect, [])\n    .option('-oen --override-execution-name [execution-name]', 'override the default execution name', '')\n    .option('--retries [max_num_of_retries]', 'number of retries on test failure, defaults to 0 (no retries)', Number, 0)\n    .option('--set-retention [retention-in-days]', 'set the number of days for results retention')\n    .option('--user [user-id]', 'user ID for local Testim-CLI')\n    .option('--user-access-key [user-access-key]', 'EXPERIMENTAL') //TODO: add description (TES-18133)\n    .option('--pass-zero-tests', 'don\\'t fail the run if no tests were found')\n    //Mobile options\n    .option('--device-name [device-name]', 'The device name to use, iPhone 12, Nexus 5X, SM-G900P etc....')\n    .option('--device-udid [device-udid]', 'Unique Device Identifier')\n    .option('--custom-tag [custom-tag]', 'tag grid result with custom tag')\n    .option('-slb --skip-load-balancer', 'skipping automatic allocation (AppiumLB) for mobile runs on mobile gird that support it', false)\n    .option('--no-lock-device', 'skipping locking device internal use for TDC grid')\n    .option('--os-version [os-version]', 'The operating system version number')\n    .option('--app-id [app-id]', 'The application id from app library on Testim Editor App')\n    .option('--appium-log-level [appium-log-level]', 'Level of logging verbosity')\n    .option('--set-no-reset [set-no-reset]', 'set noReset appium capability, by default set to false', false)\n    .option('-fr --full-reset [full-reset]', 'set fullReset appium capability to true to reinstall application on session start and session end')\n    .option('--duration [duration]', 'The duration of the test run in minutes', Number)\n\n    .option('-str --suppress-tms-reporting [suppress-tms-reporting]', 'disable test management reporting', false)\n    .option('-tsr --tms-suppress-reporting [tms-suppress-reporting]', 'disable test management reporting', false)\n    .option('-tid --tms-run-id [tms-run-id]', 'update existing result in test management', '')\n    .option('-tff --tms-field-file [tms-field-file.json]', 'pass field file location to add custom result field to the tms result report', '')\n\n    .option('--disable-file-cache', 'disable internal CLI file caching')\n    .option('--clear-file-cache', 'clear internal CLI file cache')\n    .option('--file-cache-location [directory]', ' internal CLI file caching location')\n\n    // Timeout\n    .option('--test-start-timeout [test-start-timeout]', 'The time to wait for a test to start after getting a browser session', Number, Number(env.TESTIM_TEST_START_TIMEOUT) || (2 * 60 * 1000))\n    .option('--timeout [test-timeout]', 'Test run timeout in milliseconds', Number)\n    .option('--browser-timeout [open-browser-timeout]', 'Get browser from grid timeout in milliseconds', Number)\n    .option('--new-browser-wait-timeout [max-wait-to-browser]', 'Maximum get browser wait in minutes', Number)\n\n    // New Timeouts\n    .option('--get-browser-timeout [get-browser-timeout]', 'Timeout for a single attempt to get browser from the grid configured in the project\\'s plan', Number) // getBrowserTimeout\n    .option('--get-browser-retries [get-browser-retries]', 'Number of attempts to get browser from the grid configured in the project\\'s plan', Number) // getBrowserRetries\n    .option('--get-session-timeout [get-session-timeout]', 'Timeout for \"/session\" request to the selenium server', Number, ms('90s')) // getSessionTimeout\n    .option('--get-session-retries [get-session-retries]', 'Retries for \"/session\" request to the selenium server', Number, 3) // getSessionRetries\n    .option('--driver-request-timeout [driver-request-timeout]', 'Timeout for any WebDriver request to the grid server', Number, ms('90s')) // driverRequestTimeout\n    .option('--driver-request-retries [driver-request-retries]', 'Retries for any WebDriver request to the grid server', Number, 3) // driverRequestRetries\n\n    // Local run options\n    .option('--local-tma-url [local-tma-url]', 'use a local TMA instance for appium session')\n    .option('--use-local-chrome-driver [use-local-chrome-driver]', 'use a local ChromeDriver instance instead of a selenium grid')\n    .option('--chrome-binary-location [chrome-binary-location]', 'Chrome binary location')\n\n    // Run chrome ext mode locally using chrome launcher\n    .option('--use-chrome-launcher', 'use a local Chrome installation without selenium')\n\n    // Mock network\n    .option('-mnh --mock-network-har', 'use the HAR file configured in the Testim editor to mock network traffic')\n    .option('-mnp --mock-network-pattern [local file location path]', 'use a JSON rule file to mock network traffic (Rule file schema: https://help.testim.io/page/mocking-network-traffic)')\n    .option(\n        '-omf --override-mapping-file [local file location path]',\n        'pass map file location to override mock network (see schema: https://help.testim.io/page/mocking-network-traffic)',\n    )\n    .option('-dmn --disable-mock-network', 'Disable mock mode for the entire CLI run')\n    .option('--run-quarantined-tests', 'Run quarantine tests')\n\n    // Code coverage\n    .option('--collect-code-coverage', 'collect code coverage for all js files under base url')\n    .option('--code-coverage-url-filter [url pattern]', 'collect code coverage for all js files matching url filter (url including asterisk)')\n    .option('--code-coverage-report-path [path]', 'where to save coverage report (default ./coverage)')\n    .option('--code-coverage-source-map-path [path]', 'path of source code')\n    .option('--code-coverage-reporter [reporter]', `set code coverage reporter (default html and text), options: ${CODE_COVERAGE_REPORTER_OPTIONS.join('/')}`, collect, [])\n    .option('--code-coverage-include [pattern]', 'set selecting files for coverage (default src/**)', collect, [])\n\n    // SauceLab\n    .option('--sauce-user [sauce-lab-user]', 'user to connect to sauce labs')\n    .option('--sauce-key [sauce-lab-key]', 'key to use when connecting to sauce labs')\n    .option('--sauce-options [sauce-options]', 'json file of browser and os options for sauce')\n\n    // Browserstack\n    .option('--browserstack-user [browserstack-user]', 'user to connect to browserStack')\n    .option('--browserstack-key [browserstack-key]', 'key to use when connecting to browserStack')\n    .option('--browserstack-options [browserstack-options]', 'json file of browser and os options for browserStack')\n\n    // Perfecto\n    .option('--perfecto-token [perfecto-token]', 'security token to use when connecting to perfecto')\n    .option('--perfecto-options [perfecto-options]', 'json file of browser and os options for perfecto')\n\n    // Experitest\n    .option('--experitest-token [experitest-token]', 'security token to use when connecting to experitest')\n\n    // TestObject\n    .option('--testobject-key [testobject-key]', 'api key to use when connecting to testobject')\n    .option('--testobject-options [testobject-options]', 'json file of options for testobject')\n\n    // SeaLights\n    .option('--sealights-lab-id [sealights-lab-id]', 'SeaLight Lab ID')\n    .option('--sealights-build-session-id [sealights-build-session-id]', 'SeaLight Session Build ID')\n    .option('--sealights-test-stage [sealights-test-stage]', 'SeaLight Test Stage Name')\n\n    // Extension\n    .option('--ext [extension src path]', 'use extension from path (default it \\'/..\\')')\n    .option('--extension-path [path to extension archived file]', 'override the used extension')\n\n    //Customer Extension\n    .option('--install-custom-extension [chrome extension zipped file url or local path]', 'chrome extension to be installed in the browser')\n\n    // Player\n    .option('--player-path [path to player file]')\n    .option('--player-require-path [path to unminified player - development only]')\n\n    // Node Inspect as a flag\n    .option('--inspect [port]', 'Opens node inspector at given port', Number)\n\n    // Tunnel\n    .option('--tunneld', 'run a tunnel daemon only')\n    .option('--tunnel [tunnel]', 'enable tunnel')\n    .option('--tunnel-routes [routes]', 'tunnel routes for cloudflare tunnels')\n    .option('--tunnel-port [tunnel-port]', 'tunnel port address')\n    .option('--tunnel-host-header [tunnel-host-header]', 'tunnel host header')\n    .option('--tunnel-region [tunnel-region]', 'ngrok tunnel region')\n    .option('--tunnel-diagnostics', 'collect ngrok tunnel diagnostics')\n    .option('--tunnel-use-http-address [tunnel-use-http-address]', 'use http:// address instead of https://', false)\n    .option('--external-lambdatest-tunnel-id [tunnel-id]', 'use existing lambdatest tunnel ID')\n    .option('--external-lambdatest-use-wss', 'use wss instead of ssh for LT', false)\n    .option('--external-lambdatest-disable-automation-tunneling', 'don\\'t tunnel Testim calls in LT tunnel', true)\n    .option('--external-lambdatest-mitm', 'Turn on LT Man in the middle', false)\n    .option('--external-lambdatest-NTLM-tunnel-username [tunnel-NTLM-username]', 'Tunnel NTLM username')\n    .option('--external-lambdatest-NTLM-tunnel-password [tunnel-NTLM-password]', 'Tunnel NTLM password')\n\n    .option('--w3c-capabilities [enable-w3c-caps-mode]', 'enable/disable w3c capabilities format (default enable)', JSON.parse as any, true)\n    .option('--old-capabilities [enable-old-caps-mode]', 'enable/disable old capabilities format (default enable)', JSON.parse as any, true)\n    .option('--disable-sockets', 'Disable CLI sockets', false)\n\n    // Remote run options\n    .option('--executionId [execution-id]', '', '')\n    .option('--remoteRunId [remote-run-id]', '', '')\n    .option('--schedulerId [scheduler-id]', '', '')\n    .option('--source [source]', '', 'cli')\n    .option('--resultId [result-id]', '', '')\n\n    // Agent mode\n    .option('--connect, --agent [enable-agent-mode]', 'enable Testim CLI agent mode', false)\n    .option('--start [enable-start]', 'Connect to testim and open the editor in a standalone browser', false)\n    .option('--download-browser', 'when used with the start option, downloads a fixed version to run Testim editor in', false)\n    .option('--agent-port [agent-port]', 'set agent port', Number, 42543)\n    .option('--agent-bind [agent-host-bind]', 'set agent host bind', '127.0.0.1')\n\n    .option('--chrome-extra-prefs [chrome-extra-prefs]', 'add extra chrome preferences', '')\n    .option('--chrome-extra-args [chrome-extra-args]', 'add extra chrome arguments separated by \\',\\'', '')\n    .option('--chrome-block-location [chrome-block-location]', 'block chrome geolocation', false)\n    .option('--chrome-user-data-dir [chrome-user-data-dir]', 'use custom chrome user date dir', false)\n\n    .option('--disable-cookies-same-site-none-requires-secure [disable-same-site-none-requires-secure]', 'Disable cookies without SameSite must be secure', false)\n\n    .option('--selenium-caps-file [selenium-caps-file.json]', 'json file to merge into Testim selenium desired capabilities')\n\n    .option('--version [version]', 'print the current version of the Testim CLI and exit', false)\n    .option('--monitor-performance', 'collect test playback performance data')\n\n    .option('--high-speed', 'DEPRECATED: use --turbo-mode instead') // When removing, remove from the program.help output filter\n    .option('--turbo-mode', 'run in turbo mode (providing that tests are configured with browsers that use extension mode [chrome, edge chromium])')\n    .option('--lightweight-mode [settings]', 'run lightweight mode')\n    .option('--create-prefeched-data [location]', 'prefetch data into local cache file')\n    .option('--use-prefeched-data [location]', 'use prefetched data from local cache file, and force using only cached data')\n    .option('--save-rca-locally [path]', 'save root cause analysis assets locally')\n\n    .option('--exit-code-ignore-failing-tests', 'return exit code of zero when tests fail. non zero exit code will mean a real error occurred')\n\n    .option('--intersect-with-label [label]', 'Out of the execution\\'s test list, run only those tests that have the specified label', collect, [])\n    .option('--intersect-with-suite [suiteName]', 'Out of the execution\\'s test list, run only those tests that are included in the specified suite (by suite name)', collect, [])\n    .option('--intersect-with-suite-id [suiteId]', 'Out of the execution\\'s test list, run only those tests that are included in the specified suite (by suite ID)', collect, [])\n    .option('--apply-intersections-to-before-and-after-sections [boolean]', 'For a test plan\\'s before/after tests, run tests that intersect with specified intersection flags', undefined)\n\n    .option('--install-lazy-deps [install-lazy-deps]', 'Install all lazy dependencies from package.json', false)\n    .option('--bypass-node-version-check [bypass-node-version-check]', 'Allow running with incompatible Node.js versions', false)\n    .option('--print-grids', 'Print available grids and exit', false)\n    .option('--print-final-caps', 'Print the final calculated capabilities', false)\n    .option('--headless-extension-download-path [headless-extension-download-path]', 'Path to download headless extension', '')\n    .parse(argv);\n\nexport const program = cli.opts();\n\nconst setHostAndPortForSauceLab = () => {\n    if (program.grid || program.gridId) {\n        return;\n    }\n    if (!program.host) {\n        program.host = 'ondemand.saucelabs.com';\n    }\n    if (!program.port) {\n        program.port = 80;\n    }\n};\n\nconst setHostAndPortForBrowserStack = () => {\n    if (program.grid || program.gridId) {\n        return;\n    }\n    if (!program.host) {\n        program.host = 'hub-cloud.browserstack.com';\n    }\n    if (!program.port) {\n        program.port = 80;\n    }\n};\n\nconst injectSecretsProxy = (codeFilePath: string) => {\n    const isSecretsEnabled = featureFlagsService.flags.secrets.isEnabled({ projectId: program.project });\n    if (!isSecretsEnabled) {\n        return;\n    }\n    const code = fs.readFileSync(codeFilePath);\n    if (!secretsUtils?.containsSecrets(code.toString())) {\n        return;\n    }\n    secretsUtils.injectProxySecretsStoreToGlobal();\n};\n\nexport const process = async (): Promise<Options> => {\n    if (program.inspect) {\n        const inspector = require('node:inspector');\n        inspector.open(program.inspect);\n    }\n\n    let userParamsData = {};\n    let chromeExtraPrefs = {};\n    const chromeExtraArgs = [];\n    let seleniumCapsFileContent = {};\n\n    if (!argv.slice(2).length) {\n        printUsage();\n        throw new NoArgsError();\n    }\n\n    if (program.version) {\n        const message = 'Testim CLI Version: ';\n        if (env.npm_package_version) {\n            console.log(message, env.npm_package_version);\n            exit(0);\n        }\n        const version = utils.getRunnerVersion();\n        if (version) {\n            console.log(message, version);\n            exit(0);\n        }\n        console.log('Could not find version, please check the package.json manually');\n        exit(0);\n    }\n\n    if (program.installLazyDeps) {\n        return { installLazyDepsMode: true };\n    }\n\n    if (program.disableFileCache) {\n        localRunnerCache.disable();\n    }\n\n    if (program.clearFileCache) {\n        localRunnerCache.clear();\n    }\n\n    const cacheLocationProvided = program.fileCacheLocation || program.usePrefechedData || program.createPrefechedData;\n\n    if (cacheLocationProvided) {\n        const location = path.resolve(cacheLocationProvided);\n        localRunnerCache.setCacheLocation(location);\n    }\n\n    if (program.usePrefechedData) {\n        localRunnerCache.disableCacheMiss();\n    }\n\n    if (program.playerRequirePath) {\n        const fullPlayerPath = path.resolve(program.playerRequirePath);\n        console.log('Using Local Clickim for Player Require Path =', fullPlayerPath);\n        const projectFile = path.join(fullPlayerPath, 'tsconfig.node.json');\n\n        // [NOTE] playerRequirePath is a dev flag\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        const tsnodeApi = require('ts-node');\n        const tsNodeRegisterInstance = tsnodeApi.register({\n            project: projectFile,\n            ignore: [\n                // restore default value\n                /node_modules/,\n                // based on that code:\n                // https://github.com/TypeStrong/ts-node/blob/c1ae9a069a824368c9aaf89f4454b131af44a92f/src/index.ts#L368\n                // it will not touch this project files, but will work on clickim code\n                new RegExp(`^${_.escapeRegExp(path.relative(cwd(), __dirname))}`),\n            ],\n            transpileOnly: true,\n        });\n\n        // [NOTE] playerRequirePath is a dev flag\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        const tsConfigPathsApi = require('tsconfig-paths');\n        tsConfigPathsApi.register({\n            paths: tsNodeRegisterInstance.config.options.paths,\n            baseUrl: tsNodeRegisterInstance.config.options.baseUrl,\n        });\n\n        (require('./commons/getSessionPlayerRequire') as typeof import('./commons/getSessionPlayerRequire')).options.playerPath = fullPlayerPath;\n        const Module = require('node:module');\n        const originalRequire = Module.prototype.require;\n        Module.prototype.require = function requireThatOverridesSessionPlayer(id: string) {\n            if (id === 'rox-alias') {\n                return originalRequire.call(this, 'rox-node');\n            }\n            if (id === 'canvas') {\n                return {};\n            }\n            return originalRequire.apply(this, arguments);\n        };\n    }\n\n    if (program.caFile) {\n        global.caFileContent = fs.readFileSync(program.caFile);\n    }\n\n    if (program.proxy) {\n        global.proxyUri = program.proxy;\n        // used by Clickim internally and by the runner, included here lazily to not make things slower for the\n        // non-proxy case\n        global.SuperagentProxy = require('superagent-proxy');\n        global.ProxyAgent = require('proxy-agent').ProxyAgent;\n        global.HttpsProxyAgent = require('https-proxy-agent').HttpsProxyAgent;\n    }\n\n    if (program.proxyForGrid && !program.proxy) {\n        throw new ArgError('missing --proxy option');\n    }\n\n    if (runOptionsAgentFlow.isAgentFlow(program)) {\n        return runOptionsAgentFlow.runAgentFlow(program);\n    }\n\n    // merge options from file\n    try {\n        let options = {} as object;\n        if (program.configFile) {\n            injectSecretsProxy(program.configFile);\n            // eslint-disable-next-line import/no-dynamic-require\n            options = require(path.join(cwd(), program.configFile)).config;\n        } else if (program.optionsFile) {\n            // eslint-disable-next-line import/no-dynamic-require\n            options = require(path.join(cwd(), program.optionsFile));\n        }\n\n        // technically would work on anything, but no reason to add a tick for nothing.\n        if (options && typeof (options as PromiseLike<any>).then === 'function') {\n            // eslint-disable-next-line @typescript-eslint/await-thenable\n            options = await options;\n        }\n\n        Object.keys(options).forEach((prop) => {\n            const safePropName = camelizeHyphenValues(prop);\n            program[safePropName] = mergeValues(program[safePropName], options[prop as keyof typeof options]);\n        });\n    } catch (err) {\n        err.message = `Unable to read options file: ${err.message}`;\n        throw err;\n    }\n\n    if (program.tunneld) {\n        return {\n            tunnel: true,\n            tunnelPort: program.tunnelPort,\n            tunnelRoutes: program.tunnelRoutes,\n            tunnelRoutesOutput: program.tunnelRoutesOutput,\n            tunnelHostHeader: program.tunnelHostHeader,\n            tunnelRegion: program.tunnelRegion,\n            tunnelDiagnostics: program.tunnelDiagnostics,\n            tunnelUseHttpAddress: program.tunnelUseHttpAddress,\n            tunnelOnlyMode: true,\n            token: program.token,\n            project: program.project,\n        };\n    }\n\n    const isTestConfigSpecified = program.testConfig?.length || program.testConfigId?.length;\n    const isTestPlanSpecified = program.testPlan?.length || program.testPlanId?.length;\n    const isSuiteSpecified = program.suite?.length || program.suiteId?.length;\n\n    if (program.seleniumCapsFile) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            seleniumCapsFileContent = require(path.join(cwd(), program.seleniumCapsFile));\n        } catch (err) {\n            throw new ArgError(`Failed to parse selenium caps file file error: ${err.message}`);\n        }\n    }\n\n    if (program.reporters?.includes('junit') && !program.reportFile) {\n        console.log('Warning: please define --report-file option for JUnit reporter');\n    }\n\n    if (!program.tunnel && program.externalLambdatestTunnelId) {\n        throw new ArgError('missing --tunnel parameter');\n    }\n\n    if (!program.tunnel && program.externalLambdatestUseWss) {\n        throw new ArgError('missing --tunnel parameter');\n    }\n\n    if (!program.tunnel && [program.tunnelPort, program.tunnelHostHeader, program.tunnelRegion, program.tunnelDiagnostics].some(Boolean)) {\n        throw new ArgError('missing --tunnel parameter');\n    }\n    if (program.chromeExtraPrefs) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            chromeExtraPrefs = require(path.join(cwd(), program.chromeExtraPrefs));\n        } catch (err) {\n            throw new ArgError(`Failed to read/open chrome extra prefs file error: ${err.message}`);\n        }\n    }\n\n    if (program.chromeExtraArgs) {\n        const args = program.chromeExtraArgs.split(',');\n        for (const arg of args) {\n            const [argName] = arg.split('=');\n            if (allowedChromeFlags.includes(argName) || program.useLocalChromeDriver || program.useChromeLauncher) {\n                chromeExtraArgs.push(arg);\n                if (argName === 'proxy-server') {\n                    chromeExtraArgs.push('proxy-bypass-list=*.testim.io;*.coralogix.com;*.rollout.io');\n                }\n            } else {\n                console.warn(`Ignoring an unsupported chrome arg (${argName}), allowed values: ${JSON.stringify(allowedChromeFlags)}`);\n            }\n        }\n    }\n\n    if (program.paramsFile) {\n        try {\n            if ((program.paramsFile as string).endsWith('js')) {\n                injectSecretsProxy(program.paramsFile);\n            }\n            // eslint-disable-next-line import/no-dynamic-require\n            userParamsData = { ...userParamsData, ...require(path.join(cwd(), program.paramsFile)) };\n        } catch (err) {\n            throw new ArgError(`Failed to read/open params file error: ${err.message}`);\n        }\n    }\n\n    if (program.params) {\n        try {\n            userParamsData = { ...userParamsData, ...JSON.parse(program.params) };\n        } catch (err) {\n            throw new ArgError(`Failed to parse params string error: ${err.message}`);\n        }\n    }\n\n    // SauceLabs Options\n    if ((program.sauceUser && !program.sauceKey) || (!program.sauceUser && program.sauceKey)) {\n        throw new ArgError('missing --sauce-user <sauce-user> or --sauce-key <sauce-key>');\n    }\n\n    if (program.sauceUser && program.sauceKey) {\n        setHostAndPortForSauceLab();\n        program.saucelabs = {};\n\n        program.saucelabs.username = program.sauceUser;\n        program.saucelabs.accessKey = program.sauceKey;\n    }\n\n    if (program.sauceOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const sOptions = require(path.join(cwd(), program.sauceOptions));\n            const isMobile = sOptions.platformName && ['ios', 'android'].includes(sOptions.platformName.toLowerCase());\n            if (sOptions.browserName) {\n                const browserName = sOptions.browserName.toLowerCase();\n                switch (browserName) {\n                    case 'microsoftedge':\n                        program.browser = 'edge';\n                        break;\n                    default:\n                        program.browser = browserName;\n                }\n            }\n\n            if (program.browser === 'edge' && parseFloat(sOptions.version) >= EDGE_CHROMIUM_MIN_VERSION) {\n                program.browser = 'edge-chromium';\n            }\n\n            const isBadVersion = parseFloat(sOptions.version) < 50 && !['dev', 'beta'].includes(sOptions.version);\n            if (!isMobile && program.browser === 'chrome' && isBadVersion) {\n                throw new ArgError('The minimum chrome supported version is 50.0');\n            }\n\n            program.saucelabs = { ...program.saucelabs, ...sOptions };\n        } catch (err) {\n            throw new ArgError(`Failed to parse saucelabs options file error: ${err.message}`);\n        }\n    }\n\n    // BrowserStack options\n    if ((program.browserstackUser && !program.browserstackKey) || (!program.browserstackUser && program.browserstackKey)) {\n        throw new ArgError('missing --browserstack-user <browserstack-user> or --browserstack-key <browserstack-key>');\n    }\n    if (program.browserstackUser && program.browserstackKey) {\n        setHostAndPortForBrowserStack();\n        program.browserstack = {};\n\n        program.browserstack['browserstack.user'] = program.browserstackUser;\n        program.browserstack['browserstack.key'] = program.browserstackKey;\n    }\n\n    if (program.browserstackOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const bsOptions = require(path.join(cwd(), program.browserstackOptions));\n            const isMobile = bsOptions.platform && ['mac', 'android'].includes(bsOptions.platform.toLowerCase());\n            if (bsOptions.browserName) {\n                program.browser = bsOptions.browserName.toLowerCase();\n            }\n\n            if (program.browser === 'edge' && parseFloat(bsOptions.browser_version) >= EDGE_CHROMIUM_MIN_VERSION) {\n                program.browser = 'edge-chromium';\n            }\n\n            if (!isMobile && parseFloat(bsOptions.browser_version) < 50 && program.browser === 'chrome') {\n                throw new ArgError('The minimum chrome supported version is 50.0');\n            }\n\n            program.browserstack = { ...program.browserstack, ...bsOptions };\n        } catch (err) {\n            throw new ArgError(`Failed to parse browserstack options file error: ${err.message}`);\n        }\n    }\n\n    program.perfecto = {};\n\n    if (program.perfectoToken) {\n        program.perfecto.securityToken = program.perfectoToken;\n    }\n\n    if (program.perfectoOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const perfectoOptions = require(path.join(cwd(), program.perfectoOptions));\n            const DEFAULTS = { location: 'US East', securityToken: program.perfectoToken };\n            program.perfecto = { ...DEFAULTS, ...perfectoOptions };\n        } catch (err) {\n            throw new ArgError(`Failed to parse perfecto options file error: ${err.message}`);\n        }\n    }\n\n    program.testobjectSauce = {};\n\n    if (program.testobjectKey) {\n        program.testobjectSauce.testobjectApiKey = program.testobjectKey;\n    }\n\n    if (program.testobjectOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const testobjectOptions = require(path.join(cwd(), program.testobjectOptions));\n            const DEFAULTS = { testobjectApiKey: program.testobjectKey };\n            program.testobjectSauce = { ...DEFAULTS, ...testobjectOptions };\n        } catch (err) {\n            throw new ArgError(`Failed to parse test object options file error: ${err.message}`);\n        }\n    }\n\n    if (program.sealightsTestStage !== TEST_STAGE_NAME) {\n        analytics.track(null, 'cli-sealights_stage_changed', { projectId: program.project });\n    }\n\n    const testOptimization: TestOptimization = {\n        seaLights: {\n            buildSessionId: program.sealightsBuildSessionId,\n            labId: program.sealightsLabId,\n            testStage: program.sealightsTestStage,\n        },\n    };\n    program.testOptimization = testOptimization;\n\n    if (!program.project) {\n        const credentialsManager = await import('./credentialsManager');\n        const projectId = await credentialsManager.getProjectId();\n\n        if (projectId) {\n            program.project = projectId;\n        } else {\n            throw new ArgError('missing project-id info, either --login to provide new credentials or use --project <project-id>');\n        }\n    }\n    setRegionConfig(program.project);\n\n    const forceTurboModeIfNeeded = featureFlagsService.flags.forceTurboModeIfNeeded.isEnabled({ projectId: program.project });\n    if (forceTurboModeIfNeeded) {\n        program.turboMode = true;\n    }\n\n    if (program.testConfig) {\n        // convert single test config inputs to array (e.g. from configFile)\n        program.testConfig = [program.testConfig].flat();\n    }\n\n    if (program.testConfigId) {\n        // convert single test config inputs to array (e.g. from configFile)\n        program.testConfigId = [program.testConfigId].flat();\n    }\n\n    program.retries = !program.retries || typeof program.retries === 'boolean' ? 1 : Number(program.retries) + 1;\n    program.browserTimeout = !program.browserTimeout || typeof program.browserTimeout === 'boolean' ? 60 * 1000 : program.browserTimeout;\n    program.newBrowserWaitTimeout = !program.newBrowserWaitTimeout || typeof program.newBrowserWaitTimeout === 'boolean' ? 10 * 60 * 1000 : program.newBrowserWaitTimeout * 60 * 1000;\n\n    if (!program.getBrowserTimeout) {\n        program.getBrowserTimeout = program.browserTimeout;\n    }\n    if (!program.getBrowserRetries) {\n        program.getBrowserRetries = Math.round(program.newBrowserWaitTimeout / program.browserTimeout);\n    }\n    program.getSessionTimeout = Math.max(program.browserTimeout, program.getSessionTimeout);\n    program.driverRequestTimeout = Math.max(program.browserTimeout, program.driverRequestTimeout);\n\n    const timeoutWasGiven = Boolean(program.timeout);\n    program.timeout = !program.timeout || typeof program.timeout === 'boolean' ? 10 * 60 * 1000 : program.timeout;\n    program.beforeParallel = !program.beforeParallel || typeof program.beforeParallel === 'boolean' ? 1 : Number(program.beforeParallel);\n    program.parallel = !program.parallel || typeof program.parallel === 'boolean' ? 1 : Number(program.parallel);\n    program.afterParallel = !program.afterParallel || typeof program.afterParallel === 'boolean' ? 1 : Number(program.afterParallel);\n    program.tunnelPort = !program.tunnelPort || typeof program.tunnelPort === 'boolean' ? '80' : program.tunnelPort;\n\n    program.port &&= Number(program.port);\n\n    if (!program.token) {\n        const credentialsManager = await import('./credentialsManager');\n        const credentialToken = await credentialsManager.getToken();\n\n        if (credentialToken) {\n            program.token = credentialToken;\n        } else {\n            throw new ArgError('missing Testim Access Token, either --login to provide new credentials or use --token <testim-access-token>, contact info@testim.io if you need a new one.');\n        }\n    }\n\n    const optionIsNotAValidNumber = (option: any) => (option <= 0 || !(Number.isInteger(option)));\n\n    if (optionIsNotAValidNumber(program.retries)) {\n        throw new ArgError('test failure retry count could not be a negative number or string, --retries <max_num_of_retries>');\n    }\n\n    if (program.retries > 21) {\n        throw new ArgError('Max number of retries exceeded. Number cannot be greater than 20, --retries <max_num_of_retries>');\n    }\n\n    if (optionIsNotAValidNumber(program.browserTimeout)) {\n        throw new ArgError('get browser timeout could not be a negative number, --browser-timeout <get-browser-timeout>');\n    }\n\n    if (optionIsNotAValidNumber(program.newBrowserWaitTimeout)) {\n        throw new ArgError('max new browser wait timeout could not be a negative number, --new-browser-wait-timeout <max-wait-to-browser>');\n    }\n\n    if (optionIsNotAValidNumber(program.timeout)) {\n        throw new ArgError('test run timeout could not be a negative number, --timeout <run-timeout>');\n    }\n\n    if (optionIsNotAValidNumber(program.beforeParallel)) {\n        throw new ArgError('before-parallel could not be a negative number or not number, --before-parallel <number-of-tests>');\n    }\n\n    if (optionIsNotAValidNumber(program.parallel)) {\n        throw new ArgError('parallel could not be a negative number or not number, --parallel <number-of-tests>');\n    }\n\n    if (optionIsNotAValidNumber(program.afterParallel)) {\n        throw new ArgError('after-parallel could not be a negative number or not number, --after-parallel <number-of-tests>');\n    }\n\n    if (program.mode && ![CLI_MODE.EXTENSION, CLI_MODE.SELENIUM, CLI_MODE.APPIUM].includes(program.mode)) {\n        throw new ArgError(`runner mode <${program.mode}> is not supported`);\n    }\n\n    if (program.browser && ![...extensionBrowsers, ...seleniumBrowsers].includes(program.browser)) {\n        throw new ArgError(`browser ${program.browser} is not supported`);\n    }\n\n    if ((program.mode !== CLI_MODE.SELENIUM) && program.disableNativeEvents) {\n        throw new ArgError('--disable-native-events is only applicable in selenium mode');\n    }\n\n    if (!program.appiumLogLevel) {\n        program.appiumLogLevel = 'silent';\n    }\n\n    if (!LOG_LEVEL_OPTIONS.has(program.appiumLogLevel)) {\n        throw new ArgError(`runner appium-log-level <${program.appiumLogLevel}> is not supported`);\n    }\n\n    if (program.testPlan && program.testPlan.length === 0 && program.testPlanId && program.testPlanId.length === 0) {\n        if (\n            typeof program.host !== 'string' &&\n            typeof program.grid !== 'string' &&\n            typeof program.gridId !== 'string' &&\n            !program.localTmaUrl &&\n            !program.useLocalChromeDriver &&\n            !program.useChromeLauncher &&\n            !program.createPrefechedData &&\n            !program.printGrids\n        ) {\n            throw new ArgError(\n                'missing remote grid address parameter, specify --host <host-name-or-ip> or --grid <grid-name> or --grid-id <grid-id>',\n            );\n        }\n    } else if (\n        program.testId.length ||\n        program.label.length ||\n        program.name.length ||\n        isTestConfigSpecified ||\n        program.browser ||\n        isSuiteSpecified ||\n        program.localTmaUrl ||\n        program.useLocalChromeDriver ||\n        program.useChromeLauncher\n    ) {\n        throw new ArgError(\n            'cannot set --testId, --label, --name, --browser, --test-config, --test-config-id, --local-tma-url, --use-local-chrome-driver --use-chrome-launcher or --suite with --test-plan option',\n        );\n    }\n\n    if (!isTestPlanSpecified && (program.beforeParallel !== 1 || program.afterParallel !== 1)) {\n        throw new ArgError('cannot set --before-parallel or --after-parallel without --test-plan option');\n    }\n\n    const numberOfDefinedHosts = [program.host, program.grid, program.gridId].filter(Boolean).length;\n    if (numberOfDefinedHosts > 1) {\n        throw new ArgError('please define exactly one of --grid or --grid-id or --host');\n    }\n\n    if (program.host?.includes('/')) {\n        if (!/^(f|ht)tps?:\\/\\//i.test(program.host)) {\n            program.host = `http://${program.host}`;\n        }\n        program.host = url.parse(program.host).hostname;\n    }\n\n    if (program.resultLabel.length) {\n        program.resultLabel = (program.resultLabel as string[]).map(label => label.trim()).filter(Boolean);\n        const invalidLabels = (program.resultLabel as string[]).filter(label => label.length >= 250).filter(Boolean);\n        if (program.branch === 'auto-detect' && program.resultLabel.includes('auto-detect-branch') && utils.getEnvironmentGitBranch()) {\n            program.resultLabel.unshift(utils.getEnvironmentGitBranch());\n        }\n        if (invalidLabels.length) {\n            throw new ArgError('A result label cannot exceed 250 characters');\n        }\n    }\n\n    const playerUrl = runOptionsUtils.getPlayerUrl(program);\n\n    if (!program.w3cCapabilities && !program.oldCapabilities) {\n        throw new ArgError('cannot set --w3c-capabilities and --old-capabilities options as false');\n    }\n    program.protocol ||= program.port === 443 ? 'https' : 'http';\n    if (!['http', 'https'].includes(program.protocol)) {\n        throw new ArgError('invalid --protocol value, allow --protocol http or https');\n    }\n\n    if (program.rerunFailedByRunId && program.branch) {\n        throw new ArgError('It is not possible to use --branch with --rerun-failed-by-run-id. Tests will automatically run on the same branch that was used in the original run');\n    }\n\n    if (program.rerunFailedByRunId &&\n        (isSuiteSpecified || program.name.length ||\n            program.testId.length || program.label.length || isTestPlanSpecified)) {\n        throw new ArgError('Re-running failed tests is not possible when suite (--suite),' +\n            ' label (--label), plan (--test-plan), or other test flags (--test) are provided. Please remove these flags and try again');\n    }\n\n    if (program.setRetention && !_.inRange(_.parseInt(program.setRetention), 1, 11)) {\n        throw new ArgError('Please provide the number of days that the test results will be retained for (--set-retention must be a whole number between 1 to 10)');\n    }\n    program.setRetention &&= Number(program.setRetention);\n\n    const mockNetworkDeprecationMsg = 'is no longer supported, please use --override-mapping-file';\n    if (program.mockNetworkHar) {\n        throw new ArgError(`--mock-network-har ${mockNetworkDeprecationMsg}`);\n    }\n    if (program.mockNetworkPattern) {\n        throw new ArgError(`--mock-network-pattern ${mockNetworkDeprecationMsg}`);\n    }\n\n    if (program.disableMockNetwork && program.overrideMappingFile) {\n        throw new ArgError('You can either use --disable-mock-network or --override-mapping-file');\n    }\n\n    if (!program.collectCodeCoverage && program.codeCoverageSourceMapPath) {\n        throw new ArgError('cannot set --code-coverage-source-map-path without passing --collect-code-coverage');\n    }\n\n    if (!program.collectCodeCoverage && program.codeCoverageReporter.length) {\n        throw new ArgError('cannot set --code-coverage-reporter without passing --collect-code-coverage');\n    }\n\n    if (!program.collectCodeCoverage && program.codeCoverageInclude.length) {\n        throw new ArgError('cannot set --code-coverage-include without passing --collect-code-coverage');\n    }\n\n    if (program.collectCodeCoverage && program.codeCoverageReporter && _.difference(program.codeCoverageReporter, CODE_COVERAGE_REPORTER_OPTIONS).length) {\n        const diff = _.difference(program.codeCoverageReporter, CODE_COVERAGE_REPORTER_OPTIONS);\n        throw new ArgError(`invalid --code-coverage-reporter parameters ${diff.join('/')}`);\n    }\n\n    program.codeCoverageReporter = program.codeCoverageReporter.length === 0 ? ['html', 'text'] : program.codeCoverageReporter;\n    program.codeCoverageInclude = program.codeCoverageInclude.length === 0 ? ['src/**'] : program.codeCoverageInclude;\n\n    const extensionOnlyOptions = {\n        mockNetworkHar: '--mock-network-har',\n        mockNetworkPattern: '--mock-network-pattern',\n        overrideMappingFile: '--override-mapping-file',\n        codeCoverageUrlFilter: '--code-coverage-url-filter',\n        collectCodeCoverage: '--collect-code-coverage',\n        disableMockNetwork: '--disable-mock-network',\n        useChromeLauncher: '--use-chrome-launcher',\n    };\n    const usedExtensionOptions = Object.keys(extensionOnlyOptions).filter(key => Boolean(program[key]));\n\n    if ([CLI_MODE.APPIUM, CLI_MODE.SELENIUM].includes(program.mode) && usedExtensionOptions.length) {\n        const multi = usedExtensionOptions.length > 1 ? 'are' : 'is';\n        throw new ArgError(`${usedExtensionOptions.map(key => extensionOnlyOptions[key as keyof typeof extensionOnlyOptions]).join(' and ')} ${multi} only applicable in extension mode`);\n    }\n\n    if (program.useChromeLauncher || program.useLocalChromeDriver) {\n        program.browser = 'chrome';\n    }\n\n    if (program.tmsFieldFile) {\n        try {\n            const fileContent = fs.readFileSync(program.tmsFieldFile);\n            // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n            program.tmsCustomFields = JSON.parse(fileContent);\n        } catch (err) {\n            throw new ArgError(`failed to parse field file error: ${err.message}`);\n        }\n    }\n\n    if (program.applyIntersectionsToBeforeAndAfterSections && !program.intersectWithLabel && !program.intersectWithSuite && !program.intersectWithSuiteId) {\n        throw new ArgError('--apply-intersections-to-before-and-after-sections flag must be combined with at least one of the available --intersect-with flags');\n    }\n\n    /** Handling deprecation of High speed mode (renamed to Turbo mode) */\n    if (program.highSpeed) {\n        printDeprecationWarning('--high-speed', '--turbo-mode');\n        program.turboMode = true;\n    }\n\n    if (program.skipLoadBalancer && !program.deviceUdid) {\n        throw new ArgError('It is not possible to skip load balancer without specifying deviceUdid');\n    }\n\n    if (program.deviceUdid && (program.deviceName || program.osVersion)) {\n        throw new ArgError('It is not possible to use --osVersion or --deviceName with --device-udid. device-udid is unique and cannot be combined with another flag');\n    }\n    if (program.setNoReset && program.fullReset) {\n        throw new ArgError('It is not possible to set both --set-no-reset and --full-reset capabilities to true at the same time!');\n    }\n\n    if (program.lightweightMode) {\n        try {\n            const DEFAULTS = {\n                general: true,\n                disableLabs: true,\n                disableFeatureFlags: true,\n                disableAssets: true,\n                disablePixelValidation: true,\n                disableResults: true,\n                disableStepDelay: true,\n                disableRemoteStep: true,\n                assumePreloadedSharedSteps: true,\n                disableVisibilityCheck: false,\n                disableLocators: false,\n                bypassSetup: false,\n                disableAutoImprove: true,\n                disableQuotaBlocking: true,\n                onlyTestIdsNoSuite: true,\n                uploadAssetsAndResultsOnFailure: true,\n                preloadTests: true,\n                disableProjectDefaults: true,\n                type: 'lightweight',\n            };\n\n            const lightweightModeOptions = typeof program.lightweightMode === 'string' ? JSON.parse(program.lightweightMode) : {};\n            program.lightweightMode = { ...DEFAULTS, ...lightweightModeOptions };\n        } catch (err) {\n            throw new ArgError(`failed to parse lightweightMode settings error: ${err.message}`);\n        }\n    } else if (program.turboMode && ![CLI_MODE.APPIUM, CLI_MODE.SELENIUM].includes(program.mode)) {\n        program.lightweightMode = {\n            general: true,\n            disableLabs: false,\n            disableFeatureFlags: false,\n            disableAssets: true,\n            disablePixelValidation: false,\n            disableResults: true,\n            disableStepDelay: true,\n            disableRemoteStep: false,\n            assumePreloadedSharedSteps: false,\n            disableVisibilityCheck: false,\n            disableLocators: false,\n            bypassSetup: false,\n            disableQuotaBlocking: false,\n            disableAutoImprove: false,\n            onlyTestIdsNoSuite: false,\n            uploadAssetsAndResultsOnFailure: true,\n            preloadTests: false,\n            disableProjectDefaults: false,\n            type: 'turboMode',\n        };\n    } else if (program.turboMode && [CLI_MODE.APPIUM, CLI_MODE.SELENIUM].includes(program.mode)) {\n        console.warn('\\nWhen running the CLI in Selenium mode, the Turbo Mode option is ignored, as they are not compatible concurrently');\n    }\n\n    if (typeof program.baseUrl === 'boolean') {\n        throw new ArgError('base url cannot be used as a flag, and must contain a string value');\n    }\n\n    return {\n        testId: [program.testId].flat(),\n        name: [program.name as unknown as string | string[]].flat(),\n        label: [program.label].flat(),\n        suites: [program.suite].flat(),\n        suiteIds: [program.suiteId].flat(),\n        testPlan: [program.testPlan].flat(),\n        testPlanIds: [program.testPlanId].flat(),\n        reportFile: program.reportFile,\n        urls: program.urls,\n        reportFileClassname: program.overrideReportFileClassname,\n        reporters: program.reporters,\n        project: program.project,\n        host: program.host,\n        headless: program.headless,\n        localTmaUrl: program.localTmaUrl,\n        useLocalChromeDriver: program.useLocalChromeDriver,\n        chromeBinaryLocation: program.chromeBinaryLocation,\n        useChromeLauncher: program.useChromeLauncher,\n        port: program.port,\n        grid: program.grid,\n        gridId: program.gridId,\n        disableNativeEvents: program.disableNativeEvents,\n        saucelabs: program.saucelabs,\n        browserstack: program.browserstack,\n        baseUrl: program.baseUrl,\n        branch: (program.branch === 'auto-detect' ? utils.getEnvironmentGitBranch() : program.branch) || 'master',\n        autoDetect: program.branch === 'auto-detect',\n        token: program.token,\n        userAccessKey: program.userAccessKey,\n        userParamsData,\n        mode: program.mode,\n        browser: program.browser,\n        beforeParallel: program.beforeParallel,\n        parallel: program.parallel,\n        afterParallel: program.afterParallel,\n        canary: program.canary,\n        rerunFailedByRunId: program.rerunFailedByRunId,\n        disableGridCheck: program.disableGridCheck,\n        disableTimeoutRetry: program.disableTimeoutRetry,\n        resultLabels: program.resultLabel,\n        path: program.path,\n        protocol: program.protocol,\n        perfecto: program.perfecto,\n        experitestToken: program.experitestToken,\n        testobjectSauce: program.testobjectSauce,\n        testOptimization: program.testOptimization,\n        gridUsername: program.gridUsername,\n        gridPassword: program.gridPassword,\n        overrideExecutionName: program.overrideExecutionName,\n\n        tmsSuppressReporting: Boolean(program.suppressTmsReporting) || Boolean(program.tmsSuppressReporting),\n        tmsRunId: program.tmsRunId,\n        tmsCustomFields: program.tmsCustomFields,\n\n        proxyForGrid: program.proxyForGrid,\n        retentionDays: program.setRetention,\n        passZeroTests: Boolean(program.passZeroTests),\n        runQuarantinedTests: Boolean(program.runQuarantinedTests),\n        //Mobile-Flags\n        deviceName: program.deviceName,\n        deviceUdid: program.deviceUdid,\n        customTag: program.customTag,\n        osVersion: program.osVersion,\n        duration: program.duration,\n        skipLoadBalancer: program.skipLoadBalancer,\n        lockDevice: program.lockDevice,\n        appId: program.appId,\n        appiumLogLevel: program.appiumLogLevel,\n        setNoReset: program.setNoReset,\n        fullReset: program.fullReset,\n\n        // Extension\n        ext: program.ext,\n        extensionPath: program.extensionPath,\n        extensionLocation: [program.extensionPath].filter(Boolean),\n\n        // Player\n        playerLocation: program.playerPath || playerUrl,\n        playerPath: program.playerPath,\n        playerRequirePath: program.playerRequirePath,\n\n        // Tunnel\n        tunnel: program.tunnel,\n        tunnelPort: program.tunnelPort,\n        tunnelRoutes: program.tunnelRoutes,\n        tunnelRoutesOutput: program.tunnelRoutesOutput,\n        tunnelHostHeader: program.tunnelHostHeader,\n        tunnelRegion: program.tunnelRegion,\n        tunnelDiagnostics: program.tunnelDiagnostics,\n        tunnelUseHttpAddress: program.tunnelUseHttpAddress,\n        externalLambdatestTunnelId: program.externalLambdatestTunnelId,\n        externalLambdatestNTLMTunnelUsername: program.externalLambdatestNTLMTunnelUsername,\n        externalLambdatestNTLMTunnelPassword: program.externalLambdatestNTLMTunnelPassword,\n        externalLambdatestUseWss: program.externalLambdatestUseWss || false,\n        externalLambdatestDisableAutomationTunneling: Boolean(program.externalLambdatestDisableAutomationTunneling),\n        externalLambdatestMitm: Boolean(program.externalLambdatestMitm),\n\n        // Hooks\n        beforeTest: program.beforeTest,\n        afterTest: program.afterTest,\n        beforeSuite: program.beforeSuite,\n        afterSuite: program.afterSuite,\n\n        // Timeout\n        timeout: program.timeout,\n        timeoutWasGiven,\n        browserTimeout: program.browserTimeout,\n        newBrowserWaitTimeout: program.newBrowserWaitTimeout,\n\n        // New Timeouts\n        getBrowserTimeout: program.getBrowserTimeout,\n        getBrowserRetries: program.getBrowserRetries,\n        getSessionTimeout: program.getSessionTimeout,\n        getSessionRetries: program.getSessionRetries,\n        driverRequestTimeout: program.driverRequestTimeout,\n        driverRequestRetries: program.driverRequestRetries,\n\n        testStartTimeout: program.testStartTimeout,\n\n        testConfigNames: program.testConfig,\n        testConfigIds: program.testConfigId,\n\n        // Mock network\n        overrideMappingFile: program.overrideMappingFile,\n        disableMockNetwork: program.disableMockNetwork,\n\n        // Code coverage\n        codeCoverageUrlFilter: program.codeCoverageUrlFilter,\n        collectCodeCoverage: program.collectCodeCoverage,\n        codeCoverageReportPath: program.codeCoverageReportPath,\n        codeCoverageSourceMapPath: program.codeCoverageSourceMapPath,\n        codeCoverageReporter: program.codeCoverageReporter,\n        codeCoverageInclude: program.codeCoverageInclude,\n\n        // Remote run options\n        executionId: program.executionId,\n        remoteRunId: program.remoteRunId,\n        schedulerId: program.schedulerId,\n        source: program.source,\n        resultId: program.resultId,\n\n        //Customer Extension\n        installCustomExtension: program.installCustomExtension,\n\n        w3cCapabilities: program.w3cCapabilities,\n        oldCapabilities: program.oldCapabilities,\n\n        chromeBlockLocation: program.chromeBlockLocation,\n        chromeUserDataDir: program.chromeUserDataDir,\n        retries: program.retries,\n        chromeExtraPrefs,\n        chromeExtraArgs,\n\n        disableCookiesSameSiteNoneRequiresSecure: program.disableCookiesSameSiteNoneRequiresSecure,\n\n        seleniumCapsFileContent,\n        shouldMonitorPerformance: program.monitorPerformance,\n\n        user: program.user,\n\n        lightweightMode: program.lightweightMode,\n        createPrefechedData: program.createPrefechedData,\n\n        saveRCALocally: program.saveRcaLocally,\n        exitCodeIgnoreFailingTests: program.exitCodeIgnoreFailingTests,\n\n        disableSockets: program.disableSockets,\n\n        // intersections\n        intersections: {\n            labels: program.intersectWithLabel.length ? [program.intersectWithLabel].flat() : undefined,\n            suiteNames: program.intersectWithSuite.length ? [program.intersectWithSuite].flat() : undefined,\n            suiteIds: program.intersectWithSuiteId.length ? [program.intersectWithSuiteId].flat() : undefined,\n            applyIntersectionsToBeforeAndAfterSections: program.applyIntersectionsToBeforeAndAfterSections,\n        },\n\n        downloadBrowser: program.downloadBrowser,\n        slotService: 'mongo',\n        printGrids: program.printGrids,\n        printFinalCaps: program.printFinalCaps,\n    };\n};\n\nexport interface InstallLazyDepsOptions {\n    installLazyDepsMode: true;\n}\n\nexport interface LoginModeOptions {\n    loginMode: true;\n}\n\nexport interface AgentModeOptions {\n    agentMode: true;\n    project?: string;\n    token?: string;\n    agentPort: number;\n    agentBind?: string;\n    openEditor?: boolean;\n    startTestimBrowser: boolean;\n    ext?: string;\n    extensionPath?: string;\n    playerLocation: string;\n    canary?: boolean;\n    playerPath?: string;\n    playerRequirePath?: string;\n    downloadBrowser: boolean;\n}\n\nexport interface TunnelDaemonOptions {\n    tunnelOnlyMode: true;\n    tunnelRoutes: string[];\n    tunnelRoutesOutput: string;\n    tunnelHostHeader?: string;\n    tunnelRegion?: string;\n}\n\nexport interface TunnelOptions extends TunnelDaemonOptions, ServerDetailsBasedOnOptions {\n    tunnel?: boolean;\n    tunnelUseHttpAddress?: boolean;\n    token: string;\n    project: string;\n    tunnelDiagnostics?: boolean;\n    tunnelPort?: number;\n}\n\nexport interface SaucelabsOptions {\n    username: string;\n    accessKey: string;\n    platform?: string;\n    platformName?: string;\n    browserVersion?: string;\n    platformVersion?: string;\n    deviceName?: string;\n    version?: string;\n    'sauce:options'?: {\n        [key: string]: string;\n    };\n    browserName?: string;\n}\n\nexport interface BrowserstackOptions {\n    'browserstack.user': string;\n    'browserstack.key': string;\n    os_version?: string;\n    platform?: string;\n    platformVersion?: string;\n    deviceName?: string;\n    build?: string;\n    project?: string;\n    name?: string;\n    browserName?: string;\n}\n\ntype CodeCoverageReporter = 'clover' | 'html' | 'json-summary' | 'json' | 'lcov' | 'lcovonly' | 'teamcity' | 'text-lcov' | 'text-summary' | 'text';\n\ntype AppiumLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'silent';\nexport interface LightweightSettings {\n    type: 'lightweight' | 'turboMode' | 'highSpeed';\n    general: boolean;\n    disableLabs: boolean;\n    disableFeatureFlags: boolean;\n    disableAssets: boolean;\n    disablePixelValidation: boolean;\n    disableResults: boolean;\n    disableStepDelay: boolean;\n    disableRemoteStep: boolean;\n    assumePreloadedSharedSteps: boolean;\n    disableVisibilityCheck: boolean;\n    disableLocators: boolean;\n    bypassSetup: boolean;\n    disableAutoImprove: boolean;\n    disableQuotaBlocking: boolean;\n    onlyTestIdsNoSuite: boolean;\n    uploadAssetsAndResultsOnFailure: boolean;\n    preloadTests: boolean;\n    disableProjectDefaults: boolean;\n}\nexport interface ProjectData extends Pick<InitializedUserWithAuth['projectById'], 'type' | 'name' | 'defaults'> {\n    projectId: string;\n}\n// Properties here are marked as optional but are always being added later since the options mutate (except for `sfdcCredential`)\ninterface ServerDetailsBasedOnOptions {\n    company?: {\n        ucid: string;\n        companyId: string;\n        name: string;\n        planType: 'pro' | 'free' | 'trial';\n        isPOC: boolean;\n        isStartUp: boolean;\n        activePlan: import('services/src/commons/mongo/types/DbCompanyProjects').Plan;\n    };\n    gridData?: SerializedGrid & { failedGetBrowserAttempts?: number };\n    sfdcCredential?: string;\n    editorUrl?: string;\n    allGrids?: InitializedUserWithAuth['allGrids'];\n    authData?: InitializedUserWithAuth['authData'];\n    projectData?: ProjectData;\n    userData?: UserData;\n}\ninterface BeforeTestHook {\n    (params: TestRunStatusTestResult & { exportsGlobal: { [key: string]: any }; globalParameters: { [key: string]: any } }, token: string): PromiseLike<{ [key: string]: any } | undefined>;\n}\ninterface AfterTestHook {\n    (params: TestRunStatusTestResult & { exportsGlobal: { [key: string]: any }; globalParameters: { [key: string]: any } }, token: string): PromiseLike<void>;\n}\n\n// TODO: consider typing better, based on the validations we do (example: must have one of grid/grid-id/host&port/test plan)\nexport interface RunnerOptions extends ServerDetailsBasedOnOptions, Partial<Omit<TunnelOptions, 'tunnelOnlyMode' | 'tunnel' | keyof ServerDetailsBasedOnOptions>> {\n    token: string;\n    project: string;\n    user?: string;\n    userAccessKey?: string;\n    headless?: boolean;\n    disableNativeEvents?: boolean;\n    baseUrl?: string;\n    branch: string;\n    autoDetect: boolean;\n    userParamsData: object;\n    mode: RunnerMode;\n    canary?: boolean;\n    rerunFailedByRunId?: string;\n    disableTimeoutRetry?: boolean;\n    resultLabels: string[];\n    path?: string;\n    protocol?: string;\n    testobjectSauce: { testobjectApiKey?: string };\n    overrideExecutionName?: string;\n    passZeroTests: boolean;\n    runQuarantinedTests: boolean;\n    downloadBrowser: boolean;\n    disableSockets: boolean;\n    disableCookiesSameSiteNoneRequiresSecure: boolean;\n    shouldMonitorPerformance?: boolean;\n    exitCodeIgnoreFailingTests?: boolean;\n    seleniumCapsFileContent: object;\n    retentionDays?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\n    retries?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20;\n    runParams?: { [testResultId: string]: object | undefined };\n    publicIps?: Array<string | undefined>; // public IPs of egress requests discovered by our server or 3rd party mirroring services\n\n    // #region mobile flags\n    deviceName?: string;\n    deviceUdid?: string;\n    customTag?: string;\n    osVersion?: string;\n    duration?: number;\n    appId?: string;\n    skipLoadBalancer: boolean;\n    lockDevice: boolean;\n    appiumLogLevel: AppiumLogLevel;\n    fullReset?: boolean;\n    setNoReset: boolean;\n    // #endregion\n\n    // #region What to execute\n    testId: string[];\n    name: string[];\n    label: string[];\n    suites: string[];\n    suiteIds: string[];\n    testPlan: string[];\n    testPlanIds: string[];\n    // #endregion\n\n    // #region Test config to use\n    testConfigNames?: string[];\n    testConfigIds?: string[];\n    // #endregion\n\n    // #region Grid details\n    /** The grid's name */\n    grid?: string;\n    gridId?: string;\n    host?: string;\n    port?: number;\n    gridUsername?: string;\n    gridPassword?: string;\n    localTmaUrl?: string;\n    useLocalChromeDriver?: boolean;\n    chromeBinaryLocation?: string;\n    useChromeLauncher?: boolean;\n\n    disableGridCheck: boolean;\n    browser?: 'edge-chromium' | 'firefox' | 'safari' | 'chrome';\n\n    proxyForGrid: string;\n\n    experitestToken?: string;\n    saucelabs: SaucelabsOptions;\n    perfecto: { securityToken?: string; location?: string };\n    browserstack: BrowserstackOptions;\n    // #endregion\n\n    // #region Test Optimization\n    testOptimization: TestOptimization;\n    // #endregion\n\n    // #region Report settings\n    reportFile?: string;\n    reportFileClassname?: string | true;\n    reporters?: string[];\n    // #endregion\n\n    // #region Parallel settings\n    beforeParallel: number;\n    parallel: number;\n    afterParallel: number;\n    //#endregion\n\n    // #region TMS\n    tmsSuppressReporting: boolean;\n    tmsRunId?: string;\n    tmsCustomFields?: string;\n    // #endregion\n\n    // #region Extension debugging\n    ext?: string;\n    extensionLocation: string[];\n    extensionPath?: string;\n    // #endregion\n\n    // #region Session Player debugging\n    playerLocation: string;\n    playerPath?: string;\n    playerRequirePath?: string;\n    // #endregion\n\n    // #region Tunnel\n    tunnel?: boolean;\n    externalLambdatestTunnelId?: string;\n    externalLambdatestNTLMTunnelUsername: string;\n    externalLambdatestNTLMTunnelPassword: string;\n    externalLambdatestUseWss?: string;\n    externalLambdatestDisableAutomationTunneling: boolean;\n    externalLambdatestMitm: boolean;\n    // #endregion\n\n    // #region Hooks\n    beforeTest?: BeforeTestHook;\n    afterTest?: AfterTestHook;\n    beforeSuite?: (params: { projectId: string; executionId: string; testNames?: string[] }) => PromiseLike<{ [key: string]: any } | undefined>;\n    afterSuite?: (params: { exportsGlobal: { [key: string]: any }; tests: any[]; total: number; passed: number; skipped: number }) => PromiseLike<void>;\n    // #endregion\n\n    // #region Timeouts\n    testStartTimeout: number;\n    timeout: number;\n    timeoutWasGiven: boolean;\n    browserTimeout: number;\n    newBrowserWaitTimeout: number;\n    getBrowserTimeout: number;\n    getBrowserRetries: number;\n    getSessionTimeout: number;\n    getSessionRetries: number;\n    driverRequestTimeout: number;\n    driverRequestRetries: number;\n    // #endregion\n\n    // #region Mock network\n    overrideMappingFile?: string;\n    mockNetworkRules?: object;\n    disableMockNetwork?: boolean;\n    // #endregion\n\n    // #region Code coverage\n    codeCoverageUrlFilter?: string;\n    collectCodeCoverage?: boolean;\n    codeCoverageReportPath?: string;\n    codeCoverageSourceMapPath?: string;\n    codeCoverageReporter: CodeCoverageReporter[];\n    codeCoverageInclude: string[];\n    // #endregion\n\n    // #region Remote run options\n    executionId?: string;\n    remoteRunId?: string;\n    schedulerId?: string;\n    source?: string;\n    resultId?: string;\n    // #endregion\n\n    // #region Customer Extension\n    installCustomExtension?: string;\n    // #endregion\n\n    // #region Capabilities format\n    w3cCapabilities: boolean;\n    oldCapabilities: boolean;\n    // #endregion\n\n    // #region Chrome specific settings\n    chromeBlockLocation: boolean;\n    chromeUserDataDir: false | string;\n    chromeExtraPrefs: object;\n    chromeExtraArgs: string[];\n    // #endregion\n\n    // #region Lightweight / Turbo Mode\n    lightweightMode?: LightweightSettings;\n    createPrefechedData?: boolean;\n    saveRCALocally?: boolean | string;\n    localRCASaver?: string;\n    // #endregion\n\n    // #region intersections\n    intersections: { labels?: string[]; suiteNames?: string[]; suiteIds?: string[]; applyIntersectionsToBeforeAndAfterSections?: boolean };\n    // #endregion\n\n    // #region visited URLs\n    urls?: string;\n    // #endregion\n\n    slotService: 'mongo' | 'redis';\n\n    printGrids: boolean;\n    printFinalCaps: boolean;\n    // custom FF for MV3 extension control\n    testimHeadlessExtensionDownloadUrl?: string;\n}\n\nexport type Options = |\n    InstallLazyDepsOptions |\n    LoginModeOptions |\n    AgentModeOptions |\n    TunnelOptions |\n    RunnerOptions;\n", "import * as utils from '../utils';\nimport { ArgError } from '../errors';\nimport { getLogger } from './logger';\nimport { lazyRequire } from './lazyRequire';\nimport type { TokenUserData } from './testimCustomToken';\nimport type { RunnerOptions, TunnelOptions } from 'src/runOptions';\n\nconst logger = getLogger('testimNgrok');\n\nconst WHITELISTED_TUNNEL_DOMAIN_SUFFIX = '.whitelisted-ngrok.testim.io';\n\nlet ngrokTunnelUrl = '';\nlet statsTimeout: NodeJS.Timeout | undefined;\n\nexport const connectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions, authData: Partial<TokenUserData> = {}) => {\n    if (!authData.ngrokToken) {\n        throw new ArgError('tunnel feature is not enabled, please contact support - info@testim.io.');\n    }\n\n    let hostname;\n    if (authData.isNgrokWhitelisted) {\n        hostname = `${utils.guid()}-${options.projectData!.projectId}${WHITELISTED_TUNNEL_DOMAIN_SUFFIX}`;\n    }\n\n    const connectOpt: Record<string, string | number | undefined> = {\n        proto: 'http',\n        addr: options.tunnelPort || 80,\n        authtoken: authData.ngrokToken,\n        hostname,\n    };\n    if (options.tunnelHostHeader) {\n        // eslint-disable-next-line camelcase\n        connectOpt.host_header = options.tunnelHostHeader;\n    }\n    if (options.tunnelRegion) {\n        connectOpt.region = options.tunnelRegion;\n    }\n\n    const ngrok = await lazyRequire('ngrok');\n    const url = await ngrok.connect(connectOpt);\n\n    if (options.tunnelUseHttpAddress && url.startsWith('https://')) {\n        logger.info('replace https to http');\n        const newUrl = url.replace('https://', 'http://');\n\n        ngrokTunnelUrl = newUrl;\n    } else {\n        ngrokTunnelUrl = url;\n    }\n\n    if (options.tunnelDiagnostics) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        collectNgrokStats();\n    }\n    (options as RunnerOptions).baseUrl = ngrokTunnelUrl;\n};\n\nexport const collectNgrokStats = async (rerun = true) => {\n    try {\n        const ngrok = await lazyRequire('ngrok');\n        const api = ngrok.getApi();\n        const { tunnels } = await api.listTunnels() as { tunnels: { public_url: string }[] };\n        const tunnel = tunnels.find(t => t.public_url === ngrokTunnelUrl);\n\n        // eslint-disable-next-line no-console\n        console.log('ngrok stats', tunnel);\n        logger.info('ngrok stats', { tunnel });\n    } catch (err) {\n        logger.error('error collecting ngrok stats', { err });\n    }\n    if (rerun) {\n        statsTimeout = setTimeout(() => collectNgrokStats(), 10000);\n    }\n};\n\nexport const disconnectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions) => {\n    if (!ngrokTunnelUrl) {\n        return;\n    }\n\n    clearTimeout(statsTimeout!);\n    if (options.tunnelDiagnostics) {\n        await collectNgrokStats(false);\n    }\n    const ngrok = await lazyRequire('ngrok');\n    await ngrok.disconnect(ngrokTunnelUrl);\n};\n", "import * as os from 'os';\nimport * as fs from 'fs';\nimport * as childProcess from 'child_process';\nimport * as utils from '../utils';\nimport * as servicesApi from './testimServicesApi';\nimport type { RunnerOptions, TunnelOptions } from 'src/runOptions';\n\nconst TUNNEL_BINARY_ORIGIN = 'https://github.com/cloudflare/cloudflared/releases/download/2024.1.5/';\n\nconst TUNNEL_BINARY_PATHNAME: Partial<{ [os: string]: { path: string; extract?: true } }> = {\n    win32ia32: { path: 'cloudflared-windows-386.exe' },\n    win32x64: { path: 'cloudflared-windows-amd64.exe' },\n    darwinx64: { path: 'cloudflared-darwin-amd64.tgz', extract: true },\n    linuxia32: { path: 'cloudflared-linux-386' },\n    linuxx64: { path: 'cloudflared-linux-amd64' },\n};\nconst TUNNEL_BINARY_DIRECTORY = os.tmpdir();\nconst TUNNEL_BINARY_LOCATION = `${TUNNEL_BINARY_DIRECTORY}/cloudflared`;\n\nlet tunnelId: string | null | undefined = null;\nlet tunnelProcess: childProcess.ChildProcess | null = null;\n\nexport const prepareTunnel = async () => {\n    const isBinaryExist = await utils.doesPathExist(TUNNEL_BINARY_LOCATION);\n    if (isBinaryExist) {\n        return;\n    }\n\n    const downloadUrl = TUNNEL_BINARY_PATHNAME[os.platform() + os.arch()];\n    if (!downloadUrl) {\n        throw new Error(`tunnel on ${os.platform() + os.arch()} platform is not supported.`);\n    }\n    const destination = downloadUrl.extract ? TUNNEL_BINARY_DIRECTORY + downloadUrl.path : TUNNEL_BINARY_LOCATION;\n    await utils.downloadAndSave(`${TUNNEL_BINARY_ORIGIN}/${downloadUrl.path}`, destination);\n    if (downloadUrl.extract) {\n        await utils.unzipFile(destination, TUNNEL_BINARY_DIRECTORY);\n    }\n    await fs.promises.chmod(TUNNEL_BINARY_LOCATION, '755');\n};\n\nexport const connectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions) => {\n    const tunnelBaseUrl = (options as RunnerOptions).baseUrl || `http://localhost:${options.tunnelPort || 80}`;\n    const tunnelRoutes = ('tunnelRoutes' in options && options.tunnelRoutes) || [tunnelBaseUrl];\n    const [result] = await Promise.all([\n        servicesApi.getCloudflareTunnel(options.company!.companyId, tunnelRoutes),\n        prepareTunnel(),\n    ]);\n    tunnelId = result._id;\n    tunnelProcess = childProcess.spawn(TUNNEL_BINARY_LOCATION, ['tunnel', '--no-autoupdate', 'run', '--token', result.token!], { stdio: 'inherit' });\n    await servicesApi.forceUpdateCloudflareTunnelRoutes(options.company!.companyId, tunnelId);\n\n    if ('tunnelRoutesOutput' in options && options.tunnelRoutesOutput) {\n        await fs.promises.writeFile(options.tunnelRoutesOutput, JSON.stringify(result.routesMapping, null, 2));\n    }\n\n    (options as RunnerOptions).baseUrl = `${options.tunnelUseHttpAddress ? 'http' : 'https'}://${result.routesMapping![tunnelBaseUrl as keyof typeof result.routesMapping]}`;\n};\n\nexport const disconnectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions) => {\n    const promises = [];\n    if (tunnelId) {\n        promises.push(servicesApi.deleteCloudflareTunnel(options.company!.companyId, tunnelId));\n    }\n    if (tunnelProcess) {\n        promises.push(new Promise<void>((resolve, reject) => {\n            tunnelProcess!.on('close', (code) => {\n                if (code) {\n                    reject(new Error(`tunnel process exited with code ${code}`));\n                }\n                resolve();\n            });\n            tunnelProcess!.kill();\n        }));\n    }\n    return await Promise.all(promises);\n};\n", "import * as testimNgrok from './testimNgrok';\nimport * as processHandler from '../processHandler';\nimport * as testimCloudflare from './testimCloudflare';\nimport * as testimCustomToken from './testimCustomToken';\nimport ora from 'ora';\nimport { getLogger } from './logger';\nimport { gridTypes } from './constants';\nimport { LambdatestService } from '../services/lambdatestService';\nimport type { RunnerOptions, TunnelOptions } from 'src/runOptions';\n\nconst logger = getLogger('tunnel');\ntype Options = Partial<TunnelOptions> | RunnerOptions;\n\nconst shouldUseLambdatestTunnel = (options: Options) => [gridTypes.TESTIM_LAMBDATEST, gridTypes.HYBRID].includes(options.gridData?.type as any) && options.gridData!.tunnel === 'lambdatest';\nconst shouldUseCloudflareTunnel = (options: Options) => options.tunnelRoutes || (options.gridData?.type === gridTypes.HYBRID && options.gridData.tunnel === 'cloudflare');\n\nexport const connect = async (options: Options) => {\n    if (!options.tunnel) {\n        return;\n    }\n\n    const authData = testimCustomToken.getTokenV3UserData();\n    let spinner;\n    try {\n        if (shouldUseLambdatestTunnel(options)) {\n            spinner = ora('Starting testim lambdatest tunnel...').start();\n            await LambdatestService.connectTunnel(options);\n        } else if (shouldUseCloudflareTunnel(options)) {\n            spinner = ora('Starting testim cloudflare tunnel...').start();\n            await testimCloudflare.connectTunnel(options);\n        } else {\n            spinner = ora('Starting testim ngrok tunnel...').start();\n            await testimNgrok.connectTunnel(options, authData);\n        }\n        spinner.succeed();\n    } catch (err) {\n        let msg = 'Failed to start tunnel. Please contact support@testim.io';\n        if (err.isInvalidCredsForLT) msg = 'Could not connect to LambdaTest. Check your credentials and then try again.';\n        logger.error('Failed to open tunnel', { err });\n        spinner?.fail(msg);\n        throw new Error(err.isInvalidCredsForLT ? `${msg}\\n${err.stdoutResult}` : msg);\n    }\n};\n\nexport const disconnect = async (options: Options) => {\n    if (!options.tunnel) {\n        return;\n    }\n\n    try {\n        if (shouldUseLambdatestTunnel(options)) {\n            await LambdatestService.disconnectTunnel(options);\n        } else if ('tunnelRoutes' in options) {\n            await testimCloudflare.disconnectTunnel(options);\n        } else {\n            await testimNgrok.disconnectTunnel(options);\n        }\n    } catch (err) {\n        const msg = 'catch error - failed to close tunnel';\n        logger.error(msg, { err });\n        throw new Error(msg);\n    }\n};\n\nexport const serveTunneling = async (options: Partial<TunnelOptions>, waitFor = new Promise(() => { /* avoid exiting process */ })) => {\n    await connect(options);\n    processHandler.registerExitHook(() => disconnect(options));\n    return await waitFor;\n};\n", "/* eslint-disable no-console */\nimport * as _ from 'lodash';\nimport * as utils from './utils';\nimport * as tunnel from './commons/testimTunnel';\nimport * as perf from './commons/performance-logger';\nimport * as gridService from './services/gridService';\nimport * as concurrencyCompanyService from './services/concurrencyCompanyService';\nimport * as analytics from './commons/testimAnalytics';\nimport * as branchService from './services/branchService';\nimport * as servicesApi from './commons/testimServicesApi';\nimport * as testimCustomToken from './commons/testimCustomToken';\nimport * as runnerFileCache from './commons/runnerFileCache';\nimport { getLogger } from './commons/logger';\nimport { reporter } from './reports/reporter';\nimport { EDITOR_URL } from './commons/config';\nimport { CLI_MODE, gridTypes } from './commons/constants';\nimport { ArgError, QuotaDepletedError } from './errors';\nimport { TestPlanRunner } from './runners/TestPlanRunner';\nimport { socketService } from './commons/socket/socketService';\nimport { labFeaturesService } from './services/labFeaturesService';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { featureAvailabilityService } from './commons/featureAvailabilityService';\nimport { prepareMockNetwork, initializeUserWithAuth } from './commons/prepareRunner';\nimport { getResolvedExtensionUrl } from './runOptionsUtils';\nimport type { RunnerOptions, TunnelOptions } from './runOptions';\n\nconst FREE_PLAN_MINIMUM_BROWSER_TIMEOUT = 30 * 60 * 1000;\nconst FREE_PLAN_ALLOWED_PARALLEL = 1;\n\nconst logger = getLogger('runner');\n\nasync function validateProjectQuotaNotDepleted(options: RunnerOptions) {\n    const projectId = options.project;\n\n    const usage = await servicesApi.getUsageForCurrentBillingPeriod(projectId);\n    if (!usage?.isExecutionBlocked) {\n        return;\n    }\n\n    console.error('You have reached the limit of runs for the billing month, please upgrade your plan at https://www.testim.io/upgrade-contact-us?source=cli');\n    analytics.track(options.authData!.uid, 'execution-quota-surpassed', { projectId });\n    throw new QuotaDepletedError();\n}\n\nconst PARALLEL_QUOTA_TYPES = {\n    desktopWeb: 'web',\n    mobileWeb: 'web',\n    android: 'mobile',\n    ios: 'mobile',\n    sfdc: 'sfdc',\n} as const;\n\nfunction validateOptionsForCompany(options: CommonSharedOptions, company: servicesApi.InitializedUserWithAuth['companyByProjectId']) {\n    const planType = utils.getPlanType(company.activePlan);\n    const optionsParallel = options.parallel!;\n\n    if (planType === 'free' && optionsParallel > FREE_PLAN_ALLOWED_PARALLEL) {\n        throw new ArgError(`The free plan allows only ${FREE_PLAN_ALLOWED_PARALLEL} parallel runs, please upgrade your plan at https://www.testim.io/upgrade-contact-us?source=cli. Run aborted`);\n    }\n\n    if (company.followL2CPlan) {\n        const projectQuotaType = options.projectData?.type ? PARALLEL_QUOTA_TYPES[options.projectData.type] : undefined;\n        const projectParallelMaxAmount = company.activePlan?.premiumFeatures.parallelism && projectQuotaType ? company.activePlan?.premiumFeatures.parallelism[projectQuotaType] : 0;\n\n        if (projectParallelMaxAmount && optionsParallel > projectParallelMaxAmount) {\n            console.warn(`It looks like your command used more parallel processing than your plan supports (${optionsParallel} vs. ${projectParallelMaxAmount}).\\nWe'll use the maximum of ${projectParallelMaxAmount} for now. To use more, you can adjust your command or upgrade your plan.`);\n            options.parallel = projectParallelMaxAmount;\n        }\n        const tunnelAllowed = company.activePlan?.premiumFeatures?.tunnel;\n        if (options.tunnel && !tunnelAllowed) {\n            throw new ArgError('Tunnel is not allowed for your current plan, please upgrade your plan at https://www.testim.io/upgrade-contact-us?source=cli. Run aborted');\n        }\n\n        const turboModeAllowed = company.activePlan?.premiumFeatures?.runInTurboMode;\n        if (options.lightweightMode && !turboModeAllowed) {\n            console.warn('\\nTurbo mode is not allowed for your current plan, please upgrade your plan at https://www.testim.io/upgrade-contact-us?source=cli. Turbo mode disabled for this run.');\n            options.lightweightMode = undefined;\n        }\n    }\n\n    if (company.tvcLicense && options.gridData?.type === gridTypes.TESTIM_TVC) {\n        const expireAt = company.tvcLicense.expireAt || 1;\n        if (Date.now() > expireAt && !company.churnedByL2C) {\n            throw new ArgError('Your license has expired. Please contact us at https://www.testim.io/upgrade-contact-us?source=cli to renew your license. Run aborted');\n        }\n\n        const maxParallel = Number(company.plan.premiumFeatures?.parallelism?.mobile);\n        if (optionsParallel > maxParallel) {\n            throw new ArgError(`Your license allows only ${maxParallel} parallel runs. Please contact us to upgrade your license at https://www.testim.io/upgrade-contact-us?source=cli. Run aborted`);\n        }\n    }\n\n    if (company.tdcLicense && options.gridData?.type === gridTypes.TESTIM_TDC) {\n        const expireAt = company.tdcLicense.expireAt || 1;\n        if (Date.now() > expireAt) {\n            throw new ArgError('Your license has expired. Please contact us at https://www.testim.io/upgrade-contact-us?source=cli to renew your license. Run aborted');\n        }\n\n        // TODO: add max parallel check for TDC license ?\n    }\n\n    const optionsRetention = options.retentionDays;\n    if (optionsRetention) {\n        const companyRetention = company.activePlan?.premiumFeatures?.resultRetention;\n        if (optionsRetention > companyRetention) {\n            throw new ArgError(`Retention days (${optionsRetention}) cannot be greater than the company's retention days (${companyRetention}). Run aborted`);\n        }\n    }\n\n    //Check for abusing mobile projects.\n    if (utils.isMobileProject(options as RunnerOptions)) {\n        if (featureFlagsService.flags.removeMobileTrialRestrictions.isEnabled()) {\n            return;\n        }\n        const tvcLicense = company.tvcLicense;\n        const tdcLicense = company.tdcLicense;\n\n        if (tvcLicense?.isPaid || tdcLicense?.isPaid) {\n            return; // We trust paying customers\n        }\n        // The license's are free or trial\n\n        const companyCreatedAt = company?.createdAt;\n        if (new Date(companyCreatedAt!) < new Date(featureFlagsService.flags.applyMobileRestrictionFromDate.getValue())) {\n            return;\n        }\n\n        // The company started the trial after the abuse date, reduce test timeout to 10 minutes if needed.\n        const testsTimeout = options.timeout;\n        if (testsTimeout >= 600_000) {\n            options.timeout = 600_000;\n            console.warn('Mobile Trial projects are limited to 10 minutes of execution time. The timeout has been reduced to 10 minutes.');\n        }\n\n        const testRetries = options.retries;\n        if (testRetries && testRetries >= 1) {\n            options.retries = 0;\n            console.warn('Mobile Trial projects are not allowed to have test retries.');\n        }\n    }\n}\n\nasync function validateCliAccount(options: RunnerOptions) {\n    if (options.lightweightMode?.disableQuotaBlocking) {\n        return;\n    }\n    try {\n        await validateProjectQuotaNotDepleted(options);\n    } catch (err) {\n        if ([ArgError, QuotaDepletedError].some(errType => err instanceof errType)) {\n            throw err;\n        }\n        logger.error('could not validate cli account', { err });\n    }\n}\n\nfunction analyticsIdentify(projectId: string) {\n    const authData = testimCustomToken.getTokenV3UserData();\n    return analytics.identify({\n        userId: authData.uid,\n        name: authData.uid!,\n        traits: {\n            projectId,\n            company: {\n                id: projectId,\n                // @ts-expect-error seems wrong?\n                lastCIRun: Math.floor(Date.now() / 1000), // unix timestamp\n            },\n        },\n    });\n}\n\nasync function initSocketServices(projectId: string, { disableResults = false, disableRemoteStep = false }) {\n    if (featureFlagsService.flags.useNewWSCLI.isEnabled() && !disableResults && !disableRemoteStep) {\n        return socketService.connect(projectId);\n    }\n    if (!disableRemoteStep) {\n        const { remoteStepService } = await import('./commons/socket/remoteStepService');\n        await remoteStepService.init(projectId);\n    }\n    if (!disableResults) {\n        const { testResultService } = await import('./commons/socket/testResultService');\n        testResultService.init(projectId);\n    }\n    return undefined;\n}\n\nfunction setBranch(options: CommonSharedOptions, branchInfoFromServer: servicesApi.InitializedUserWithAuth['branchName']) {\n    const { branch, autoDetect } = options;\n    branchService.setCurrentBranch(branchInfoFromServer, autoDetect);\n    if (!branchInfoFromServer && !autoDetect) {\n        throw new ArgError(`branch ${branch} does not exist, run aborted.`);\n    }\n}\n\nasync function setSfdcCredential(options: CommonSharedOptions, project: servicesApi.InitializedUserWithAuth['projectById']) {\n    const { id: projectId, type } = project;\n    const sfdcCompany = _.get(options, 'company.activePlan.premiumFeatures.ttaForSalesforce');\n    const shouldLoadSfdcCredential = sfdcCompany || type === 'sfdc' || (type === 'desktopWeb' && featureFlagsService.flags.sfdcHybridCompany.isEnabled());\n\n    const branch = branchService.getCurrentBranch();\n    if (shouldLoadSfdcCredential) {\n        options.sfdcCredential = await servicesApi.loadSfdcCredential({ projectId, branch });\n    }\n}\n\nfunction setCompany(options: CommonSharedOptions, company: servicesApi.InitializedUserWithAuth['companyByProjectId']) {\n    const { id, name, activePlan = {} } = company;\n    const isPOC = Boolean(activePlan.isPoc);\n    const isStartUp = Boolean(activePlan.isStartUp);\n    const planType = utils.getPlanType(activePlan);\n    if (planType === 'free') {\n        options.newBrowserWaitTimeout = options.newBrowserWaitTimeout! < FREE_PLAN_MINIMUM_BROWSER_TIMEOUT ? FREE_PLAN_MINIMUM_BROWSER_TIMEOUT : options.newBrowserWaitTimeout;\n    }\n    featureFlagsService.setCompanyId(id);\n    featureFlagsService.setIsPOC(isPOC);\n    featureFlagsService.setIsStartUp(isStartUp);\n    featureFlagsService.setPlanType(planType);\n    featureAvailabilityService.setPlanType(planType);\n    options.company = {\n        ucid: '', // (Dror)\n        companyId: id,\n        name,\n        planType,\n        isPOC,\n        isStartUp,\n        activePlan,\n    };\n}\n\nfunction setSystemInfo(options: CommonSharedOptions, editorUrl: servicesApi.InitializedUserWithAuth['clientConfig']['editorUrl']) {\n    options.editorUrl = EDITOR_URL || editorUrl;\n}\n\nfunction setAllGrids(options: CommonSharedOptions, allGrids: servicesApi.InitializedUserWithAuth['allGrids']) {\n    options.allGrids = allGrids;\n}\n\nfunction setAuthData(options: CommonSharedOptions, authData: servicesApi.InitializedUserWithAuth['authData']) {\n    options.authData = authData;\n}\n\nfunction setProject(options: CommonSharedOptions, project: servicesApi.InitializedUserWithAuth['projectById']) {\n    const { id, name, type, defaults } = project;\n    featureFlagsService.setProjectId(id);\n    featureFlagsService.setProjectType(type!);\n    options.projectData = {\n        projectId: id,\n        type,\n        name,\n        defaults,\n    };\n}\n\nasync function setGrid(options: CommonSharedOptions) {\n    options.gridData = await gridService.getGridData(options);\n    if (options.gridData?.name) {\n        options.grid = options.gridData.name;\n    }\n}\nfunction setMobileMode(options: CommonSharedOptions, project: servicesApi.InitializedUserWithAuth['projectById']) {\n    options.mode = ['android', 'ios'].includes(project.type || '') ? 'appium' : options.mode;\n}\n\nasync function setMockNetworkRules(options: CommonSharedOptions) {\n    const { project } = options;\n    const props = { projectId: project };\n\n    if (options.overrideMappingFile) {\n        analytics.trackWithCIUser('user-override-file', props);\n        options.mockNetworkRules = await prepareMockNetwork(options.overrideMappingFile);\n    }\n}\n\nasync function runRunner(options: RunnerOptions, customExtensionLocalLocation?: string) {\n    perf.log('in runner.js runRunner');\n\n    const { project, remoteRunId, useLocalChromeDriver, useChromeLauncher } = options;\n\n    if (!remoteRunId) {\n        options.source = (useLocalChromeDriver || useChromeLauncher) ? 'cli-local' : 'cli';\n    }\n\n    await validateCliAccount(options);\n\n    perf.log('in runRunner before tunnel.connect');\n    await tunnel.connect(options);\n    perf.log('in runRunner after tunnel.connect');\n\n    const testPlanRunner = new TestPlanRunner(customExtensionLocalLocation);\n    const results = await testPlanRunner.run(options);\n\n    perf.log('before tunnel.disconnect');\n    await tunnel.disconnect(options);\n    await endKeepAlive(options.slotService, project, options.company!.companyId);\n    perf.log('after tunnel.disconnect and gridService.keepAlive.end');\n\n    return results;\n}\nexport const run = runRunner;\n\nfunction showFreeGridRunWarningIfNeeded(options: CommonSharedOptions) {\n    if (featureAvailabilityService.shouldShowFreeGridRunWarning(options.gridData?.type)) {\n        const CYAN = '\\x1b[36m';\n        const UNDERSCORE = '\\x1b[4m';\n        const RESET = '\\x1b[0m';\n        const MESSAGE = 'Our Free grid offers basic service performance.\\nIf you need faster results, contact us to upgrade your plan and dramatically improve your tests\u2019 run times.';\n        console.log(`\\n${UNDERSCORE}${CYAN}${MESSAGE}${RESET}\\n`);\n    }\n}\n\nfunction startKeepAlive(slotService: 'mongo' | 'redis' | undefined, project: string, companyId: string) {\n    if (slotService === 'redis') {\n        concurrencyCompanyService.keepAlive.start(companyId, project);\n    }\n    if (slotService === 'mongo') {\n        gridService.keepAlive.start(project);\n    }\n}\n\nasync function endKeepAlive(slotService: 'mongo' | 'redis', project: string, companyId: string) {\n    if (slotService === 'redis') {\n        await concurrencyCompanyService.keepAlive.end(companyId, project);\n    }\n    if (slotService === 'mongo') {\n        await gridService.keepAlive.end(project);\n    }\n}\n\n/* eslint \"@typescript-eslint/sort-type-constituents\": error */\ntype PartialKeysFromRunOptions = (\n    | 'allGrids'\n    | 'authData'\n    | 'autoDetect'\n    | 'branch'\n    | 'browser'\n    | 'company'\n    | 'disableSockets'\n    | 'editorUrl'\n    | 'ext'\n    | 'extensionLocation'\n    | 'extensionPath'\n    | 'grid'\n    | 'gridData'\n    | 'gridId'\n    | 'host'\n    | 'lightweightMode'\n    | 'localTmaUrl'\n    | 'mockNetworkRules'\n    | 'mode'\n    | 'newBrowserWaitTimeout'\n    | 'overrideMappingFile'\n    | 'parallel'\n    | 'path'\n    | 'perfecto'\n    | 'playerPath'\n    | 'port'\n    | 'printGrids'\n    | 'projectData'\n    | 'protocol'\n    | 'publicIps'\n    | 'retentionDays'\n    | 'saucelabs'\n    | 'sfdcCredential'\n    | 'slotService'\n    | 'testobjectSauce'\n    | 'testPlan'\n    | 'testPlanIds'\n    | 'useChromeLauncher'\n    | 'useLocalChromeDriver'\n);\n/* eslint-disable @typescript-eslint/sort-type-constituents */\n\nexport type CommonSharedOptions = (\n    & Pick<RunnerOptions, 'project' | 'token' | 'userAccessKey' | 'timeout' | 'retries'> // <---- required\n    & Partial<Pick<TunnelOptions, 'tunnelOnlyMode' | 'tunnel'>> // <---- optional tunnel\n    & Partial<Pick<RunnerOptions, PartialKeysFromRunOptions>> // <---- optional\n);\n\n/**\n * This method initializes the Testim CLI with all the information it needs to start executing, it takes care of:\n *\n * - Reporting the user to analytics\n * - Authenticating the user and exchanging their token for a jwt\n * - Sets the grids for the company and validates the user has permission to run the CLI\n * @param options - the run options passed to the CLI, namely the project and token\n */\nexport async function init(options: CommonSharedOptions) {\n    perf.log('start runner init');\n    const { project, lightweightMode, useChromeLauncher, mode, disableSockets } = options;\n    const socketConnected = initSocketServices(project, {\n        disableResults: disableSockets || Boolean(lightweightMode?.disableResults && (useChromeLauncher || mode === CLI_MODE.SELENIUM)),\n        disableRemoteStep: disableSockets || Boolean(lightweightMode?.disableRemoteStep),\n    });\n\n    socketConnected.catch(() => { /* ignore */ });\n\n    const { authData, companyByProjectId, projectById, branchName, allGrids, clientConfig } = await initializeUserWithAuth(options);\n\n    if (companyByProjectId.disabled) {\n        throw new ArgError('The company is disabled.');\n    }\n\n    if (projectById.disabled) {\n        throw new ArgError('The project is disabled.');\n    }\n\n    if (options.printGrids) {\n        // print all the available grids for the company\n        const allGridsSorted = allGrids.sort((a, b) => a.type.localeCompare(b.type));\n        console.table(allGridsSorted.reduce<any>((tableData, grid) => {\n            class Grid { Type: string; Browsers: any; constructor(type: string, browsers: any) { this.Type = type; this.Browsers = browsers; } } // classes print better in tables\n            const gridBrowsersAsString = Object.entries(grid.browsers || { 'N/A': '' }).map(i => i.join(':')).join(', ');\n            tableData[grid.name] = new Grid(grid.type, gridBrowsersAsString);\n            return tableData;\n        }, {}));\n        process.exit(0); // doesn't make sense to go on with run if the user wanted to get grid info (in other words, choose a grid)\n    }\n\n    await socketConnected;\n\n    perf.log('after featureFlagsReady and socketConnected');\n    setSystemInfo(options, clientConfig.editorUrl);\n    setCompany(options, companyByProjectId);\n    setProject(options, projectById);\n    setMobileMode(options, projectById);\n    setBranch(options, branchName);\n    setAllGrids(options, allGrids);\n    setAuthData(options, authData);\n    await setSfdcCredential(options, projectById);\n    await setGrid(options);\n\n    validateOptionsForCompany(options, companyByProjectId);\n\n    // prepare extension after setting authData\n    if (!options.extensionLocation?.length) {\n        options.extensionLocation = [getResolvedExtensionUrl(options)];\n    }\n\n    /** Remotely purge client cache - consider using with the rollout FF \"scheduled\" option to create a window where cache is cleared that goes back to normal afterwards  */\n    if (featureFlagsService.flags.clearRunnerFileCache.isEnabled()) {\n        try {\n            await runnerFileCache.clear();\n            logger.info('runner file cache cleared');\n        } catch (err) {\n            logger.error('failed to clear runner file cache', { err });\n        }\n    }\n\n    if (!options.lightweightMode?.disableLabs) {\n        await labFeaturesService.loadLabFeatures(projectById.id, companyByProjectId.activePlan);\n    }\n\n    if (options.lightweightMode?.type === 'turboMode' && (featureFlagsService.flags.highSpeedMode.getValue() === 'disabled' || options.company!.planType === 'free')) {\n        delete options.lightweightMode;\n    }\n\n    if (options.lightweightMode?.type === 'turboMode') {\n        // eslint-disable-next-line max-len\n        console.log('\\nTurbo mode will ignore step delays. Test artifacts like screenshots and logs will only be saved for failed runs. For more information see our docs: https://help.testim.io/docs/turbo-mode');\n    }\n\n    startKeepAlive(options.slotService, project, companyByProjectId.id);\n    analyticsIdentify(project);\n    await setMockNetworkRules(options);\n    showFreeGridRunWarningIfNeeded(options);\n\n    const branchToUse = branchService.getCurrentBranch();\n    await reporter.setOptions(options as RunnerOptions, branchToUse);\n}\n", "import { doLogin } from '../../../credentialsManager';\nimport { getStartedWithStart } from '../../../cliAgentMode';\nimport { getPackageVersion } from '../../../testimNpmDriver';\nimport type { Express } from 'express';\n\n\nexport function orchestrateGeneralRoutes(app: Express) {\n    app.get<never, { success: true; isTestimAgent: true; startMode: boolean }>('/', (req, res) => {\n        const isStartMode = getStartedWithStart();\n\n        return res.status(200).json({ success: true, isTestimAgent: true, startMode: isStartMode });\n    });\n\n    app.get<never, { node: string; app: string }>('/version', (req, res) => {\n        res.status(200).json({\n            node: process.version,\n            app: getPackageVersion(),\n        });\n    });\n\n    app.get<never, never, never, { info: string }>('/loginInfo', (req, res) => {\n        try {\n            const projects = JSON.parse(Buffer.from(req.query.info, 'base64').toString());\n            doLogin({ overwriteExisting: false, projects });\n            res.status(200).end();\n        } catch (err) {\n            res.status(400).end();\n        }\n    });\n}\n", "/* eslint-disable no-console */\n\nimport chalk from 'chalk';\nimport * as service from './service';\nimport { Router } from 'express';\nimport { getLogger } from '../../../commons/logger';\nimport { NpmPackageError, TimeoutError } from '../../../errors';\nimport type { AwaitedReturnType } from 'src/utils';\nimport type { IncomingParams } from 'clickim/src/background/playbackContext';\n\nconst logger = getLogger('cli-router');\n\nexport const router = Router();\n\ntype RunStepResBody = { success: false; code: string } | { success: true; data?: AwaitedReturnType<typeof service['runCodeWithPackages']> };\ninterface RunStepReqBody {\n    code?: string;\n    stepId?: string;\n    testResultId?: string;\n    stepResultId?: string;\n    retryIndex?: number;\n    timeout?: number;\n    fileDataUrl?: string;\n    incomingParams: Pick<IncomingParams, 'as' | 'nodePackageParams'>;\n    context: { [key: string]: unknown };\n}\nrouter.post<never, RunStepResBody, RunStepReqBody>('/run', async (req, res) => {\n    const { code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, timeout, fileDataUrl } = req.body;\n\n    if (typeof code !== 'string' || !stepId || !incomingParams || !context || !testResultId || typeof retryIndex !== 'number' || !stepResultId || typeof timeout !== 'number') {\n        res.status(400).json({ success: false, code: 'invalid-params' });\n        return;\n    }\n\n    const commonLogData = { stepId, testResultId, retryIndex, stepResultId, timeout, fileDataUrl, nodePackageParams: incomingParams.nodePackageParams };\n    try {\n        const data = await service.runCodeWithPackages(code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, timeout, fileDataUrl);\n        if (!data.success) {\n            console.log(chalk.red(data.result.resultValue));\n            logger.error('CLI Action Failure', { message: data.result.resultValue, ...commonLogData });\n        }\n        res.status(200).json({ success: true, data });\n    } catch (err) {\n        logger.error('failed to run cli code', { err, ...commonLogData });\n        console.log(chalk.red('failed to run cli code', err));\n        res.status(500).json({ success: false, code: 'internal-error' });\n    }\n});\n\ntype InstallPkgsResBody = { success: false; code: string; message?: string } | { success: true; data?: AwaitedReturnType<typeof service['installPackage']> };\ninterface InstallPkgsReqBody { stepId?: string; testResultId?: string; stepResultId?: string; retryIndex?: number; timeout?: number; packageData?: { packageName: string; packageVersion: string }[] }\nrouter.post<never, InstallPkgsResBody, InstallPkgsReqBody>('/install', async (req, res) => {\n    const { stepId, testResultId, retryIndex, packageData, stepResultId, timeout } = req.body;\n\n    if (!stepId || typeof packageData !== 'object' || !testResultId || typeof retryIndex !== 'number' || !stepResultId || typeof timeout !== 'number') {\n        res.status(400).json({ success: false, code: 'invalid-params' });\n        return;\n    }\n\n    const commonLogData = { stepId, testResultId, retryIndex, stepResultId, timeout, packageData };\n    try {\n        const data = await service.installPackage(stepId, testResultId, retryIndex, packageData, stepResultId, timeout);\n        logger.info('installed packages successfully', commonLogData);\n        res.status(200).json({ success: true, data });\n    } catch (err) {\n        if (err instanceof NpmPackageError) {\n            logger.error('failed to install node packages', { err, ...commonLogData });\n            res.status(200).json({ success: false, code: 'invalid-node-package', message: err.message });\n            return;\n        }\n        if (err instanceof TimeoutError) {\n            logger.error('timeout installing node package', { err, ...commonLogData });\n            res.status(200).json({ success: false, code: 'timeout' });\n            return;\n        }\n        logger.error('failed to install node packages', { err, ...commonLogData });\n        res.status(500).json({ success: false, code: 'internal-error' });\n    }\n});\n", "export * from './router';\n", "import cors from 'cors';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport compression from 'compression';\nimport { orchestrateGeneralRoutes } from './general';\nimport { router as cliJsCodeRouter } from './cliJsCode';\nimport { IS_ON_PREM, DISABLE_AGENT_ORIGIN_CHECK } from '../../commons/config';\nimport type { Express } from 'express';\n\nexport function orchestrateRoutes(beforeMiddleware: (app: Express) => void) {\n    const app = express();\n    app.disable('x-powered-by');\n    beforeMiddleware(app);\n\n    app.use(bodyParser.urlencoded({ extended: false, limit: '50mb' }));\n    app.use(compression());\n    app.use(bodyParser.json({ limit: '50mb' }));\n\n    // set cors options\n    const whitelist = [\n        'http://localhost:3000',\n        'https://app.testim.io',\n        'https://app.staging.testim.io',\n        'https://app-eu.staging.testim.io',\n        'https://app.dev.testim.io',\n        'https://app-eu.dev.testim.io',\n        'https://app-eu.prod.testim.io',\n        'https://playground.testim.io',\n        'chrome-extension://pebeiooilphfmbohdbhbomomkkoghoia',\n        'https://tta-crm.tricentis.com',\n    ];\n    const corsOptions = {\n        methods: ['GET', 'PUT', 'POST', 'DELETE', 'OPTIONS'],\n        allowedHeaders: ['Content-Type', 'Authorization'],\n        credentials: true,\n        maxAge: 86_400,\n        origin: (IS_ON_PREM || DISABLE_AGENT_ORIGIN_CHECK) ? '*' : whitelist,\n    };\n    app.use('*', cors(corsOptions));\n\n    // Routes\n    orchestrateGeneralRoutes(app);\n\n    app.use('/cliJs', cliJsCodeRouter);\n\n    // catch 404\n    app.use((req, res) => {\n        res.status(404).send('Endpoint Not Found');\n    });\n\n    return app;\n}\n", "import * as http from 'http';\nimport * as testimCustomToken from '../commons/testimCustomToken';\nimport { ArgError } from '../errors';\nimport type { Express } from 'express';\nimport type { AddressInfo } from 'net';\nimport type { AgentModeOptions } from '../runOptions';\n\nexport async function init({ agentPort, agentBind, project, token }: Pick<AgentModeOptions, 'agentPort' | 'agentBind' | 'project' | 'token'>) {\n    const { orchestrateRoutes } = await import('./routers');\n    // TODO: no need for all of this code to be inside of a Promise ctor. can simply return a never ending promise without nesting all this code\n    return new Promise<void>((resolve, reject) => {\n        /**\n         * Init testim auth for making services request.\n         */\n        let initFn: (app: Express) => void = () => undefined;\n        if (project) {\n            testimCustomToken.init(project, token!);\n            initFn = (app) => {\n                app.use((req, res, next) => {\n                    Object.assign(req, { project });\n                    next();\n                });\n            };\n        }\n\n        const app = orchestrateRoutes(initFn);\n\n        /**\n         * Create HTTP server.\n         */\n\n        const server = http.createServer(app);\n\n        /**\n         * Listen on provided port, on all network interfaces.\n         */\n        server.listen(agentPort, agentBind);\n\n        // logger.info('Node Version', process.version);\n\n        server.on('error', onError);\n        server.on('listening', onListening);\n\n        /**\n         * Event listener for HTTP server \"error\" event.\n         */\n\n        function onError(error: Error & { syscall?: string; code?: string }) {\n            if (error.syscall !== 'listen') {\n                return reject(error);\n            }\n\n            // handle specific listen errors with friendly messages\n            switch (error.code) {\n                case 'EACCES':\n                case 'EPERM':\n                    return reject(new ArgError(`Port ${agentPort} requires elevated privileges`));\n                case 'EADDRINUSE':\n                    return reject(new ArgError(`Port ${agentPort} is already in use, is another Testim instance running?`));\n                default:\n                    return reject(error);\n            }\n        }\n\n        /**\n         * Event listener for HTTP server \"listening\" event.\n         */\n\n        function onListening() {\n            const { port } = server.address() as AddressInfo;\n            // eslint-disable-next-line no-console\n            console.log(`Running on port: ${port}`);\n            showStartStopOptions();\n        }\n    });\n}\n\nasync function showStartStopOptions() {\n    const prompts = require('prompts') as typeof import('prompts');\n    const sigint = 'Ctrl + C';\n    await prompts({\n        name: '',\n        type: 'text',\n        message: `Type the word \"stop\" or Press ${sigint}.`,\n        validate: x => x.toUpperCase().trim() === 'STOP',\n    });\n    // eslint-disable-next-line no-console\n    console.log('Exiting Testim CLI');\n    process.exit(0);\n}\n", "import ms from 'ms';\nimport ora from 'ora';\nimport WebSocket from 'ws';\nimport * as fs from 'node:fs';\nimport * as path from 'node:path';\nimport * as ChromeLauncher from 'chrome-launcher';\nimport * as config from './commons/config';\nimport * as prepareUtils from './commons/prepareRunnerAndTestimStartUtils';\nimport { ArgError } from './errors';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { downloadAndInstallChromium, CHROMIUM_VERSION } from './chromiumInstaller';\nimport { downloadAndSave, unzipFile, getCdpAddressForHost, TESTIM_BROWSER_DIR, promiseFromCallback, doesPathExist } from './utils';\nimport { getDisabledChromeFeatures } from './commons/testimDesiredCapabilitiesBuilder';\nimport { generateWebSocketOptions } from './utils/network';\nimport type { WebDriver } from './player/webdriver';\nimport type { AgentModeOptions } from './runOptions';\n\nconst LOG_LEVEL = config.WEBDRIVER_DEBUG ? 'verbose' : 'silent';\nconst EXTENSION_CACHE_TIME = ms('1h');\nconst USER_DATA_DIR = path.join(TESTIM_BROWSER_DIR, 'profile');\n\n// https://github.com/bayandin/chromedriver/blob/5013f2124888c50fff15dc2ff8287288f780b046/chrome_launcher.cc#L105\nconst CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILENAME = 'DevToolsActivePort';\nconst CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH = path.join(USER_DATA_DIR, CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILENAME);\n\nexport interface StandaloneBrowser { webdriverApi: WebDriver | { port: number; pid: number; cdpUrl: string } }\n\nexport async function runAgentMode(options: AgentModeOptions) {\n    let testimStandaloneBrowser: StandaloneBrowser | undefined;\n\n    await prepareUtils.preparePlayer(options.playerLocation, options.canary);\n\n    if (options.startTestimBrowser) {\n        await getRidOfPossiblyRunningChromeWithOurDataDir();\n        try {\n            // Consider moving that into the agent server and add endpoint to start browser?\n            testimStandaloneBrowser = await startTestimStandaloneBrowser(options);\n        } catch (e) {\n            if (e?.message?.includes('user data directory is already in use')) {\n                throw new ArgError('Please close all chrome browsers that were opened with \"testim start\" and try again');\n            }\n            throw e;\n        }\n    }\n\n    const agentServer = await import('./agent/server');\n\n    if (testimStandaloneBrowser?.webdriverApi) {\n        // if we're starting the agent here, pre-load the sessionPlayer so it loads faster\n        // on first play\n        const LOAD_PLAYER_DELAY = 6000;\n        setTimeout(() => {\n            setTimeout(() => require('./player/seleniumTestPlayer'));\n        }, LOAD_PLAYER_DELAY);\n    }\n\n    return agentServer.init(options);\n}\n\nlet startedWithStart = false;\n\nexport function getStartedWithStart() {\n    return startedWithStart;\n}\n\nfunction isPidRunning(pid: number) {\n    try {\n        return process.kill(pid, 0);\n    } catch {\n        return false;\n    }\n}\n\nasync function startFixedVersionChromium(options: AgentModeOptions, extensionBase64: string | null, downloadedExtensionPathUnzipped: string) {\n    const CHROMIUM_PROCESS_INFO_FILE = path.join(TESTIM_BROWSER_DIR, `chrome-${CHROMIUM_VERSION}-process`);\n    const CHECK_CHROMIUM_RUNNING_INTERVAL = 3000;\n\n    const onBrowserClosed = () => {\n        fs.rmSync(CHROMIUM_PROCESS_INFO_FILE, { recursive: true });\n        // eslint-disable-next-line no-console\n        console.log('\\n\\nBrowser session ended');\n        process.exit(0);\n    };\n\n    if (await doesPathExist(CHROMIUM_PROCESS_INFO_FILE)) {\n        // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n        const processInfo = JSON.parse(fs.readFileSync(CHROMIUM_PROCESS_INFO_FILE)) as { port: number; pid: number; cdpUrl: string };\n        if (isPidRunning(processInfo.pid)) { // if a previous instance of our browser is still running, use it and exit if it does\n            const monitorPidForExit = (): NodeJS.Timeout => (isPidRunning(processInfo.pid) ? setTimeout(monitorPidForExit, CHECK_CHROMIUM_RUNNING_INTERVAL) : onBrowserClosed());\n            monitorPidForExit();\n            return {\n                webdriverApi: processInfo,\n            };\n        }\n    }\n    const chromeBinary = await downloadAndInstallChromium();\n\n    if (!(await doesPathExist(USER_DATA_DIR))) {\n        await fs.promises.mkdir(USER_DATA_DIR, { recursive: true });\n    }\n    const capabilities = buildSeleniumOptions(USER_DATA_DIR, extensionBase64, downloadedExtensionPathUnzipped, chromeBinary);\n    const chromeFlags = [\n        ...capabilities.desiredCapabilities.chromeOptions.args,\n        ...ChromeLauncher.Launcher.defaultFlags().filter(flag => ![\n            '--disable-extensions',\n            '--disable-component-extensions-with-background-pages', // causes google connect to disallow some accounts (eg gmail accounts get a \"This browser or app may not be secure\" error)\n        ].includes(flag)),\n    ];\n    // Chromium needs API keys to communicate with google APIs (https://www.chromium.org/developers/how-tos/api-keys/)\n    // These are keys that were included in some chrome builds. They are widely distributed on the internet, their inclusion here is approved by ProdSec.\n    const envVars = {\n        GOOGLE_API_KEY: 'AIzaSyCkfPOPZXDKNn8hhgu3JrA62wIgC93d44k',\n        GOOGLE_DEFAULT_CLIENT_ID: '811574891467.apps.googleusercontent.com',\n        GOOGLE_DEFAULT_CLIENT_SECRET: 'kdloedMFGdGla2P1zacGjAQh',\n    };\n    const appUrl = options.extensionPath ? 'http://localhost:3000/app/' : new URL('?startMode=true', config.EDITOR_URL || config.DEFAULT_EDITOR_URL).href;\n    const chrome = await ChromeLauncher.launch({ chromeFlags, startingUrl: appUrl, ignoreDefaultFlags: true, userDataDir: USER_DATA_DIR, chromePath: chromeBinary, envVars });\n    const processInfo = { port: chrome.port, pid: chrome.pid, cdpUrl: await getCdpAddressForHost(`localhost:${chrome.port}`) };\n    fs.writeFileSync(CHROMIUM_PROCESS_INFO_FILE, JSON.stringify(processInfo));\n    chrome.process.once('exit', onBrowserClosed);\n    chrome.process.once('close', onBrowserClosed);\n    return {\n        webdriverApi: processInfo,\n    };\n}\n\nasync function startTestimStandaloneBrowser(options: AgentModeOptions) {\n    // After next clickim release we will have also testim-full.zip\n    // const fullExtensionUrl = \"https://testimstatic.blob.core.windows.net/extension/testim-full-master.zip\";\n    // CDN url\n    const fullExtensionUrl = `${config.EDGE_URL}/extension/testim-full-master.zip`;\n    const extensionFilename = path.basename(fullExtensionUrl);\n\n    const downloadedExtensionPath = path.join(TESTIM_BROWSER_DIR, extensionFilename);\n    const downloadedExtensionPathUnzipped = path.join(TESTIM_BROWSER_DIR, `${extensionFilename}__unzipped__`);\n\n    let shouldDownloadExtension = !(options.ext || options.extensionPath);\n\n    if (shouldDownloadExtension && await doesPathExist(downloadedExtensionPath)) {\n        const stat = await fs.promises.stat(downloadedExtensionPath);\n        shouldDownloadExtension = (Date.now() - EXTENSION_CACHE_TIME > stat.mtimeMs);\n    }\n    await fs.promises.mkdir(TESTIM_BROWSER_DIR, { recursive: true });\n\n    if (shouldDownloadExtension) {\n        const spinner = ora('Downloading Testim Editor').start();\n        await downloadAndSave(fullExtensionUrl, downloadedExtensionPath);\n\n        try {\n            // Ensure the zip is ok\n            await unzipFile(downloadedExtensionPath, downloadedExtensionPathUnzipped);\n        } catch (e) {\n            // The downloaded zip is corrupted, try re download once\n            await fs.promises.rm(downloadedExtensionPath, { recursive: true, force: true });\n            await downloadAndSave(fullExtensionUrl, downloadedExtensionPath);\n            try {\n                await unzipFile(downloadedExtensionPath, downloadedExtensionPathUnzipped);\n            } catch (err) {\n                // zip is bad again.\n                await fs.promises.rm(downloadedExtensionPath, { recursive: true, force: true });\n                spinner.fail('Failed to download Testim Editor');\n                throw new Error('Failed to download Testim Editor');\n            }\n        } finally {\n            if (!options.downloadBrowser) {\n                await fs.promises.rm(downloadedExtensionPathUnzipped, { recursive: true, force: true });\n            }\n        }\n\n        spinner.succeed();\n    }\n\n    const extensionBase64 = options.extensionPath ? null : (await fs.promises.readFile(options.ext || downloadedExtensionPath)).toString('base64');\n    if (options.downloadBrowser) {\n        return await startFixedVersionChromium(options, extensionBase64, downloadedExtensionPathUnzipped);\n    }\n    await prepareUtils.prepareChromeDriver(\n        { projectId: options.project },\n        // @ts-expect-error not clear where chromeBinaryLocations comes from\n        { chromeBinaryLocation: options.chromeBinaryLocations },\n    );\n\n    // @ts-expect-error not clear where chromeBinaryLocations comes from\n    const seleniumOptions = buildSeleniumOptions(USER_DATA_DIR, extensionBase64, options.extensionPath, options.chromeBinaryLocations);\n\n    const { WebDriver } = require('./player/webdriver') as typeof import('./player/webdriver');\n    const { SeleniumPerfStats } = require('./commons/SeleniumPerfStats') as typeof import('./commons/SeleniumPerfStats');\n\n    const webdriverApi = new WebDriver();\n    webdriverApi.seleniumPerfStats = new SeleniumPerfStats();\n\n    // starts chrome via selenium, note this is intentionally initClient and not init to bypass desired capabilities parsing\n    const webdriverInitResponse = await webdriverApi.initClient(seleniumOptions as any);\n\n    // example values from webdriverInitResponse\n    // webdriverInitResponse.sessionId\n    // webdriverInitResponse.value[\"goog:chromeOptions\"].debuggerAddress\n    // webdriverInitResponse.chrome.userDataDir;\n\n    // require user token, so we can't use it for now\n    // const { getEditorUrl } = require('./commons/testimServicesApi');\n\n    startedWithStart = true;\n    const appUrl = `${options.extensionPath ? 'http://localhost:3000/app/' : config.EDITOR_URL || config.DEFAULT_EDITOR_URL}?startMode=true`;\n\n    await webdriverApi.url(appUrl);\n    // save the initial URL we navigated to so we don't consider it the AuT\n    Object.assign(webdriverApi, { initialUrl: appUrl });\n    try {\n        //TODO(Benji) do we want this to be exactly getCdpAddressForHost or should this fail less gracefully indicating the agent did not start correctly?\n        // @ts-expect-error something here is off. the type of webdriverInitResponse is void\n        webdriverApi.cdpUrl = await getCdpAddressForHost(webdriverInitResponse.value['goog:chromeOptions'].debuggerAddress);\n    } catch (e) {\n        // ignore error\n    }\n\n    return {\n        webdriverApi,\n    };\n}\n\nfunction buildSeleniumOptions(userDataDir: string, fullExtensionPath: string | null, unpackedExtensionPath: string, chromeBinaryPath: string) {\n    const extensions = fullExtensionPath ? [fullExtensionPath] : [];\n    const args = [\n        `--user-data-dir=${userDataDir}`, // crashes chromium, re-enable if using chrome\n        '--log-level=OFF',\n        '--silent-debugger-extension-api',\n        '--no-first-run',\n    ];\n    if (unpackedExtensionPath) {\n        args.push(`--load-extension=${unpackedExtensionPath}`);\n    }\n\n    try {\n        const disableChromeFeatures = getDisabledChromeFeatures();\n        if (disableChromeFeatures.length) {\n            disableChromeFeatures.forEach((feature: string) => args.push(`--disable-features=${feature}`));\n        }\n    } catch {\n        // if we couldn't parse the flag, we don't want to block the run, silently fail into oblivion\n    }\n\n    return {\n        logLevel: LOG_LEVEL,\n        desiredCapabilities: {\n            chromeOptions: {\n                args,\n                extensions,\n                binary: chromeBinaryPath,\n            },\n            browserName: 'chrome',\n        },\n        host: 'localhost',\n        port: 9515, // chromedriver port\n    };\n}\n\n/**\n * Overview of what we do here:\n * we check if CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH is exists\n * If we can read the port & CDP url info from that file.\n * If we can read, but we can't send http request to the devtools server we assume it's closed and just delete the file\n * If we can read and send HTTP request, send CDP command of Browser.close to CDP, and delete the file.\n * If any of these fails we assume we couldn't kill the browser, and the user will get the \"close the running chromes errors down the line\"\n */\nasync function getRidOfPossiblyRunningChromeWithOurDataDir() {\n    if (!await doesPathExist(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH)) {\n        return;\n    }\n\n    try {\n        const { webSocketDebuggerUrl } = await readAndValidateChromedriverDevToolsActivePortFile();\n        await tryToCloseBrowserWithCDPUrl(webSocketDebuggerUrl);\n        await fs.promises.unlink(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH);\n    } catch (e) {\n        // chrome is probably not really running, we are cool\n        if (e && e.message === 'unable to connect to devtools http server') {\n            await fs.promises.unlink(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH);\n        }\n    }\n}\n\nasync function readAndValidateChromedriverDevToolsActivePortFile() {\n    /**\n     * file content example:\n\n    58938\n    /devtools/browser/d4290379-ec08-4d03-a41a-ab9d9d4c36ac\n\n    */\n\n    const fileContent = await fs.promises.readFile(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH, { encoding: 'utf8' });\n\n    const [portLine, browserCDPURLLine] = fileContent.split('\\n').map(line => line.trim());\n\n    const port = Number.parseInt(portLine, 10);\n\n    if (!Number.isInteger(port) || port < 1 || port > 65535) {\n        throw new Error('invalid port number');\n    }\n\n    if (!browserCDPURLLine.startsWith('/devtools/browser/')) {\n        throw new Error('invalid devtools browser url');\n    }\n\n    const webSocketDebuggerUrl = await getCdpAddressForHost(`localhost:${port}`, 500);\n    // invariant check\n    if (!webSocketDebuggerUrl.endsWith(browserCDPURLLine)) {\n        throw new Error('invariant webSocketDebuggerUrl miss match');\n    }\n\n    return {\n        port,\n        webSocketDebuggerUrl,\n    };\n}\n\nasync function tryToCloseBrowserWithCDPUrl(webSocketDebuggerUrl: string | URL, timeout = 100) {\n    const websocketConnection = await wsConnectAndOpen(webSocketDebuggerUrl, timeout);\n\n    return promiseFromCallback<Error | undefined, never>(cb => {\n        websocketConnection.send(JSON.stringify({\n            id: 0,\n            method: 'Browser.close',\n        }), cb);\n    });\n}\n\nasync function wsConnectAndOpen(webSocketDebuggerUrl: string | URL, timeout = 100) {\n    const options = generateWebSocketOptions({ timeout });\n    const websocket = new WebSocket(webSocketDebuggerUrl, options);\n\n    const openPromise = promiseFromCallback((cb) => {\n        websocket.once('open', cb);\n    }).then(() => {\n        websocket.removeAllListeners();\n    });\n\n    const errorPromise = promiseFromCallback((cb) => {\n        websocket.once('error', cb);\n    }).catch(() => {\n        websocket.close();\n        websocket.removeAllListeners();\n    });\n\n    return Promise.race([openPromise, errorPromise]).then(() => websocket);\n}\n\n", "#! /usr/bin/env node\n/* eslint-disable no-console */\n\nimport 'source-map-support/register';\nimport './polyfills';\nimport * as semver from 'semver';\nimport * as perf from './commons/performance-logger';\nimport * as prepareRunner from './commons/prepareRunner';\nimport * as runnerFileCache from './commons/runnerFileCache';\nimport * as prepareRunnerAndTestimStartUtils from './commons/prepareRunnerAndTestimStartUtils';\nimport chalk from 'chalk';\nimport { EventEmitter } from 'node:events';\nimport { CLI_MODE } from './commons/constants';\nimport { registerProcessForCleanup } from './processHandler';\nimport { NoArgsError, ArgError } from './errors';\nimport { onExit, ignoreFailingTestsInExitCode } from './cli/onExit';\nimport { updateRemoteRunFailure } from './commons/testimServicesApi';\nimport { getLogger, setProxyUri, setProjectId } from './commons/logger';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { program, type RunnerOptions } from './runOptions';\n\nconst logger = getLogger('cli-entry');\n\ndeclare global {\n    /* eslint-disable no-var */\n    /** Meta parameters defined globally in build-time */\n    var meta: {\n        readonly IS_LOCAL: false;\n        readonly IS_RELEASE: boolean;\n        readonly BRANCH_NAME: string;\n    } | undefined;\n    var caFileContent: Buffer | string | undefined;\n    var proxyUri: string | undefined;\n    var SuperagentProxy: typeof import('superagent-proxy') | undefined;\n    /* eslint-enable no-var */\n}\n\nfunction checkNodeVersion(engineVersion: string) {\n    if (!semver.satisfies(process.version, engineVersion)) {\n        throw new ArgError(`Testim.io CLI supports Node.js ${engineVersion}. This condition was not satisfied with current version: ${process.version}`);\n    }\n\n    const currentMinimalNodeVersion = 20;\n    const nextMinimalNodeVersion = 22;\n    const majorVersion = Number(process.versions.node.split('.')[0]);\n    // Release timeline: https://github.com/nodejs/Release/blob/main/README.md\n    const ltsNodeEolDate = new Date('2026-04-30T00:00:00.000Z');\n    const dateHasPassed = ltsNodeEolDate <= new Date();\n    const formattedDate = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'long', day: 'numeric' }).format(ltsNodeEolDate);\n\n    if (majorVersion < currentMinimalNodeVersion) {\n        throw new ArgError(`Testim.io CLI supports Node.js ${currentMinimalNodeVersion} and above, please upgrade to a newer Node.js version`);\n    }\n\n    if (majorVersion < nextMinimalNodeVersion && dateHasPassed) {\n        throw new ArgError(`Testim.io CLI supports Node.js ${nextMinimalNodeVersion} and above, please upgrade to a newer Node.js version`);\n    }\n\n    if (majorVersion < nextMinimalNodeVersion) {\n        console.log(chalk.yellow(`Testim.io CLI will stop supporting Node.js < ${nextMinimalNodeVersion} on ${formattedDate}. please upgrade to a newer Node.js version.`));\n    }\n}\n\nasync function main() {\n    console.log('Starting Testim.io CLI');\n    // Lazy load some dependencies which are slow to load, so the UX is not of a slow starting CLI tool\n    const [utils, options] = await Promise.all([\n        import('./utils'),\n        import('./runOptions'),\n    ]);\n    perf.log('Starting Testim.io CLI');\n    registerProcessForCleanup(onExit);\n\n    try {\n        checkNodeVersion(utils.getEnginesVersion());\n    } catch (err) {\n        console.log('Argument Error:', err.message);\n        process.exit(1);\n    }\n\n    try {\n        /*\n            Setup FF early, so we can use them to process args.\n            Be careful not to use FF that are relying on custom properties, since we don't have enough context yet.\n        */\n        await featureFlagsService.fetch({ proxy: program.proxy });\n\n        const processedOptions = await options.process();\n        perf.log('in main, after options.process');\n        setProxyUri(global.proxyUri);\n\n        EventEmitter.defaultMaxListeners = 'parallel' in processedOptions && processedOptions.parallel > 10 ? processedOptions.parallel * 3 : 30;\n        setProjectId((processedOptions as RunnerOptions).project);\n        runnerFileCache.setEncryptKey!('token' in processedOptions && typeof processedOptions.token === 'string' ? processedOptions.token : 'anonymous_encrypt_key');\n\n        if (utils.isInstallLazyDepsMode(processedOptions)) {\n            console.log('Lazy dependency installation started');\n            const { installAllLazyDependencies } = await import('./commons/lazyRequire');\n            return await installAllLazyDependencies();\n        }\n        if (utils.isLoginMode(processedOptions)) {\n            return undefined;\n        }\n        if (utils.isCreatePrefetchedDataMode(processedOptions)) {\n            await runnerFileCache.clear();\n            await prepareRunner.initializeUserWithAuth(processedOptions);\n            const { preloadTests } = await import('./commons/preloadTests');\n            await preloadTests(processedOptions);\n            if (!processedOptions.playerRequirePath && processedOptions.mode !== CLI_MODE.EXTENSION) {\n                await prepareRunnerAndTestimStartUtils.preparePlayer(processedOptions.playerLocation, processedOptions.canary);\n            }\n            const res = await runnerFileCache.waitForSave();\n            if (res.success) {\n                console.log(`created prefetched data at ${runnerFileCache.getCacheFileLocation()}`);\n            } else {\n                console.error('failed to create prefetch data', res.error);\n            }\n            return undefined;\n        }\n\n        const testRunner = await import('./runner');\n        if (utils.isTunnelOnlyMode(processedOptions)) {\n            await testRunner.init(processedOptions as unknown as RunnerOptions);\n            const { serveTunneling } = await import('./commons/testimTunnel');\n            await serveTunneling(processedOptions);\n            return undefined;\n        }\n\n        if (utils.isAgentMode(processedOptions)) {\n            const { runAgentMode } = await import('./cliAgentMode');\n            return runAgentMode(processedOptions);\n        }\n\n        if (processedOptions.saveRCALocally) {\n            const { initServer } = await import('./services/localRCASaver');\n            const { port } = await initServer(processedOptions);\n            processedOptions.localRCASaver = `http://localhost:${port}`;\n        }\n\n        if (processedOptions.exitCodeIgnoreFailingTests) {\n            ignoreFailingTestsInExitCode();\n        }\n\n        perf.log('right before testRunner.init/prepareRunner.prepare');\n        await testRunner.init(processedOptions);\n        const customExtensionLocalLocation = await prepareRunner.prepare(processedOptions);\n\n        perf.log('right after testRunner.init/prepareRunner.prepare');\n        return await testRunner.run(processedOptions, customExtensionLocalLocation);\n    } catch (err) {\n        if (err instanceof NoArgsError) {\n            // display help by default\n            return undefined;\n        }\n        const argsForRemoteRunFailure = utils.getArgsOnRemoteRunFailure();\n        if (argsForRemoteRunFailure) {\n            await updateRemoteRunFailure({ ...argsForRemoteRunFailure, error: err.message }).catch(() => { /* */ });\n        }\n        if (err instanceof ArgError) {\n            console.log(chalk.red('Argument Error:', err.message));\n            return err;\n        }\n        console.log('Error:', err.message);\n        logger.error('runner ended with unexpected error', { err });\n        return err;\n    }\n}\n\nmain().then(result => {\n    if (Array.isArray(result) && result.length === 0) {\n        console.log('No tests ran');\n    }\n    onExit(result);\n});\n\n", "import * as os from 'os';\nimport * as url from 'url';\nimport * as http from 'http';\nimport * as https from 'https';\nimport FormData from 'form-data';\n\n/** The DOM EventTarget subclass used by XMLHttpRequest. */\nclass XMLHttpRequestEventTarget {\n    onloadstart = null;\n    onprogress = null;\n    onabort = null;\n    onerror = null;\n    onload = null;\n    ontimeout = null;\n    onloadend = null;\n    _listeners: { [eventName: string]: ((e: ProgressEvent) => void)[] } = {};\n\n    addEventListener(eventType: string, listener: (e: ProgressEvent) => void) {\n        eventType = eventType.toLowerCase();\n        this._listeners[eventType] ||= [];\n        this._listeners[eventType].push(listener);\n    }\n    removeEventListener(eventType: string, listener: (e: ProgressEvent) => void) {\n        let index;\n        eventType = eventType.toLowerCase();\n        if (this._listeners[eventType]) {\n            index = this._listeners[eventType].indexOf(listener);\n            if (index !== -1) {\n                this._listeners[eventType].splice(index, 1);\n            }\n        }\n    }\n    dispatchEvent(event: ProgressEvent) {\n        event.currentTarget = this;\n        event.target = this;\n        const eventType = event.type;\n        const listeners = this._listeners[eventType] || [];\n        for (const listener of listeners) {\n            listener?.call(this, event);\n        }\n        (this[`on${eventType}` as keyof typeof this] as (e: ProgressEvent) => void)?.call(this, event);\n    }\n}\nclass XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    _contentType: string | null = null;\n    _body: Buffer | null = null;\n    constructor(private readonly _request: XMLHttpRequest) {\n        super();\n    }\n    _reset() {\n        this._contentType = null;\n        this._body = null;\n    }\n    _setData(data?: string | Buffer | ArrayBufferView | FormData | null) {\n        if (data === undefined || data === null) {\n            return;\n        }\n        if (typeof data === 'string') {\n            if (data.length !== 0) {\n                this._contentType = 'text/plain;charset=UTF-8';\n            }\n            this._body = Buffer.from(data, 'utf8');\n        } else if (Buffer.isBuffer(data)) {\n            this._body = data;\n        } else if (data instanceof ArrayBuffer) {\n            const body = Buffer.alloc(data.byteLength);\n            const view = new Uint8Array(data);\n            for (let i = 0; i < data.byteLength; i++) {\n                body[i] = view[i];\n            }\n            this._body = body;\n        } else if ('buffer' in data && data.buffer instanceof ArrayBuffer) {\n            const body = Buffer.alloc(data.byteLength);\n            const offset = data.byteOffset;\n            const view = new Uint8Array(data.buffer);\n            for (let i = 0; i < data.byteLength; i++) {\n                body[i] = view[i + offset];\n            }\n            this._body = body;\n        } else if (typeof data === 'object' && data instanceof FormData) { // The FormData might not be the same as FormData from globalThis\n            this._body = null;\n        } else {\n            // eslint-disable-next-line @typescript-eslint/no-base-to-string\n            throw new Error(`Unsupported send() data ${data}`);\n        }\n    }\n    _finalizeHeaders(headers: { [key: string]: string | undefined }, loweredHeaders: { [key: string]: string | undefined }) {\n        if (this._contentType && !('content-type' in loweredHeaders)) {\n            headers['Content-Type'] = this._contentType;\n        }\n        if (this._body) {\n            headers['Content-Length'] = this._body.length.toString();\n        }\n    }\n    _startUpload(request: http.ClientRequest) {\n        if (this._body) {\n            request.write(this._body);\n        }\n        request.end();\n    }\n}\nclass ProgressEvent {\n    /** the request that caused this event */\n    target: XMLHttpRequestEventTarget | null = null;\n    currentTarget: XMLHttpRequestEventTarget | null = null;\n    /** true if the Content-Length response header is available and the value of the event's total property is meaningful */\n    lengthComputable = false;\n    /** number of bytes that have already been downloaded or uploaded */\n    loaded = 0;\n    /** number of bytes that will be downloaded or uploaded by the request that fired the event*/\n    total = 0;\n    /** for compatibility with DOM events */\n    bubbles = false;\n    /** for compatibility with DOM events */\n    cancelable = false;\n\n    /** @param type type the event type, e.g. 'readystatechange'; must be lowercased */\n    constructor(public readonly type: string) {\n    }\n}\n/** Thrown if parsing URLs errors out. */\nclass SyntaxError extends Error {}\n/** Thrown if there is a problem with the URL passed to the XHR. */\nclass NetworkError extends Error {}\n/** Thrown if the XHR security policy is violated. */\nclass SecurityError extends Error {}\n/** Usually thrown if the XHR is in the wrong readyState for an operation. */\nclass InvalidStateError extends Error {}\nexport class XMLHttpRequest extends XMLHttpRequestEventTarget {\n    static SyntaxError = SyntaxError;\n    static ProgressEvent = ProgressEvent;\n    static SecurityError = SecurityError;\n    static XMLHttpRequest = XMLHttpRequest;\n    static InvalidStateError = InvalidStateError;\n    static XMLHttpRequestUpload = XMLHttpRequestUpload;\n\n    UNSENT = 0;\n    OPENED = 1;\n    HEADERS_RECEIVED = 2;\n    LOADING = 3;\n    DONE = 4;\n    static UNSENT = 0;\n    static OPENED = 1;\n    static HEADERS_RECEIVED = 2;\n    static LOADING = 3;\n    static DONE = 4;\n\n    nodejsHttpAgent = http.globalAgent;\n    nodejsHttpsAgent = https.globalAgent;\n    nodejsBaseUrl: string | null = null;\n    private _restrictedMethods = { CONNECT: true, TRACE: true, TRACK: true };\n    private _restrictedHeaders = {\n        'accept-charset': true,\n        'accept-encoding': true,\n        'access-control-request-headers': true,\n        'access-control-request-method': true,\n        connection: true,\n        'content-length': true,\n        cookie: true,\n        cookie2: true,\n        date: true,\n        dnt: true,\n        expect: true,\n        host: true,\n        'keep-alive': true,\n        origin: true,\n        referer: true,\n        te: true,\n        trailer: true,\n        'transfer-encoding': true,\n        upgrade: true,\n        'user-agent': true,\n        via: true,\n    };\n    private _privateHeaders = { 'set-cookie': false, 'set-cookie2': false };\n    private _userAgent = `Mozilla/5.0 (${os.type()} ${os.arch()}) node.js/${process.versions.node} v8/${process.versions.v8}`;\n\n    onreadystatechange = null;\n    readyState = XMLHttpRequest.UNSENT;\n    response: string | Buffer | ArrayBuffer | null = null;\n    responseText: string | null = '';\n    responseType: string | null = '';\n    status: number | undefined = 0;\n    statusText: string | undefined = '';\n    timeout = 0;\n    upload = new XMLHttpRequestUpload(this);\n    _method: string | null = null;\n    _url: url.UrlWithStringQuery | null = null;\n    _sync = false;\n    _headers: { [header: string]: string | undefined } | null = null;\n    _loweredHeaders: { [header: string]: string | undefined } | null = null;\n    _mimeOverride: string | null = null;\n    _request: http.ClientRequest | null = null;\n    _response: http.IncomingMessage | null = null;\n    _responseParts: Uint8Array[] | null = null;\n    _responseHeaders: { [header: string]: string | undefined } | null = null;\n    _aborting = null;\n    _error = null;\n    _loadedBytes = 0;\n    _totalBytes = 0;\n    _lengthComputable = false;\n    _anonymous;\n\n    constructor(options?: { anon?: boolean }) {\n        super();\n        this._anonymous = options?.anon;\n    }\n    static nodejsSet(options: { httpAgent?: http.Agent; httpsAgent?: https.Agent; baseUrl?: string | null }) {\n        XMLHttpRequest.prototype.nodejsSet(options);\n    }\n\n    nodejsSet(options: { httpAgent?: http.Agent; httpsAgent?: https.Agent; baseUrl?: string | null }) {\n        if ('httpAgent' in options) {\n            this.nodejsHttpAgent = options.httpAgent!;\n        }\n        if ('httpsAgent' in options) {\n            this.nodejsHttpsAgent = options.httpsAgent!;\n        }\n        if ('baseUrl' in options) {\n            const baseUrl = options.baseUrl;\n            if (baseUrl !== null) {\n                const parsedUrl = url.parse(baseUrl!, false, true);\n                if (!parsedUrl.protocol) {\n                    throw new SyntaxError('baseUrl must be an absolute URL');\n                }\n            }\n            this.nodejsBaseUrl = baseUrl!;\n        }\n    }\n    open(method: string, _url: string, async?: boolean) {\n        method = method.toUpperCase();\n        if (method in this._restrictedMethods) {\n            throw new SecurityError(`HTTP method ${method} is not allowed in XHR`);\n        }\n        const xhrUrl = this._parseUrl(_url);\n        if (async === undefined) {\n            async = true;\n        }\n        this._method = method;\n        this._url = xhrUrl;\n        this._sync = !async;\n        this._headers = {};\n        this._loweredHeaders = {};\n        this._mimeOverride = null;\n        this._setReadyState(XMLHttpRequest.OPENED);\n        this._request = null;\n        this._response = null;\n        this.status = 0;\n        this.statusText = '';\n        this._responseParts = [];\n        this._responseHeaders = null;\n        this._loadedBytes = 0;\n        this._totalBytes = 0;\n        this._lengthComputable = false;\n    }\n    public setRequestHeader(name: string, value: string) {\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n            throw new InvalidStateError('XHR readyState must be OPENED');\n        }\n        const loweredName = name.toLowerCase() as keyof typeof this._restrictedHeaders;\n        if (this._restrictedHeaders[loweredName] || loweredName.startsWith('sec-') || loweredName.startsWith('proxy-')) {\n            return;\n        }\n        value = value.toString();\n        if (loweredName in this._loweredHeaders!) {\n            name = this._loweredHeaders![loweredName]!;\n            this._headers![name] = `${this._headers![name]}, ${value}`;\n        } else {\n            this._loweredHeaders![loweredName] = name;\n            this._headers![name] = value;\n        }\n    }\n    public send(data: string | FormData | ArrayBufferView | null | undefined) {\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n            throw new InvalidStateError('XHR readyState must be OPENED');\n        }\n        if (this._request) {\n            throw new InvalidStateError('send() already called');\n        }\n        switch (this._url!.protocol) {\n            case 'file:':\n                this._sendFile();\n                break;\n            case 'http:':\n            case 'https:':\n                this._sendHttp(data);\n                break;\n            default:\n                throw new NetworkError(`XHR request to ${this._url!.href} failed: unsupported protocol '${this._url!.protocol}'. Please use supported protocols like HTTP, HTTPS, or file.`);\n        }\n    }\n    public abort() {\n        if (!this._request) {\n            return;\n        }\n        this._request.abort();\n        this._setError();\n        this._dispatchProgress('abort');\n        this._dispatchProgress('loadend');\n    }\n    public getResponseHeader(name: string) {\n        const loweredName = name.toLowerCase();\n        return this._responseHeaders?.[loweredName] || null;\n    }\n    public getAllResponseHeaders() {\n        if (!this._responseHeaders) {\n            return '';\n        }\n        return Object.entries(this._responseHeaders).map(([name, value]) => `${name}: ${value}`).join('\\r\\n');\n    }\n    public overrideMimeType(newMimeType: string) {\n        if ([XMLHttpRequest.LOADING, XMLHttpRequest.DONE].includes(this.readyState)) {\n            throw new InvalidStateError('overrideMimeType() not allowed in LOADING or DONE');\n        }\n        this._mimeOverride = newMimeType.toLowerCase();\n    }\n    private _setReadyState(newReadyState: number) {\n        this.readyState = newReadyState;\n        const event = new ProgressEvent('readystatechange');\n        this.dispatchEvent(event);\n    }\n    private _sendFile() {\n        if ((this._url as any).method !== 'GET') {\n            throw new NetworkError('The file protocol only supports GET');\n        }\n        throw new Error('Protocol file: not implemented');\n    }\n    private _sendHttp(data?: string | FormData | ArrayBufferView | null) {\n        if (this._sync) {\n            throw new Error('Synchronous XHR processing not implemented');\n        }\n        if ((data != null) && (this._method === 'GET' || this._method === 'HEAD')) {\n            data = null;\n        } else {\n            data ||= '';\n        }\n        this.upload._setData(data);\n        this._finalizeHeaders(data);\n        this._sendHxxpRequest(data);\n    }\n    private _sendHxxpRequest(data?: string | FormData | ArrayBufferView | null) {\n        const agent = this._url!.protocol === 'http:' ? this.nodejsHttpAgent : this.nodejsHttpsAgent;\n        const hxxp = this._url!.protocol === 'http:' ? http : https;\n        const request = hxxp.request({\n            hostname: this._url!.hostname,\n            port: this._url!.port,\n            path: this._url!.path,\n            auth: this._url!.auth,\n            method: this._method!,\n            headers: this._headers!,\n            agent,\n        });\n\n        if (typeof data === 'object' && data instanceof FormData) {\n            data.pipe(request);\n        }\n\n        this._request = request;\n        if (this.timeout) {\n            request.setTimeout(this.timeout, () => this._onHttpTimeout(request));\n        }\n        request.on('response', response => this._onHttpResponse(request, response));\n        request.on('error', () => this._onHttpRequestError(request));\n        this.upload._startUpload(request);\n        if (this._request === request) {\n            this._dispatchProgress('loadstart');\n        }\n    }\n    private _finalizeHeaders(data?: string | FormData | ArrayBufferView | null) {\n        if (typeof data === 'object' && data instanceof FormData) {\n            Object.assign(this._headers!, data.getHeaders());\n        }\n        this._headers!.Connection = 'keep-alive';\n        this._headers!.Host = this._url!.host!;\n        if (this._anonymous) {\n            this._headers!.Referer = 'about:blank';\n        }\n        this._headers!['User-Agent'] = this._userAgent;\n        this.upload._finalizeHeaders(this._headers!, this._loweredHeaders!);\n    }\n    private _onHttpResponse(request: http.ClientRequest, response: http.IncomingMessage) {\n        if (this._request !== request) {\n            return;\n        }\n        if ([301, 302, 303, 307, 308].includes(response.statusCode!)) {\n            this._url = this._parseUrl(response.headers.location!);\n            this._method = 'GET';\n            if ('content-type' in this._loweredHeaders!) {\n                delete this._headers![this._loweredHeaders['content-type']!];\n                delete this._loweredHeaders['content-type'];\n            }\n            if ('Content-Type' in this._headers!) {\n                delete this._headers['Content-Type'];\n            }\n            delete this._headers!['Content-Length'];\n            this.upload._reset();\n            this._finalizeHeaders();\n            this._sendHxxpRequest();\n            return;\n        }\n        this._response = response;\n        this._response.on('data', data => this._onHttpResponseData(response, data));\n        this._response.on('end', () => this._onHttpResponseEnd(response));\n        this._response.on('close', () => this._onHttpResponseClose(response));\n        this.status = this._response.statusCode;\n        this.statusText = http.STATUS_CODES[this.status!];\n        this._parseResponseHeaders(response);\n        const lengthString = this._responseHeaders!['content-length'];\n        if (lengthString) {\n            this._totalBytes = parseInt(lengthString, 10);\n            this._lengthComputable = true;\n        } else {\n            this._lengthComputable = false;\n        }\n        this._setReadyState(XMLHttpRequest.HEADERS_RECEIVED);\n    }\n    private _onHttpResponseData(response: http.IncomingMessage, data: Buffer) {\n        if (this._response !== response) {\n            return undefined;\n        }\n        this._responseParts!.push(data);\n        this._loadedBytes += data.length;\n        if (this.readyState !== XMLHttpRequest.LOADING) {\n            this._setReadyState(XMLHttpRequest.LOADING);\n        }\n        return this._dispatchProgress('progress');\n    }\n    private _onHttpResponseEnd(response: http.IncomingMessage) {\n        if (this._response !== response) {\n            return undefined;\n        }\n        this._parseResponse();\n        this._request = null;\n        this._response = null;\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('load');\n        return this._dispatchProgress('loadend');\n    }\n    private _onHttpResponseClose(response: http.IncomingMessage) {\n        if (this._response !== response) {\n            return undefined;\n        }\n        const request = this._request;\n        this._setError();\n        request!.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        return this._dispatchProgress('loadend');\n    }\n    private _onHttpTimeout(request: http.ClientRequest) {\n        if (this._request !== request) {\n            return undefined;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('timeout');\n        return this._dispatchProgress('loadend');\n    }\n    private _onHttpRequestError(request: http.ClientRequest) {\n        if (this._request !== request) {\n            return undefined;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        return this._dispatchProgress('loadend');\n    }\n    private _dispatchProgress(eventType: string) {\n        const event = new ProgressEvent(eventType);\n        event.lengthComputable = this._lengthComputable;\n        event.loaded = this._loadedBytes;\n        event.total = this._totalBytes;\n        this.dispatchEvent(event);\n    }\n    private _setError() {\n        this._request = null;\n        this._response = null;\n        this._responseHeaders = null;\n        this._responseParts = null;\n    }\n    private _parseUrl(urlString: string) {\n        let index; let password; let user;\n        const absoluteUrlString = this.nodejsBaseUrl === null ? urlString : url.resolve(this.nodejsBaseUrl, urlString);\n        const xhrUrl = url.parse(absoluteUrlString, false, true);\n        xhrUrl.hash = null!;\n        if (xhrUrl.auth && ((user !== undefined && user !== null) || (password !== undefined && password !== null))) {\n            index = xhrUrl.auth.indexOf(':');\n            if (index === -1) {\n                if (!user) {\n                    user = xhrUrl.auth;\n                }\n            } else {\n                if (!user) {\n                    // @ts-expect-error We just defined this as a URL, which doesn't have this function \uD83D\uDE33\n                    user = xhrUrl.substring(0, index);\n                }\n                if (!password) {\n                    // @ts-expect-error We just defined this as a URL, which doesn't have this function \uD83D\uDE33\n                    password = xhrUrl.substring(index + 1);\n                }\n            }\n        }\n        if (user || password) {\n            xhrUrl.auth = `${user}:${password}`;\n        }\n        return xhrUrl;\n    }\n    private _parseResponseHeaders(response: http.IncomingMessage) {\n        this._responseHeaders = {};\n        Object.entries(response.headers).forEach(([name, value]) => {\n            const loweredName = name.toLowerCase();\n            if (this._privateHeaders[loweredName as keyof typeof this._privateHeaders]) {\n                return;\n            }\n            if (this._mimeOverride !== null && loweredName === 'content-type') {\n                value = this._mimeOverride;\n            }\n            this._responseHeaders![loweredName] = value as string | undefined;\n        });\n        if (this._mimeOverride !== null && !('content-type' in this._responseHeaders)) {\n            this._responseHeaders['content-type'] = this._mimeOverride;\n        }\n    }\n    private _parseResponse() {\n        let buffer = Buffer.concat(this._responseParts!);\n        // temporary workaround for transport encoding parsing\n        if (this._responseHeaders!['content-encoding'] === 'gzip') {\n            buffer = require('zlib').gunzipSync(buffer);\n        }\n        this._responseParts = null;\n        switch (this.responseType) {\n            case 'text':\n                this._parseTextResponse(buffer);\n                break;\n            case 'json':\n                this.responseText = null;\n                try {\n                    this.response = JSON.parse(buffer.toString('utf-8'));\n                } catch {\n                    this.response = null;\n                }\n                break;\n            case 'buffer':\n                this.responseText = null;\n                this.response = buffer;\n                break;\n            case 'arraybuffer': {\n                this.responseText = null;\n                const arrayBuffer = new ArrayBuffer(buffer.length);\n                const view = new Uint8Array(arrayBuffer);\n                for (let i = 0; i < buffer.length; i++) {\n                    view[i] = buffer[i];\n                }\n                this.response = arrayBuffer;\n                break;\n            }\n            default:\n                this._parseTextResponse(buffer);\n        }\n    }\n    private _parseTextResponse(buffer: Buffer) {\n        try {\n            this.responseText = buffer.toString(this._parseResponseEncoding() as BufferEncoding);\n        } catch {\n            this.responseText = buffer.toString('binary');\n        }\n        this.response = this.responseText;\n    }\n    private _parseResponseEncoding() {\n        const contentType = this._responseHeaders!['content-type'];\n        const match = /;\\s*charset=(.*)$/.exec(contentType!);\n        if (contentType && match) {\n            return match[1];\n        }\n        return 'utf-8';\n    }\n}\n", "import { XMLHttpRequest } from '../commons/xhr2';\n\nObject.assign(global, {\n    xhr2: XMLHttpRequest,\n    XMLHttpRequest,\n});\n", "import * as constants from '../commons/constants';\nimport { isCi } from './isCiRun';\nimport { getLogger } from '../commons/logger';\nimport { writeStackTrace } from './writeStackTrace';\nimport { requireWithFallback } from '../commons/requireWithFallback';\n\nconst logger = getLogger('process-handler');\n\nlet exitCodeIgnoreFailingTests = false;\n\ninterface RunnerResult { runnerStatus?: string; success?: boolean; testStatus?: typeof constants['testStatus'][keyof typeof constants['testStatus']]; status?: string }\n\nfunction getExitCode(result: Error | RunnerResult | number | undefined) {\n    if (result instanceof Error) {\n        return 1;\n    }\n\n    if (exitCodeIgnoreFailingTests) {\n        return 0;\n    }\n\n    result ||= {};\n    const hasFailedTests = Object.values(result).some(\n        ({ runnerStatus, success, testStatus, status }) => {\n            if (\n                [runnerStatus, status].includes(constants.runnerTestStatus.SKIPPED) ||\n                ([runnerStatus, status].includes(constants.runnerTestStatus.FAILED) &&\n                    testStatus === constants.testStatus.EVALUATING)\n            ) {\n                return false;\n            }\n            return success !== true;\n        },\n    );\n\n    return hasFailedTests ? 1 : 0;\n}\n\nfunction closeChromeDriverIfRunning() {\n    try {\n        const chromedriver = requireWithFallback('chromedriver');\n        chromedriver.stop();\n    } catch (err) { /* ignore */ }\n}\n\nexport function ignoreFailingTestsInExitCode() {\n    exitCodeIgnoreFailingTests = true;\n}\n\n\nexport async function onExit(exitValue?: Error | RunnerResult | number) {\n    if ((exitValue as any)?.stack) {\n        if (!isCi) {\n            writeStackTrace(exitValue as Error);\n        } else {\n            // eslint-disable-next-line no-console\n            console.error(exitValue, (exitValue as any).stack);\n        }\n    }\n\n    closeChromeDriverIfRunning();\n\n    await logger.waitForFlush();\n\n    process.exit(getExitCode(exitValue));\n}\n", "/* eslint-disable no-console */\nimport * as os from 'os';\nimport * as path from 'path';\nimport chalk from 'chalk';\nimport { writeFileSync, mkdirSync } from 'fs';\nimport { DEBUG_MODE } from '../commons/config';\n\nexport function writeStackTrace(err?: Error) {\n    if (err?.message?.includes('SIGINT')) {\n        return; // no need to generate a log file for a sigint.\n    }\n    try {\n        const homedir = os.homedir();\n\n        mkdirSync(path.resolve(homedir, '.testim_logs'), { recursive: true });\n        const logFileName = path.resolve(homedir, '.testim_logs', `${new Date().toISOString().replace(/:|\\./g, '_')}.log`);\n        console.log('Oops :( The test runner has encountered an unexpected error. A complete log of this run can be found in:');\n        console.log(`\\t${logFileName}`);\n        if (DEBUG_MODE) { //TODO: This is part of TES-12584, remove once we have sufficient logs for schedulers aborted\n            console.log(`Call stack: ${err?.stack}`);\n        }\n\n        if (err?.message?.includes('Unable to compile TypeScript') && err.stack?.includes('runner/src') && process.argv.some(x => x.includes('player-require-path'))) {\n            console.log(chalk.red('Looks like you got a TypeScript compile error champ - but it\\'s not a very good one because we use TypeScript in transpile-only mode'));\n            console.log(chalk.red('change require(\\'ts-node/register/transpile-only\\'); to require(\\'ts-node/register\\'); for better errors'));\n        }\n\n        writeFileSync(logFileName, `${err}\\n${err?.stack}\\n\\n${JSON.stringify(err, Object.getOwnPropertyNames(err), 2)}`);\n    } catch { /* noop */ }\n}\n"],
  "mappings": "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",
  "names": ["performance_logger_exports", "__export", "log", "measure", "args", "MEASURE_TESTIM_CLI_PERFORMANCE", "time", "epoch", "last", "fn", "fnName", "start", "init_performance_logger", "__esmMin", "W3C_ELEMENT_ID", "init_constants", "__esmMin", "guid", "length", "a", "result", "i", "index", "getTestUrl", "editorUrl", "projectId", "testId", "resultId", "branch", "testUrl", "buildBasicHeader", "userName", "password", "isURL", "path", "legacyPattern", "pattern", "init_stringUtils", "__esmMin", "lazyDependencies", "dependencies", "engines", "init_package", "__esmMin", "_SERVICES_HOST", "canonicalBlobURL", "canonicalEdgeUrl", "DEFAULT_EDITOR_URL", "TESTIM_REGION", "RUNNER_ENVIRONMENT", "ENV_DOMAIN_SUFFIX", "EXTENSION_SP_S3_HOST", "DISABLE_AGENT_ORIGIN_CHECK", "DISABLE_DEBUGGER_INFINITE_TIMEOUT", "OVERRIDE_TIMEOUTS", "EDITOR_URL", "WEBSOCKET_HOST", "SERVICES_HOST", "LOGGER_CONSOLE", "LOGGER_DEBUG", "WEBDRIVER_DEBUG", "IS_ON_PREM", "REQUESTS_QUEUE_SIZE", "DEBUG_MODE", "TESTIM_CONCURRENT_WORKER_COUNT", "ROLLOUT_KEY", "CORALOGIX_PRIVATE_KEY", "DF_ENABLE_VIDEO", "APPIUM_VERSION", "GATEWAY_URL", "EXTENSION_SERVICES_HOST", "BLOB_URL", "EDGE_URL", "CANONICAL_EDGE_URL", "APP_UPLOAD_TIMEOUT", "MINIMUM_KNOWN_UPLOAD_SPEED_PER_SECONDS", "HEADSPIN_MOBILE_API_BASE_URL", "TDC_MOBILE_API_BASE_URL", "HEADSPIN_TDC_DEVICES_API_PATH", "HEADSPIN_TDC_APPS_API_PATH", "TVC_MOBILE_API_URL", "BROWSERSTACK_MOBILE_API_URL", "P_CLOUDY_DEFAULT_TEST_DURATION", "P_CLOUDY_DEFAULT_ANDROID_DEVICE_NAME", "setServicesHost", "init_config", "__esmMin", "host", "import_superagent", "CoralogixLogger", "init_coralogix_logger", "__esmMin", "init_config", "options", "CORALOGIX_PRIVATE_KEY", "log", "proxy", "body", "request", "superagent", "coralogix_winston_transport_exports", "__export", "CoralogixTransport", "import_winston_transport", "severityMap", "errorProps", "init_coralogix_winston_transport", "__esmMin", "init_coralogix_logger", "WinstonTransport", "options", "CoralogixLogger", "info", "callback", "category", "level", "msg", "infoMeta", "restMeta", "meta", "log", "errorOverride", "prop", "proxy", "getStreamsAndWaitForFlushPromise", "transports", "waitForFlush", "setProxy", "proxy", "IS_ON_PREM", "CoralogixTransport", "loggerInstance", "LOGGER_CONSOLE", "inspectOptions", "info", "setExecutionId", "execId", "executionId", "setProjectId", "projId", "projectId", "setProxyUri", "proxyUri", "addExecutionMetadata", "dataExecutionId", "getLogger", "loggerName", "Logger", "winstonMainLogger", "os", "winston", "nodeUtils", "import_chalk", "import_dayjs", "hostname", "runnerVersion", "sessionPlayerLoggerFormatter", "level", "defaultMeta", "init_logger", "__esmMin", "init_config", "init_utils", "getRunnerVersion", "message", "data", "date", "dayjs", "formattedMessage", "formattedData", "chalk", "LOGGER_DEBUG", "_logger", "msg", "logLevel", "err", "import_p_retry", "NoArgsError", "ArgError", "StopRunOnError", "GetBrowserError", "PageNotAvailableError", "WebdriverCapabilitiesError", "InvalidGridCredentials", "TimeoutError", "QuotaDepletedError", "GridError", "GridConcurrencyError", "NpmPackageError", "SeleniumCrashError", "NpmPermissionsError", "IncompatibleNpmPackageError", "NotImplementedError", "init_errors", "__esmMin", "err", "type", "AbortPRetryError", "path", "packageName", "descendant", "message", "isPromise", "obj", "delay", "time", "promiseAbort", "promise", "abortSignal", "abortPromise", "_", "rej", "promiseTimeout", "timeout", "errMsg", "OVERRIDE_TIMEOUTS", "warnedAboutDebugger", "timeoutErr", "TimeoutError", "promiseMap", "arr", "handler", "concurrency", "pLimit", "limit", "item", "index", "promiseFromCallback", "resolver", "resolve", "reject", "err", "result", "import_promises", "init_promiseUtils", "__esmMin", "init_errors", "init_config", "_", "import_dns", "logger", "networkConnectivityTestFailed", "testNetworkConnectivity", "throttledTestNetworkConnectivity", "ttl", "makeCounters", "init_httpRequestCounters", "__esmMin", "init_config", "init_logger", "init_promiseUtils", "getLogger", "IS_ON_PREM", "hostnames", "result", "promiseMap", "host", "dns", "counters", "update", "counter", "key", "_result", "wrapWithMonitoring", "fn", "name", "args", "e", "isNetworkHealthy", "allFailed", "allCalls", "httpRequest_exports", "__export", "deleteReq", "didNetworkConnectivityTestFail", "download", "get", "getFullRes", "getText", "head", "isNetworkHealthy", "post", "postForm", "postText", "put", "getCaFile", "binaryParser", "res", "fn", "data", "chunk", "getProxy", "superagent", "attachCaFileAndProxyToRequest", "request", "skipProxy", "caFile", "proxy", "_post", "url", "body", "headers", "timeout", "DEFAULT_REQUEST_TIMEOUT", "retry", "err", "_get", "query", "isBinary", "import_superagent", "logger", "wrapWithMonitoring", "DOWNLOAD_REQUEST_TIMEOUT", "logErrorAndRethrow", "init_httpRequest", "__esmMin", "init_logger", "init_httpRequestCounters", "getLogger", "makeCounters", "logMsg", "error", "response", "logErrorAndRethrowStack", "fields", "files", "fileFormName", "file", "options", "getCliLocation", "cliLocation", "getSourcePath", "location", "fileName", "isURL", "getRunnerVersion", "getEnginesVersion", "engines", "copyDir", "src", "dest", "createParentDirs", "dirents", "fsPromises", "item", "srcPath", "destPath", "doesPathExist", "_path", "err", "path", "unzip", "import_p_retry", "import_node_fs", "DOWNLOAD_RETRY", "download", "downloadAndSave", "getSource", "getSourceAsBuffer", "unzipFile", "getLocalFileSizeInMB", "init_fsUtils", "__esmMin", "init_stringUtils", "init_package", "url", "httpRequest", "pRetry", "saveToLocation", "res", "destFile", "srcZipFile", "destZipPath", "fileLocation", "constants_exports", "__export", "APPIUM_SESSION_MESSAGE", "CLI_MODE", "MOBILE_APP_SOURCE", "MOBILE_RUN_SKIP_REASON", "REGION_CONFIG", "X_HEADER_RUNNER_ID", "gridMessages", "gridTypes", "mobileWeb", "runnerStatus", "runnerTestStatus", "socketEventTypes", "stepResult", "test", "testRunStatus", "testStatus", "timeoutMessages", "init_constants", "__esmMin", "getUniqBrowsers", "options", "testList", "_a", "_b", "_c", "_d", "_e", "_f", "t", "getArgsOnRemoteRunFailure", "args", "hasTestPlanFlag", "isRemoteRun", "isQuarantineAndNotRemoteRun", "isLoginMode", "isTunnelOnlyMode", "isCreatePrefetchedDataMode", "isInstallLazyDepsMode", "isAgentMode", "replaceArgsWithNoDashes", "spreadObjectToArgs", "init_argsUtils", "__esmMin", "init_constants", "test", "testStatus", "nonDashFlags", "arg", "i", "obj", "key", "value", "getDuration", "ms", "dayjs", "getDurationSec", "import_dayjs", "import_duration", "init_timeUtils", "__esmMin", "_duration", "isAppFromDevice", "shouldBlockVirtualIosBuild", "isMobileProject", "isTestimVirtualGrid", "isAppFromDeviceDisabled", "init_mobileUtils", "__esmMin", "init_constants", "nativeApp", "gridType", "gridTypes", "options", "_a", "_b", "featureFlagsService", "getMemorySnapshot", "threshold", "memoryData", "formatMemoryUsage", "data", "init_performanceUtils", "__esmMin", "utils_exports", "__export", "OSS", "TESTIM_BROWSER_DIR", "buildBasicHeader", "calcPercentile", "copyDir", "delay", "doesPathExist", "download", "downloadAndSave", "extractElementId", "getArgsOnRemoteRunFailure", "getBrowserInfo", "getCdpAddressForHost", "getCliLocation", "getDuration", "getDurationSec", "getEnginesVersion", "getEnvironmentGitBranch", "getLinksFromUnescapeHTML", "getLocalFileSizeInMB", "getMemorySnapshot", "getPlanType", "getRunConfigByBrowserName", "getRunnerVersion", "getSource", "getSourceAsBuffer", "getSourcePath", "getTestUrl", "getUniqBrowsers", "groupTestsByRetries", "guid", "hasTestPlanFlag", "isAgentMode", "isAppFromDevice", "isAppFromDeviceDisabled", "isCreatePrefetchedDataMode", "isInstallLazyDepsMode", "isLoginMode", "isMobileProject", "isPromise", "isQuarantineAndNotRemoteRun", "isRemoteRun", "isTestimVirtualGrid", "isTunnelOnlyMode", "isURL", "promiseAbort", "promiseFromCallback", "promiseMap", "promiseTimeout", "removePropertyFromObject", "replaceArgsWithNoDashes", "sanitizeNumberValue", "shouldBlockVirtualIosBuild", "spreadObjectToArgs", "unescapeHTML", "unzipFile", "val", "defaultVal", "sanitizedValue", "browserValue", "BROWSERS", "b", "browser", "saucelabs", "browserstack", "selectedBrowser", "selectedOS", "x", "o", "obj", "propName", "cmpFunction", "prop", "element", "W3C_ELEMENT_ID", "plan", "now", "expirationDate", "testResults", "tr", "all", "current", "sorted", "a", "aCount", "bCount", "last", "html", "parser", "browserInstanceHost", "timeout", "httpRequest", "os", "_", "path", "import_linkedom", "HOMEDIR", "init_utils", "__esmMin", "init_constants", "init_fsUtils", "init_argsUtils", "init_timeUtils", "init_stringUtils", "init_promiseUtils", "init_mobileUtils", "init_performanceUtils", "arr", "percentile", "index", "mockNetworkRuleFileSchema_exports", "__export", "$schema", "mockNetworkRuleFileSchema_default", "definitions", "properties", "required", "type", "init_mockNetworkRuleFileSchema", "__esmMin", "getLocalRunnerCache", "promiseTimeout", "getCacheFileLocation", "buffer", "key", "_encryptKeyPromise", "decrypt", "iv", "encryptedText", "keyBuffer", "decipher", "decrypted", "memoize", "fn", "fnName", "duration", "THREE_HOURS", "parameters", "cacheEnabled", "originalFnName", "cached", "get", "logger", "cacheMissAllowed", "value", "set", "valueExpiry", "localRunnerCache", "expiry", "ttl", "waitingForSave", "obj", "_encryptAndSavePromise", "resolve", "encryptAndSaveResolve", "encryptAndSave", "clear", "setEnabled", "enabled", "_enableCacheMiss", "waitForSave", "setCacheLocation", "location", "cacheLocation", "fs", "path", "crypto", "import_lodash", "encryptKeyResolve", "setEncryptKey", "disable", "enable", "disableCacheMiss", "init_runnerFileCache", "__esmMin", "init_utils", "init_logger", "getLogger", "getCliLocation", "object", "error", "objStr", "cipher", "result", "doesPathExist", "err", "additionalLogDetails", "getCliLocation", "os", "init_logUtils", "__esmMin", "init_utils", "getMainPath", "packageName", "err", "requireWithFallback", "mainPath", "path", "init_requireWithFallback", "__esmMin", "getPathWithMissingPermissions", "error", "regexResult", "npmSevenAndEightMissingPermissions", "checkForInstallationAccessError", "defaultRoot", "packageName", "pathWithMissingPermissions", "npmEightMissingPermissions", "logger", "additionalLogDetails", "getPackageIfInstalledLocally", "requireWithFallback", "getLocallyInstalledPackageVersion", "rootPath", "extractCommonJsPathFromPackageJson", "packageManifest", "key", "pathFromManifest", "getLocallyInstalledCommonJsPath", "packagePath", "commonJSExportPath", "IncompatibleNpmPackageError", "installPackageLocally", "execOptions", "oldShrinkwrap", "newShrinkwrap", "renamed", "doesPathExist", "exec", "err", "NpmPermissionsError", "installPackages", "prefix", "packageNames", "proxyUri", "timeoutMs", "useCache", "resolve", "reject", "proxyFlag", "envVars", "stdout", "stderr", "options", "npmInstall", "localNpmLocation", "data", "code", "_a", "_b", "errorString", "packageNotInRegistryError", "packageVersionNotFoundError", "NpmPackageError", "TimeoutError", "getNpmVersion", "fs", "path", "import_util", "import_child_process", "init_npmWrapper", "__esmMin", "init_utils", "init_logger", "init_logUtils", "init_requireWithFallback", "init_errors", "_exec", "getLogger", "import_rox_node", "import_node_fetch", "import_eventsource", "logger", "USE_FEATURE_FLAGS", "FORCE_FETCH_TIMEOUT_MS", "SEC_IN_DAY", "LAB_FEATURE_FLAG_VALUES", "LabFeatureFlag", "FeatureFlagsService", "featureFlagsService", "init_featureFlagsService", "__esmMin", "init_logger", "init_utils", "init_config", "getLogger", "IS_ON_PREM", "GATEWAY_URL", "Rox", "initialValue", "value", "projectId", "projectType", "productType", "companyId", "planType", "isPOC", "isStartUp", "mode", "proxy", "proxyAgent", "customFetch", "customES", "proxyAgentInstance", "url", "options", "nodeFetch", "opts", "promiseTimeout", "ROLLOUT_KEY", "err", "chromedriverWrapper_exports", "__export", "install", "isReady", "start", "import_fkill", "import_p_retry", "PACKAGE_NAME", "DRIVER_PORT", "DRIVER_BASE_URL", "DEFAULT_DRIVER_ARGS", "init_chromedriverWrapper", "__esmMin", "init_npmWrapper", "init_httpRequest", "init_utils", "init_requireWithFallback", "init_featureFlagsService", "customeBinariesUrl", "featureFlagsService", "chromedriverCdnBinariesUrl", "isURL", "installPackageLocally", "getCliLocation", "fkill", "requireWithFallback", "chromeBinaryLocation", "pRetry", "_a", "statusResponse", "get", "chromeOptions", "sessionResponse", "post", "deleteReq", "prepareRunnerAndTestimStartUtils_exports", "__export", "getSessionPlayerFolder", "prepareChromeDriver", "prepareCustomExtension", "prepareExtension", "preparePlayer", "location", "unlimitedSize", "isURL", "destFile", "getRemoteFileSizeInMB", "MAX_CUSTOM_EXT_SIZE_MB", "ArgError", "MAX_CUSTOM_SIZE_ERROR_MSG", "downloadAndSave", "getLocalFileSizeInMB", "url", "httpRequest", "contentLengthHeader", "err", "logger", "locations", "fullLocations", "getSourcePath", "memoize", "promiseMap", "_path", "getSource", "MSEC_IN_HALF_DAY", "userDetails", "driverOptions", "skipIsReadyCheck", "spinner", "chromedriverWrapper", "error", "errorMsg", "NpmPermissionsError", "additionalLogDetails", "getPlayerVersion", "RUNNER_ENVIRONMENT", "EXTENSION_SP_S3_HOST", "BLOB_URL", "download", "getDevPlayerS3Url", "getPlayerLocation", "canary", "IS_ON_PREM", "ver", "cliLocation", "getCliLocation", "getPlayerDestination", "testimAppData", "downloadAndUnzip", "loc", "playerFileName", "isRetry", "unzipFile", "import_ms", "fs", "path", "import_serialize_error", "init_prepareRunnerAndTestimStartUtils", "__esmMin", "init_config", "init_runnerFileCache", "init_logger", "init_logUtils", "init_errors", "init_utils", "getLogger", "ms", "getCurrentPlatform", "osType", "downloadAndInstallChromium", "platform", "storageBaseUrl", "platformFolder", "ArgError", "winArchiveName", "CHROMIUM_VERSION", "platformArchiveName", "binaryPaths", "downloadUrl", "downloadArchivePath", "DOWNLOAD_CHROME_FOLDER", "downloadedZipFile", "binaryPath", "doesPathExist", "downloadSpinner", "ora", "downloadAndSave", "e", "errorMessage", "extractSpinner", "unzipFile", "fs", "os", "path", "import_ora", "init_chromiumInstaller", "__esmMin", "init_errors", "init_utils", "TESTIM_BROWSER_DIR", "init", "projectId", "token", "_projectId", "_token", "generateToken", "initFromData", "authData", "optionsData", "_userAccessKey", "_serverToken", "_serverTokenExp", "getTokenExp", "_refreshToken", "_ngrokToken", "_isNgrokWhitelisted", "_gridAccessWhitelistedIp", "_initializedFromCache", "getTokenV3", "memoize", "logger", "post", "SERVICES_HOST", "FIVE_MIN_IN_MS", "refreshToken", "customToken", "error", "ArgError", "getCustomTokenV3", "timeMargin", "featureFlagsService", "err", "getRefreshToken", "getTokenV3UserData", "getUserAccessKey", "validateUserAccessKey", "msg", "gridAccessWhitelistedIp", "wasInitializedFromCache", "init_testimCustomToken", "__esmMin", "init_config", "init_httpRequest", "init_runnerFileCache", "init_errors", "init_logger", "init_testimServicesApi", "init_featureFlagsService", "getLogger", "extractProtocol", "grid", "gridTypes", "urlExtract", "urlExtractRegex", "extractHost", "hostUrl", "getSerializableObject", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "host", "port", "path", "protocol", "accessToken", "slotId", "tunnel", "user", "key", "type", "tunnelUser", "tunnelKey", "name", "gridId", "provider", "androidToken", "iosToken", "apiUrl", "isSupportGrid", "handleGetGridResponse", "projectId", "companyId", "workerId", "browser", "options", "getFun", "res", "err", "logger", "gridMessages", "getOptionGrid", "serGrid", "addItemToGridCache", "GridError", "GridConcurrencyError", "getAllGrids", "getGridDataByGridId", "allGrids", "g", "ArgError", "getGridDataByGridName", "gridName", "releaseGridSlot", "gridData", "gridCache", "_keepAlive", "slots", "keepAliveGrid", "startKeepAlive", "keepAliveTimer", "releaseAllSlots", "workerIds", "promiseMap", "endKeepAlive", "getVendorKeyFromOptions", "testobjectSauce", "saucelabs", "getVendorUserFromOptions", "guid", "getTestPlanGridData", "testPlanData", "getGridData", "company", "useLocalChromeDriver", "localTmaUrl", "useChromeLauncher", "hasTestPlanFlag", "getGridSlot", "executionId", "testResultId", "isRunningLocalMode", "_", "keepAlive", "handleHybridOrVendorIfNeeded", "init_gridService", "__esmMin", "init_testimServicesApi", "init_logger", "init_utils", "init_constants", "init_errors", "getLogger", "runnerOptions", "gridInfo", "testRunConfig", "lambdatestService", "retryConfig", "usingTunnel", "maxRetries", "currentRetry", "response", "getHybridGridProvider", "getCurrentBranch", "currentBranch", "setCurrentBranch", "branchData", "acknowledgeAutoDetect", "ArgError", "init_branchService", "__esmMin", "init_errors", "identify", "data", "IS_ON_PREM", "anonymousId", "analytics", "trackWithCIUser", "eventName", "properties", "track", "userId", "id", "import_analytics_node", "init_testimAnalytics", "__esmMin", "init_config", "isCiRun_exports", "__export", "isCi", "init_isCiRun", "__esmMin", "setLightweightAnalytics", "properties", "lightweightMode", "analyticsTestStart", "executionId", "projectId", "testId", "resultId", "ucid", "companyId", "companyName", "projectName", "companyPlan", "source", "user", "isStartUp", "projectType", "appSource", "gridType", "calcSource", "trackWithCIUser", "analyticsTestEnd", "result", "logger", "err", "analyticsExecsStart", "analyticsProperties", "init_analyticsService", "__esmMin", "init_testimAnalytics", "init_isCiRun", "isCi", "isFailedTest", "isAbortedTest", "isPassedTest", "isSkippedTest", "isEvaluatingTest", "getSkippedCount", "getFailureEvaluatingCount", "getFailedTests", "getPassedTests", "getAbortedTests", "init_reporterUtils", "__esmMin", "init_utils", "init_constants", "testResult", "status", "mobile", "runnerTestStatus", "runnerStatus", "testStatus", "testResults", "options", "_a", "_b", "isQuarantineAndNotRemoteRun", "stripTokenFromConsoleArguments", "args", "indexOfTokenFlag", "newArgs", "import_lodash", "logger", "optionsKeysToMask", "DebugReporter", "init_debugReporter", "__esmMin", "init_logger", "init_reporterUtils", "getLogger", "options", "test", "workerId", "gridData", "provider", "host", "gridId", "gridType", "failedGetBrowserAttempts", "_", "beforeTests", "tests", "afterTests", "testPlanName", "executionId", "isAnonymous", "configName", "testResults", "duration", "passed", "getPassedTests", "failed", "FeatureAvailabilityService", "featureAvailabilityService", "init_featureAvailabilityService", "__esmMin", "init_constants", "planType", "gridType", "gridTypes", "consoleReporter_exports", "__export", "Reporter", "import_chalk", "_", "colorize", "CLI_MODE", "DEVICE", "ConsoleReporter", "init_consoleReporter", "__esmMin", "init_utils", "init_constants", "init_featureAvailabilityService", "init_reporterUtils", "chalk", "constants_exports", "options", "branchToUse", "workerId", "test", "testIdLabel", "testUrlLabel", "getTestUrl", "testStatus", "runnerTestStatus", "color", "getDuration", "failedTests", "failedTestStrings", "failedTest", "testUrl", "testResults", "testPlanName", "duration", "executionId", "isAnonymous", "getFailedTests", "passedTests", "getPassedTests", "abortedTests", "getAbortedTests", "passed", "aborted", "failed", "failedEvaluatingString", "skippedString", "featureAvailabilityService", "failureEvaluatingCount", "getFailureEvaluatingCount", "getSkippedCount", "planName", "message", "executionStats", "suitesString", "labelsString", "namesString", "testIdString", "name", "beforeTests", "tests", "afterTests", "configName", "writeTestList", "testList", "index", "_a", "ds", "suffix", "isQuarantineAndNotRemoteRun", "configString", "sfdcCredentialLog", "planStats", "browser", "gridNameOrId", "instanceType", "testName", "mode", "projectId", "attempt", "gridType", "junitReporter_exports", "__export", "Reporter", "getPrintName", "testResult", "testData", "testDataNumber", "getVisitedUrlsList", "getVisitedUrlsJson", "report", "editorUrl", "testPlanResults", "projectId", "branch", "classname", "options", "createTestCaseObject", "testResultUrl", "getTestUrl", "testResultObject", "getDurationSec", "isFailedTest", "isAbortedTest", "prefixMessage", "message", "isSkippedTest", "isQuarantineAndNotRemoteRun", "featureAvailabilityService", "createTestSuiteObject", "testPlanResult", "results", "testPlanName", "configName", "testResults", "testSuiteAttributes", "getTestCount", "getFailedCount", "getSuiteTimestamp", "getSkippedCount", "failureEvaluatingCount", "getFailureEvaluatingCount", "resultId", "startTimeArr", "minTestStartTime", "getFailedTests", "getAbortedTests", "err", "createErrorjUnitReporter", "builder", "errorJunitObject", "xml2js", "import_fs", "JunitReporter", "init_junitReporter", "__esmMin", "init_utils", "init_featureAvailabilityService", "init_reporterUtils", "branchToUse", "reportFile", "reportText", "fsPromises", "teamCityReporter_exports", "__export", "Reporter", "tidy", "text", "logger", "TeamCityReporter", "init_teamCityReporter", "__esmMin", "init_logger", "getLogger", "options", "test", "testConfig", "testDataNumber", "teamCityName", "workerId", "isRerun", "resultId", "name", "failureReason", "testurl", "testId", "message", "beforeTests", "tests", "afterTests", "testPlanName", "testResults", "jsonReporter_exports", "__export", "Reporter", "JsonReporter", "init_jsonReporter", "__esmMin", "options", "test", "workerId", "beforeTests", "tests", "afterTests", "testPlanName", "executionId", "event", "testResults", "launchChrome", "url", "platform", "import_child_process", "init_chrome_launcher", "__esmMin", "chromeReporter_exports", "__export", "Reporter", "ChromeReporter", "init_chromeReporter", "__esmMin", "init_utils", "init_chrome_launcher", "options", "branchToUse", "test", "testUrl", "getTestUrl", "launchChrome", "Reporter", "reporter", "init_reporter", "__esmMin", "init_debugReporter", "options", "branchToUse", "optReporters", "DebugReporter", "ConsoleReporter", "JunitReporter", "reporterModule", "testResults", "testPlanName", "startTime", "executionId", "isAnonymous", "results", "duration", "testPlanResults", "name", "preHookMutator", "args", "_a", "data", "releaseCompanySlot", "workerId", "companyId", "projectId", "slotData", "slotsCache", "slotId", "logger", "err", "_keepAlive", "slots", "keepAliveCompanySlots", "startKeepAlive", "keepAliveTimer", "releaseAllSlots", "workerIds", "promiseMap", "endKeepAlive", "requestSlot", "res", "requestCompanySlot", "gridMessages", "addItemToSlotsCache", "GridError", "GridConcurrencyError", "updateSlotDataCache", "slot", "updateCompanySlot", "keepAlive", "init_concurrencyCompanyService", "__esmMin", "init_testimServicesApi", "init_logger", "init_utils", "init_constants", "init_errors", "getLogger", "registerProcessForCleanup", "onExit", "_process", "cleanup", "err", "promiseTimeout", "promiseMap", "exitHooks", "hook", "logger", "reason", "_a", "msg", "e", "registerExitHook", "init_processHandler", "__esmMin", "init_logger", "init_utils", "getLogger", "lazyRequire_exports", "__export", "installAllLazyDependencies", "lazyRequire", "dependency", "options", "packageLocally", "getPackageIfInstalledLocally", "spinner", "ora", "requiredModule", "memoizedLazyRequire", "error", "logger", "depVersionToInstall", "getVersionOfLazyDep", "depWithVersions", "globalFlag", "errorMessage", "identifier", "ongoingCalls", "lazyRequireImpl", "installPackageLocally", "getCliLocation", "requireWithFallback", "allLazyDependencies", "lazyDependencies", "dep", "dependencyToFind", "depEntry", "import_ora", "init_lazyRequire", "__esmMin", "init_npmWrapper", "init_logger", "init_utils", "init_package", "init_requireWithFallback", "getLogger", "import_istanbul_lib_report", "SummaryToObjectReport", "init_SummaryToObjectReport", "__esmMin", "opts", "node", "summary", "import_ora", "import_dayjs", "import_test_exclude", "fs", "path", "reports", "libReport", "logger", "convertToURL", "pathHasQueryParam", "parsePath", "excludePath", "removeAfterQuestionMark", "getSourceMap", "rewritePath", "remapCoverage", "htmlReportLinkMapper", "saveCoverageReports", "convertV8ToIstanbul", "collectAndMergeJsCoverageData", "calculateCoverage", "init_jsCoverage", "__esmMin", "init_testimServicesApi", "init_errors", "init_utils", "init_logger", "init_lazyRequire", "init_SummaryToObjectReport", "getLogger", "_path", "codeCoverageInclude", "pathname", "TestExclude", "str", "source", "sourceMapDir", "sourceMapType", "convertSourceMap", "lazyRequire", "ArgError", "storagePath", "fileUrl", "options", "sourceMaps", "promiseMap", "sourceMap", "sourceMapObject", "sourcePath", "index", "parsedPath", "node", "filePath", "target", "targetPath", "name", "coverageMap", "reportDir", "tempJsDir", "codeCoverageReporter", "reportSummary", "context", "ex", "SummaryToObjectReport", "reporter", "cfg", "functions", "converter", "projectId", "runId", "mergeProcessCovs", "mergedCoverages", "covUrlMap", "testResults", "getRealData", "testResult", "coverageURL", "data", "getS3Artifact", "cov", "text", "getS3ArtifactText", "branchToUse", "numOfTests", "spinner", "ora", "baseDir", "dayjs", "libCoverage", "url", "istanbulCoverage", "coverageSummary", "err", "baseMsg", "SeleniumPerfStats_exports", "__export", "SELENIUM_PERF_MARKS", "SeleniumPerfStats", "performanceKeys", "init_SeleniumPerfStats", "__esmMin", "init_utils", "key", "mark", "id", "guid", "markDuration", "entries", "samples", "calcPercentile", "localRCASaver_exports", "__export", "initServer", "mapFilesToLocalDrive", "test", "logger", "f", "stepFileMap", "resultFileMap", "type", "TYPE_RENAMES", "err", "agentPort", "agentBind", "saveRCALocally", "multer", "lazyRequire", "saveRCALocallyStr", "DEFAULT_PATH", "upload", "req", "file", "cb", "metadata", "destination", "fileName", "format", "app", "express", "res", "TYPES", "createServer", "resolve", "reject", "server", "onError", "error", "ArgError", "fs", "os", "path", "import_express", "init_localRCASaver", "__esmMin", "init_errors", "init_lazyRequire", "_", "logger", "OverrideTestDataBuilder", "init_OverrideTestDataBuilder", "__esmMin", "init_utils", "init_logger", "getLogger", "params", "testInfoList", "projectId", "param", "testName", "test", "testOverrideTestData", "uniqueMatchIds", "uniqTestId", "testUniqIds", "firstIndex", "lastIndex", "currentTest", "newTestDataItems", "newTestData", "index", "testResultId", "guid", "runHook", "fn", "args", "err", "logger", "ArgError", "_", "gitBranch", "gitCommit", "gitRepoUrl", "runnerVersion", "TestRunStatus", "init_testRunStatus", "__esmMin", "init_utils", "init_constants", "init_gridService", "init_concurrencyCompanyService", "init_testimServicesApi", "init_errors", "init_logger", "init_reporter", "init_processHandler", "init_jsCoverage", "init_SeleniumPerfStats", "init_localRCASaver", "init_config", "init_featureFlagsService", "init_OverrideTestDataBuilder", "init_featureAvailabilityService", "getLogger", "getEnvironmentGitBranch", "getRunnerVersion", "testInfoList", "options", "testPlanId", "branchToUse", "SeleniumPerfStats", "_a", "_b", "_c", "_d", "browserNames", "getUniqBrowsers", "runnerMode", "TESTIM_CONCURRENT_WORKER_COUNT", "test", "resultId", "newResultId", "originalTestResultId", "previousTestResultId", "projectId", "executionId", "retryCount", "orgTestResult", "config", "testId", "name", "testStatus", "testCreatorName", "testCreatorEmail", "testOwnerName", "testOwnerEmail", "testLabels", "testSuites", "allLabels", "newTestResult", "addTestRetry", "wid", "isRerun", "reporter", "testRetryKey", "remoteRunId", "projectData", "testDataUrl", "updateTestDataArtifact", "testConfig", "updateTestStatus", "isQuarantineAndNotRemoteRun", "globalParameters", "params", "gridInfo", "workerId", "result", "success", "featureAvailabilityService", "getTestUrl", "runnerTestStatus", "memoryUsage", "getMemorySnapshot", "sessionId", "duration", "mapFilesToLocalDrive", "afterMerge", "testResultUpdates", "isAppFromDevice", "nativeApp", "gridType", "reason", "APP_FROM_DEVICE", "VIRTUAL_BUILD", "MOBILE_RUN_SKIP_REASON", "shouldBlockVirtualIosBuild", "companyId", "entries", "testInfo", "runConfig", "getRunConfigByBrowserName", "isAppFromDeviceDisabled", "featureFlagsService", "shouldSkipForMobile", "isMobileProject", "shouldSkipTest", "data", "slotService", "keepAlive", "startTime", "testPlanName", "testNames", "registerExitHook", "reportExecutionFinished", "runHooksProps", "overrideTestDataBuilder", "OverrideTestDataBuilder", "beforeTests", "tests", "afterTests", "reportExecutionStarted", "testResults", "promiseMap", "testResultId", "testData", "isLocalRun", "executionStartedPromise", "e", "marks", "key", "typedKey", "groupTestsByRetries", "total", "passed", "skipped", "failedInEvaluatingStatus", "status", "seleniumPerfMarks", "resultExtraData", "coverageSummary", "calculateCoverage", "failureReason", "queuedResultIds", "updateExecutionTests", "getExtensionsUrl", "program", "useCanonicalURL", "_a", "zipFileSuffix", "chrome", "CANONICAL_EDGE_URL", "BLOB_URL", "testimHeadlessExtensionDownloadUrl", "featureFlagsService", "RUNNER_ENVIRONMENT", "logger", "getResolvedExtensionUrl", "getPlayerUrl", "playerUrlPrefix", "EXTENSION_SP_S3_HOST", "init_runOptionsUtils", "__esmMin", "init_config", "init_featureFlagsService", "init_logger", "getLogger", "getOsIfAllowed", "testResultId", "osRequested", "allowedLambdatestOss", "logger", "import_ms", "import_p_retry", "os", "portfinder", "childProcess", "fs", "fsPromises", "import_node_path", "LT_TUNNEL_BINARY_ORIGIN", "LT_TUNNEL_BINARY_PATHNAME", "LT_TUNNEL_BINARY_DIRECTORY", "LT_TUNNEL_BINARY_LOCATION", "LT_MINIMUM_CONNECTION_RETRY_TIMEOUT", "MAX_RESOLUTION", "LambdatestService", "init_lambdatestService", "__esmMin", "init_utils", "init_httpRequest", "init_testimServicesApi", "init_errors", "init_logger", "init_runOptionsUtils", "init_constants", "init_featureFlagsService", "getLogger", "ms", "gridData", "gridTypes", "companyId", "fetchLambdatestConfig", "doesPathExist", "downloadUrl", "zipLocation", "downloadAndSave", "unzipFile", "path", "e", "time", "delay", "runnerOptions", "infoAPIPort", "gridUsername", "gridPassword", "externalLambdatestNTLMTunnelUsername", "externalLambdatestNTLMTunnelPassword", "proxyUri", "guid", "tunnelArgs", "featureFlagsService", "customTunnelOptions", "spreadObjectToArgs", "ArgError", "proxyUrl", "stdoutResult", "stderrResult", "data", "ltInfo", "pRetry", "get", "error", "err", "resolve", "reject", "code", "browser", "executionId", "testName", "testRunConfig", "overrideConfiguration", "mode", "_a", "_b", "defaultBrowserCaps", "tunnelCaps", "loadExtension", "canary", "ext", "extensionPath", "installCustomExtension", "config", "CLI_MODE", "extUrls", "getExtensionsUrl", "isURL", "buildSafariOptions", "opts", "browserName", "safariOptions", "readFileToBase64", "fileLocation", "setCustomExtension", "customExtensionLocalLocation", "extensions", "lambdatestService", "isURL", "extStr", "logger", "getHash", "setTestimExtension", "browserOptions", "args", "predefinedTestimExtension", "testimHeadlessExtensionDownloadUrl", "extFromOptions", "ext", "loadExt", "fileName", "filePath", "_buildChromiumOptions", "testRunConfig", "gridInfo", "mode", "_a", "_b", "DEFAULT_CHROME_OPTIONS_ARGS", "chromiumOptions", "CONTENT_SETTING", "isDFGrid", "insecureOriginsForDF", "featureFlagsService", "arg", "disableChromeFeatures", "getDisabledChromeFeatures", "feature", "setMobileEmulationSettings", "mobileWeb", "CLI_MODE", "optionsKey", "vendor", "LambdatestService", "buildFirefoxOptions", "fireFoxPrefs", "FIREFOX_FILE_NEVER_ASK", "formatResolution", "resolution", "getResolutionForSL", "platform", "DEFAULT_RESOLUTION", "windowsVersion", "SUPPORTED_WINDOWS_VERSIONS", "WINDOWS_RESOLUTION", "LINUX_RESOLUTION", "MACOS_RESOLUTION", "OSX_ELCAPITAN_OR_YOSEMITE_RESOLUTION", "buildSaucelabs", "testName", "saucelabs", "sauceOptions", "slToSend", "buildBrowserstack", "params", "runnerOptions", "projectData", "testId", "executionId", "executionName", "baseOpts", "buildPerfecto", "buildExperitest", "browser", "sessionTimeoutSec", "isSafari", "buildHeaders", "gridData", "gridUsername", "gridPassword", "username", "password", "headers", "buildBasicHeader", "buildSeleniumOptions", "options", "_c", "_d", "overrideConfiguration", "testResultId", "binaryLocation", "LOG_LEVEL", "driverRequestTimeout", "driverRequestRetries", "browserTimeoutSec", "browserstackOptions", "buildChromiumOptions", "hostToProvider", "byGrid", "capabilities", "getTargetingGroup", "customCapabilities", "error", "convertToNewCapabilitiesFormat", "originalAlwaysMatch", "printObj", "alwaysMatch", "truncateExtensionString", "key", "util", "fs", "path", "crypto", "_", "import_lodash", "init_testimDesiredCapabilitiesBuilder", "__esmMin", "init_utils", "init_config", "init_logger", "init_featureFlagsService", "init_constants", "init_lambdatestService", "getLogger", "WEBDRIVER_DEBUG", "str", "gridTypes", "desiredCapabilities", "unsupportedCapsFields", "unsupportedFields", "field", "stringOptsDesiredCapabilities", "stringBrowserOptions", "stringTestRunConfig", "stringGridInfoType", "isOldProtocol", "err", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "encodeForSafari", "url", "isSafari", "logger", "init_webDriverUtils", "__esmMin", "isElementDisplayed", "element", "nodeIsElement", "node", "parentElementForElement", "el", "enclosingNodeOrSelfMatchingPredicate", "targetNode", "predicate", "enclosingElementOrSelfMatchingPredicate", "targetElement", "cascadedStylePropertyForElement", "property", "computedStyleProperty", "parentElement", "elementSubtreeHasNonZeroDimensions", "boundingBox", "strokeWidth", "childNode", "elementOverflowsContainer", "isElementSubtreeHiddenByOverflow", "isElementInsideShadowRoot", "_a", "enclosingSelectElement", "e", "hasAncestorWithZeroOpacity", "hasAncestorWithDisplayNone", "init_isElementDisplayed", "__esmMin", "import_promise_queue", "webdriverio", "logger", "getViewportSizeHelper", "timeoutParamIndex", "WebdriverioWebDriverApi", "init_WebdriverioWebDriverApi", "__esmMin", "init_config", "init_performance_logger", "init_utils", "init_logger", "init_constants", "init_isElementDisplayed", "init_webDriverUtils", "init_SeleniumPerfStats", "getLogger", "_a", "err", "func", "testName", "testResultId", "crashingFunc", "maxConcurrent", "REQUESTS_QUEUE_SIZE", "maxQueue", "Queue", "_b", "perfId", "capabilities", "_c", "_d", "_e", "_f", "_g", "_h", "log", "extUrl", "SELENIUM_PERF_MARKS", "sessionId", "browserNode", "gridSlot", "status", "nodes", "slot", "error", "isOldEdge", "script", "args", "decorateErrorWithExecutedScript", "newEndpoint", "oldEndpoint", "arg", "isOldProtocol", "command", "parameters", "result", "element", "extractElementId", "selector", "elementId", "value", "isElementDisplayed", "W3C_ELEMENT_ID", "url", "encodeForSafari", "type", "ms", "params", "xoffset", "yoffset", "scroll", "x", "y", "prop", "res", "propToGet", "stringValue", "form", "button", "offsets", "shortcutKeys", "actions", "sourceSelector", "destinationSelector", "data", "elem", "localFileLocation", "size", "width", "height", "name", "domain", "httpOnly", "secure", "path", "expiry", "id", "tabId", "done", "attr", "keyCode", "text", "packageName", "isInstalled", "getSessionPlayerRequire_exports", "__export", "getSessionPlayer", "options", "import_path", "sessionPlayerInit", "init_getSessionPlayerRequire", "__esmMin", "init_logger", "perf", "getSessionPlayerFolder", "testimAppDataFolder", "path", "sessionPlayer", "sessionPlayerLoggerFormatter", "doubleClick_exports", "__export", "doubleClick", "init_doubleClick", "__esmMin", "eventData", "done", "POINTER_EVENTS", "element", "events", "successObject", "getEventPosition", "userEvent", "isWithinBounds", "start", "end", "point", "pointerPosition", "rect", "clientX", "clientY", "getPointerEventDictionary", "createPointerEvent", "eventType", "eventProperties", "createMouseEvent", "event", "findEffectiveActiveElement", "_a", "activeElement", "getEvent", "userEventData", "pos", "oldActiveElement", "e", "focusElement_exports", "__export", "dispatchFocus", "targetElement", "oldActiveElement", "createFocusEvent", "eventName", "event", "findEffectiveActiveElement", "_a", "activeElement", "setFocus", "element", "_oldActiveElement", "currentActiveElement", "elementToFocus", "init_focusElement", "__esmMin", "webdriver_exports", "__export", "WebDriver", "getCdpAddress", "initResult", "_a", "_b", "debuggerHost", "getCdpAddressForHost", "e", "logger", "_", "import_p_retry", "import_ua_parser_js", "LEFT", "RIGHT", "extractElementId", "codeSnippets", "locatorBuilderUtils", "playerUtils", "positionUtils", "init_webdriver", "__esmMin", "init_utils", "init_performance_logger", "init_testimDesiredCapabilitiesBuilder", "init_constants", "init_logger", "init_webDriverUtils", "init_WebdriverioWebDriverApi", "init_errors", "init_featureFlagsService", "init_SeleniumPerfStats", "getLogger", "utils_exports", "WebdriverioWebDriverApi", "shouldIgnore", "callback", "cb", "options", "_c", "_d", "_e", "_f", "_g", "_h", "projectData", "overrideConfiguration", "browserOptions", "testId", "testName", "testRunConfig", "gridInfo", "customExtensionLocalLocation", "executionId", "executionName", "testResultId", "seleniumPerfStats", "fastInit", "lambdatestService", "printFinalCaps", "mode", "capabilities", "buildSeleniumOptions", "driverDelay", "focus", "log", "delay", "featureFlagsService", "err", "capabilitiesAsString", "isFreeCompany", "InvalidGridCredentials", "WebdriverCapabilitiesError", "isLambdatestRun", "slidingPairsWindow", "arr", "startTimeArray", "start", "timeGaps", "a", "b", "msg", "keepAlive", "createKeepAliveRequestData", "id", "updateKeepAliveRequestData", "field", "req", "item", "checkKeepAliveScript", "requestId", "guid", "innerErr", "CLOSED_BROWSER_THRESHOLD_COUNT", "locatedElement", "el", "elementId", "W3C_ELEMENT_ID", "SeleniumCrashError", "perfId", "SELENIUM_PERF_MARKS", "fn", "args", "timeout", "target", "dynamicParentId", "setDynamicParentAttribute", "attributeName", "attributeValue", "element", "getLocationCode", "_locatedElement", "paddingTop", "paddingLeft", "rect", "extractTextCode", "ignoreHiddenTagsText", "clearTitleTags", "node", "x", "child", "isTextElement", "getFixedTextContent", "elem", "dupElement", "getElementTextContent", "copyElement", "value", "locateStep", "getHTMLCode", "testimInternalError", "size", "type", "SizeMismatchError", "getViewportSizeScript", "_setViewportSize", "pRetry", "windowHandleSize", "viewportSize", "widthDiff", "heightDiff", "res", "width", "height", "parse", "getBrowserName", "ua", "M", "tem", "getUserAgentString", "userAgent", "parser", "osDetails", "offsets", "clickOffset", "elementCenter", "left", "top", "frameOffset", "fallbackLeft", "fallbackTop", "button", "actions", "moveActions", "clickActions", "y", "_moveActions", "eventData", "doubleClick", "dispatchFocus", "types", "isOldProtocol", "sourceSeleniumElement", "destinationSeleniumElement", "offset", "response", "seleniumElement", "origin", "duration", "point", "events", "mouseEvents", "first", "last", "xDiff", "yDiff", "xOffset", "yOffset", "goToDrag", "startDrag", "doDrag", "endDrag", "targetRect", "xElementOffset", "yElementOffset", "midXRelative", "midYRelative", "coordinates", "startLeft", "startTop", "endLeft", "endTop", "distance", "p1", "p2", "from", "to", "MOVE_EVENT_DIST", "eventCount", "moves", "newMoves", "relativeMove", "lastMove", "rectsAndOffsets", "fromRect", "fromX", "fromY", "toRect", "toX", "toY", "fromElementCenter", "toElementCenter", "moveSequence", "movePosition", "startMovePositionActions", "pointerDownActions", "moveSequenceActions", "endMovePositionActions", "pointerUpActions", "actionsDown", "actionsUp", "defaultLocation", "loc", "logger", "LabFeaturesService", "labFeaturesService", "init_labFeaturesService", "__esmMin", "init_logger", "init_featureFlagsService", "init_testimServicesApi", "getLogger", "projectId", "companyPlan", "labBatman", "features", "getLabFeaturesByProjectId", "err", "featureFlagName", "featureFlag", "featureFlagsService", "ffValue", "labFeature", "f", "featureEnabled", "_a", "msg", "convertWindowsBackslash", "input", "isExtendedLengthPath", "hasNonAscii", "requireOrImportMethod", "_path", "err", "sep", "join", "promises", "file", "packageJson", "constructWithArguments", "params", "AsyncFunction", "F", "runCodeWithWorkerThread", "transactionId", "incomingParams", "context", "code", "packageLocalLocations", "timeout", "fileDataUrl", "requireCode", "pMember", "fileDataUrlToFileBuffer", "dataUriToBuffer", "consoleOverride", "injectCode", "runFn", "isPromise", "testimConsoleLogDataAggregates", "thread", "promiseTimeout", "resolve", "message", "data", "messageWithLogs", "logger", "TimeoutError", "removeFolder", "installFolder", "getTransactionId", "stepResultId", "testResultId", "stepId", "retryIndex", "installPackage", "packageData", "runNpmInstall", "runCodeWithPackages", "s3filepath", "_a", "computePackagePathFromPackageJsonExports", "featureFlagsService", "commonJsPath", "getLocallyInstalledCommonJsPath", "s3fileDataUrl", "getS3Artifact", "emptyFileDataUrl", "packages", "localPackageInstallFolder", "getLocalPackageInstallFolder", "proxyUri", "npmInstallation", "output", "installPackages", "pData", "version", "getLocallyInstalledPackageVersion", "cleanLocalPackageInstallFolder", "fs", "os", "path", "import_data_uri_to_buffer", "import_worker_threads", "init_service", "__esmMin", "init_utils", "init_npmWrapper", "init_errors", "init_logger", "init_testimServicesApi", "init_featureFlagsService", "getLogger", "cliJsStepPlayback_exports", "__export", "run", "isExceedingMaxResultSize", "data", "project", "shouldEnforceMaxSize", "maximumJsResultSize", "featureFlagsService", "dataSizeExceeded", "init_cliJsStepPlayback", "__esmMin", "init_service", "init_errors", "init_featureFlagsService", "browser", "step", "projectData", "code", "stepId", "incomingParams", "context", "testResultId", "retryIndex", "stepResultId", "runTimeout", "fileDataUrl", "s3filepath", "runCodeWithPackages", "err", "TimeoutError", "nodePackageStepPlayback_exports", "__export", "run", "init_nodePackageStepPlayback", "__esmMin", "init_service", "init_errors", "browser", "step", "stepId", "testResultId", "retryIndex", "stepResultId", "packageData", "timeout", "installPackage", "err", "NpmPackageError", "TimeoutError", "saveRemoteStep", "projectId", "resultId", "stepId", "remoteStepData", "logger", "onCompleted", "runResult", "sessionId", "onFailed", "failureReason", "executeStep", "options", "driver", "step", "projectData", "stepType", "playback", "playbacks", "err", "init_remoteStepPlayback", "__esmMin", "init_cliJsStepPlayback", "init_testimServicesApi", "init_nodePackageStepPlayback", "init_logger", "getLogger", "cliJsStepPlayback_exports", "nodePackageStepPlayback_exports", "preloadTests_exports", "__export", "preloadTests", "options", "opts", "memoize", "results", "promiseMap", "testId", "loadTest", "TEN_HOURS", "_", "init_preloadTests", "__esmMin", "init_runnerFileCache", "init_testimServicesApi", "init_utils", "import_ws", "import_events", "logger", "WAIT_BETWEEN_RECONNECT_MS", "SocketService", "socketService", "init_socketService", "__esmMin", "init_utils", "init_testimCustomToken", "init_logger", "init_config", "getLogger", "guid", "projectId", "url", "event", "err", "wsBaseUrl", "WEBSOCKET_HOST", "getCustomTokenV3", "token", "resolve", "options", "WebSocket", "_a", "evObject", "msg", "eventName", "eventMatcher", "listener", "onEvent", "data", "key", "fireIfSameMatchEventMatcher", "name", "_listener", "filter", "query", "type", "returnFullDocument", "filterId", "typeArray", "listeners", "import_p_retry", "io", "MAX_SOCKET_RECONNECT_ATTEMPT", "MAX_RECONNECT_ATTEMPT_BEFORE_SWITCH", "EMIT_PROMISE_TIMEOUT", "POLLING_TRANSPORT_TIMEOUT_MS", "logger", "BaseSocketService", "init_baseSocketServiceSocketIO", "__esmMin", "init_config", "init_utils", "init_logger", "getLogger", "testResultIds", "resultId", "_a", "testId", "socketError", "method", "err", "transport", "attempt", "SERVICES_HOST", "projectId", "ns", "opts", "resolve", "eventName", "eventData", "errorneousEvents", "emitAndWait", "reject", "data", "pRetry", "promiseTimeout", "remoteStepServiceSocketIO_exports", "__export", "remoteStepServiceSocketIO", "RemoteStepServiceSocketIO", "init_remoteStepServiceSocketIO", "__esmMin", "init_baseSocketServiceSocketIO", "BaseSocketService", "projectId", "resultId", "onRemoteStep", "data", "remoteStepService_exports", "__export", "remoteStepService", "REMOTE_STEP_SAVED", "remoteStepServiceSocketIO", "RemoteStepService", "init_remoteStepService", "__esmMin", "init_socketService", "init_constants", "init_featureFlagsService", "socketEventTypes", "projectId", "featureFlagsService", "resultId", "socketService", "onRemoteStep", "data", "TestResultServiceSocketIO", "testResultServiceSocketIO", "init_testResultServiceSocketIO", "__esmMin", "init_baseSocketServiceSocketIO", "BaseSocketService", "projectId", "resultId", "testId", "onTestResultStatus", "data", "testResultService_exports", "__export", "testResultService", "import_events", "TestResultService", "init_testResultService", "__esmMin", "init_socketService", "init_constants", "init_featureFlagsService", "init_testResultServiceSocketIO", "projectId", "featureFlagsService", "socketService", "testResultServiceSocketIO", "resultId", "testId", "socketEventTypes", "onTestResultStatus", "data", "_", "import_p_retry", "import_node_url", "logger", "RETRIES_ON_TIMEOUT", "MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE", "canSendRunDataOverUrl", "testCouldNotBeStarted", "TestRunHandler", "init_testRunHandler", "__esmMin", "init_utils", "init_config", "init_performance_logger", "init_testimAnalytics", "init_testimCustomToken", "init_testimServicesApi", "init_remoteStepPlayback", "init_logger", "init_preloadTests", "init_SeleniumPerfStats", "init_constants", "init_remoteStepService", "init_testResultService", "getLogger", "runData", "_executionId", "_executionName", "test", "_options", "_branch", "_testRunStatus", "SeleniumPerfStats", "_a", "_b", "shouldUpdateConfig", "getRunConfigByBrowserName", "baseUrl", "host", "app", "path", "gridType", "gridId", "_c", "_d", "activity", "lastValue", "isAppFromDevice", "shouldBlockVirtualIosBuild", "MOBILE_APP_SOURCE", "SERVICES_HOST", "loadTest", "runRequestParams", "getCustomTokenV3", "getRefreshToken", "EXTENSION_SERVICES_HOST", "getUserAccessKey", "trackWithCIUser", "isRunDataSentInUrl", "stringifiedLength", "testId", "preloadedTests", "preloadTests", "url", "sessionId", "mustClearPreviousStepResults", "uploadRunDataArtifactAndFallbackToEmptyString", "uploadRunDataArtifact", "err", "clearTestResultFinished", "runDataUrl", "clearTestResult", "reason", "value", "cdpTestRunner", "log", "targetInfos", "extensionNames", "extensionTargetId", "target", "AUTTargetId", "extensionSession", "extensionSessionId", "pRetry", "result", "testResult", "browserValue", "parsedUrl", "username", "password", "startTimeout", "resolve", "reportedStart", "resolveResult", "timeLimit", "checkIfDone", "testResultId", "branch", "projectId", "restResult", "getTestResults", "testResultService", "expectedStatuses", "timeoutMessages", "onConnected", "res", "debounceDelay", "maxWait", "waitForTestEnd", "isComplete", "isTestResultCompleted", "driver", "remoteStepService", "step", "executeStep", "maxRetryCount", "guid", "ExecutionQueue", "init_executionQueue", "__esmMin", "init_testRunHandler", "executionId", "executionName", "testList", "options", "branchToUse", "testStatus", "appIds", "t", "_a", "appId", "testInfo", "TestRunHandler", "nextTestRunHandler", "getSuite", "options", "branchToUse", "_a", "testId", "guid", "getSuiteTestList", "calcTestResultStatus", "tests", "total", "passed", "count", "resultId", "validateConfig", "testList", "supportedBrowsers", "CLI_MODE", "extensionBrowsers", "seleniumBrowsers", "diff", "getUniqBrowsers", "trackWithCIUser", "ArgError", "_", "init_runnerUtils", "__esmMin", "init_utils", "init_testimAnalytics", "init_testimServicesApi", "init_errors", "init_constants", "logger", "releaseGridSlot", "releaseCompanySlot", "releasePlayer", "init_workerUtils", "__esmMin", "init_gridService", "init_concurrencyCompanyService", "init_logger", "getLogger", "workerId", "releaseSlotOnTestFinished", "projectId", "companyId", "slotService", "player", "buildFailureResult", "testId", "testName", "resultId", "reason", "import_ms", "import_lodash", "import_p_retry", "import_dayjs", "import_duration", "logger", "GET_BROWSER_TIMEOUT_MSG", "TEST_START_TIMEOUT_MSG", "TEST_COMPLETE_TIMEOUT_MSG", "SETUP_TIMEOUT", "NETWORK_ERROR", "GRID_ERROR", "BROWSER_CLOSED", "SELENIUM_ERROR", "UNKNOWN_ERROR", "MOBILE_SESSION_ERROR", "VERBOSE_TEST_RESULT_PROPERTIES", "BaseWorker", "init_BaseWorker", "__esmMin", "init_utils", "init_performance_logger", "init_gridService", "init_concurrencyCompanyService", "init_testimServicesApi", "init_logger", "init_workerUtils", "init_reporter", "init_lambdatestService", "init_featureFlagsService", "init_remoteStepService", "init_testResultService", "init_testimCustomToken", "init_httpRequest", "init_constants", "init_errors", "dayjs", "_duration", "getLogger", "timeoutMessages", "stepResult", "executionQueue", "options", "customExtensionLocalLocation", "executionId", "onTestStarted", "onTestCompleted", "onGridSlot", "onTestIgnored", "releaseSlotOnTestFinished", "LambdatestService", "browser", "testRunHandler", "slot", "getGridSlot", "browserValue", "reporter", "NotImplementedError", "player", "gridInfo", "isQuarantineAndNotRemoteRun", "testResult", "runnerTestStatus", "_a", "_b", "isAppFromDevice", "isAppFromDeviceDisabled", "featureFlagsService", "isAppForIosVirtualDevice", "gridType", "increaseTDCRequestTimeout", "isTDCorHeadspinGrid", "gridTypes", "requestTimeout", "sanitizeNumberValue", "ms", "retryCount", "timeout", "isMobileProject", "failedAttemptsCount", "pRetry", "startTime", "promiseTimeout", "error", "companyId", "projectId", "requestSlot", "logDetails", "GridConcurrencyError", "delay", "testPlayer", "log", "getBrowserRetriesNumber", "failedGetBrowserAttempts", "updatedGridInfo", "handleHybridOrVendorIfNeeded", "getBrowserRes", "grid", "instanceType", "CLI_MODE", "PageNotAvailableError", "err", "releasePlayer", "InvalidGridCredentials", "errCls", "GridError", "GetBrowserError", "shouldRerun", "quarantineResult", "mobileTestResult", "appSource", "test", "getCustomTokenV3", "onWorkerFinished", "args", "onRunComplete", "sessionId", "isTimeoutError", "timeoutMsg", "isIgnoreErrors", "isTestStartedTimeout", "isTimeoutErrors", "shouldRerunOnInfraError", "shouldRerunOnTimeoutError", "shouldRenRunOnMoreRetries", "testRetryKey", "testResultId", "updateTestResult", "runTestAndCalcResult", "StopRunOnError", "getNetworkErrorMessage", "didNetworkConnectivityTestFail", "buildMobileSessionError", "DEVICE_OS_VERSION_TOO_LOW", "APP_NOT_EXIST_ON_DEVICE", "APP_NEVER_STARTED", "TIMEOUT_ERROR", "SAUCELABS_APP_IS_NOT_INSTALLED", "APPIUM_SESSION_MESSAGE", "msg", "buildError", "wasNetworkHealthy", "duration", "minutesCount", "secondsCount", "minutesTimeoutStr", "secondsTimeoutStr", "onRunError", "isNetworkHealthy", "errorType", "testRunStatus", "recoverTestResults", "runError", "branch", "getTestResults", "_", "disableResults", "disableRemoteStep", "remoteStepService", "testResultService", "import_p_retry", "logger", "WindowUtils", "init_windowUtils", "__esmMin", "init_utils", "init_logger", "init_errors", "getLogger", "id", "driver", "_x", "_y", "elementFromPoint", "x", "y", "el", "value", "pos", "scrollWithoutAnimation", "position", "scrollPosition", "location", "navigationMaxTime", "navigate", "retries", "err", "shouldRetryNavigation", "delay", "timeoutMSec", "zoom", "fullPageSize", "body", "html", "height", "width", "size", "actualSize", "pageIsAvailable", "locationObj", "PageNotAvailableError", "osAndBrowser", "pRetry", "logger", "CookieUtils", "init_cookieUtils", "__esmMin", "init_logger", "getLogger", "driver", "cookie", "domain", "err", "import_p_retry", "ScreenshotUtils", "init_screenshotUtils", "__esmMin", "tabId", "driver", "options", "str", "MAX_RETRY_COUNT", "SCREENSHOT_RETRY_DELAY", "devicePixelRatioPromise", "getScreenshot", "devicePixelRatio", "image", "pRetry", "base64", "elem", "getElemScreenshot", "devicePixelRatioJS", "value", "forceRatio", "cropImageFromImageData", "imageData", "imageInfo", "_image", "pixelRatio", "imageRegExMatch", "offset", "logger", "elementRect", "image", "x", "y", "width", "height", "imageWidth", "imageHeight", "RectIsOutsideOfImageError", "MIME_PNG", "chromeStitchImage", "fullSize", "parts", "fullImage", "part", "partImage", "stitchImage", "uploadDataUrl", "uploadAllDataUrls", "imagesObject", "isImageUrl", "key", "possibleImage", "updateKey", "imageUrl", "keyUrlList", "promiseMap", "entries", "current", "getElementAbsoluteRectangle", "_", "import_jimp", "ImageCaptureUtils", "init_imageCaptureUtils", "__esmMin", "init_utils", "init_logger", "getLogger", "_unusedId", "windowUtils", "screenshotUtils", "areas", "result", "elementId", "forceRatio", "useImprovedScreenshotStitching", "stabilize", "delay", "usingImprovedStitching", "createPart", "position", "crop", "cropResult", "takeAllParts", "positionsData", "allParts", "nextPos", "getPartsPositions", "fullPageSize", "viewPortSize", "FPW", "VPW", "FPH", "VPH", "Ws", "__", "i", "Hs", "w", "h", "createStitchImage", "originalPosition", "positions", "import_p_retry", "semver", "logger", "TabService", "init_tabService", "__esmMin", "init_utils", "init_logger", "init_windowUtils", "init_screenshotUtils", "init_imageCaptureUtils", "init_getSessionPlayerRequire", "getLogger", "driver", "sessionId", "allTabInfos", "tabId", "id", "addFrameHandlerCb", "tabInfo", "openerStepId", "options", "openerStep", "order", "tab", "infoId", "guid", "isMainTab", "tabService", "_windowUtils", "WindowUtils", "ImageCaptureUtils", "ScreenshotUtils", "uId", "infos", "nonMainTabs", "info", "sameTabs", "key", "first", "second", "allUrls", "exactUrlMatch", "url", "combinePartsFunction", "urlUtils", "getSessionPlayer", "firstUrlParts", "secondUrlParts", "firstPartsCombined", "secondPartsCombined", "allDomainAndPathMatches", "urlParts", "combinedParts", "tabMatcher", "allTopFrameUrls", "combineDomainAndPath", "combineDomainPathAndHash", "mainTabInfo", "mainTabId", "forceSwitch", "tabCount", "mainTabPromise", "r", "title", "err", "newId", "delay", "tabInfos", "newTabId", "pRetry", "step", "isOldVersion", "hasParams", "hasBadLocateParams", "param", "_a", "_b", "commonConstants", "_tabId", "windowClosedErrors", "errorString", "PortSelectorMock", "portSelectorMock", "init_portSelector", "__esmMin", "KEY_MAP", "StepActionUtils", "init_stepActionUtils", "__esmMin", "init_cookieUtils", "init_utils", "init_getSessionPlayerRequire", "driver", "unescapeHTML", "getLinksFromUnescapeHTML", "CookieUtils", "getSessionPlayer", "result", "clickOffset", "rect", "utils", "positionUtils", "elementCenter", "context", "code", "value", "target", "locatedElement", "id", "name", "cookieObject", "frameHandler", "dynamicParentOptions", "frameLocatorFactory", "driver", "FrameLocator", "frameManager", "LocateElementPlayer", "seleniumGuid", "resultsUrl", "frameHandler", "guid", "_getGuidFromSeleniumElement", "result", "frameTree", "testimFrameId", "frameOffset", "locatedElement", "locatorBuilderUtils", "getSessionPlayer", "errorMsg", "logger", "el", "frameLocateResultUrl", "frameLocator", "frameDepth", "currentFrame", "context", "stepData", "locateElementPlayer", "locateResult", "handledLocateResult", "value", "frameLocators", "allowNoFrameSwitch", "featureFlagsService", "lastResult", "allowedRetries", "moreThanAllowedRetries", "currentFramePos", "x", "shorterPath", "frameIndex", "topFrameHandler", "SELENIUM_ELEMENT_KEY", "init_frameLocator", "__esmMin", "init_logger", "init_featureFlagsService", "init_getSessionPlayerRequire", "init_constants", "getLogger", "seleniumElement", "W3C_ELEMENT_ID", "isDebuggerConnected", "init_detectDebugger", "__esmMin", "init_config", "DISABLE_DEBUGGER_INFINITE_TIMEOUT", "StepAction", "init_stepAction", "__esmMin", "init_getSessionPlayerRequire", "step", "context", "frameHandler", "exportsGlobal", "stepActionUtils", "locateElementPlayer", "exportsTest", "_a", "getSessionPlayer", "targetId", "err", "errorMsg", "displayMsg", "shouldUseNativeVisibilityCheck", "locateStep", "visibilityUtils", "positionUtils", "driver", "featureFlagsService", "createUtils", "target", "seleniumResponse", "frameHandler", "htmlString", "url", "document", "targetElement", "rect", "allOffsets", "dom", "locatorBuilderUtils", "codeSnippets", "getSessionPlayer", "points", "code", "response", "err", "logger", "value", "elementVisibilityInfo", "DEFAULT_VISIBILITY_RESULT", "middleElementFromPoint", "clickElementFromPoint", "locatedElement", "scrollToElement", "import_linkedom", "LocateStepAction", "init_locateStepAction", "__esmMin", "init_stepAction", "init_logger", "init_featureFlagsService", "init_getSessionPlayerRequire", "getLogger", "StepAction", "scroll_exports", "__export", "scroll", "init_scroll", "__esmMin", "elementToScrollOn", "elementToScrollTo", "isScrollToElement", "isDynamicScroll", "expectedX", "expectedY", "shouldScrollLeft", "shouldScrollTop", "doScroll", "expectedPosition", "element", "actualX", "actualY", "getExpectedPosition", "parentElement", "locatedElement", "target", "targetRect", "yScroll", "xScroll", "MAX_HEIGHT", "MAX_WIDTH", "isDocument", "elementToScrollOnEl", "positionBeforeScroll", "result", "actualXString", "actualYString", "actualScrollToElement", "rect", "ScrollStepAction", "init_scrollStepAction", "__esmMin", "init_stepAction", "StepAction", "step", "expectedX", "expectedY", "actualX", "actualY", "failureMessage", "elementToScrollTo", "elementToScrollOn", "codeSnippets", "stepResult", "elementScrollTo", "element", "x", "y", "scroll", "scrollCode", "res", "success", "context", "html5dndAction", "init_html5dragAction", "__esmMin", "eventData", "data", "convertType", "type", "dataTransfer", "val", "fromElement", "toElement", "dispatchEvent", "element", "event", "html5dndAction", "init_html5dragActionV2", "__esmMin", "eventData", "done", "mouseEventConstructorSupported", "dragEventConstructorSupported", "pointerEventConstructorSupported", "data", "resolve", "result", "reject", "convertType", "type", "createDataTransfer", "val", "dragFromElementEvents", "pointerEvents", "dragEvents", "findClosestDraggable", "element", "current", "getElement", "event", "context", "currentEvent", "dispatchDragEventsOnClosestDraggable", "draggable", "getEventPosition", "userEvent", "isDrag", "isWithinBounds", "start", "end", "point", "pointerPosition", "rect", "clientX", "clientY", "getMouseEvent", "_eventData", "modifiers", "pos", "button", "eventType", "createPointerEvent", "createDragEvent", "createMouseEvent", "getEventDictionary", "eventProperties", "executeAsyncEvent", "shouldSkipEvent", "isClickInDragAndDrop", "nextAsyncEvent", "nextEvent", "delay", "executeAsyncNext", "err", "doClick_exports", "__export", "doClick", "init_doClick", "__esmMin", "eventData", "done", "eventConstructorSupported", "resolve", "handleReactSelectFocusQuirk", "context", "event", "_a", "focusReactSelect", "element", "getReactSelectRoot", "getParents", "el", "getReactSelectInput", "root", "reactSelectInput", "isReactSelectElement", "handleCKEditorQuirk", "isCKEditorFrame", "parents", "result", "status", "reject", "dispatchMouseOver", "dispatchMouseMove", "modifiers", "rect", "clientX", "clientY", "createMouseEvent", "getEventPosition", "userEvent", "isWithinBounds", "start", "end", "point", "pointerPosition", "getEventDictionary", "createPointerEvent", "eventType", "eventProperties", "button", "getMouseEvent", "pointerEvents", "pos", "findEffectiveActiveElement", "activeElement", "executeSynchronousEventSequence", "oldActiveElement", "quirks", "e", "doDragPath_exports", "__export", "doDragPath", "init_doDragPath", "__esmMin", "eventData", "done", "eventConstructorSupported", "pointerEventConstructorSupported", "MAX_EVENT_TIMEOUT", "resolve", "result", "reject", "dispatchMouseOver", "element", "event", "dispatchMouseMove", "modifiers", "rect", "clientX", "clientY", "createMouseEvent", "getEventPosition", "userEvent", "isWithinBounds", "start", "end", "point", "pointerPosition", "context", "getEventDictionary", "createPointerEvent", "eventType", "button", "eventProperties", "getMouseEvent", "pointerEvents", "pos", "shouldSkipEvent", "currentEvent", "isClickInDragAndDrop", "executeAsyncNextEventRecursive", "index", "_done", "delay", "executeAsyncEventSequence", "_", "MouseStepAction", "init_mouseStepAction", "__esmMin", "init_stepAction", "init_html5dragAction", "init_featureFlagsService", "init_html5dragActionV2", "StepAction", "target", "destTarget", "clickOffset", "toClickOffset", "fromOffsets", "toOffsets", "_a", "step", "context", "timeout", "events", "eventMessage", "doClickScript", "dispatchFocus", "doClickCode", "err", "start", "end", "point", "initialPosition", "targetElementRect", "isXWithinBounds", "isYWithinBounds", "xOffset", "yOffset", "offsetFromElement", "event", "baseEvent", "type", "cloneEvent", "allEventsOnSameElement", "isHTML5Drag", "toElement", "downEvent", "mousedownEventIndex", "recordPointerMoveEvents", "mouseUpEvent", "lastMouseMoveEventIndex", "_b", "doDragPathScript", "doDragPathCode", "locatedElement", "seleniumElement", "rectWithoutFrameOffset", "rect", "offsets", "featureFlagsService", "eventData", "contextTarget", "html5DNDCode", "html5dndAction", "rectsAndOffsets", "useRightClickJS", "forceNativeEvent", "res", "dragendDefaultEvent", "dropOrEndEventIndex", "e", "oneBeforeLastEvent", "dragenterDefaultEvent", "withDragEnd", "fromElementLocatedElement", "toElementLocatedElement", "isOnToElement", "fromElement", "TextValidationStepAction", "init_textValidationStepAction", "__esmMin", "init_stepAction", "StepAction", "step", "context", "paramEvaluator", "utils", "commonConstants", "target", "actual", "expected", "err", "_", "logger", "EvaluateExpressionStepAction", "init_evaluateExpressionStepAction", "__esmMin", "init_stepAction", "init_logger", "getLogger", "StepAction", "step", "context", "exportsGlobal", "exportsTest", "incomingParams", "params", "args", "code", "evaluatedText", "e", "stepResult", "setText_exports", "__export", "setText", "init_setText", "__esmMin", "eventData", "done", "eventConstructorSupported", "element", "context", "resolve", "keyboardEventNames", "MAX_KEYBOARD_EVENT_TIMEOUT", "getTextInputEventObject", "userEvent", "event", "initTextInputEvent", "method", "locale", "getTextInputEvent", "createKeyboardEventObject", "eventType", "_eventData", "modifiers", "initKeyboardEvent", "createKeyboardEvents", "createKeyboardEvent", "getKeyboardEvent", "getEvent", "shouldSkipEvent", "currentEvent", "_context", "_a", "getTextEventTimeout", "nextEvent", "getTimeBetweenFiringEvents", "maxTimeout", "handleReactFormFocus", "_element", "descriptor", "initialValue", "handleChangeEventIfNeeded", "isFocusableInput", "nextAsyncEvent", "executeAsyncNext", "shouldDispatchOnParentElement", "getElement", "findTextNode", "offsetData", "child", "innerChild", "setSelection", "selection", "startNode", "sel", "range", "isSubmitFormAction", "executeAsyncEvent", "err", "reject", "target", "tagName", "isContentEditable", "executeSetValue", "inputEvent", "findEffectiveActiveElement", "activeElement", "result", "status", "isInput", "oldActiveElement", "TextStepAction", "init_textStepAction", "__esmMin", "init_stepAction", "init_utils", "StepAction", "context", "target", "extractElementId", "_a", "events", "eventType", "quirks", "sessionPlayerInit", "timeout", "setTextDraftJs", "eventMessage", "setTextScript", "dispatchFocus", "setTextCode", "result", "letters", "i", "delay", "keys", "forceJsEvent", "runCode_exports", "__export", "runCode", "init_runCode", "__esmMin", "eventData", "preCompiledCode", "_a", "appendToStorage", "name", "data", "sessionItem", "nativeFuncErrMsg", "isNativeFunction", "fn", "newData", "err", "isQuotaExceededError", "isNativeFunctionError", "storage", "getExecutionArguments", "_eventData", "arg", "p", "constructWithArguments", "constructor", "args", "F", "exportedData", "exportedTestData", "exportedGlobalData", "functionParams", "transactionId", "params", "result", "res", "e", "_", "logger", "BaseJsStepAction", "init_baseJsStepAction", "__esmMin", "init_utils", "init_stepAction", "init_logger", "init_featureFlagsService", "getLogger", "StepAction", "data", "context", "_a", "shouldEnforceMaxSize", "maximumJsResultSize", "featureFlagsService", "dataSizeExceeded", "transactionId", "_transactionId", "sessionItem", "err", "storage", "eventData", "incomingParams", "params", "args", "arg", "removePropertyFromObject", "stepActionUtils", "stepId", "retryInterval", "timeToPlayStep", "checkScriptStatus", "selRes", "res", "abortReason", "abortedStep", "delay", "eventMessage", "useExperimentalPreCompilation", "experimentalAsyncCustomCode", "rawParams", "hasLocateParams", "x", "funcToRunString", "paramNames", "codeSnippets", "runCodeScript", "runCode", "resp", "constants", "result", "tstConsoleLogs", "nodeVersion", "navigateToDifferentDomain", "resultObj", "step", "transactionIdStepSegment", "browserAndOS", "JsCodeStepAction", "init_jsCodeStepAction", "__esmMin", "init_baseJsStepAction", "BaseJsStepAction", "resultValue", "JsConditionStepAction", "init_jsConditionStepAction", "__esmMin", "init_baseJsStepAction", "BaseJsStepAction", "resultValue", "SpecialKeyStepAction", "init_specialKeyStepAction", "__esmMin", "init_stepAction", "init_utils", "init_stepActionUtils", "StepAction", "keys", "target", "extractElementId", "keyCode", "KEY_MAP", "KeyboardShortcutStepAction", "init_keyboardShortcutStepAction", "__esmMin", "init_stepAction", "init_stepActionUtils", "StepAction", "_a", "_b", "isMac", "keys", "shortcutKeys", "keyCode", "KEY_MAP", "selectOption_exports", "__export", "selectOption", "locatedElement", "dispatchEventOnSelectElement", "closest", "el", "selectors", "originalMatches", "matches", "optionEl", "selectEl", "userEvent", "event", "err", "init_selectOption", "__esmMin", "SelectOptionStepAction", "init_selectOptionStepAction", "__esmMin", "init_stepAction", "init_utils", "init_featureFlagsService", "StepAction", "_a", "_b", "target", "seleniumElement", "locatedElement", "browserMajor", "isSafari", "isShadowed", "extractElementId", "err", "selectOption", "safariSelectOptionDispatchEventOnSelectElement", "featureFlagsService", "selectOptionCode", "SubmitStepAction", "init_submitStepAction", "__esmMin", "init_stepAction", "StepAction", "toDOMRect", "HoverStepAction", "init_hoverStepAction", "__esmMin", "init_stepAction", "height", "width", "x", "y", "StepAction", "target", "seleniumElement", "rectWithoutFrameOffset", "rect", "clickOffsetX", "clickOffsetY", "offset", "offsets", "wheel_exports", "__export", "wheel", "init_wheel", "__esmMin", "eventData", "done", "getEventPosition", "userEvent", "element", "isWithinBounds", "start", "end", "point", "pointerPosition", "rect", "clientX", "clientY", "getWheelEvent", "_eventData", "pos", "modifiers", "dict", "executeEvents", "events", "event", "currentEvent", "timeout", "WheelStepAction", "init_wheelStepAction", "__esmMin", "init_stepAction", "StepAction", "_a", "step", "context", "events", "modifiers", "button", "eventMessage", "timeout", "wheelScript", "wheelCode", "dropEvent_exports", "__export", "downloadFileAndFireDropEvent", "init_dropEvent", "__esmMin", "locatedElement", "fileUrls", "element", "simpleBarrier", "callbackIndex", "doneCallbacks", "results", "instance", "curIndex", "result", "fn", "getBlob", "url", "name", "cb", "xhr", "barrier", "fileUrl", "blobs", "event", "logger", "DropFileStepAction", "init_dropFileStepAction", "__esmMin", "init_stepAction", "init_logger", "init_featureFlagsService", "getLogger", "StepAction", "codeSnippets", "utils", "context", "step", "target", "overrideAzureStorageUrl", "featureFlagsService", "fileUrls", "downloadFileAndFireDropEvent", "dropFileCode", "getVisibleElementScript", "positionAndSize", "downloadFile", "fileUrl", "fileName", "body", "download", "err", "logger", "localFileLocation", "fsPromises", "downloadFiles", "fileUrls", "promiseMap", "file", "uploadFileToGrid", "uploadFileFn", "downloadFilesAndUploadToGrid", "filesOnDisk", "gridLocalFiles", "gridLocalFile", "os", "import_fs", "init_inputFileUtils", "__esmMin", "init_httpRequest", "init_utils", "init_logger", "getLogger", "downloadAndUpload", "logger", "InputFileStepAction", "init_inputFileStepAction", "__esmMin", "init_inputFileUtils", "init_stepAction", "init_logger", "init_utils", "init_featureFlagsService", "getLogger", "StepAction", "localFileLocation", "target", "visibleScriptOptions", "getVisibleElementCode", "getVisibleElementScript", "options", "err", "gridLocalFiles", "edgeErrorEditableMessage", "edgeErrorFocusableMessage", "safariErrorVisibleMessage", "elementNotInteractable", "elementNotPointerOrKeyboardInteractable", "invalidStateMsg", "mustBeVisibleMsg", "notReachableByKeyboard", "errorMsg", "file", "extractElementId", "overrideAzureStorageUrl", "featureFlagsService", "downloadToBase64", "sessionPlayerInit", "context", "step", "stepActionUtils", "driver", "fileUrls", "name", "url", "res", "download", "downloadFilesAndUploadToGrid", "import_url", "NavigationStepAction", "init_navigationStepAction", "__esmMin", "init_stepAction", "StepAction", "location", "orgUrl", "baseLocation", "newBaseLocation", "url", "updatedUrl", "SleepStepAction", "init_sleepStepAction", "__esmMin", "init_stepAction", "init_utils", "StepAction", "delay", "RefreshStepAction", "init_RefreshStepAction", "__esmMin", "init_stepAction", "StepAction", "error", "ApiStepAction", "init_apiStepAction", "__esmMin", "init_stepAction", "StepAction", "eventData", "_a", "timeout", "apiCall", "autRes", "err", "commonConstants", "step", "context", "resp", "result", "resultInfo", "ExtractTextStepAction", "init_extractTextStepAction", "__esmMin", "init_stepAction", "StepAction", "paramName", "extractedText", "import_spec_driver_webdriverio", "EyeSdkService", "eyeSdkService", "init_eyeSdkService", "__esmMin", "init_package", "init_getSessionPlayerRequire", "EyeSdkBuilder", "getSessionPlayer", "sdkVersion", "dependencies", "makeSDK", "spec", "useVisualGrid", "concurrency", "batchId", "applitoolsIntegrationData", "manager", "_", "logger", "PixelValidationStepAction", "init_pixelValidationStepAction", "__esmMin", "init_stepAction", "init_logger", "init_eyeSdkService", "getLogger", "StepAction", "_a", "_b", "shouldUseVisualGrid", "config", "applitoolsSdkLogger", "testResultId", "finalParams", "batchId", "eyeManager", "eyeSdkService", "targetElementData", "result", "openedEye", "settings", "err", "BaseCliJsStepAction", "init_baseCliJsStepAction", "__esmMin", "init_service", "init_errors", "init_baseJsStepAction", "BaseJsStepAction", "_a", "_b", "_c", "step", "context", "isMobile", "code", "id", "incomingParams", "testResultId", "retryIndex", "stepResultId", "contextData", "runTimeout", "data", "runCodeWithPackages", "err", "stepResult", "TimeoutError", "CliJsStepAction", "init_cliJsStepAction", "__esmMin", "init_baseCliJsStepAction", "BaseCliJsStepAction", "resultValue", "CliConditionStepAction", "init_cliConditionStepAction", "__esmMin", "init_baseCliJsStepAction", "BaseCliJsStepAction", "resultValue", "NodePackageStepAction", "init_nodePackageStepAction", "__esmMin", "init_service", "init_stepAction", "init_errors", "StepAction", "stepId", "packageData", "resultId", "retryIndex", "stepResultId", "timeToPlayBeforeExec", "installPackage", "err", "NpmPackageError", "TimeoutError", "ExtensionOnlyStepAction", "init_extensionOnlyStepAction", "__esmMin", "init_stepAction", "StepAction", "SfdcStepAction", "init_sfdcStepAction", "__esmMin", "init_stepAction", "StepAction", "_a", "_b", "sfdc", "page", "level", "message", "actions", "err", "SfdcRecordedStepAction", "init_sfdcRecordedStepAction", "__esmMin", "init_stepAction", "StepAction", "_a", "_b", "sfdc", "page", "level", "message", "err", "SfdcInternalTestStepAction", "init_sfdcInternalTestStepAction", "__esmMin", "init_stepAction", "StepAction", "sfdc", "page", "err", "register", "stepActionByType", "stepActionFactory", "type", "stepActionRegistrar", "driver", "STEP_ACTION_MAPPING", "LocateStepAction", "init_stepActionRegistrar", "__esmMin", "init_locateStepAction", "init_scrollStepAction", "init_mouseStepAction", "init_textValidationStepAction", "init_evaluateExpressionStepAction", "init_textStepAction", "init_jsCodeStepAction", "init_jsConditionStepAction", "init_specialKeyStepAction", "init_keyboardShortcutStepAction", "init_selectOptionStepAction", "init_submitStepAction", "init_hoverStepAction", "init_wheelStepAction", "init_dropFileStepAction", "init_inputFileStepAction", "init_navigationStepAction", "init_sleepStepAction", "init_RefreshStepAction", "init_apiStepAction", "init_extractTextStepAction", "init_pixelValidationStepAction", "init_cliJsStepAction", "init_cliConditionStepAction", "init_nodePackageStepAction", "init_extensionOnlyStepAction", "init_sfdcStepAction", "init_sfdcRecordedStepAction", "init_sfdcInternalTestStepAction", "ScrollStepAction", "MouseStepAction", "SubmitStepAction", "TextStepAction", "SpecialKeyStepAction", "JsCodeStepAction", "JsConditionStepAction", "EvaluateExpressionStepAction", "TextValidationStepAction", "SelectOptionStepAction", "DropFileStepAction", "InputFileStepAction", "HoverStepAction", "NavigationStepAction", "WheelStepAction", "SleepStepAction", "RefreshStepAction", "KeyboardShortcutStepAction", "ApiStepAction", "ExtractTextStepAction", "PixelValidationStepAction", "ExtensionOnlyStepAction", "CliJsStepAction", "CliConditionStepAction", "NodePackageStepAction", "SfdcInternalTestStepAction", "SfdcRecordedStepAction", "SfdcStepAction", "UI_VERIFICATION_STEPS", "FULL_TIMEOUT_STEP_TYPES", "PlaybackTimeoutCalculator", "init_playbackTimeoutCalculator", "__esmMin", "isDebuggerConnected", "totalStepTime", "currentRetryTimes", "now", "stepPlayback", "getRetryTimeoutSuggestions", "timeToPlayStep", "MINIMAL_RETRY_TIME", "fallbackTimeout", "playTimeSoFar", "totalRetryTime", "SLEEP_ERROR_MARGIN_MS", "actionType", "MIN_ACTION_PLAYBACK_TIME", "seleniumTestPlayer_exports", "__export", "SeleniumTestPlayer", "import_eyes_sdk_core", "logger", "init_seleniumTestPlayer", "__esmMin", "init_utils", "init_webdriver", "init_errors", "init_logger", "init_cookieUtils", "init_tabService", "init_portSelector", "init_stepActionUtils", "init_frameLocator", "init_detectDebugger", "init_getSessionPlayerRequire", "init_stepActionRegistrar", "init_playbackTimeoutCalculator", "init_config", "getLogger", "id", "userParamsData", "shouldMonitorPerformance", "driver", "testRetryCount", "previousTestResultId", "PlaybackTimeoutCalculator", "isDebuggerConnected", "SessionPlayer", "commonConstants", "StepActionFactory", "getSessionPlayer", "WebDriver", "stepActionUtils", "StepActionUtils", "stepActionRegistrar", "TabService", "FrameLocator", "frameLocatorFactory", "CookieUtils", "portSelectorMock", "result", "testId", "resultId", "step", "_a", "_b", "END_DRIVER_TIMEOUT", "promiseTimeout", "error", "TimeoutError", "openerStepId", "options", "ids", "lastId", "blockList", "PROHIBITED_URLS", "EDITOR_URL", "DEFAULT_EDITOR_URL", "tabInfo", "bad", "tabUtils", "WorkerSelenium_exports", "__export", "WorkerSelenium", "setupCliPerformanceMonitoring", "sessionPlayer", "playback", "getSessionPlayer", "event", "log", "logger", "NO_NAVIGATION_TIME_LIMIT", "init_WorkerSelenium", "__esmMin", "init_utils", "init_performance_logger", "init_BaseWorker", "init_logger", "init_reporter", "init_preloadTests", "init_constants", "init_windowUtils", "init_errors", "init_seleniumTestPlayer", "init_getSessionPlayerRequire", "init_testimCustomToken", "getLogger", "BaseWorker", "testRunHandler", "SeleniumTestPlayer", "customExtensionLocalLocation", "seleniumTestPlayer", "gridInfo", "reporter", "driver", "WindowUtils", "browserValue", "baseUrl", "fastInit", "CLI_MODE", "err", "firefoxPageNotAvailable", "invalidURL", "PageNotAvailableError", "gridAccessWhitelistedIp", "wasInitializedFromCache", "_a", "manifestVersion", "localAssetService", "version", "preloadedTest", "preloadTests", "runSeleniumTest", "promiseTimeout", "resolve", "reject", "timeoutMessages", "TimeoutError", "testResult", "maxKeepAliveGap", "resultWithStats", "import_ora", "import_jimp", "logger", "TDC_BASE_URL", "HEADSPIN_BASE_URL", "MobileGridService", "mobileGridService", "init_mobileGridService", "__esmMin", "init_config", "init_httpRequest", "init_testimServicesApi", "init_logger", "init_constants", "init_getSessionPlayerRequire", "init_featureFlagsService", "getLogger", "gridTypes", "testRunHandler", "mobileApp", "gridHost", "gridType", "gridInfo", "apiBase", "apiUrl", "HEADSPIN_MOBILE_API_BASE_URL", "HEADSPIN_TDC_DEVICES_API_PATH", "TDC_MOBILE_API_BASE_URL", "deviceId", "url", "headers", "body", "post", "error", "automationConfig", "get", "host", "user", "key", "authRes", "getText", "token", "firstKey", "driverUrl", "connection", "_a", "path", "capabilities", "projectId", "projectType", "companyId", "gridId", "_b", "_c", "selectedDeviceArr", "getMobileDevicesFromGrid", "pCloudyDevice", "activeSession", "sessionUrl", "options", "isInEnhancedDomMode", "executionId", "testId", "testResultId", "osType", "device", "getTvcDeviceInfoFromSessionCaps", "getSessionPlayer", "remoteResultLink", "updateTestStatus", "osVersion", "res", "width", "height", "AppiumApi", "appiumApi", "base64Screenshot", "appiumSize", "buffer", "image", "err", "scaleFactorAndSize", "deviceName", "sessionId", "caps", "BROWSERSTACK_MOBILE_API_URL", "localTmaUrl", "d", "gridData", "gridAppId", "featureFlagsService", "fixGridAppIDStructure", "appId", "getAppDetails", "SERVICES_HOST", "size", "dynamicTimeout", "fileSizeInKB", "MINIMUM_KNOWN_UPLOAD_SPEED_PER_SECONDS", "APP_UPLOAD_TIMEOUT", "gridName", "app", "spinner", "ora", "result", "uploadAppToGrid", "pendingAppUploads", "mobileAppId", "appUploadStatus", "appPath", "overriddenMobileApp", "appData", "isReUploadAppNeeded", "isAppExistsOnGrid", "accessToken", "type", "response", "HEADSPIN_TDC_APPS_API_PATH", "TVC_MOBILE_API_URL", "pCloudyAuthToken", "postText", "authType", "userAgent", "validateMobileRunCapabilities", "nativeAppMetadata", "appPath", "gridInfo", "MOBILE_GRIDS", "validateDirectConnectionOptions", "deviceUdid", "testRunConfig", "staticAllocation", "gridTypes", "buildTagsHeadSpinOrTDC", "sessionTags", "testName", "executionId", "testResultId", "customTag", "tags", "buildCommonCapsForHeadSpinOrTDC", "gridType", "options", "fullReset", "setNoReset", "skipLoadBalancer", "isTDC", "isHeadspin", "provider", "enableBatchHeadSpin", "featureFlagsService", "enableBatchTDC", "increaseTDCRequestTimeout", "getApplicationIdentifier", "getGridAppCapability", "appIdOnGrid", "mergeCapsByProjectTypeHeadSpinOrTDC", "projectType", "sessionCaps", "androidActivityWait", "appCap", "isAppPathUrl", "setFullResetForIos", "mergeAppiumCapsByProjectType", "appiumPrefix", "shouldRunInEnhancedMode", "buildHeadspinOrTdcCaps", "getOsVersion", "osVersion", "mobileConfig", "dynamicAllocation", "getDeviceName", "deviceName", "isPcloudy", "P_CLOUDY_DEFAULT_ANDROID_DEVICE_NAME", "getTestimVirtualCloudToken", "androidToken", "iosToken", "isIosProject", "pCloudyAppium2Format", "caps", "addPrefixToCaps", "APPIUM_PREFIX", "extractCapsFromJson", "predicate", "replaceString", "acc", "key", "value", "newKey", "extractBrowserStackOptionsFromJson", "extractAppiumCapsFromBrowserStackJson", "setAppiumVersion", "appiumVersion", "isAppium2", "platformVersion", "isAppium2Required", "isBrowserStack", "android14andAbovePattern", "androidTenPattern", "ios17andAbovePattern", "isBrowserStackRunOnAndroidTen", "isAppium2RequiredForAndroid", "isAppium2RequiredForIOS", "appium2Required", "isAppium2Requested", "prefix", "newCaps", "buildTvcCaps", "token", "gridDevices", "getMobileDevicesFromGrid", "matchingDeviceFromGrid", "udid", "_a", "osVersionCap", "deviceNameCap", "testResultUrl", "getTestUrl", "commonCapabilities", "buildPCloudyCaps", "user", "isAppium2Enabled", "isGenericDeviceName", "deviceSelectorCap", "P_CLOUDY_DEFAULT_TEST_DURATION", "buildSauceLabCaps", "jsonAppiumCaps", "jsonOptions", "commonOptions", "slOptions", "buildBrowserStackCaps", "projectData", "baseOptions", "shouldForceAppium2", "browserstackOptions", "buildAppiumSessionCapabilities", "appiumOptions", "generateHSorTDCgridSelectors", "_b", "type", "headspinSelector", "buildAppiumLoadBalancerOptions", "selectedGrid", "connection", "mobileGridService", "selector", "val", "capabilities", "DISABLE_RETRIES", "DEFAULT_REQUEST_TIMEOUT", "ms", "TWELVE_MINUTES", "connectionRetryCount", "sanitizeNumberValue", "connectionRetryTimeout", "buildAppiumDirectConnectionOptions", "deviceId", "buildAppiumLocalTmaCapabilities", "mergedCaps", "removeAccessDataFromCapabilities", "import_ms", "import_lodash", "init_appiumCapabilitiesBuilder", "__esmMin", "init_featureFlagsService", "init_constants", "init_mobileGridService", "init_utils", "init_config", "init_testimServicesApi", "TabServiceMock", "init_tabServiceMock", "__esmMin", "MobileStepActionUtils", "init_mobileStepActionUtils", "__esmMin", "init_utils", "driver", "unescapeHTML", "getLinksFromUnescapeHTML", "result", "context", "code", "target", "name", "cookieObject", "frameHandler", "dynamicParentOptions", "logger", "FrameLocatorMock", "init_mobileFrameLocatorMock", "__esmMin", "init_logger", "getLogger", "webdriverio", "import_eyes_sdk_core", "logger", "AppiumTestPlayer", "init_appiumTestPlayer", "__esmMin", "init_tabServiceMock", "init_portSelector", "init_logger", "init_mobileStepActionUtils", "init_detectDebugger", "init_getSessionPlayerRequire", "init_stepActionRegistrar", "init_mobileFrameLocatorMock", "init_playbackTimeoutCalculator", "getLogger", "id", "userParamsData", "shouldMonitorPerformance", "driver", "testRetryCount", "previousTestResultId", "SessionPlayer", "commonConstants", "StepActionFactory", "MobileLocateElementPlayer", "getSessionPlayer", "stepActionUtils", "MobileStepActionUtils", "stepActionRegistrar", "PlaybackTimeoutCalculator", "isDebuggerConnected", "TabServiceMock", "FrameLocatorMock", "portSelectorMock", "result", "testId", "resultId", "step", "playbackManager", "executionId", "appiumApi", "logData", "error", "_a", "getTmaStatus", "localTmaUrl", "get", "getDeviceStatusFromTma", "deviceUdid", "checkIfTmaIsReady", "init_tmaUtils", "__esmMin", "init_httpRequest", "WorkerLocalTma_exports", "__export", "WorkerLocalTma", "logger", "LocalDeviceNotFoundError", "FailedToInstallDeviceError", "FailedToCreateDriverSessionError", "init_WorkerLocalTma", "__esmMin", "init_httpRequest", "init_appiumCapabilitiesBuilder", "init_BaseWorker", "init_utils", "init_logger", "init_reporter", "init_appiumTestPlayer", "init_getSessionPlayerRequire", "init_tmaUtils", "init_mobileGridService", "getLogger", "BaseWorker", "localTmaUrl", "deviceId", "testRunHandler", "AppiumTestPlayer", "appiumTestPlayer", "AppiumApi", "getSessionPlayer", "DOMParser", "appiumApi", "customExtensionLocalLocation", "gridInfo", "_a", "reporter", "deviceUdid", "projectData", "checkIfTmaIsReady", "projectId", "token", "driver", "projectType", "appId", "mobileApp", "mobileGridService", "androidActivityWait", "nativeAppMetadata", "appPath", "appPackageNameOrBundleId", "appInstalled", "version", "deviceStatus", "getDeviceStatusFromTma", "err", "sessionTags", "capabilities", "buildAppiumLocalTmaCapabilities", "tmaSessionSettings", "sessionData", "activeSession", "settings", "appMetadata", "_b", "post", "appInfo", "error", "message", "appIdentifier", "path", "url", "appFromResults", "get", "app", "download", "postForm", "tmaErrorMessage", "manifestVersion", "localAssetService", "sessionPlayer", "runAppiumTest", "testResult", "resolve", "reject", "WorkerAppium_exports", "__export", "WorkerAppium", "import_linkedom", "logger", "init_WorkerAppium", "__esmMin", "init_utils", "init_appiumCapabilitiesBuilder", "init_BaseWorker", "init_logger", "init_reporter", "init_appiumTestPlayer", "init_getSessionPlayerRequire", "init_mobileGridService", "init_constants", "init_concurrencyCompanyService", "getLogger", "BaseWorker", "testRunHandler", "AppiumTestPlayer", "customExtensionLocalLocation", "appiumTestPlayer", "gridInfo", "projectType", "shouldRunInEnhancedMode", "gridTypes", "reporter", "driver", "appPath", "mobileGridService", "androidActivityWait", "nativeAppMetadata", "sessionTags", "appiumOptions", "capabilities", "buildAppiumDirectConnectionOptions", "buildAppiumLoadBalancerOptions", "removeAccessDataFromCapabilities", "serverAddress", "sessionUrl", "err", "appiumApi", "errors", "getSessionPlayer", "keepAlive", "updateSlotDataCache", "host", "port", "accessToken", "type", "protocol", "hostname", "path", "_a", "_b", "_c", "manifestVersion", "AppiumApi", "localAssetService", "sessionPlayer", "version", "testTimeout", "deviceId", "runAppiumTest", "testResult", "resolve", "reject", "promiseTimeout", "ExtensionTestPlayer", "init_extensionTestPlayer", "__esmMin", "init_utils", "init_webdriver", "init_errors", "id", "WebDriver", "promiseTimeout", "error", "TimeoutError", "getPublicIp", "result", "EXTERNAL_IP_MIRRORS", "url", "get", "generateWebSocketOptions", "init_network", "__esmMin", "init_httpRequest", "timeout", "import_ws", "CDPTestRunner", "init_cdpTestRunner", "__esmMin", "init_utils", "init_network", "cdpUrl", "timeout", "options", "generateWebSocketOptions", "websocket", "WebSocket", "openPromise", "promiseFromCallback", "cb", "errorPromise", "message", "_a", "object", "callback", "method", "params", "sessionId", "id", "result", "resolve", "reject", "msg", "launcher", "LauncherDriver", "ChromeLauncherTestPlayer", "init_chromeLauncherTestPlayer", "__esmMin", "init_utils", "init_testimDesiredCapabilitiesBuilder", "init_cdpTestRunner", "init_processHandler", "sessionId", "CDPTestRunner", "options", "_a", "_b", "_c", "_d", "browserOptions", "testName", "testRunConfig", "gridInfo", "customExtensionLocalLocation", "executionId", "testResultId", "printFinalCaps", "mode", "capabilities", "buildSeleniumOptions", "chromeFlags", "flag", "webSocketDebuggerUrl", "getCdpAddressForHost", "registerExitHook", "id", "guid", "WorkerExtension_exports", "__export", "WorkerExtension", "isTypedError", "err", "buildError", "logger", "init_WorkerExtension", "__esmMin", "init_performance_logger", "init_errors", "init_BaseWorker", "init_utils", "init_logger", "init_reporter", "init_constants", "init_extensionTestPlayer", "init_chromeLauncherTestPlayer", "init_testimCustomToken", "getLogger", "BaseWorker", "ChromeLauncherTestPlayer", "ExtensionTestPlayer", "testRunHandler", "customExtensionLocalLocation", "player", "gridInfo", "_a", "driver", "CLI_MODE", "gridAccessWhitelistedIp", "wasInitializedFromCache", "reporter", "success", "reason", "status", "executorConfig", "testResultId", "executionId", "testId", "log", "runViaCdpOrFallbackToAPI", "testTimeout", "promiseTimeout", "timeoutMessages", "TimeoutError", "navigateChromeSessionToRunTestim", "url", "startStatusDetails", "res", "updateRunHandlerThatTestStartedAndChangeStatusDetails", "runExtTest", "abortController", "onBrowserClosed", "stepResult", "testRunPromise", "testResult", "promiseAbort", "maxKeepAliveGap", "WorkerExtensionSingleBrowser_exports", "__export", "WorkerExtensionSingleBrowser", "logger", "DELAY_BETWEEN_TESTS", "init_WorkerExtensionSingleBrowser", "__esmMin", "init_performance_logger", "init_utils", "init_logger", "init_workerUtils", "init_reporter", "init_WorkerExtension", "getLogger", "WorkerExtension", "projectId", "releasePlayer", "testRunHandler", "customExtensionLocalLocation", "player", "gridInfo", "reporter", "shouldRerun", "quarantineResult", "log", "test", "testPlayer", "_a", "delay", "logger", "WorkerManager", "init_WorkerManager", "__esmMin", "init_webdriver", "init_config", "init_performance_logger", "init_analyticsService", "init_testimCustomToken", "init_labFeaturesService", "init_errors", "init_logger", "init_constants", "init_executionQueue", "init_runnerUtils", "getLogger", "customExtensionLocalLocation", "workerId", "args", "id", "testRunHandler", "uniqueId", "Worker", "mode", "localTmaUrl", "browser", "CLI_MODE", "labFeaturesService", "extensionBrowsers", "b", "seleniumBrowsers", "ArgError", "runnerOptions", "log", "testList", "testStatus", "executionId", "executionName", "options", "branchToUse", "workerCount", "stopOnError", "stoppedOnError", "runningTests", "runAndWaitToComplete", "token", "userAccessKey", "resolve", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "projectId", "testCount", "ExecutionQueue", "ucid", "companyId", "companyName", "source", "user", "companyPlan", "isStartUp", "projectName", "projectType", "lightweightMode", "gridType", "onTestStarted", "wid", "testId", "resultId", "isRerun", "testRetryKey", "appSource", "analyticsTestStart", "onTestCompleted", "testResult", "sessionId", "update", "err", "analyticsTestEnd", "onTestIgnored", "onGridSlot", "gridInfo", "getTokenV3UserData", "getRefreshToken", "SERVICES_HOST", "getCustomTokenV3", "getUserAccessKey", "result", "StopRunOnError", "count", "_", "index", "_Color", "Color", "init_color", "__esmMin", "color", "msg", "import_lodash", "import_uuid", "CLI_MODE", "logger", "_TestPlanRunner", "TestPlanRunner", "init_TestPlanRunner", "__esmMin", "init_utils", "init_logger", "init_config", "init_constants", "init_performance_logger", "init_gridService", "init_branchService", "init_analyticsService", "init_testimServicesApi", "init_featureFlagsService", "init_reporter", "init_testRunStatus", "init_errors", "init_WorkerManager", "init_runnerUtils", "init_color", "constants_exports", "getLogger", "customExtensionLocalLocation", "beforeTests", "tests", "afterTests", "branchToUse", "tpOptions", "executionId", "executionName", "testStatus", "executionResults", "workerManager", "WorkerManager", "runBeforeTests", "workerCount", "stopOnError", "beforeTestsResults", "runTestPlanTests", "TESTIM_CONCURRENT_WORKER_COUNT", "log", "testsResults", "runAfterTests", "afterTestsResults", "analyticsExecsStart", "err", "StopRunOnError", "runnerTestStatus", "handlePixelValidationBatches", "_a", "_b", "_c", "_d", "getSessionPlayer", "makeSDK", "EyeSdkBuilder", "applitoolsIntegrationData", "getApplitoolsIntegrationData", "_", "apiKey", "serverUrl", "testPlanName", "testPlanId", "branch", "isAnonymous", "guid", "projectId", "setExecutionId", "test", "fullTestList", "TestRunStatus", "configs", "configName", "testNames", "testListInfoPromise", "testListInfo", "reporter", "results", "value", "error", "message", "Color", "reportRunnerStarted", "reportRunnerFinished", "options", "flattenTestListData", "testPlansData", "all", "testRun", "testPlansResults", "testPlansTests", "data", "featureFlagsService", "promiseMap", "planId", "plan", "getTestPlanTestList", "testPlan", "planName", "testPlans", "ArgError", "validateConfig", "id", "testPlanOptions", "getTestPlanGridData", "testPlanTests", "res", "executions", "exeId", "calcTestResultStatus", "testResult", "success", "exec", "saveTestPlanResult", "suiteResult", "getSuite", "runListResult", "nativeAppFromCLIParam", "getAppDetails", "suiteTests", "suiteTest", "firstTest", "getCurrentBranch", "hasTestPlanFlag", "flattenResults", "total", "cur", "uuidv4", "testimServicesApi_exports", "__export", "addTestRetry", "clearTestResult", "deleteCloudflareTunnel", "fetchLambdatestConfig", "fixGridAppIDStructure", "forceUpdateCloudflareTunnelRoutes", "getAllGrids", "getAppDetails", "getApplitoolsIntegrationData", "getBrowserStackSessionMetaData", "getCloudflareTunnel", "getEditorUrl", "getGridSlot", "getHybridGridProvider", "getLabFeaturesByProjectId", "getMobileDevicesFromGrid", "getRealData", "getS3Artifact", "getS3ArtifactText", "getSuiteTestList", "getTestPlan", "getTestPlanTestList", "getTestResults", "getUsageForCurrentBillingPeriod", "initializeUserWithAuth", "isTestResultCompleted", "keepAliveCompanySlots", "keepAliveGrid", "loadSfdcCredential", "loadTest", "releaseCompanySlot", "releaseGridSlot", "reportExecutionFinished", "reportExecutionStarted", "reportRunnerFinished", "reportRunnerStarted", "requestCompanySlot", "saveRemoteStep", "saveTestPlanResult", "updateCompanySlot", "updateExecutionTests", "updateRemoteRunFailure", "updateTestDataArtifact", "updateTestResult", "updateTestStatus", "uploadAppToGrid", "uploadRunDataArtifact", "validateUserAccessKey", "getDefaultHeaders", "bearerToken", "getCustomTokenV3", "X_HEADER_RUNNER_ID", "TestPlanRunner", "postAuth", "url", "body", "headers", "timeout", "retry", "tokenHeaders", "finalHeaders", "post", "SERVICES_HOST", "postAuthFormData", "fields", "files", "postForm", "putAuth", "put", "deleteAuth", "deleteReq", "getTextWithAuth", "query", "getText", "getWithAuth", "options", "get", "pRetry", "DEFAULT_REQUEST_RETRY", "projectId", "testOptimization", "testPlanNames", "parseProperty", "dataValue", "testConfigIds", "beforeAllLabels", "testLabels", "afterAllLabels", "testPlan", "branch", "branchData", "testId", "skipSharedSteps", "useBranchMap", "testPlanId", "result", "executionId", "resultId", "status", "data", "retries", "runnerVersion", "runnerStatuses", "reason", "success", "startTime", "endTime", "labels", "executions", "_config", "resultLabels", "remoteRunId", "localRunUserId", "isLocalRun", "intersections", "isCiRun", "tmsOptions", "resultExtraData", "names", "planIds", "testIds", "testNames", "testConfigNames", "suiteNames", "suiteIds", "rerunFailedByRunId", "appId", "error", "logger", "testRetryKey", "slots", "guid", "companyId", "slotId", "gridId", "browser", "token", "branchName", "lightweightMode", "localGrid", "publicIp", "grid", "clientCliVersion", "clientNodeVersion", "clientNpmVersion", "_a", "_b", "e", "ArgError", "errorMessage", "messageColor", "bgColor", "chalk", "EDITOR_URL", "err", "channel", "testResult", "stepId", "remoteStep", "relativize", "uri", "getStorageRelativePath", "filePath", "bucket", "fullPath", "uploadArtifact", "testResultId", "content", "subType", "mimeType", "fileSuffix", "fileName", "path", "storagePath", "TEST_RESULT_ARTIFACTS_BUCKET_PATH", "buffer", "runId", "newResultId", "originalTestResultId", "previousTestResultId", "routes", "tunnelId", "projectType", "selectors", "GRID_PATH", "app", "slot", "sessionId", "gridInfo", "BROWSERSTACK_MOBILE_API_URL", "import_chalk", "_", "pako", "import_p_retry", "import_object_hash", "init_testimServicesApi", "__esmMin", "init_utils", "init_config", "init_constants", "init_httpRequest", "init_testimCustomToken", "init_errors", "init_logger", "init_TestPlanRunner", "getRunnerVersion", "getLogger", "runData", "hash", "testData", "projectDefaults", "testDataValueClone", "hiddenParams", "param", "test", "getPackageVersion", "getRunnerVersion", "init_testimNpmDriver", "__esmMin", "init_utils", "preloadSlowRequires", "mode", "CLI_MODE", "printMessagesFromServer", "result", "_a", "_b", "message", "textColor", "bgColor", "chalk", "setRegionConfig", "regionConfig", "serviceUrl", "setServicesHost", "memoize", "REGION_CONFIG", "initializeUserWithAuth", "options", "project", "token", "userAccessKey", "lightweightMode", "useLocalChromeDriver", "useChromeLauncher", "gridId", "grid", "lightweightModeGeneral", "localGrid", "memoizationTTL", "TEN_HOURS_MS", "FIVE_MINUTES_MS", "clientCliVersion", "getPackageVersion", "clientNodeVersion", "getEnginesVersion", "clientNpmVersion", "getNpmVersion", "publicIp", "featureFlagsService", "getPublicIp", "e", "logger", "initializedFromCache", "log", "initFromData", "import_chalk", "init_initializeUserWithAuth", "__esmMin", "init_performance_logger", "init_testimServicesApi", "init_runnerFileCache", "init_testimCustomToken", "init_network", "init_constants", "init_logger", "init_featureFlagsService", "init_testimNpmDriver", "init_utils", "init_npmWrapper", "init_config", "getLogger", "prepare", "options", "_a", "chromeDriverPromise", "downloadAndInstallChromium", "prepareChromeDriver", "CLI_MODE", "preparePlayer", "prepareExtension", "customExtensionLocation", "unlimitedSize", "prepareCustomExtension", "prepareMockNetwork", "location", "logger", "_rulesJson", "getSourceAsBuffer", "rulesJsonBuf", "MAX_RULE_FILE_SIZE_IN_MB", "PREPARE_MOCK_NETWORK_ERROR_PREFIX", "rulesJson", "error", "ajv", "Ajv", "mockNetworkRuleFileSchema_exports", "errors", "e", "i", "os", "import_ajv", "init_prepareRunner", "__esmMin", "init_utils", "init_mockNetworkRuleFileSchema", "init_prepareRunnerAndTestimStartUtils", "init_constants", "init_chromiumInstaller", "init_logger", "init_initializeUserWithAuth", "getLogger", "isAgentFlow", "program", "track", "runAgentFlow", "startTestimBrowser", "ArgError", "playerUrl", "getPlayerUrl", "init_runOptionsAgentFlow", "__esmMin", "init_runOptionsUtils", "init_testimAnalytics", "init_errors", "key", "secretsUtils", "init_secretsUtils", "__esmMin", "_", "secretKey", "code", "secretKeys", "matches", "match", "secretName", "testData", "secretsRecord", "escapedSecretsKey", "secretRegex", "replaceTestDataRecursively", "testDataEntry", "val", "index", "value", "credentialsManager_exports", "__export", "doLogin", "getProjectId", "getToken", "getCredentialProperty", "timeout", "promise", "ms", "delay", "TimeoutError", "getCredentialsFromChrome", "app", "loginInfoFromChrome", "resolve", "req", "res", "reject", "server", "err", "getEditorUrl", "editorUrl", "launchChrome", "EDITOR_URL", "DEFAULT_EDITOR_URL", "overwriteExisting", "projects", "homedir", "testimCredentialsFile", "doesPathExist", "credentials", "prompts", "ora", "spinner", "writeCredentials", "response", "p", "fsPromises", "property", "isExist", "os", "path", "YAML", "import_fs", "init_credentialsManager", "__esmMin", "init_utils", "init_errors", "init_chrome_launcher", "init_config", "runOptions_exports", "__export", "process", "program", "import_ms", "import_chalk", "fs", "url", "_", "path", "import_commander", "TEST_STAGE_NAME", "camelizeHyphenValues", "collect", "cli", "list", "mergeValues", "allowedChromeFlags", "printUsage", "printDeprecationWarning", "CODE_COVERAGE_REPORTER_OPTIONS", "env", "argv", "exit", "cwd", "regionConfigsMaps", "regionPrefixMap", "PRE_MULTIREGION_PROJECTID_LENGTH", "setRegionConfig", "LOG_LEVEL_OPTIONS", "setHostAndPortForSauceLab", "setHostAndPortForBrowserStack", "injectSecretsProxy", "init_runOptions", "__esmMin", "init_utils", "init_runOptionsUtils", "init_testimAnalytics", "init_runOptionsAgentFlow", "init_runnerFileCache", "init_constants", "init_errors", "init_featureFlagsService", "init_secretsUtils", "init_runnerUtils", "init_config", "prop", "m", "w", "val", "col", "first", "second", "isDefaultHelpLine", "line", "isParamsJsonOption", "isExtOnlyOption", "isPlayerOption", "isScheduler", "isWebdriverTimeout", "isUserId", "isMonitorPerformance", "isSaveRCALocally", "isExitCodeIgnoreFailingTests", "isDeprecatedHighSpeed", "isUrls", "isTestStartTimeout", "isInstallLazyDeps", "isPrintGridsOrCaps", "txt", "ln", "deprecatedUsage", "newUsage", "newUsageString", "chalk", "projectId", "region", "TESTIM_REGION", "cachedRegionConfig", "get", "REGION_CONFIG", "setServicesHost", "regionConfig", "RUNNER_ENVIRONMENT", "replaceArgsWithNoDashes", "ms", "codeFilePath", "_a", "featureFlagsService", "code", "secretsUtils", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "userParamsData", "chromeExtraPrefs", "chromeExtraArgs", "seleniumCapsFileContent", "NoArgsError", "message", "version", "getRunnerVersion", "disable", "clear", "cacheLocationProvided", "location", "setCacheLocation", "disableCacheMiss", "fullPlayerPath", "projectFile", "tsNodeRegisterInstance", "Module", "originalRequire", "id", "ArgError", "isAgentFlow", "runAgentFlow", "options", "safePropName", "err", "isTestConfigSpecified", "isTestPlanSpecified", "isSuiteSpecified", "args", "arg", "argName", "sOptions", "isMobile", "browserName", "isBadVersion", "bsOptions", "perfectoOptions", "DEFAULTS", "testobjectOptions", "track", "testOptimization", "timeoutWasGiven", "credentialToken", "optionIsNotAValidNumber", "option", "CLI_MODE", "extensionBrowsers", "seleniumBrowsers", "label", "invalidLabels", "getEnvironmentGitBranch", "playerUrl", "getPlayerUrl", "mockNetworkDeprecationMsg", "diff", "extensionOnlyOptions", "usedExtensionOptions", "key", "multi", "fileContent", "lightweightModeOptions", "logger", "WHITELISTED_TUNNEL_DOMAIN_SUFFIX", "ngrokTunnelUrl", "statsTimeout", "connectTunnel", "collectNgrokStats", "disconnectTunnel", "init_testimNgrok", "__esmMin", "init_utils", "init_errors", "init_logger", "init_lazyRequire", "getLogger", "options", "authData", "ArgError", "hostname", "guid", "connectOpt", "url", "lazyRequire", "rerun", "api", "tunnels", "tunnel", "t", "err", "os", "fs", "childProcess", "TUNNEL_BINARY_ORIGIN", "TUNNEL_BINARY_PATHNAME", "TUNNEL_BINARY_DIRECTORY", "TUNNEL_BINARY_LOCATION", "tunnelId", "tunnelProcess", "prepareTunnel", "connectTunnel", "disconnectTunnel", "init_testimCloudflare", "__esmMin", "init_utils", "init_testimServicesApi", "doesPathExist", "downloadUrl", "destination", "downloadAndSave", "unzipFile", "options", "tunnelBaseUrl", "tunnelRoutes", "result", "getCloudflareTunnel", "forceUpdateCloudflareTunnelRoutes", "promises", "deleteCloudflareTunnel", "resolve", "reject", "code", "testimTunnel_exports", "__export", "connect", "disconnect", "serveTunneling", "import_ora", "logger", "shouldUseLambdatestTunnel", "shouldUseCloudflareTunnel", "init_testimTunnel", "__esmMin", "init_testimNgrok", "init_processHandler", "init_testimCloudflare", "init_testimCustomToken", "init_logger", "init_constants", "init_lambdatestService", "getLogger", "options", "_a", "gridTypes", "authData", "getTokenV3UserData", "spinner", "ora", "LambdatestService", "connectTunnel", "err", "msg", "disconnectTunnel", "waitFor", "registerExitHook", "runner_exports", "__export", "init", "run", "validateProjectQuotaNotDepleted", "options", "projectId", "usage", "getUsageForCurrentBillingPeriod", "track", "QuotaDepletedError", "validateOptionsForCompany", "company", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "planType", "getPlanType", "optionsParallel", "FREE_PLAN_ALLOWED_PARALLEL", "ArgError", "projectQuotaType", "PARALLEL_QUOTA_TYPES", "projectParallelMaxAmount", "tunnelAllowed", "turboModeAllowed", "gridTypes", "expireAt", "maxParallel", "optionsRetention", "companyRetention", "isMobileProject", "featureFlagsService", "tvcLicense", "tdcLicense", "companyCreatedAt", "testRetries", "validateCliAccount", "err", "errType", "logger", "analyticsIdentify", "authData", "getTokenV3UserData", "identify", "initSocketServices", "disableResults", "disableRemoteStep", "socketService", "remoteStepService", "testResultService", "setBranch", "branchInfoFromServer", "branch", "autoDetect", "setCurrentBranch", "setSfdcCredential", "project", "type", "shouldLoadSfdcCredential", "getCurrentBranch", "loadSfdcCredential", "setCompany", "id", "name", "activePlan", "isPOC", "isStartUp", "FREE_PLAN_MINIMUM_BROWSER_TIMEOUT", "featureAvailabilityService", "setSystemInfo", "editorUrl", "EDITOR_URL", "setAllGrids", "allGrids", "setAuthData", "setProject", "defaults", "setGrid", "getGridData", "setMobileMode", "setMockNetworkRules", "props", "trackWithCIUser", "prepareMockNetwork", "runRunner", "customExtensionLocalLocation", "log", "remoteRunId", "useLocalChromeDriver", "useChromeLauncher", "connect", "results", "TestPlanRunner", "disconnect", "endKeepAlive", "showFreeGridRunWarningIfNeeded", "startKeepAlive", "slotService", "companyId", "keepAlive", "lightweightMode", "mode", "disableSockets", "socketConnected", "CLI_MODE", "companyByProjectId", "projectById", "branchName", "clientConfig", "initializeUserWithAuth", "allGridsSorted", "a", "b", "tableData", "grid", "Grid", "browsers", "gridBrowsersAsString", "i", "getResolvedExtensionUrl", "clear", "labFeaturesService", "branchToUse", "reporter", "_", "init_runner", "__esmMin", "init_utils", "init_testimTunnel", "init_performance_logger", "init_gridService", "init_concurrencyCompanyService", "init_testimAnalytics", "init_branchService", "init_testimServicesApi", "init_testimCustomToken", "init_runnerFileCache", "init_logger", "init_reporter", "init_config", "init_constants", "init_errors", "init_TestPlanRunner", "init_socketService", "init_labFeaturesService", "init_featureFlagsService", "init_featureAvailabilityService", "init_prepareRunner", "init_runOptionsUtils", "getLogger", "orchestrateGeneralRoutes", "app", "req", "res", "isStartMode", "getStartedWithStart", "getPackageVersion", "projects", "doLogin", "init_general", "__esmMin", "init_credentialsManager", "init_cliAgentMode", "init_testimNpmDriver", "import_chalk", "import_express", "logger", "router", "init_router", "__esmMin", "init_service", "init_logger", "init_errors", "getLogger", "req", "res", "code", "stepId", "incomingParams", "context", "testResultId", "retryIndex", "stepResultId", "timeout", "fileDataUrl", "commonLogData", "data", "runCodeWithPackages", "chalk", "err", "packageData", "installPackage", "NpmPackageError", "TimeoutError", "init_cliJsCode", "__esmMin", "init_router", "routers_exports", "__export", "orchestrateRoutes", "beforeMiddleware", "app", "express", "bodyParser", "compression", "corsOptions", "IS_ON_PREM", "DISABLE_AGENT_ORIGIN_CHECK", "cors", "orchestrateGeneralRoutes", "router", "req", "res", "import_cors", "import_express", "import_body_parser", "import_compression", "init_routers", "__esmMin", "init_general", "init_cliJsCode", "init_config", "server_exports", "__export", "init", "agentPort", "agentBind", "project", "token", "orchestrateRoutes", "resolve", "reject", "initFn", "app", "req", "res", "next", "server", "onError", "onListening", "error", "ArgError", "port", "showStartStopOptions", "x", "http", "init_server", "__esmMin", "init_testimCustomToken", "init_errors", "cliAgentMode_exports", "__export", "getStartedWithStart", "runAgentMode", "options", "_a", "testimStandaloneBrowser", "preparePlayer", "getRidOfPossiblyRunningChromeWithOurDataDir", "startTestimStandaloneBrowser", "e", "ArgError", "agentServer", "startedWithStart", "isPidRunning", "pid", "startFixedVersionChromium", "extensionBase64", "downloadedExtensionPathUnzipped", "CHROMIUM_PROCESS_INFO_FILE", "TESTIM_BROWSER_DIR", "CHROMIUM_VERSION", "CHECK_CHROMIUM_RUNNING_INTERVAL", "onBrowserClosed", "doesPathExist", "processInfo", "monitorPidForExit", "chromeBinary", "downloadAndInstallChromium", "USER_DATA_DIR", "chromeFlags", "buildSeleniumOptions", "flag", "envVars", "appUrl", "EDITOR_URL", "DEFAULT_EDITOR_URL", "chrome", "getCdpAddressForHost", "fullExtensionUrl", "EDGE_URL", "extensionFilename", "downloadedExtensionPath", "shouldDownloadExtension", "stat", "EXTENSION_CACHE_TIME", "spinner", "ora", "downloadAndSave", "unzipFile", "prepareChromeDriver", "seleniumOptions", "WebDriver", "SeleniumPerfStats", "webdriverApi", "webdriverInitResponse", "userDataDir", "fullExtensionPath", "unpackedExtensionPath", "chromeBinaryPath", "extensions", "args", "disableChromeFeatures", "getDisabledChromeFeatures", "feature", "LOG_LEVEL", "CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH", "webSocketDebuggerUrl", "readAndValidateChromedriverDevToolsActivePortFile", "tryToCloseBrowserWithCDPUrl", "fileContent", "portLine", "browserCDPURLLine", "line", "port", "timeout", "websocketConnection", "wsConnectAndOpen", "promiseFromCallback", "cb", "generateWebSocketOptions", "websocket", "WebSocket", "openPromise", "errorPromise", "import_ms", "import_ora", "import_ws", "fs", "path", "ChromeLauncher", "CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILENAME", "init_cliAgentMode", "__esmMin", "init_config", "init_prepareRunnerAndTestimStartUtils", "init_errors", "init_chromiumInstaller", "init_utils", "init_testimDesiredCapabilitiesBuilder", "init_network", "WEBDRIVER_DEBUG", "ms", "import_register", "os", "url", "http", "https", "import_form_data", "XMLHttpRequestEventTarget", "eventType", "listener", "index", "event", "_a", "listeners", "XMLHttpRequestUpload", "_request", "data", "body", "view", "offset", "i", "FormData", "headers", "loweredHeaders", "request", "ProgressEvent", "type", "SyntaxError", "NetworkError", "SecurityError", "InvalidStateError", "_XMLHttpRequest", "options", "baseUrl", "method", "_url", "async", "xhrUrl", "name", "value", "loweredName", "newMimeType", "newReadyState", "agent", "response", "lengthString", "urlString", "password", "user", "absoluteUrlString", "buffer", "arrayBuffer", "contentType", "match", "XMLHttpRequest", "XMLHttpRequest", "semver", "init_performance_logger", "init_prepareRunner", "init_runnerFileCache", "init_prepareRunnerAndTestimStartUtils", "import_chalk", "import_node_events", "init_constants", "init_processHandler", "init_errors", "init_constants", "init_isCiRun", "init_logger", "os", "path", "import_chalk", "import_fs", "init_config", "writeStackTrace", "err", "_a", "_b", "_c", "homedir", "logFileName", "DEBUG_MODE", "x", "chalk", "init_requireWithFallback", "logger", "getLogger", "exitCodeIgnoreFailingTests", "getExitCode", "result", "runnerStatus", "success", "testStatus", "status", "runnerTestStatus", "closeChromeDriverIfRunning", "requireWithFallback", "ignoreFailingTestsInExitCode", "onExit", "exitValue", "isCi", "writeStackTrace", "init_testimServicesApi", "init_logger", "init_featureFlagsService", "init_runOptions", "logger", "getLogger", "checkNodeVersion", "engineVersion", "ArgError", "currentMinimalNodeVersion", "nextMinimalNodeVersion", "majorVersion", "ltsNodeEolDate", "dateHasPassed", "formattedDate", "chalk", "main", "utils", "options", "log", "registerProcessForCleanup", "onExit", "err", "featureFlagsService", "program", "processedOptions", "setProxyUri", "setProjectId", "setEncryptKey", "installAllLazyDependencies", "clear", "initializeUserWithAuth", "preloadTests", "CLI_MODE", "preparePlayer", "res", "waitForSave", "getCacheFileLocation", "testRunner", "serveTunneling", "runAgentMode", "initServer", "port", "ignoreFailingTestsInExitCode", "customExtensionLocalLocation", "prepare", "NoArgsError", "argsForRemoteRunFailure", "updateRemoteRunFailure", "result"]
}
