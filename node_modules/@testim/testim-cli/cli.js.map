{
  "version": 3,
  "sources": ["../src/commons/performance-logger.ts", "../src/player/constants.js", "../src/utils/stringUtils.ts", "../package.json", "../src/commons/config.ts", "../src/lib/coralogix-winston.transport.ts", "../src/commons/logger.ts", "../src/errors.ts", "../src/utils/promiseUtils.ts", "../src/commons/httpRequestCounters.ts", "../src/commons/httpRequest.ts", "../src/utils/fsUtils.ts", "../src/commons/constants.ts", "../src/utils/argsUtils.ts", "../src/utils/timeUtils.ts", "../src/utils/mobileUtils.ts", "../src/utils/index.ts", "../src/commons/mockNetworkRuleFileSchema.json", "../src/commons/runnerFileCache.ts", "../src/commons/logUtils.ts", "../src/commons/requireWithFallback.ts", "../src/commons/npmWrapper.ts", "../src/commons/chromedriverWrapper.ts", "../src/commons/prepareRunnerAndTestimStartUtils.ts", "../src/chromiumInstaller.ts", "../src/commons/testimCustomToken.ts", "../src/cli/isCiRun.ts", "../src/commons/testimServicesApi.ts", "../src/commons/getSessionPlayerRequire.ts", "../src/commons/initializeUserWithAuth.ts", "../src/commons/prepareRunner.ts", "../src/processHandler.ts", "../src/runOptionsUtils.ts", "../src/commons/testimAnalytics.ts", "../src/runOptionsAgentFlow.ts", "../src/commons/chrome-launcher.ts", "../src/credentialsManager.ts", "../src/runOptions.ts", "../src/fixLocalBuild.ts", "../src/commons/lazyRequire.ts", "../src/codim/codim-cli.ts", "../src/commons/preloadTests.ts", "../src/testimNpmDriver.ts", "../src/commons/testimNgrok.ts", "../src/commons/testimCloudflare.ts", "../src/commons/featureFlagsService.ts", "../src/services/lambdatestService.ts", "../src/commons/testimTunnel.ts", "../src/services/gridService.ts", "../src/services/branchService.ts", "../src/reports/reporterUtils.ts", "../src/reports/debugReporter.ts", "../src/commons/featureAvailabilityService.ts", "../src/reports/consoleReporter.ts", "../src/reports/junitReporter.ts", "../src/reports/teamCityReporter.ts", "../src/reports/jsonReporter.ts", "../src/reports/chromeReporter.ts", "../src/reports/reporter.ts", "../src/services/analyticsService.ts", "../src/coverage/SummaryToObjectReport.js", "../src/coverage/jsCoverage.js", "../src/commons/SeleniumPerfStats.ts", "../src/services/localRCASaver.ts", "../src/OverrideTestDataBuilder.ts", "../src/testRunStatus.ts", "../src/commons/testimDesiredCapabilitiesBuilder.ts", "../src/player/webDriverUtils.js", "../src/player/scripts/isElementDisplayed.js", "../src/player/WebdriverioWebDriverApi.js", "../src/player/stepActions/scripts/doubleClick.js", "../src/player/stepActions/scripts/focusElement.js", "../src/player/webdriver.js", "../src/services/labFeaturesService.ts", "../src/agent/routers/cliJsCode/service.js", "../src/stepPlayers/cliJsStepPlayback.js", "../src/player/utils/cookieUtils.js", "../src/player/utils/windowUtils.js", "../src/player/utils/screenshotUtils.js", "../src/player/utils/imageCaptureUtils.js", "../src/player/services/tabService.js", "../src/player/services/portSelector.ts", "../src/player/utils/stepActionUtils.js", "../src/player/services/frameLocator.js", "../src/commons/detectDebugger.ts", "../src/commons/socket/socketService.ts", "../src/commons/socket/baseSocketServiceSocketIO.ts", "../src/commons/socket/testResultServiceSocketIO.ts", "../src/commons/socket/testResultService.ts", "../src/player/stepActions/stepAction.js", "../src/player/stepActions/locateStepAction.js", "../src/player/stepActions/scripts/scroll.js", "../src/player/stepActions/scrollStepAction.js", "../src/player/stepActions/scripts/html5dragAction.js", "../src/player/stepActions/scripts/doClick.js", "../src/player/stepActions/scripts/doDragPath.js", "../src/player/stepActions/scripts/html5dragActionV2.js", "../src/player/stepActions/mouseStepAction.js", "../src/player/stepActions/textValidationStepAction.js", "../src/player/stepActions/evaluateExpressionStepAction.js", "../src/player/stepActions/scripts/setText.js", "../src/player/stepActions/textStepAction.js", "../src/player/stepActions/scripts/runCode.js", "../src/player/stepActions/baseJsStepAction.js", "../src/player/stepActions/jsCodeStepAction.js", "../src/player/stepActions/jsConditionStepAction.js", "../src/player/stepActions/specialKeyStepAction.js", "../src/player/stepActions/scripts/selectOption.js", "../src/player/stepActions/selectOptionStepAction.js", "../src/player/stepActions/submitStepAction.js", "../src/player/stepActions/hoverStepAction.js", "../src/player/stepActions/scripts/wheel.js", "../src/player/stepActions/wheelStepAction.js", "../src/player/stepActions/scripts/dropEvent.js", "../src/player/stepActions/dropFileStepAction.js", "../src/inputFileUtils.ts", "../src/player/stepActions/inputFileStepAction.js", "../src/player/stepActions/navigationStepAction.js", "../src/player/stepActions/sleepStepAction.js", "../src/player/stepActions/RefreshStepAction.js", "../src/player/stepActions/apiStepAction.js", "../src/player/stepActions/extractTextStepAction.js", "../src/player/stepActions/tdkHybridStepAction.js", "../src/player/utils/eyeSdkService.js", "../src/player/stepActions/pixelValidationStepAction.js", "../src/player/stepActions/baseCliJsStepAction.js", "../src/player/stepActions/cliJsStepAction.js", "../src/player/stepActions/cliConditionStepAction.js", "../src/player/stepActions/nodePackageStepAction.js", "../src/player/stepActions/extensionOnlyStepAction.js", "../src/player/stepActions/sfdcStepAction.js", "../src/player/stepActions/sfdcRecordedStepAction.js", "../src/player/stepActions/stepActionRegistrar.js", "../src/player/services/windowCreationListener.js", "../src/player/services/playbackTimeoutCalculator.js", "../src/player/seleniumTestPlayer.js", "../src/runners/buildCodeTests.ts", "../src/agent/routers/codim/service.js", "../src/codim/hybrid-utils.js", "../src/stepPlayers/seleniumHybridStepPlayback.js", "../src/stepPlayers/puppeteerHybridStepPlayback.js", "../src/stepPlayers/playwrightHybridStepPlayback.js", "../src/stepPlayers/tdkHybridStepPlayback.js", "../src/stepPlayers/hybridStepPlayback.js", "../src/stepPlayers/nodePackageStepPlayback.js", "../src/stepPlayers/remoteStepPlayback.js", "../src/commons/socket/remoteStepServiceSocketIO.ts", "../src/commons/socket/remoteStepService.ts", "../src/testRunHandler.ts", "../src/executionQueue.ts", "../src/workers/workerUtils.ts", "../src/workers/BaseWorker.ts", "../src/workers/WorkerSelenium.ts", "../src/player/services/tabServiceMock.js", "../src/player/services/mobileFrameLocatorMock.js", "../src/player/appiumTestPlayer.js", "../src/workers/WorkerAppium.ts", "../src/player/extensionTestPlayer.js", "../src/cdpTestRunner.ts", "../src/player/chromeLauncherTestPlayer.js", "../src/workers/WorkerExtension.ts", "../src/workers/WorkerExtensionSingleBrowser.ts", "../src/runners/ParallelWorkerManager.ts", "../src/commons/socket/realDataServiceSocketIO.ts", "../src/commons/socket/realDataService.ts", "../src/runners/runnerUtils.ts", "../src/runners/TestPlanRunner.ts", "../src/runner.ts", "../src/agent/routers/general/index.ts", "../src/agent/routers/hybrid/registerRoutes.ts", "../src/agent/routers/codim/router.ts", "../src/agent/routers/cliJsCode/router.ts", "../src/agent/routers/cliJsCode/index.ts", "../src/agent/routers/playground/service.js", "../src/agent/routers/playground/router.js", "../src/agent/routers/standalone-browser/registerRoutes.ts", "../src/agent/routers/index.ts", "../src/agent/server.ts", "../src/cliAgentMode.ts", "../src/cli.ts", "../src/polyfills/Array.prototype.at.ts", "../src/polyfills/index.ts", "../src/commons/xhr2.ts", "../src/cli/onExit.ts", "../src/cli/writeStackTrace.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\nconst MEASURE_TESTIM_CLI_PERFORMANCE = process.env.MEASURE_TESTIM_CLI_PERFORMANCE;\nconst epoch = Date.now();\nlet last = Date.now();\n\nexport function log(...args: any[]) {\n    if (!MEASURE_TESTIM_CLI_PERFORMANCE) {\n        return;\n    }\n    const time = Date.now();\n    console.log(`${time - epoch}\\t\\t\\t${time - last}\\t\\t\\t`, ...args);\n    last = time;\n}\n\nexport function measure(fn: () => void, fnName?: string) {\n    if (!MEASURE_TESTIM_CLI_PERFORMANCE) {\n        return;\n    }\n    const start = Date.now();\n    try {\n        fn();\n    } finally {\n        console.log(fnName || fn.name, 'took', Date.now() - start);\n    }\n}\n", "/* eslint-disable camelcase */\nexport const UNICODE_CHARACTERS = {\n    NULL: '\\uE000',\n    Unidentified: '\\uE000',\n    Cancel: '\\uE001',\n    Help: '\\uE002',\n    'Back space': '\\uE003',\n    Backspace: '\\uE003',\n    Tab: '\\uE004',\n    Clear: '\\uE005',\n    Return: '\\uE006',\n    Enter: '\\uE007',\n    Shift: '\\uE008',\n    Control: '\\uE009',\n    Alt: '\\uE00A',\n    Pause: '\\uE00B',\n    Escape: '\\uE00C',\n    Space: '\\uE00D',\n    ' ': '\\uE00D',\n    Pageup: '\\uE00E',\n    PageUp: '\\uE00E',\n    Page_Up: '\\uE00E',\n    Pagedown: '\\uE00F',\n    PageDown: '\\uE00F',\n    Page_Down: '\\uE00F',\n    End: '\\uE010',\n    Home: '\\uE011',\n    'Left arrow': '\\uE012',\n    Arrow_Left: '\\uE012',\n    ArrowLeft: '\\uE012',\n    'Up arrow': '\\uE013',\n    Arrow_Up: '\\uE013',\n    ArrowUp: '\\uE013',\n    'Right arrow': '\\uE014',\n    Arrow_Right: '\\uE014',\n    ArrowRight: '\\uE014',\n    'Down arrow': '\\uE015',\n    Arrow_Down: '\\uE015',\n    ArrowDown: '\\uE015',\n    Insert: '\\uE016',\n    Delete: '\\uE017',\n    Semicolon: '\\uE018',\n    Equals: '\\uE019',\n    'Numpad 0': '\\uE01A',\n    'Numpad 1': '\\uE01B',\n    'Numpad 2': '\\uE01C',\n    'Numpad 3': '\\uE01D',\n    'Numpad 4': '\\uE01E',\n    'Numpad 5': '\\uE01F',\n    'Numpad 6': '\\uE020',\n    'Numpad 7': '\\uE021',\n    'Numpad 8': '\\uE022',\n    'Numpad 9': '\\uE023',\n    Multiply: '\\uE024',\n    Add: '\\uE025',\n    Separator: '\\uE026',\n    Subtract: '\\uE027',\n    Decimal: '\\uE028',\n    Divide: '\\uE029',\n    F1: '\\uE031',\n    F2: '\\uE032',\n    F3: '\\uE033',\n    F4: '\\uE034',\n    F5: '\\uE035',\n    F6: '\\uE036',\n    F7: '\\uE037',\n    F8: '\\uE038',\n    F9: '\\uE039',\n    F10: '\\uE03A',\n    F11: '\\uE03B',\n    F12: '\\uE03C',\n    Command: '\\uE03D',\n    Meta: '\\uE03D',\n    Zenkaku_Hankaku: '\\uE040',\n    ZenkakuHankaku: '\\uE040',\n};\n/* eslint-enable camelcase */\n\nexport const W3C_ELEMENT_ID = 'element-6066-11e4-a52e-4f735466cecf';\n\n// #region Webdriver Errors\nconst Unknown = { id: 'Unknown', status: -1, message: 'Remote end send an unknown status code.' };\nconst Success = { id: 'Success', status: 0, message: 'The command executed successfully.' };\nconst NoSuchDriver = { id: 'NoSuchDriver', status: 6, message: 'A session is either terminated or not started' };\nconst NoSuchElement = {\n    id: 'NoSuchElement',\n    status: 404,\n    message: 'An element could not be located on the page using the given search parameters.',\n};\nconst NoSuchFrame = {\n    id: 'NoSuchFrame',\n    status: 400,\n    message: 'A request to switch to a frame could not be satisfied because the frame could not be found.',\n};\nconst UnknownCommand = {\n    id: 'UnknownCommand',\n    status: 404,\n    message: 'The requested resource could not be found, or a request was received using an HTTP method that is not supported by the mapped resource.',\n};\nconst StaleElementReference = {\n    id: 'StaleElementReference',\n    status: 400,\n    message: 'An element command failed because the referenced element is no longer attached to the DOM.',\n};\nconst ElementNotVisible = {\n    id: 'ElementNotVisible',\n    status: 11,\n    message: 'An element command could not be completed because the element is not visible on the page.',\n};\nconst InvalidElementState = {\n    id: 'InvalidElementState',\n    status: 400,\n    message: 'An element command could not be completed because the element is in an invalid state (e.g. attempting to click a disabled element).',\n};\nconst UnknownError = {\n    id: 'UnknownError',\n    status: 500,\n    message: 'An unknown server-side error occurred while processing the command.',\n};\nconst ElementIsNotSelectable = {\n    id: 'ElementIsNotSelectable',\n    status: 400,\n    message: 'An attempt was made to select an element that cannot be selected.',\n};\nconst JavaScriptError = {\n    id: 'JavaScriptError',\n    status: 500,\n    message: 'An error occurred while executing user supplied JavaScript.',\n};\nconst XPathLookupError = {\n    id: 'XPathLookupError',\n    status: 19,\n    message: 'An error occurred while searching for an element by XPath.',\n};\nconst Timeout = { id: 'Timeout', status: 408, message: 'An operation did not complete before its timeout expired.' };\nconst NoSuchWindow = {\n    id: 'NoSuchWindow',\n    status: 400,\n    message: 'A request to switch to a different window could not be satisfied because the window could not be found.',\n};\nconst InvalidCookieDomain = {\n    id: 'InvalidCookieDomain',\n    status: 400,\n    message: 'An illegal attempt was made to set a cookie under a different domain than the current page.',\n};\nconst UnableToSetCookie = {\n    id: 'UnableToSetCookie',\n    status: 500,\n    message: 'A request to set a cookie\\'s value could not be satisfied.',\n};\nconst UnexpectedAlertOpen = {\n    id: 'UnexpectedAlertOpen',\n    status: 500,\n    message: 'A modal dialog was open, blocking this operation',\n};\nconst NoAlertOpenError = {\n    id: 'NoAlertOpenError',\n    status: 400,\n    message: 'An attempt was made to operate on a modal dialog when one was not open.',\n};\nconst ScriptTimeout = {\n    id: 'ScriptTimeout',\n    status: 408,\n    message: 'A script did not complete before its timeout expired.',\n};\nconst InvalidElementCoordinates = {\n    id: 'InvalidElementCoordinates',\n    status: 400,\n    message: 'The coordinates provided to an interactions operation are invalid.',\n};\nconst IMENotAvailable = { id: 'IMENotAvailable', status: 30, message: 'IME was not available.' };\nconst IMEEngineActivationFailed = {\n    id: 'IMEEngineActivationFailed',\n    status: 31,\n    message: 'An IME engine could not be started.',\n};\nconst InvalidSelector = {\n    id: 'InvalidSelector',\n    status: 400,\n    message: 'Argument was an invalid selector (e.g. XPath/CSS).',\n};\nconst SessionNotCreatedException = {\n    id: 'SessionNotCreatedException',\n    status: 500,\n    message: 'A new session could not be created.',\n};\nconst ElementNotScrollable = { id: 'ElementNotScrollable', status: 34, message: 'Element cannot be scrolled into view.' };\n\nconst SelectorTimeoutError = {\n    id: 'SelectorTimeoutError',\n    status: 100,\n    message: 'Request timed out after the element was still found on the page.',\n};\nconst NoSessionIdError = {\n    id: 'NoSessionIdError',\n    status: 101,\n    message: 'A session id is required for this command but wasn\\'t found in the response payload',\n};\nconst GridApiError = { id: 'GridApiError', status: 102, message: 'A call to the Selenium Grid API failed' };\n\nconst ElementClickIntercepted = {\n    id: 'ElementClickIntercepted',\n    status: 400,\n    message: 'The Element Click command could not be completed because the element receiving the events is obscuring the element that was requested clicked.',\n};\nconst ElementNotInteractable = {\n    id: 'ElementNotInteractable',\n    status: 400,\n    message: 'A command could not be completed because the element is not pointer- or keyboard interactable.',\n};\nconst InsecureCertificate = {\n    id: 'InsecureCertificate',\n    status: 400,\n    message: 'Navigation caused the user agent to hit a certificate warning, which is usually the result of an expired or invalid TLS certificate.',\n};\nconst InvalidArgument = {\n    id: 'InvalidArgument',\n    status: 400,\n    message: 'The arguments passed to a command are either invalid or malformed.',\n};\nconst InvalidSessionId = {\n    id: 'InvalidSessionId',\n    status: 404,\n    message: 'Occurs if the given session id is not in the list of active sessions, meaning the session either does not exist or that it\u2019s not active.',\n};\nconst MoveTargetOutOfBounds = {\n    id: 'MoveTargetOutOfBounds',\n    status: 500,\n    message: 'The target for mouse interaction is not in the browser\u2019s viewport and cannot be brought into that viewport.',\n};\nconst NoSuchCookie = {\n    id: 'NoSuchCookie',\n    status: 404,\n    message: 'No cookie matching the given path name was found amongst the associated cookies of the current browsing context\u2019s active document.',\n};\nconst UnableToCaptureScreen = {\n    id: 'UnableToCaptureScreen',\n    status: 500,\n    message: 'A screen capture was made impossible.',\n};\nconst UnknownMethod = {\n    id: 'UnknownMethod',\n    status: 405,\n    message: 'The requested command matched a known URL but did not match an method for that URL.',\n};\nconst UnsupportedOperation = {\n    id: 'UnsupportedOperation',\n    status: 500,\n    message: 'Indicates that a command that should have executed properly cannot be supported for some reason.',\n};\n\nexport const SELENIUM_STATUS_CODES = {\n    '-1': Unknown,\n    0: Success,\n    6: NoSuchDriver,\n    7: NoSuchElement,\n    8: NoSuchFrame,\n    9: UnknownCommand,\n    10: StaleElementReference,\n    11: ElementNotVisible,\n    12: InvalidElementState,\n    13: UnknownError,\n    15: ElementIsNotSelectable,\n    17: JavaScriptError,\n    19: XPathLookupError,\n    21: Timeout,\n    23: NoSuchWindow,\n    24: InvalidCookieDomain,\n    25: UnableToSetCookie,\n    26: UnexpectedAlertOpen,\n    27: NoAlertOpenError,\n    28: ScriptTimeout,\n    29: InvalidElementCoordinates,\n    30: IMENotAvailable,\n    31: IMEEngineActivationFailed,\n    32: InvalidSelector,\n    33: SessionNotCreatedException,\n    34: ElementNotScrollable,\n\n    // WebdriverIO specific error codes\n    100: SelectorTimeoutError,\n    101: NoSessionIdError,\n    102: GridApiError,\n\n    // W3C Webdriver errors\n    'element click intercepted': ElementClickIntercepted,\n    'element not selectable': ElementIsNotSelectable,\n    'element not interactable': ElementNotInteractable,\n    'insecure certificate': InsecureCertificate,\n    'invalid argument': InvalidArgument,\n    'invalid cookie domain': InvalidCookieDomain,\n    'invalid coordinates': InvalidElementCoordinates,\n    'invalid element state': InvalidElementState,\n    'invalid selector': InvalidSelector,\n    'invalid session id': InvalidSessionId,\n    'javascript error': JavaScriptError,\n    'move target out of bounds': MoveTargetOutOfBounds,\n    'no such alert': NoAlertOpenError,\n    'no such cookie': NoSuchCookie,\n    'no such element': NoSuchElement,\n    'no such frame': NoSuchFrame,\n    'no such window': NoSuchWindow,\n    'script timeout': ScriptTimeout,\n    'session not created': SessionNotCreatedException,\n    'stale element reference': StaleElementReference,\n    timeout: Timeout,\n    'unable to set cookie': UnableToSetCookie,\n    'unable to capture screen': UnableToCaptureScreen,\n    'unexpected alert open': UnexpectedAlertOpen,\n    'unknown command': UnknownCommand,\n    'unknown error': UnknownError,\n    'unknown method': UnknownMethod,\n    'unsupported operation': UnsupportedOperation,\n};\n// #endregion\n\nexport const EDGE_CHROMIUM_MIN_VERSION = 79;\n", "export function guid(length = 16): string {\n    const a = 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        const index = Math.floor((Math.random() * (a.length)));\n        result += a[index];\n    }\n    return result;\n}\n\nexport function getTestUrl(editorUrl: string, projectId: string, testId: string, resultId?: string | null, branch?: string | null) {\n    let testUrl = '';\n    branch = branch ? encodeURIComponent(branch) : 'master';\n    if (projectId && testId) {\n        testUrl = `${editorUrl}/#/project/${projectId}/branch/${branch}/test/${testId}`;\n        if (resultId) {\n            testUrl += `?result-id=${resultId}`;\n        }\n    }\n    return testUrl;\n}\n\nexport function buildBasicHeader(userName: string, password: string) {\n    const userAndPasswordBase64 = Buffer.from(`${userName}:${password}`).toString('base64');\n    return `Basic ${userAndPasswordBase64}`;\n}\n\nexport function isURL(path: string) {\n    const legacyPattern = /^(https?:\\/\\/)/i;\n\n    // https://gist.github.com/dperini/729294 (validator.js based on).\n    const pattern = new RegExp(\n        '^' +\n        // protocol identifier (optional)\n        // short syntax // still required\n        '(?:(?:(?:https?|ftp):)?\\\\/\\\\/)' +\n        // user:pass BasicAuth (optional)\n        '(?:\\\\S+(?::\\\\S*)?@)?' +\n        '(?:' +\n        // IP address exclusion\n        // private & local networks\n        '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n        '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n        '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n        // IP address dotted notation octets\n        // excludes loopback network 0.0.0.0\n        // excludes reserved space >= 224.0.0.0\n        // excludes network & broadcast addresses\n        // (first & last IP address of each class)\n        '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n        '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n        '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n        '|' +\n        // host & domain names, may end with dot\n        // can be replaced by a shortest alternative\n        // (?![-_])(?:[-\\\\w\\\\u00a1-\\\\uffff]{0,63}[^-_]\\\\.)+\n        '(?:' +\n        '(?:' +\n        '[a-z0-9\\\\u00a1-\\\\uffff]' +\n        '[a-z0-9\\\\u00a1-\\\\uffff_-]{0,62}' +\n        ')?' +\n        '[a-z0-9\\\\u00a1-\\\\uffff]\\\\.' +\n        ')+' +\n        // TLD identifier name, may end with dot\n        '(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?)' +\n        ')' +\n        // port number (optional)\n        '(?::\\\\d{2,5})?' +\n        // resource path (optional)\n        '(?:[/?#]\\\\S*)?' +\n        '$', 'i',\n    );\n\n    return legacyPattern.test(path) || pattern.test(path);\n}\n", "{\n  \"name\": \"@testim/testim-cli\",\n  \"version\": \"0.10.22\",\n  \"description\": \"Command line interface for running Testing on your CI\",\n  \"author\": \"Oren Rubin\",\n  \"contributors\": [\n    {\n      \"name\": \"Oren Rubin\",\n      \"email\": \"oren@testim.io\"\n    }\n  ],\n  \"bugs\": {\n    \"email\": \"info@testim.io\"\n  },\n  \"devDependencies\": {\n    \"@types/decompress\": \"4.2.4\",\n    \"@types/memory-fs\": \"0.3.3\",\n    \"@types/ms\": \"0.7.31\",\n    \"@types/node\": \"16.0.0\",\n    \"@types/promise-queue\": \"2.2.0\",\n    \"@types/prompts\": \"2.4.2\",\n    \"@types/selenium-webdriver\": \"4.0.9\",\n    \"@types/superagent-proxy\": \"3.0.0\",\n    \"@types/validate-npm-package-name\": \"3.0.3\",\n    \"bundle-deps\": \"1.0.0\",\n    \"esbuild\": \"0.17.10\",\n    \"merge-stream\": \"2.0.0\",\n    \"proxyquire\": \"2.1.3\",\n    \"sinon\": \"9.0.2\",\n    \"sinon-chai\": \"3.7.0\",\n    \"ts-node\": \"9.1.1\",\n    \"tsconfig-paths\": \"3.12.0\"\n  },\n  \"lazyDependencies\": {\n    \"ngrok\": \"4.3.3\",\n    \"webpack\": \"5.74.0\",\n    \"playwright\": \"0.12.1\",\n    \"puppeteer\": \"2.1.1\",\n    \"selenium-webdriver\": \"3.6.0\",\n    \"v8-to-istanbul\": \"9.1.0\",\n    \"istanbul-lib-coverage\": \"3.2.0\",\n    \"@bcoe/v8-coverage\": \"0.2.3\",\n    \"convert-source-map\": \"1.7.0\",\n    \"multer\": \"1.4.5-lts.1\"\n  },\n  \"dependencies\": {\n    \"@applitools/eyes-sdk-core\": \"13.11.29\",\n    \"@testim/coralogix-logger\": \"1.1.27-beta.1\",\n    \"@testim/webdriverio\": \"0.0.8\",\n    \"abort-controller\": \"3.0.0\",\n    \"ajv\": \"6.12.6\",\n    \"analytics-node\": \"5.0.0\",\n    \"appium-dom-utils\": \"1.0.6\",\n    \"archiver\": \"5.3.0\",\n    \"body-parser\": \"1.20.1\",\n    \"chalk\": \"4.1.2\",\n    \"chrome-launcher\": \"0.15.0\",\n    \"combine-source-map\": \"0.8.0\",\n    \"commander\": \"10.0.0\",\n    \"compression\": \"1.7.4\",\n    \"cors\": \"2.8.5\",\n    \"crypto-js\": \"4.1.1\",\n    \"data-uri-to-buffer\": \"2.0.2\",\n    \"decompress\": \"4.2.1\",\n    \"express\": \"4.17.3\",\n    \"fkill\": \"7.2.1\",\n    \"form-data\": \"3.0.0\",\n    \"glob\": \"7.2.0\",\n    \"https-proxy-agent\": \"5.0.0\",\n    \"istanbul-lib-report\": \"3.0.0\",\n    \"istanbul-reports\": \"3.1.5\",\n    \"jimp\": \"0.16.2\",\n    \"jsdom\": \"19.0.0\",\n    \"jsonwebtoken\": \"9.0.0\",\n    \"lodash\": \"4.17.21\",\n    \"memory-fs\": \"0.5.0\",\n    \"memorystream\": \"0.3.1\",\n    \"moment\": \"2.29.4\",\n    \"ms\": \"2.1.2\",\n    \"npm\": \"8.19.2\",\n    \"object-hash\": \"3.0.0\",\n    \"ora\": \"5.4.1\",\n    \"p-limit\": \"4.0.0\",\n    \"p-retry\": \"4.6.2\",\n    \"pako\": \"1.0.11\",\n    \"portfinder\": \"1.0.28\",\n    \"promise-queue\": \"2.2.5\",\n    \"prompts\": \"2.4.2\",\n    \"proxy-agent\": \"5.0.0\",\n    \"rox-node\": \"4.9.18\",\n    \"semver\": \"7.3.2\",\n    \"serialize-error\": \"7.0.1\",\n    \"socket.io-client\": \"4.5.4\",\n    \"source-map-support\": \"0.5.19\",\n    \"superagent\": \"3.8.3\",\n    \"superagent-proxy\": \"3.0.0\",\n    \"test-exclude\": \"6.0.0\",\n    \"threads\": \"0.12.0\",\n    \"ua-parser-js\": \"0.7.33\",\n    \"validate-npm-package-name\": \"3.0.0\",\n    \"webdriverio\": \"7.24.0\",\n    \"winston\": \"3.6.0\",\n    \"winston-transport\": \"4.5.0\",\n    \"ws\": \"8.5.0\",\n    \"xml2js\": \"0.4.23\",\n    \"yaml\": \"1.10.0\"\n  },\n  \"resolutions\": {\n    \"vm2\": \"^3.9.14\"\n  },\n  \"overrides\": {\n    \"vm2\": \"^3.9.14\"\n  },\n  \"license\": \"Proprietary\",\n  \"bin\": {\n    \"testim\": \"cli.js\"\n  },\n  \"scripts\": {\n    \"start\": \"ts-node-transpile-only ./src/cli\",\n    \"test\": \"yarn test:pattern './src/**/*.test.[jt]s'\",\n    \"test:pattern\": \"IS_UNIT_TEST=1 ../../node_modules/mocha/bin/_mocha --timeout 2000 --exit --recursive --exclude ./src/codim/template.[jt]s/tests/examples/**/*.test.[jt]s --watch-files 'src' -r ts-node/register/transpile-only -r tsconfig-paths/register --reporter mocha-multi-reporters --reporter-options configFile=mochaReporterConfig.js\",\n    \"test:cov\": \"nyc --reporter=lcov --reporter=text yarn test\",\n    \"upload-bundle-s3\": \"ts-node-transpile-only scripts/upload.js\",\n    \"prepare-version\": \"rm -rf ./deploy && mkdir -p deploy && tsx buildTool prepare-version-on-prem\",\n    \"make-onprem-deps\": \"cp ../../yarn.lock deploy && cd deploy && yarn install --production && bundle-deps\",\n    \"pack-onprem\": \"yarn prepare-version && yarn make-onprem-deps && cd deploy && npm pack && zip -r testim-cli.zip testim-cli-*.tgz\",\n    \"pack-serve\": \"yarn pack-onprem && http-server deploy/\",\n    \"self-test\": \"cd /tmp && DEBUG=self-test BUILD_MAX_MEMORY=4096 tsx /runner/_work/testimio/testimio/apps/runner/scripts/selfTest.ts\"\n  },\n  \"engines\": {\n    \"node\": \">= 14.0.0\"\n  }\n}\n", "'use strict';\n\nlet _SERVICES_HOST = process.env.SERVICES_HOST || 'https://services.testim.io';\nconst canonicalBlobURL = 'https://testimstatic.blob.core.windows.net';\nconst canonicalEdgeUrl = 'https://tstresultfiles.azureedge.net';\nif (process.env.GATEWAY_URL) {\n    process.env.CORALOGIX_URL = `${process.env.GATEWAY_URL}/testim/coralogix/api/v1/logs`;\n    process.env.SERVICES_HOST = `${process.env.GATEWAY_URL}/testim/services`;\n    // set the services for the extension\n    process.env.EXTENSION_SERVICES_HOST = process.env.TUNNEL_GATEWAY ? process.env.SERVICES_HOST : _SERVICES_HOST;\n    _SERVICES_HOST = process.env.SERVICES_HOST;\n}\n\nexport const DISABLE_AGENT_ORIGIN_CHECK = parseInt(process.env.DISABLE_AGENT_ORIGIN_CHECK || '0', 10);\nexport const DISABLE_DEBUGGER_INFINITE_TIMEOUT = parseInt(process.env.DISABLE_DEBUGGER_INFINITE_TIMEOUT || '0', 10);\nexport const OVERRIDE_TIMEOUTS = parseInt(process.env.OVERRIDE_TIMEOUTS || '0', 10);\nexport const EDITOR_URL = process.env.EDITOR_URL;\nexport const WEBSOCKET_HOST = process.env.WEBSOCKET_HOST || `${_SERVICES_HOST}/ws`;\nexport const SERVICES_HOST = _SERVICES_HOST;\nexport const LOGGER_CONSOLE = parseInt(process.env.LOGGER_CONSOLE || '0', 10);\nexport const LOGGER_DEBUG = parseInt(process.env.LOGGER_DEBUG || '0', 10);\nexport const WEBDRIVER_DEBUG = parseInt(process.env.WEBDRIVER_DEBUG || '0', 10);\nexport const IS_ON_PREM = parseInt(process.env.IS_ON_PREM || '0', 10);\nexport const REQUESTS_QUEUE_SIZE = process.env.REQUESTS_QUEUE_SIZE ? parseInt(process.env.REQUESTS_QUEUE_SIZE, 10) : undefined;\nexport const DEBUG_MODE = parseInt(process.env.DEBUG_MODE || '0', 10);\nexport const TESTIM_CONCURRENT_WORKER_COUNT = process.env.TESTIM_CONCURRENT_WORKER_COUNT ? parseInt(process.env.TESTIM_CONCURRENT_WORKER_COUNT, 10) : null;\nexport const ROLLOUT_KEY = process.env.ROLLOUT_KEY || '5b5560729601aa6484276518';\nexport const DF_ENABLE_VIDEO = parseInt(process.env.DF_ENABLE_VIDEO || '0', 10);\nexport const START_WORKER_DELAY_MS = parseInt(process.env.START_WORKER_DELAY_MS || '1500', 10);\nexport const APPIUM_VERSION = process.env.APPIUM_VERSION || '1.10.1';\nexport const GATEWAY_URL = process.env.GATEWAY_URL;\nexport const EXTENSION_SERVICES_HOST = process.env.EXTENSION_SERVICES_HOST || _SERVICES_HOST;\nexport const BLOB_URL = process.env.GATEWAY_URL ? `${process.env.GATEWAY_URL}/testim/blob` : canonicalBlobURL;\nexport const EDGE_URL = process.env.GATEWAY_URL ? `${process.env.GATEWAY_URL}/testim/edge` : canonicalEdgeUrl;\nexport const CANONICAL_BLOB_URL = canonicalBlobURL;\nexport const CANONICAL_EDGE_URL = canonicalEdgeUrl;\n", "import { Log, Severity, CoralogixLogger } from '@testim/coralogix-logger';\nimport TransportStream from 'winston-transport';\nimport type { LogEntry } from 'winston';\nimport type { LoggerConfig } from '@testim/coralogix-logger';\n\ninterface CoralogixWinstonTransportOptions extends Partial<TransportStream.TransportStreamOptions>, Partial<LoggerConfig> {\n    category: string;\n    timestamp?: number;\n    extraFields?: { [field: string]: string };\n}\n\nconst severityMap = {\n    silly: Severity.verbose,\n    verbose: Severity.verbose,\n    info: Severity.info,\n    http: Severity.info,\n    warn: Severity.warning,\n    warning: Severity.warning,\n    error: Severity.error,\n    silent: Severity.verbose,\n    critical: Severity.critical,\n    crit: Severity.critical,\n    debug: Severity.debug,\n} as const;\n\nconst errorProps = ['err', 'error', 'reason', 'e'];\n\nexport class CoralogixTransport extends TransportStream {\n    name: string;\n    logger: CoralogixLogger;\n    timestamp?: number;\n    options: Partial<CoralogixWinstonTransportOptions>;\n    static options: Partial<CoralogixWinstonTransportOptions>;\n\n    constructor(options: Partial<CoralogixWinstonTransportOptions>) {\n        options = Object.assign({}, CoralogixTransport.options, options);\n        super(options);\n        this.options = options;\n        this.logger = new CoralogixLogger(options.category || '');\n        this.name = 'Coralogix Transport';\n        if (options.timestamp) {\n            this.timestamp = options.timestamp;\n        }\n    }\n\n    log(info: LogEntry, callback: (...args: any) => void) {\n        const { category, level, message: msg, meta: infoMeta = {}, ...restMeta } = info;\n        const meta = Object.assign({}, infoMeta, this.options.extraFields, restMeta);\n        const log = new Log();\n\n        log.severity = severityMap[level as keyof typeof severityMap];\n        log.text = msg;\n        log.category = category;\n        if (meta.className) {\n            log.className = meta.className;\n        }\n        if (meta.methodName) {\n            log.methodName = meta.methodName;\n        }\n        if (meta.threadId) {\n            log.threadId = meta.threadId;\n        }\n        delete meta.className;\n        delete meta.methodName;\n        delete meta.threadId;\n        delete meta.category;\n        delete meta.level;\n        delete meta.message;\n        let errorOverride = false;\n        if (infoMeta instanceof Error) {\n            errorOverride = true;\n            meta.msg = infoMeta.message + infoMeta.stack;\n            if (msg) {\n                meta.msg = `${msg}\\n${meta.msg}`;\n            }\n        }\n\n        for (const prop of errorProps) {\n            if (infoMeta[prop] instanceof Error) {\n                meta[prop] = {\n                    message: infoMeta[prop].message,\n                    stack: infoMeta[prop].stack,\n                    name: infoMeta[prop].name,\n                    type: infoMeta[prop].type,\n                    cause: infoMeta[prop].cause,\n                    ...infoMeta[prop],\n                };\n            }\n        }\n\n        // still have keys after deleting the above\n        if (Object.keys(meta).length > 0) {\n            if (msg && !errorOverride) {\n                meta.msg = msg;\n            }\n            log.text = meta;\n        }\n\n        this.logger.addLog(log);\n        callback(null, true);\n    }\n\n    waitForFlush() {\n        return this.logger.waitForFlush();\n    }\n\n    static configure(config: Partial<CoralogixWinstonTransportOptions>) {\n        CoralogixLogger.configure(config as LoggerConfig);\n        CoralogixTransport.options = config;\n    }\n}\n", "import * as os from 'os';\nimport * as winston from 'winston';\nimport * as config from './config';\nimport { getRunnerVersion } from '../utils';\n\nconst hostname = os.hostname();\nconst runnerVersion = getRunnerVersion();\n\n\nconst loggerConfig = {\n    privateKey: 'd0eb01da-f966-1663-63c6-8871225d7c39',\n    applicationName: 'testim',\n    subsystemName: 'runner',\n};\n\nfunction getStreamsAndWaitForFlushPromise() {\n    const transports: winston.transport[] = [];\n\n    let waitForFlush = () => Promise.resolve();\n\n    if (!config.IS_ON_PREM) {\n        const { CoralogixTransport } = require('../lib/coralogix-winston.transport');\n\n        CoralogixTransport.configure(loggerConfig);\n        const loggerInstance = new CoralogixTransport({\n            category: 'ROOT',\n        });\n        transports.push(loggerInstance);\n\n        waitForFlush = () => loggerInstance.waitForFlush();\n    }\n\n    if (config.LOGGER_CONSOLE) {\n        transports.push(new winston.transports.Console({\n            format: winston.format.combine(winston.format.colorize(), winston.format.simple()),\n        }));\n    }\n    return [transports, waitForFlush] as const;\n}\n\nconst [transports, waitForFlush] = getStreamsAndWaitForFlushPromise();\nconst level = config.LOGGER_DEBUG ? 'debug' : 'info';\nconst defaultMeta = {\n    release: Boolean(global.meta?.IS_RELEASE),\n    branch: (global.meta?.IS_RELEASE && 'production') || (!global.meta?.IS_LOCAL && global.meta?.BRANCH_NAME) || 'local',\n};\n\nconst winstonMainLogger = winston.createLogger({\n    levels: winston.config.syslog.levels,\n    level,\n    transports,\n    defaultMeta: { name: 'runner', hostname, nodeVersion: process.version, runnerVersion, ...defaultMeta },\n});\n\nlet executionId: string | null | undefined = null;\nlet projectId: string | null | undefined = null;\n\nexport function setExecutionId(execId?: string | null) {\n    executionId = execId;\n}\n\nexport function setProjectId(projId?: string | null) {\n    projectId = projId;\n}\n\nexport function setProxyUri(proxyUri: string | undefined) {\n    if (config.IS_ON_PREM || !proxyUri) {\n        return;\n    }\n    const { CoralogixTransport } = require('../lib/coralogix-winston.transport');\n    CoralogixTransport.configure({ ...loggerConfig, proxyUri });\n}\n\nfunction addExecutionMetadata(dataExecutionId?: string) {\n    const logData = {\n        projectId,\n        time: (new Date()).toISOString(),\n        ...(executionId && !dataExecutionId && { executionId }),\n    };\n    return logData;\n}\n\ntype Level = 'debug' | 'info' | 'warning' | 'error' | 'crit';\n\nclass Logger {\n    constructor(private readonly _logger: winston.Logger) {\n        this.debug = this.debug.bind(this);\n        this.info = this.info.bind(this);\n        this.warn = this.warn.bind(this);\n        this.error = this.error.bind(this);\n        this.fatal = this.fatal.bind(this);\n    }\n\n    debug(msg: string, data: object = {}) {\n        this.innerLog('debug', msg, data);\n    }\n\n    info(msg: string, data: object = {}) {\n        this.innerLog('info', msg, data);\n    }\n\n    warn(msg: string, data: object = {}) {\n        this.innerLog('warning', msg, data);\n    }\n\n    error(msg: string, data: object = {}) {\n        this.innerLog('error', msg, data);\n    }\n\n    fatal(msg: string, data: object = {}) {\n        this.innerLog('crit', msg, data);\n    }\n\n    private innerLog(logLevel: Level, msg: string, data: object = {}) {\n        const { executionId: dataExecutionId } = data as { [key: string]: any };\n        try {\n            this._logger.log(logLevel, Object.assign({ meta: data, message: msg }, addExecutionMetadata(dataExecutionId)));\n        } catch (err) {\n            try {\n                this._logger.log('crit', Object.assign({ message: `failed to log message ${err.message}, ${err.stack}` }, addExecutionMetadata(dataExecutionId)));\n            } catch (_err) {\n                // well what can we do\n            }\n        }\n    }\n\n    waitForFlush() {\n        return waitForFlush();\n    }\n}\n\nexport function getLogger(loggerName: string) {\n    return new Logger(winstonMainLogger.child({ category: loggerName }));\n}\n", "import { AbortError as _AbortError } from 'p-retry';\n\nexport class AbortError extends Error {\n    name = 'AbortError';\n    constructor(message = 'aborted') {\n        super(message);\n    }\n}\n\n/** NoArgsError - throws when arguments not passed to cli */\nexport class NoArgsError extends Error {\n    name = 'NoArgsError';\n}\n\n/** ArgError - throws when argument is invalid */\nexport class ArgError extends Error {\n    name = 'ArgError';\n}\n\n/** SeleniumError - throws when selenium return error */\nexport class SeleniumError extends Error {\n    errorType?: string;\n\n    constructor(seleniumStack: import('./player/SeleniumProtocolError').SeleniumProtocolError['seleniumStack']) {\n        super(seleniumStack.orgStatusMessage || seleniumStack.message);\n        this.name = 'SeleniumError';\n        this.errorType = seleniumStack.type;\n    }\n}\n\nexport class StopRunOnError extends Error {\n    name = 'StopRunOnError';\n}\n\nexport class GetBrowserError extends Error {\n    constructor(message: string, public readonly type?: string) {\n        super(message);\n    }\n}\n\nexport class PageNotAvailableError extends _AbortError {}\n\nexport class TimeoutError extends Error {}\n\nexport class QuotaDepletedError extends Error {}\n\nexport class GridError extends Error {\n    name = 'GridError';\n\n    toString() {\n        return this.message;\n    }\n}\n\nexport class GridConcurrencyError extends GridError {\n    name = 'GridConcurrencyError';\n}\n\nexport class NpmPackageError extends Error {\n    name = 'NpmPackageError';\n}\n\nexport class SeleniumCrashError extends Error {\n    message = 'selenium driver crashed';\n    name = 'SeleniumCrashError';\n}\n\nexport class ClientError extends Error {}\n\nexport class PlaygroundCodeError extends Error {}\n\nexport class NpmPermissionsError extends Error {\n    constructor(public readonly path: string) {\n        super(`Testim had missing write access to ${path}`);\n    }\n}\n\nexport class NotImplementedError extends Error {\n    constructor(descendant = false) {\n        let message = 'not implemented';\n        if (descendant) {\n            message = 'should be implemented on descendant';\n        }\n        super(message);\n    }\n}\n", "import { TimeoutError } from '../errors';\nimport { OVERRIDE_TIMEOUTS } from '../commons/config';\n\nexport { TimeoutError };\n\nexport function isPromise(obj: any): obj is Promise<any> {\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\n/** @param time in ms */\nexport function delay(time: number) {\n    return new Promise<void>(((resolve) => {\n        setTimeout(resolve, time);\n    }));\n}\n\n\nlet warnedAboutDebugger = false;\nexport function promiseTimeout<T>(promise: T | PromiseLike<T>, timeout: number, errMsg = 'Timeout Error') {\n    if (OVERRIDE_TIMEOUTS && !warnedAboutDebugger) {\n        warnedAboutDebugger = true;\n        // eslint-disable-next-line no-console\n        console.log('Debugger connected - timeouts were overridden to 10 minutes to improve debugging');\n    }\n    const timeoutErr = new TimeoutError(errMsg);\n    timeout = OVERRIDE_TIMEOUTS ? Number(OVERRIDE_TIMEOUTS) || 600_000 : timeout;\n    return Promise.race([\n        promise,\n        delay(timeout).then(() => { throw timeoutErr; }),\n    ]);\n}\n\nlet pLimit: typeof import('p-limit')['default'];\nexport async function promiseMap<T, U>(arr: ArrayLike<T> | Iterable<T>, handler: (item: T, index: number) => PromiseLike<U>, { concurrency }: { concurrency?: number } = {}) {\n    if (concurrency) {\n        pLimit ||= (await import('p-limit')).default;\n        const limit = pLimit(concurrency);\n        return await Promise.all(Array.from(arr, (item, index) => limit(() => handler(item, index))));\n    }\n    return await Promise.all(Array.from(arr, handler));\n}\n\nexport function promiseFromCallback<ErrT, T>(resolver: (callback: (err: ErrT, result?: T) => void) => void) {\n    return new Promise<T | undefined>((resolve, reject) => {\n        resolver((err, result) => {\n            if (err) {\n                return reject(err);\n            }\n            return resolve(result);\n        });\n    });\n}\n", "import * as _ from 'lodash';\nimport * as config from './config';\nimport { promises as dns } from 'dns';\nimport { getLogger } from './logger';\nimport { promiseMap } from '../utils/promiseUtils';\n\nconst logger = getLogger('http-request-counters');\n\nlet networkConnectivityTestFailed = false;\n\n/** Tests network connectivity with DNS resolution (a basic test for a 7 later stack parallel but essential to most HTTP requests) */\nconst testNetworkConnectivity = async () => {\n    if (config.IS_ON_PREM) {\n        return true;\n    }\n    const hostnames = ['www.google.com', 'www.facebook.com', 'www.microsoft.com', 'testim.io'];\n    try {\n        // If any of these domains resolve we consider the connectivity to be ok\n        const result = Boolean(await promiseMap(hostnames, host => dns.lookup(host)));\n        if (!result) {\n            networkConnectivityTestFailed = true;\n        }\n        return result;\n    } catch (e) {\n        logger.error('network connectivity test failed');\n        networkConnectivityTestFailed = true;\n        return false;\n    }\n};\nconst throttledTestNetworkConnectivity = _.throttle(testNetworkConnectivity, 10 * 1000);\n\n// we remove entries after 15 minutes, note that this isn't accurate because\n// we remove the \"fail\"/\"success\" 10 minutes after we add them (and not the \"call\")\n// this is fine since these values are an estimation and not an accurate representation\n// we poll them when a test fails - so values older than 15 minutes (10 minutes is\n// the default timeout) are hardly relevant.\nconst ttl = 60 * 1000 * 15;\n\nexport const makeCounters = () => {\n    const counters = {\n        call: new Map<string, number>(),\n        success: new Map<string, number>(),\n        fail: new Map<string, number>(),\n    };\n    function update(counter: Map<string, number>, key: string) {\n        const result = counter.get(key) || 0;\n        counter.set(key, result + 1);\n        setTimeout(() => {\n            const _result = counter.get(key) || 1;\n            counter.set(key, _result - 1);\n        }, ttl);\n    }\n    function wrapWithMonitoring<F extends(...arg: any) => PromiseLike<any>>(fn: F, name: string = fn.name) {\n        return async function<T = Awaited<ReturnType<F>>> (...args: Parameters<F>): Promise<T> {\n            update(counters.call, name);\n            try {\n                const result = await fn.call(null, ...args);\n                update(counters.success, name);\n                return result;\n            } catch (e) {\n                update(counters.fail, name);\n                if (!networkConnectivityTestFailed) {\n                    throttledTestNetworkConnectivity();\n                }\n                throw e;\n            }\n        };\n    }\n    async function isNetworkHealthy() {\n        if (networkConnectivityTestFailed || !(await testNetworkConnectivity())) {\n            return false;\n        }\n        const allFailed = _.sum([...counters.fail.values()]);\n        const allCalls = _.sum([...counters.call.values()]);\n        // we declare a test unhealthy network wise if\n        // 10% or more of requests (out of finished requests) failed\n        // note that the network can be unhealthy but the test would still pass\n        return allFailed < allCalls * 0.1;\n    }\n    isNetworkHealthy.counters = counters;\n    wrapWithMonitoring.counters = counters; // expose the counters used to the outside\n    wrapWithMonitoring.isNetworkHealthy = isNetworkHealthy;\n    wrapWithMonitoring.didNetworkConnectivityTestFail = () => networkConnectivityTestFailed;\n    return wrapWithMonitoring;\n};\n", "import superagent from 'superagent';\nimport { getLogger } from './logger';\nimport { makeCounters } from './httpRequestCounters';\n\nconst logger = getLogger('http-request');\nconst wrapWithMonitoring = makeCounters();\nconst DEFAULT_REQUEST_TIMEOUT = parseInt(process.env.DEFAULT_REQUEST_TIMEOUT || '0', 10) || 30_000; //30sec timeout\nconst DOWNLOAD_REQUEST_TIMEOUT = 60_000; //1min timeout\n\n// #region utilities\nfunction getCaFile() {\n    return global.caFileContent;\n}\n\nfunction binaryParser(res: superagent.Response, fn: (err: Error | null, body: any) => void) {\n    const data: Uint8Array[] = [];\n\n    res.on('data', (chunk) => {\n        data.push(chunk); // Append Buffer object\n    });\n    res.on('end', () => {\n        fn(null, Buffer.concat(data)); // Merge the chunks and return\n    });\n}\n\nfunction getProxy() {\n    // @ts-expect-error possibly need to extend the superagent types?\n    if (!superagent.Request.prototype.proxy && global.SuperagentProxy) {\n        global.SuperagentProxy(superagent);\n    }\n    return global.proxyUri;\n}\n\nconst logErrorAndRethrow = (logMsg: string, error: Error, data?: object) => {\n    logger.error(logMsg, { ...data, error });\n    throw error;\n};\n\nfunction attachCaFileAndProxyToRequest(request: superagent.SuperAgentRequest, skipProxy = false) {\n    const caFile = getCaFile();\n    if (caFile) {\n        request.ca(caFile);\n    }\n\n    const proxy = !skipProxy && getProxy();\n    if (proxy) {\n        request.proxy(proxy);\n    }\n}\n// #endregion\n\nexport const deleteReq = wrapWithMonitoring(async (url: string, body?: object, headers?: object, timeout?: number) => {\n    try {\n        const res = await _delete(url, body, headers, timeout);\n        if (res.type === 'text/plain') {\n            return res.text;\n        }\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to delete request', err, { url });\n    }\n});\n\nasync function _delete(url: string, body: object = {}, headers: object = {}, timeout = DEFAULT_REQUEST_TIMEOUT) {\n    const request = superagent\n        .delete(url)\n        .send(body)\n        .timeout(timeout)\n        .set(headers);\n\n    attachCaFileAndProxyToRequest(request);\n\n    return await request;\n}\nexport const deleteFullRes = wrapWithMonitoring(_delete);\n\nexport const post = wrapWithMonitoring(async ({ url, body, headers, timeout, retry }: { url: string; body: object; headers?: { [key: string]: any }; timeout?: number; retry?: number }) => {\n    try {\n        const res = await _post(url, body, headers, timeout, retry);\n        if (res.type === 'text/plain') {\n            return res.text;\n        }\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to post request', err, { url });\n    }\n});\n\nasync function _post(url: string, body: object, headers: object = {}, timeout = DEFAULT_REQUEST_TIMEOUT, retry = 0) {\n    const request = superagent\n        .post(url)\n        .send(body)\n        .timeout(timeout)\n        .set(headers);\n\n    attachCaFileAndProxyToRequest(request);\n\n    if (retry) {\n        request.retry(retry);\n    }\n\n    try {\n        return await request;\n    } catch (err) {\n        err.url = url;\n        err.originalRequestTimeout = timeout;\n        err.additionalSetHeaders = headers;\n        throw err;\n    }\n}\nexport const postFullRes = wrapWithMonitoring(_post);\n\nexport interface Files { [fieldName: string]: { buffer: Buffer; fileName: string } }\nexport const postForm = wrapWithMonitoring(async (url: string, fields: { [fieldName: string]: any }, files: Files, headers: object = {}, timeout: number = DEFAULT_REQUEST_TIMEOUT) => {\n    const request = superagent\n        .post(url)\n        .type('form')\n        .timeout(timeout)\n        .set(headers);\n\n    request.field(fields);\n\n    Object.keys(files).forEach(file => {\n        request.attach(file, files[file].buffer, files[file].fileName);\n    });\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        const res = await request;\n        if (res.type === 'text/plain') {\n            return res.text;\n        }\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to post request', err, { url });\n    }\n});\n\nasync function _get(url: string, query?: string | object, headers: object = {}, timeout = DEFAULT_REQUEST_TIMEOUT, { isBinary = false, skipProxy = false } = {}) {\n    const request = superagent\n        .get(url)\n        .query(query || {})\n        .timeout(timeout)\n        .set(headers);\n\n    if (isBinary) {\n        request.buffer(true);\n    }\n\n    attachCaFileAndProxyToRequest(request, skipProxy);\n\n    return await request;\n}\n\nexport const getText = wrapWithMonitoring(async (url: string, query?: string | object, headers?: object) => {\n    try {\n        const res = await _get(url, query, headers);\n        return res.text;\n    } catch (err) {\n        return logErrorAndRethrow('failed to getText request', err, { url, query });\n    }\n});\n\nexport const get = wrapWithMonitoring(async (url: string, query?: string | object, headers?: object, timeout?: number, options?: { isBinary?: boolean; skipProxy?: boolean }) => {\n    try {\n        const res = await _get(url, query, headers, timeout, options);\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to get request', err, { url, query });\n    }\n});\n\nexport const getFullRes = wrapWithMonitoring((url: string, query?: string | object, headers?: object, timeout?: number) => _get(url, query, headers, timeout));\n\nexport const head = wrapWithMonitoring(async (url: string) => {\n    const request = superagent\n        .head(url)\n        .timeout(DEFAULT_REQUEST_TIMEOUT);\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        return await request;\n    } catch (err) {\n        return logErrorAndRethrow('failed to head request', err, { url });\n    }\n});\n\nexport const put = wrapWithMonitoring(async (url: string, body?: object, headers: object = {}, timeout: number = DEFAULT_REQUEST_TIMEOUT) => {\n    const request = superagent\n        .put(url)\n        .send(body)\n        .timeout(timeout)\n        .set(headers);\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        const res = await request;\n        return res.body;\n    } catch (err) {\n        return logErrorAndRethrow('failed to put request', err, { url });\n    }\n});\n\nexport const download = wrapWithMonitoring(async (url: string) => {\n    logger.info('start to download', { url });\n\n    const request = superagent\n        .get(url)\n        .timeout(DOWNLOAD_REQUEST_TIMEOUT)\n        .buffer(true)\n        .parse(binaryParser);\n\n    attachCaFileAndProxyToRequest(request);\n\n    try {\n        const res = await request as Omit<superagent.Response, 'body'> & { body: Buffer };\n        logger.info('finished to download', { url });\n        return res;\n    } catch (err) {\n        return logErrorAndRethrow('failed to download', err, { url });\n    }\n});\n\nexport const isNetworkHealthy = wrapWithMonitoring.isNetworkHealthy;\nexport const didNetworkConnectivityTestFail = wrapWithMonitoring.didNetworkConnectivityTestFail;\n", "import * as path from 'path';\nimport * as stringUtils from './stringUtils';\nimport * as packageJson from '../../package.json';\nimport pRetry from 'p-retry';\nimport decompress from 'decompress';\nimport { promises as fsPromises, createReadStream, createWriteStream, statSync } from 'fs';\nimport type { PathLike } from 'fs';\n\nconst DOWNLOAD_RETRY = 3;\n\nexport function getCliLocation() {\n    let cliLocation;\n    if (!require.main) { // we're in a REPL\n        return process.cwd(); // fall back on the current working directory\n    }\n    if (require.main.filename.includes('/src') || require.main.filename.includes('\\\\src') || process.env.IS_UNIT_TEST) {\n        cliLocation = path.resolve(__dirname, '../../');\n    } else {\n        cliLocation = path.resolve(__dirname, !global.meta?.IS_LOCAL ? '' : '../');\n    }\n\n    return cliLocation;\n}\n\nexport const download = async (url: string) => {\n    // Lazily required to avoid circular dep (httpRequest requires logger which requires the utils to get the runnerVersion)\n    const httpRequest = await import('../commons/httpRequest');\n    return pRetry(() => httpRequest.download(url), { retries: DOWNLOAD_RETRY });\n};\n\nexport const downloadAndSave = async (url: string, saveToLocation: PathLike) => {\n    const res = await download(url);\n    return fsPromises.writeFile(saveToLocation, res.body);\n};\n\nexport const copy = async (readFile: PathLike, destFile: PathLike) => new Promise<void>((resolve, reject) => {\n    try {\n        // TODO: can this use fsPromises.copyFile?\n        const file = createWriteStream(destFile);\n        createReadStream(readFile).pipe(file);\n        file.on('finish', () => {\n            // @ts-expect-error file.close allows sending in a callback. NodeJS has bad typing :(\n            file.close(() => resolve());\n        });\n    } catch (err) {\n        reject(err);\n    }\n});\n\nexport function getSourcePath(location: string, fileName?: string) {\n    if (stringUtils.isURL(location)) {\n        return fileName || path.join(process.cwd(), location.replace(/^.*[\\\\/]/, ''));\n    }\n\n    return fileName || path.basename(location);\n}\n\nexport const getSource = async (location: string, fileName: string) => {\n    const destFile = getSourcePath(location, fileName);\n    if (stringUtils.isURL(location)) {\n        return downloadAndSave(location, destFile);\n    }\n\n    return copy(location, destFile);\n};\n\nexport const getSourceAsBuffer = async (location: string) => {\n    if (stringUtils.isURL(location)) {\n        return download(location);\n    }\n    return fsPromises.readFile(location);\n};\n\nexport const unzipFile = async (srcZipFile: string, destZipPath: string) => await decompress(srcZipFile, destZipPath);\n\nexport const getLocalFileSizeInMB = (fileLocation: PathLike) => {\n    const stats = statSync(fileLocation);\n    const fileSizeInBytes = stats.size;\n    return fileSizeInBytes / 1_000_000;\n};\n\nexport function getRunnerVersion() {\n    try {\n        // Lazy require this, since the version is set after the bundle was built\n        const pack = require(`${__dirname}${!global.meta?.IS_LOCAL ? '' : '..'}/package.json`) as typeof import('../../package.json'); // eslint-disable-line import/no-dynamic-require\n        return pack.version;\n    } catch (err) {\n        return '';\n    }\n}\n\nexport function getEnginesVersion() {\n    try {\n        return packageJson.engines.node;\n    } catch (err) {\n        return '';\n    }\n}\n\n/**\n * @param src Source directory to copy its contents\n * @param dest Target directory to copy to\n * @param createParentDirs Whether to create parent directories\n */\nexport async function copyDir(src: string, dest: string, createParentDirs = true) {\n    const dirents = await fsPromises.readdir(src, { withFileTypes: true });\n    await fsPromises.mkdir(dest, { recursive: createParentDirs });\n    for (const item of dirents) {\n        const srcPath = path.join(src, item.name);\n        const destPath = path.join(dest, item.name);\n        if (item.isDirectory()) {\n            await copyDir(srcPath, destPath);\n        } else {\n            await fsPromises.copyFile(srcPath, destPath);\n        }\n    }\n}\n\nexport async function doesPathExist(_path: string) {\n    try {\n        await fsPromises.access(_path);\n        return true;\n    } catch (err) {\n        if (err.code === 'ENOENT') {\n            return false;\n        }\n        // no permissions to check\n        throw err;\n    }\n}\n", "export const timeoutMessages = {\n    GET_BROWSER_TIMEOUT_MSG: 'get-browser-timeout',\n    TEST_START_TIMEOUT_MSG: 'test-start-timeout',\n    TEST_COMPLETE_TIMEOUT_MSG: 'test-complete-timeout',\n} as const;\nexport const testRunStatus = {\n    COMPLETED: 'completed',\n    RUNNING: 'running',\n} as const;\n\nexport const runnerStatus = {\n    RUNNING: 'RUNNING',\n    SKIPPED: 'SKIPPED',\n    FINISHED: 'FINISHED',\n    ABORTED: 'ABORTED',\n    QUEUED: 'QUEUED',\n    TIMEOUT: 'TIMEOUT',\n} as const;\nexport const runnerTestStatus = {\n    PASSED: 'PASSED',\n    FAILED: 'FAILED',\n    ABORTED: 'ABORTED',\n    SKIPPED: 'SKIPPED',\n    QUEUED: 'QUEUED',\n    PENDING: 'PENDING',\n} as const;\nexport const testStatus = {\n    DRAFT: 'draft',\n    EVALUATING: 'evaluating',\n    ACTIVE: 'active',\n    QUARANTINE: 'quarantine',\n} as const;\nexport const gridMessages = {\n    NOT_FOUND: 'The specified grid is not available',\n    UNKNOWN: \"Test couldn't get browser - unknown error\",\n} as const;\nexport const mobileWeb = {\n    MOBILE_WEB_REMOTE_RUN_HEADER_SPACING: 50,\n} as const;\nexport const test = {\n    HIDDEN_PARAM: 'TST_HIDDEN_PARAM',\n} as const;\nexport const socketEventTypes = {\n    TEST_RESULT_CREATED: 'test-result-created',\n    TEST_RESULT_UPDATED: 'test-result-updated',\n    REMOTE_STEP_SAVED: 'remote-step-saved',\n} as const;\nexport const CLI_MODE = {\n    EXTENSION: 'extension',\n    SELENIUM: 'selenium',\n    APPIUM: 'appium',\n} as const;\nexport const sessionType = {\n    CODELESS: 'codeless',\n    CODEFUL: 'codeful',\n} as const;\nexport const gridTypes = {\n    TESTIM_ENTERPRISE: 'testimEnterprise',\n    TESTIM: 'testim',\n    LAMBDATEST: 'testimLambdaTest',\n    DEVICE_FARM: 'testimDF',\n    HYBRID: 'testimHybrid',\n    BROWSERSTACK: 'browserstack',\n    SAUCELABS: 'saucelabs',\n    TESTIM_HEADSPIN: 'testimHeadspin',\n} as const;\nexport const stepResult = {\n    SETUP_TIMEOUT: 'setup-timeout',\n    NETWORK_ERROR: 'network-error',\n    GRID_ERROR: 'grid-error',\n    SELENIUM_ERROR: 'selenium-error',\n    BROWSER_CLOSED: 'browser-closed',\n} as const;\n\nexport const MOBILE_APP_SOURCE = {\n    FROM_LIBRARY: 'from-library',\n    FROM_DEVICE: 'from-device',\n} as const;\n", "import { sessionType, testStatus as testStatusConst } from '../commons/constants';\nimport type {\n    Options,\n    InitModeOptions,\n    LoginModeOptions,\n    TunnelOptions,\n    RunnerOptions,\n    AgentModeOptions,\n    InstallLazyDepsOptions,\n} from '../runOptions';\n\nexport function getSessionType(options: RunnerOptions) {\n    return options.files.length > 0 ? sessionType.CODEFUL : sessionType.CODELESS;\n}\n\nexport function getUniqBrowsers(options: RunnerOptions, testList: { runConfig?: { browserValue: string } }[]) {\n    if ((options.testConfigNames?.length || options.testConfigIds?.length || options.testPlan.length || options.testPlanIds.length) && !options.browser) {\n        return [...new Set(testList.map(t => t.runConfig?.browserValue))];\n    }\n    return [options.browser?.toLowerCase()];\n}\n\nexport const hasTestPlanFlag = (options: Partial<Pick<RunnerOptions, 'testPlan' | 'testPlanIds'>>) => Boolean(options.testPlan?.length || options.testPlanIds?.length);\n\nexport const isRemoteRun = (options: RunnerOptions) => Boolean(options.resultId && options.source === 'remote-run');\n\nexport const isQuarantineAndNotRemoteRun = (test: { testStatus?: string }, options: RunnerOptions) =>\n    test.testStatus === testStatusConst.QUARANTINE &&\n    !isRemoteRun(options) &&\n    !options.runQuarantinedTests;\n\nexport function getArgsOnRemoteRunFailure() {\n    const { argv: args } = process;\n    if (!args.includes('--remoteRunId')) {\n        return undefined;\n    }\n    return {\n        remoteRunId: args[args.indexOf('--remoteRunId') + 1],\n        projectId: args[args.indexOf('--project') + 1],\n        token: args[args.indexOf('--token') + 1],\n    };\n}\n\nexport const isInitCodimMode = (options: Options): options is InitModeOptions => Boolean((options as any).initCodimMode);\n\nexport const isLoginMode = (options: Options): options is LoginModeOptions => Boolean((options as any).loginMode);\n\nexport const isTunnelOnlyMode = (options: Options): options is TunnelOptions => Boolean((options as any).tunnelOnlyMode);\n\nexport const isCreatePrefetchedDataMode = (options: Options): options is RunnerOptions & { createPrefechedData: true } => Boolean((options as any).createPrefechedData);\n\nexport const isInstallLazyDepsMode = (options: Options): options is InstallLazyDepsOptions => Boolean((options as any).installLazyDepsMode);\n\nexport const isAgentMode = (options: Options): options is AgentModeOptions => Boolean((options as any).agentMode);\n\nexport const replaceArgsWithNoDashes = (args: string[], nonDashFlags: Set<string>) => {\n    args.forEach((arg, i) => {\n        if (nonDashFlags.has(arg)) {\n            args[i] = `--${arg}`;\n        }\n    });\n};\n", "import moment from 'moment';\n\nexport function getDuration(ms: moment.DurationInputArg1) {\n    const duration = moment.duration(ms);\n    return `${duration.hours()}:${duration.minutes()}:${duration.seconds()}.${duration.milliseconds()}`;\n}\n\nexport function getDurationSec(ms: moment.DurationInputArg1) {\n    return moment.duration(ms).asSeconds();\n}\n", "import type { RunnerOptions } from '../runOptions';\nimport type { AndroidApp, iOSApp } from 'clickim/src/background/mobile/types';\nimport type { RawMobileAppVersion } from 'services/src/commons/mongo/models/mobileAppVersion';\n\nexport const isAppFromDevice = (nativeApp?: RawMobileAppVersion | iOSApp | AndroidApp) => {\n    if (!nativeApp || 'fileName' in nativeApp) {\n        return false;\n    }\n    return true;\n};\n\nexport const isAppForVirtualIosDevice = (nativeApp?: RawMobileAppVersion | iOSApp | AndroidApp) => {\n    if (nativeApp && 'fileName' in nativeApp) {\n        return nativeApp.fileName?.endsWith('.app');\n    }\n    return false;\n};\n//works only if projectData is loaded\nexport const isMobileProject = (options: RunnerOptions) => options.projectData?.type === 'ios' || options.projectData?.type === 'android';\n", "import * as os from 'os';\nimport * as _ from 'lodash';\nimport * as path from 'path';\nimport { W3C_ELEMENT_ID } from '../player/constants';\nimport type { RunnerOptions } from 'src/runOptions';\n\n\nconst HOMEDIR = os.homedir();\nexport const TESTIM_BROWSER_DIR = path.join(HOMEDIR, '.testim-browser-profile');\n\nconst OSS = [\n    { osName: 'Linux', bs: { os: 'LINUX' }, sl: { platform: 'Linux' } },\n    { osName: 'Windows 10', bs: { os: 'WINDOWS', os_version: '10' }, sl: { platform: 'Windows 10' } },\n    { osName: 'Windows 8', bs: { os: 'WINDOWS', os_version: '8' }, sl: { platform: 'Windows 8' } },\n    { osName: 'Windows 8.1', bs: { os: 'WINDOWS', os_version: '8.1' }, sl: { platform: 'Windows 8.1' } },\n    { osName: 'Windows 7', bs: { os: 'WINDOWS', os_version: '7' }, sl: { platform: 'Windows 7' } },\n    { osName: 'Windows XP', bs: { os: 'WINDOWS', os_version: 'XP' }, sl: { platform: 'Windows XP' } },\n    { osName: 'macOS Big Sur', bs: { os: 'OS X', os_version: 'Big Sur', safari_version: '14' }, sl: { platform: 'macOS 11', safari_version: '14' } },\n    { osName: 'macOS Catalina', bs: { os: 'OS X', os_version: 'Catalina', safari_version: '13' }, sl: { platform: 'macOS 10.15', safari_version: '13' } },\n    { osName: 'macOS Mojave', bs: { os: 'OS X', os_version: 'Mojave', safari_version: '12' }, sl: { platform: 'macOS 10.14', safari_version: '12' } },\n    { osName: 'macOS High Sierra', bs: { os: 'OS X', os_version: 'High Sierra', safari_version: '11' }, sl: { platform: 'macOS 10.13', safari_version: '11' } },\n    { osName: 'macOS Sierra', bs: { os: 'OS X', os_version: 'Sierra', safari_version: '10' }, sl: { platform: 'macOS 10.12', safari_version: '10.0' } },\n    { osName: 'OS X El Capitan', bs: { os: 'OS X', os_version: 'El Capitan', safari_version: '9.1' }, sl: { platform: 'OS X 10.11', safari_version: '9.0' } },\n    { osName: 'OS X Yosemite', bs: { os: 'OS X', os_version: 'Yosemite', safari_version: '8' }, sl: { platform: 'OS X 10.10', safari_version: '8.0' } },\n    { osName: 'OS X Mavericks', bs: { os: 'OS X', os_version: 'Mavericks', safari_version: '7.1' }, sl: { platform: 'OS X 10.9', safari_version: '7.0' } },\n    { osName: 'OS X Mountain Lion', bs: { os: 'OS X', os_version: 'Mountain Lion', safari_version: '6.2' }, sl: { platform: 'OS X 10.8', safari_version: '6.0' } },\n    { osName: 'OS X Lion', bs: { os: 'OS X', os_version: 'Lion', safari_version: '6' }, sl: {} },\n    { osName: 'OS X Snow Leopard', bs: { os: 'OS X', os_version: 'Snow Leopard', safari_version: '5.1' }, sl: {} },\n\n    { osName: 'iOS', bs: { platform: 'MAC' }, sl: { platformName: 'iOS', appiumVersion: '1.6.4' } },\n    { osName: 'Android', bs: { platform: 'ANDROID' }, sl: { platformName: 'Android', appiumVersion: '1.6.4' } },\n];\n\nconst BROWSERS = [\n    { browserName: 'Chrome', bs: { browser: 'Chrome', browser_version: '94' }, sl: { browserName: 'chrome', version: '94.0' }, browserValue: 'chrome' },\n    { browserName: 'Firefox', bs: { browser: 'Firefox', browser_version: '89' }, sl: { browserName: 'firefox', version: '89.0' }, browserValue: 'firefox' },\n    { browserName: 'Safari', bs: { browser: 'Safari' }, sl: { browserName: 'safari' }, browserValue: 'safari' },\n    { browserName: 'Edge', bs: { browser: 'Edge', browser_version: '18' }, sl: { browserName: 'MicrosoftEdge', version: '18.17763' }, browserValue: 'edge', eol: true },\n    // eslint-disable-next-line max-len\n    { browserName: 'Edge Chromium', bs: { browser: 'Edge', browser_version: '94' }, sl: { browserName: 'MicrosoftEdge', version: '94' }, synonyms: ['edge-chromium'], browserValue: 'edge-chromium', seleniumName: 'MicrosoftEdge' },\n    // eslint-disable-next-line max-len\n    { browserName: 'Internet Explorer 11', bs: { browser: 'IE', browser_version: '11' }, sl: { browserName: 'internet explorer', version: '11.0' }, synonyms: ['ie11'], browserValue: 'ie11', eol: true },\n    { browserName: 'Browser', bs: {}, sl: { browserName: 'Browser' }, browserValue: 'browser' },\n    { browserName: 'Android', bs: { browserName: 'android' }, sl: {}, browserValue: 'android' },\n    { browserName: 'iPad', bs: { browserName: 'iPad' }, sl: {}, browserValue: 'ipad' },\n    { browserName: 'iPhone', bs: { browserName: 'iPhone' }, sl: {}, browserValue: 'iphone' },\n];\n\nexport function getBrowserInfo(browserValue: string) {\n    browserValue = browserValue.toLowerCase();\n    return BROWSERS.find((b) => b.browserValue === browserValue);\n}\n\nexport function getRunConfigByBrowserName(browser: string, saucelabs: RunnerOptions['saucelabs'] | undefined, browserstack: RunnerOptions['browserstack'] | undefined) {\n    browser = browser.toLowerCase();\n    // @ts-expect-error the `.include(b.synonyms)` looks like a mistake, it cant be true\n    const selectedBrowser = BROWSERS.find(b => b.browserName.toLowerCase() === browser || browser.includes(b.synonyms)) || BROWSERS[0];\n\n    // BS and SL do not support Linux for newer browser, so use Windows instead.\n    let selectedOS = OSS.find(x => x.osName === 'Windows 10');\n    if (saucelabs) {\n        if (saucelabs.platform) {\n            selectedOS = OSS.find(o => o.sl.platform === saucelabs.platform);\n        } else if (saucelabs.platformName) {\n            selectedOS = OSS.find(o => o.sl.platformName === saucelabs.platformName);\n        }\n    }\n    if (browserstack) {\n        if (browserstack.os_version) {\n            selectedOS = OSS.find(o => o.bs.os_version === browserstack.os_version);\n        } else if (browserstack.platform) {\n            selectedOS = OSS.find(o => o.bs.platform === browserstack.platform);\n        }\n    }\n\n    return _.merge(selectedBrowser, selectedOS);\n}\n\nexport function getEnvironmentGitBranch() {\n    return process.env.GIT_BRANCH || process.env.CIRCLE_BRANCH || process.env.TRAVIS_BRANCH || process.env.CI_BRANCH;\n}\n\nexport function removePropertyFromObject(obj: object, propName: string, cmpFunction: (value: any, other: any) => boolean) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n            if (cmpFunction(prop as any, propName)) {\n                delete obj[prop as keyof typeof obj];\n            } else if (typeof obj[prop as keyof typeof obj] === 'object') {\n                removePropertyFromObject(obj[prop as keyof typeof obj], propName, cmpFunction);\n            }\n        }\n    }\n}\n\nexport function extractElementId(element: { [W3C_ELEMENT_ID]: string } | { ELEMENT: string }) {\n    return (element as any).ELEMENT || (element as any)[W3C_ELEMENT_ID];\n}\n\nexport function getPlanType(plan: { expireAt?: number; expireAT?: number; plan?: string }) {\n    plan ||= {};\n    const now = Date.now();\n    const expirationDate = plan.expireAt || plan.expireAT;\n\n    if (plan.plan !== 'free') {\n        return 'pro';\n    }\n    if (expirationDate) {\n        return expirationDate < now ? 'free' : 'trial';\n    }\n    return 'free';\n}\n\nexport const calcPercentile = (arr: number[], percentile: number) => {\n    if (arr.length === 0) return 0;\n    if (typeof percentile !== 'number') throw new TypeError('p must be a number');\n\n    arr = [...arr].sort((a, b) => a - b);\n\n    if (percentile <= 0) return arr[0];\n    if (percentile >= 100) return arr.at(-1);\n\n    const index = Math.ceil(arr.length * (percentile / 100)) - 1;\n    return arr[index];\n};\n\n// NOTE: This duplicates a function in services (stream-data/result/resultService.js) since we can't share code between packages.\nexport function groupTestsByRetries(testResults: any[] | { [testResultId: string]: any } = []) {\n    return _.chain(testResults)\n        .groupBy((tr: any) => tr.originalTestResultId || tr.resultId)\n        .values()\n        .reduce((all, current) => {\n            if (!current) {\n                return all;\n            }\n            if (current.length === 1) {\n                all.push(current[0]);\n                return all;\n            }\n            const sorted = _.orderBy(current, (tr: any) =>\n                (typeof tr.retryCount === 'number' ? tr.retryCount : 1),\n            );\n            const last = _.chain(sorted).last().cloneDeep().value();\n            if (!last) {\n                return all;\n            }\n            (last as any).retryTestResults = sorted;\n            all.push(last);\n            return all;\n        }, [] as any[])\n        .compact()\n        .value();\n}\n\nexport async function getCdpAddressForHost(browserInstanceHost: string, timeout?: number) {\n    // Lazily required to avoid circular dep (httpRequest requires logger which requires the utils to get the runnerVersion)\n    const httpRequest = await import('../commons/httpRequest');\n    try {\n        interface Response {\n            /** @example \"Chrome/81.0.4044.138\" */\n            Browser: string;\n            /** @example \"1.3\" */\n            'Protocol-Version': string;\n            /** @example \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\" */\n            'User-Agent': string;\n            /** @example \"8.1.307.32\" */\n            'V8-Version': string;\n            /** @example \"537.36 (@8c6c7ba89cc9453625af54f11fd83179e23450fa)\" */\n            'WebKit-Version': string;\n            /** @example \"ws://localhost:58938/devtools/browser/d4290379-ec08-4d03-a41a-ab9d9d4c36ac\" */\n            webSocketDebuggerUrl: string;\n        }\n        const debuggerAddress = await httpRequest.get<Response>(`http://${browserInstanceHost}/json/version`, undefined, undefined, timeout);\n        return debuggerAddress.webSocketDebuggerUrl;\n    } catch (e) {\n        throw new Error('unable to connect to devtools server');\n    }\n}\n\nexport * from './fsUtils';\nexport * from './argsUtils';\nexport * from './timeUtils';\nexport * from './stringUtils';\nexport * from './promiseUtils';\nexport * from './mobileUtils';\n\nexport type ValueOf<T> = T[keyof T];\nexport type AwaitedReturnType<T extends (...args: any) => any> = Awaited<ReturnType<T>>;\n", "{\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"definitions\": {\n        \"request\": {\n            \"type\": \"object\",\n            \"required\": [\"url\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"url\": { \"type\": \"string\" },\n                \"method\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"^GET$|^HEAD$|^POST$|^PUT$|^DELETE$|^CONNECT$|^OPTIONS$|^TRACE$|^PATCH$\"\n                }\n            }\n        },\n        \"header\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"value\"\n            ],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"cookie\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"name\",\n                \"value\"\n            ],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                },\n                \"path\": {\n                    \"type\": \"string\"\n                },\n                \"domain\": {\n                    \"type\": \"string\"\n                },\n                \"expires\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                },\n                \"httpOnly\": {\n                    \"type\": \"boolean\"\n                },\n                \"secure\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"response\": {\n            \"type\": \"object\",\n            \"required\": [\"status\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 100,\n                    \"exclusiveMaximum\": 600\n                },\n                \"headers\": {\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/definitions/header\" }\n                },\n                \"cookies\": {\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"#/definitions/cookie\" }\n                },\n                \"content\": {\n                    \"type\": \"object\",\n                    \"required\": [\"text\"],\n                    \"additionalProperties\": false,\n                    \"properties\": {\n                        \"text\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"redirectResponse\": {\n            \"type\": \"object\",\n            \"required\": [\"redirectUrl\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"redirectUrl\": { \"type\": \"string\" }\n            }\n        },\n        \"passthroughResponse\": {\n            \"type\": \"object\",\n            \"required\": [\"passthrough\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"passthrough\": { \"type\": \"boolean\", \"enum\": [ true ] }\n            }\n        },\n        \"entry\": {\n            \"type\": \"object\",\n            \"required\": [\"request\", \"response\"],\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"request\": { \"$ref\": \"#/definitions/request\" },\n                \"response\": {\n                    \"oneOf\": [\n                        { \"$ref\": \"#/definitions/response\" },\n                        { \"$ref\": \"#/definitions/redirectResponse\" },\n                        { \"$ref\": \"#/definitions/passthroughResponse\" }\n                    ]\n                },\n                \"maxHits\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                }\n            }\n        }\n    },\n    \"type\": \"object\",\n    \"required\": [\"entries\"],\n    \"properties\": {\n        \"version\": { \"type\": \"string\", \"enum\": [\"1.2\", \"1.2.0\"] },\n        \"creator\": { \"type\": \"string\" },\n        \"entries\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/definitions/entry\" }\n        }\n    }\n}\n", "import * as fs from 'fs';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\nimport * as utils from '../utils';\nimport { debounce } from 'lodash';\nimport { getLogger } from './logger';\n\nconst logger = getLogger('local cache');\n\nlet cacheLocation = path.resolve(utils.getCliLocation(), 'testim-cache');\n\nlet encryptKeyResolve: undefined | ((value: string) => void);\nlet encryptAndSaveResolve: (value: { success: boolean; error?: any }) => void;\nlet cacheEnabled = true;\nlet cacheMissAllowed = true;\nlet waitingForSave = false;\n\nlet _encryptAndSavePromise = new Promise<{ success: boolean; error?: any }>(resolve => { encryptAndSaveResolve = resolve; });\nconst _encryptKeyPromise = new Promise<string>(resolve => { encryptKeyResolve = resolve; });\n\n\nconst THREE_HOURS = 1000 * 60 * 60 * 3;\n\nexport const getCacheFileLocation = () => path.resolve(path.resolve(cacheLocation, 'testim.cache'));\n\nasync function getLocalRunnerCache() {\n    try {\n        return await utils.promiseTimeout(\n            fs.promises.readFile(getCacheFileLocation()).then(async buffer => {\n                const key = await _encryptKeyPromise;\n                return decrypt(key, buffer);\n            }),\n            30_000,\n        );\n    } catch {\n        return {};\n    }\n}\n\nlet localRunnerCache = getLocalRunnerCache();\n\n\nconst encryptAndSave = debounce(async (object) => {\n    let error;\n    try {\n        const key = await _encryptKeyPromise;\n        const iv = crypto.randomBytes(16);\n        const objStr = JSON.stringify(object);\n        const keyBuffer = Buffer.from(key);\n        const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.concat([keyBuffer, Buffer.alloc(32)], 32), iv);\n        const result = Buffer.concat([iv, cipher.update(objStr), cipher.final()]);\n        const pathExists = await utils.doesPathExist(cacheLocation);\n        if (!pathExists) {\n            await fs.promises.mkdir(cacheLocation, { recursive: true });\n        }\n        await fs.promises.writeFile(getCacheFileLocation(), result);\n    } catch (err) {\n        logger.error('failed saving cache', { err });\n        error = err;\n    }\n    if (error) {\n        encryptAndSaveResolve({ success: false, error });\n    } else {\n        encryptAndSaveResolve({ success: true });\n    }\n}, 200);\n\nfunction decrypt(key: string, buffer: Buffer) {\n    const iv = buffer.slice(0, 16);\n    const encryptedText = buffer.slice(16);\n    const keyBuffer = Buffer.from(key);\n    const decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.concat([keyBuffer, Buffer.alloc(32)], 32), iv);\n    const decrypted = decipher.update(encryptedText);\n    // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n    return JSON.parse(Buffer.concat([decrypted, decipher.final()]));\n}\n\n/** argument-less memoize for functions with a global cache name} */\nexport function memoize<T>(fn: () => PromiseLike<T>, fnName: string, duration = THREE_HOURS, parameters: any = undefined) {\n    return async () => {\n        if (!cacheEnabled) {\n            return await fn();\n        }\n        const originalFnName = fnName;\n        if (parameters) {\n            fnName += JSON.stringify(parameters);\n        }\n        const cached = await get<T>(fnName);\n        if (cached) {\n            logger.debug('cache hit:', { fnName });\n            return cached;\n        }\n        logger.debug('cache miss:', { fnName });\n        if (!cacheMissAllowed) {\n            throw new Error(`Attempted to rebuild cache for ${originalFnName}. cache miss is not allowed with current run configuration`);\n        }\n        const value = await fn();\n        if (value) {\n            await set(fnName, value, duration);\n        }\n        return value;\n    };\n}\n\nexport async function get<T = any>(key: string) {\n    const obj = await localRunnerCache;\n    const valueExpiry = obj[key];\n    if (!valueExpiry) {\n        return undefined; // not in cache\n    }\n    const { value, expiry } = valueExpiry;\n    if (expiry < Date.now()) {\n        return undefined;\n    }\n    if (!value) {\n        return undefined;\n    }\n    return value as T;\n}\n\nexport async function set(key: string, value: any, ttl: number) {\n    if (waitingForSave) {\n        logger.error('calling set after waitForSave is not allowed', { key, ttl });\n        throw new Error('calling set after waitForSave is not allowed');\n    }\n    try {\n        const obj = await localRunnerCache;\n        obj[key] = { value, expiry: Date.now() + ttl };\n        _encryptAndSavePromise = new Promise(resolve => { encryptAndSaveResolve = resolve; });\n        encryptAndSave(obj);\n    } catch (e) {\n        logger.error('failed updating cache');\n    }\n}\n\nexport async function clear() {\n    const obj = await localRunnerCache;\n    Object.keys(obj).forEach(key => {\n        delete obj[key];\n    });\n}\n\nfunction setEnabled(enabled: boolean) {\n    cacheEnabled = enabled;\n}\n\nfunction _enableCacheMiss(enabled = true) {\n    cacheMissAllowed = enabled;\n}\n\nexport async function waitForSave() {\n    try {\n        waitingForSave = true;\n        return await _encryptAndSavePromise;\n    } finally {\n        waitingForSave = false;\n    }\n}\n\nexport function setCacheLocation(location: string) {\n    cacheLocation = location;\n    localRunnerCache = getLocalRunnerCache();\n}\n\nexport const setEncryptKey = encryptKeyResolve;\nexport const disable = setEnabled.bind(this, false);\nexport const enable = setEnabled.bind(this, true);\nexport const disableCacheMiss = () => _enableCacheMiss(false);\nexport const enableCacheMiss = () => _enableCacheMiss(true);\nexport const isEnabled = function () { return cacheEnabled; };\n", "import * as os from 'os';\nimport { getCliLocation } from '../utils';\n\nexport function additionalLogDetails() {\n    return {\n        cliLocation: getCliLocation(),\n        userInfo: os.userInfo(),\n        platform: os.platform(),\n        release: os.release(),\n    };\n}\n", "/* eslint-disable import/no-dynamic-require */\nimport * as path from 'path';\n\nfunction getMainPath(packageName: string) {\n    try {\n        return path.resolve(\n            path.dirname(require.resolve(`${packageName}/package.json`)),\n            require(`${packageName}/package.json`).main || '',\n        );\n    } catch (err) {\n        // If the package.json declares a export property which doesn't export the package file itself, this will attempt to fallback to the the exported \".\"\n        if (err.code === 'ERR_PACKAGE_PATH_NOT_EXPORTED') {\n            return require.resolve(packageName);\n        }\n        throw err;\n    }\n}\n\n/** Require with statCache issue workaround */\nexport function requireWithFallback(packageName: string) {\n    // Workaround for https://github.com/nodejs/node/issues/31803 statCache\n    const mainPath = getMainPath(packageName);\n\n    return require(mainPath);\n}\n", "import * as fs from 'fs';\nimport * as path from 'path';\nimport * as utils from '../utils';\nimport { promisify } from 'util';\nimport { spawn, exec as _exec } from 'child_process';\nimport { getLogger } from './logger';\nimport { additionalLogDetails } from './logUtils';\nimport { requireWithFallback } from './requireWithFallback';\nimport { NpmPackageError, NpmPermissionsError, TimeoutError } from '../errors';\n\nconst exec = promisify(_exec);\nconst logger = getLogger('cli-service');\n\nexport async function getLatestPackageVersion(packageName: string) {\n    const result = await exec(`npm view ${packageName} version`);\n    return result.stdout.trim();\n}\n\nexport function getPackageIfInstalledLocally(packageName: string) {\n    try {\n        // note: this code fails if require itself throws here\n        // rather than an ENOENT - but since lazy dependencies are all controlled\n        // by us that's probably fine.\n        return requireWithFallback(packageName);\n    } catch (err) {\n        return false;\n    }\n}\n\nexport async function isPackageInstalledInPath(rootPath: string, packageName: string) {\n    try {\n        return await utils.doesPathExist(path.join(rootPath, `./node_modules/${packageName}/package.json`));\n    } catch (error) {\n        return false;\n    }\n}\n\nexport function getLocallyInstalledPackageVersion(rootPath: string, packageName: string): string {\n    // eslint-disable-next-line import/no-dynamic-require\n    return require(path.join(rootPath, `./node_modules/${packageName}/package.json`)).version;\n}\n\nexport async function installPackageLocally(rootPath: string, packageName: string, execOptions?: Parameters<typeof exec>[1]) {\n    function getPathWithMissingPermissions(error: any) {\n        const pathRegex = /EACCES[^']+'(.+)'/;\n        const regexResult = pathRegex.exec(error.stderr);\n        if (regexResult === null) {\n            return false;\n        }\n        return regexResult[1];\n    }\n\n    // https://github.com/npm/arborist/pull/362\n    function npmSevenAndEightMissingPermissions(error: any) {\n        return /The \"to\" argument must be of type string./.exec(error.stderr);\n    }\n\n    // this is here because our shrinkwrap blocks our lazy deps for some reason\n    const oldShrinkwrap = path.join(rootPath, 'npm-shrinkwrap.json');\n    const newShrinkwrap = path.join(rootPath, 'npm-shrinkwrap-dummy.json');\n    let renamed = false;\n    try {\n        try {\n            if (await utils.doesPathExist(oldShrinkwrap)) {\n                await fs.promises.rename(oldShrinkwrap, newShrinkwrap);\n                renamed = true;\n            }\n        } catch (err) {\n            // ignore error\n        }\n        return await exec(`npm i ${packageName} --no-save --no-prune --prefer-offline --no-audit --progress=false`, { ...execOptions, cwd: rootPath }).catch(err => {\n            const pathWithMissingPermissions = getPathWithMissingPermissions(err);\n            const npmEightMissingPermissions = npmSevenAndEightMissingPermissions(err);\n            if (pathWithMissingPermissions || npmEightMissingPermissions) {\n                logger.info('Failed to install package due to insufficient write access', {\n                    ...additionalLogDetails(),\n                    package: packageName,\n                    path: pathWithMissingPermissions || rootPath,\n                });\n                // eslint-disable-next-line no-console\n                console.error(`\n\nTestim failed installing the package ${packageName} due to insufficient permissions.\nThis is probably due to an installation of @testim/testim-cli with sudo, and running it without sudo.\nTestim had missing write access to ${pathWithMissingPermissions || rootPath}\n\n`);\n                throw new NpmPermissionsError(pathWithMissingPermissions || rootPath);\n            }\n            throw err;\n        });\n    } finally {\n        if (renamed) {\n            try {\n                await fs.promises.rename(newShrinkwrap, oldShrinkwrap);\n            } catch (err) {\n                // ignore error\n            }\n        }\n    }\n}\n\nconst localNpmLocation = path.resolve(require.resolve('npm').replace('index.js', ''), 'bin', 'npm-cli.js');\n\nexport function installPackages(prefix: string, packageNames: string[], proxyUri: string | undefined, timeoutMs: number) {\n    return new Promise<string>((resolve, reject) => {\n        const proxyFlag = proxyUri ? ['--proxy', proxyUri] : [];\n\n        const envVars = proxyUri ? { env: Object.assign(process.env, { HTTP_PROXY: proxyUri, HTTPS_PROXY: proxyUri }) } : {};\n\n        let stdout = '';\n        let stderr = '';\n\n        const ops = '--no-save --no-package-lock --no-prune --prefer-offline --no-audit --progress=false'.split(' ');\n        const npmInstall = spawn('node', [localNpmLocation, 'i', '--prefix', prefix, ...ops, ...packageNames, ...proxyFlag], envVars);\n        npmInstall.stderr.pipe(process.stderr);\n        npmInstall.stdout.pipe(process.stdout);\n\n        npmInstall.stdout.on('data', (data) => {\n            stdout += data;\n        });\n\n        npmInstall.stderr.on('data', (data) => {\n            stderr += data;\n        });\n\n        npmInstall.on('close', (code) => {\n            if (code) {\n                let errorString;\n                try {\n                    const packageVersion = /npm ERR! 404 {2}'(.+)' is not in the npm registry/gm.exec(stderr)?.[1];\n                    const packageName = packageVersion?.split('@')[0];\n                    errorString = `404 Not Found - GET https://registry.npmjs.org/${packageName} - Not found`;\n                } catch (err) {\n                    errorString = `Npm Install closed with exit code ${code}\\n stdout: ${stdout} stderr: ${stderr}`;\n                }\n\n                logger.debug(`Npm Install closed with exit code ${code}`, { message: errorString });\n\n                reject(new NpmPackageError(errorString));\n            } else {\n                resolve(stdout);\n            }\n        });\n\n        setTimeout(() => {\n            try {\n                npmInstall.kill();\n            } finally {\n                reject(new TimeoutError());\n            }\n        }, timeoutMs);\n    });\n}\n", "import fkill from 'fkill';\nimport pRetry from 'p-retry';\nimport * as npmWrapper from './npmWrapper';\nimport * as httpRequest from './httpRequest';\nimport { getCliLocation } from '../utils';\nimport { requireWithFallback } from './requireWithFallback';\n\nconst PACKAGE_NAME = 'chromedriver';\nconst DRIVER_PORT = 9515;\nconst DRIVER_BASE_URL = `http://localhost:${DRIVER_PORT}/wd/hub`;\nconst DEFAULT_DRIVER_ARGS = [\n    // webdriverio expects a wd/hub (selenium-server like server endpoint)\n    '--url-base=/wd/hub',\n    // don't complain about driver version\n    '--disable-build-check',\n    // allow any ip to connect chrome driver\n    '--whitelisted-ips=0.0.0.0',\n    '--log-level=OFF', // instead we could try to log it somehow or at least have a flag to enable this\n];\n\n// [NOTE] This is a \"smart installation\":\n// By default chromedriver package, when installed, will search for an existing binary in the configured temp directory.\n// If found, and it is the correct version, it will simply copy it to your node_modules directory, and if not it will download the newer version.\nexport const install = async () => {\n    await npmWrapper.installPackageLocally(getCliLocation(), `${PACKAGE_NAME} --detect_chromedriver_version`);\n};\n\nexport const start = async () => {\n    // remove --inspect before starting chromedriver\n    process.env.NODE_OPTIONS = '';\n\n    // kill any localhost running chromedriver instance\n    await fkill(`:${DRIVER_PORT}`, { silent: true });\n\n    const chromedriver = requireWithFallback(PACKAGE_NAME);\n    await chromedriver.start(DEFAULT_DRIVER_ARGS, true);\n};\n\nexport const isReady = async ({ chromeBinaryLocation }: { chromeBinaryLocation?: string }) => {\n    // 100 attempts, every 30ms\n    await pRetry(async () => {\n        const statusResponse = await httpRequest.get(`${DRIVER_BASE_URL}/status`);\n        if (!statusResponse?.value?.ready) {\n            throw new Error('status failed');\n        }\n\n        const chromeOptions = {\n            ...(chromeBinaryLocation && { binary: chromeBinaryLocation }),\n        };\n        const sessionResponse = await httpRequest.post({\n            url: `${DRIVER_BASE_URL}/session`,\n            body: { desiredCapabilities: { browserName: 'chrome', chromeOptions } },\n            headers: { 'Content-Type': 'application/json' },\n        });\n        if (!sessionResponse || sessionResponse.status !== 0 || !sessionResponse.sessionId) {\n            throw new Error('create session failed');\n        }\n        await httpRequest.deleteReq(`${DRIVER_BASE_URL}/session/${sessionResponse.sessionId}`);\n    }, { retries: 99, factor: 1, minTimeout: 30 });\n};\n", "import ms from 'ms';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as config from './config';\nimport * as localRunnerCache from './runnerFileCache';\nimport { serializeError } from 'serialize-error';\nimport { getLogger } from './logger';\nimport { additionalLogDetails } from './logUtils';\nimport { ArgError, NpmPermissionsError } from '../errors';\nimport {\n    getCliLocation,\n    isURL,\n    downloadAndSave,\n    getSource,\n    getLocalFileSizeInMB,\n    download,\n    unzipFile,\n    getSourcePath,\n    promiseMap,\n} from '../utils';\n\nconst logger = getLogger('prepare runner and testim start');\nconst MSEC_IN_HALF_DAY = ms('0.5 day');\nconst MAX_CUSTOM_EXT_SIZE_MB = 16;\nconst MAX_CUSTOM_SIZE_ERROR_MSG = `The size of the custom extension is more than ${MAX_CUSTOM_EXT_SIZE_MB}MB`;\n\n\nexport async function prepareCustomExtension(location: string, unlimitedSize = false) {\n    if (!location) {\n        return undefined;\n    }\n\n    if (isURL(location)) {\n        const destFile = path.join(process.cwd(), location.replace(/^.*[\\\\/]/, ''));\n        const contentLength = await getRemoteFileSizeInMB(location);\n        if (contentLength > MAX_CUSTOM_EXT_SIZE_MB && !unlimitedSize) {\n            throw new ArgError(MAX_CUSTOM_SIZE_ERROR_MSG);\n        }\n        await downloadAndSave(location, destFile);\n        return destFile;\n    }\n\n    const destFile = path.resolve(location);\n    if (!fs.existsSync(destFile)) {\n        throw new ArgError(`Failed to find custom extension in location: ${destFile}`);\n    }\n    const fileSize = getLocalFileSizeInMB(destFile);\n    if (fileSize > MAX_CUSTOM_EXT_SIZE_MB && !unlimitedSize) {\n        throw new ArgError(MAX_CUSTOM_SIZE_ERROR_MSG);\n    }\n    return destFile;\n}\n\nasync function getRemoteFileSizeInMB(url: string) {\n    const httpRequest = require('./httpRequest');\n    try {\n        const res = await httpRequest.head(url);\n        const contentLengthHeader = res.headers['content-length'];\n        const contentLengthBytes = contentLengthHeader ? parseInt(contentLengthHeader, 10) : 0;\n        return contentLengthBytes / 1000000;\n    } catch (err) {\n        logger.warn('failed to download custom extension', { err });\n        throw new ArgError(`Failed to download custom extension from location: ${url}`);\n    }\n}\n\nexport function prepareExtension(locations: string[]) {\n    logger.info('prepare extension', { locations });\n\n    const fullLocations = locations.map(location => ({ location, path: getSourcePath(location) }));\n    return localRunnerCache.memoize(\n        () => promiseMap(fullLocations, ({ location, path: _path }) => getSource(location, _path)),\n        'prepareExtension',\n        MSEC_IN_HALF_DAY,\n        fullLocations,\n    )();\n}\n\nexport async function prepareChromeDriver(userDetails: object = {}, driverOptions: { chromeBinaryLocation?: string } = {}, skipIsReadyCheck = false) {\n    const ora = require('ora') as typeof import('ora');\n    const spinner = ora('Starting Driver').start();\n    const chromedriverWrapper = await import('./chromedriverWrapper');\n\n    try {\n        await chromedriverWrapper.install();\n        await chromedriverWrapper.start();\n        if (!skipIsReadyCheck) {\n            await chromedriverWrapper.isReady(driverOptions);\n        }\n        spinner.succeed('Chrome Driver initiated successfully');\n    } catch (error) {\n        const errorMsg = 'Failed to initiate Chrome Driver';\n\n        if (!(error instanceof NpmPermissionsError)) { //NpmPermissionsError was printed and logged already\n            logger.error(errorMsg, {\n                ...userDetails,\n                ...additionalLogDetails(),\n                error: serializeError(error),\n            });\n            // eslint-disable-next-line no-console\n            console.log(`\n1. If you don't have Chrome, please install it from https://www.google.com/chrome.\n2. If Chrome is installed, please verify it's binary directory:\n    - installed where chromedriver expects it (see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver#requirements).\n    - exists in your PATH environment variables.\n3. Try adding --chrome-binary-location flag to Testim CLI specifying the exact location of chrome binary in your computer (e.g on Windows \"C:/Program Files/Google/Chrome/Application/chrome.exe\").\n4. You can always use a standalone Selenium grid and providing it's details with the --host and --port flags (see https://www.npmjs.com/package/selenium-standalone)`);\n        }\n\n        spinner.fail(errorMsg);\n        throw error;\n    }\n}\n\nasync function getPlayerVersion() {\n    const url = `${config.BLOB_URL}/extension/sessionPlayer_LATEST_RELEASE`;\n    const res = await download(url);\n    return res.body.toString('utf8');\n}\n\nasync function getPlayerLocation(location: string, canary?: boolean) {\n    if (!isURL(location) || (isURL(location) && canary) || config.IS_ON_PREM) {\n        return location;\n    }\n\n    const ver = await getPlayerVersion();\n    return `${location}-${ver}`;\n}\n\nexport function getSessionPlayerFolder() {\n    const cliLocation = getCliLocation();\n\n    return path.resolve(cliLocation, 'testim-bin');\n}\n\nfunction getPlayerDestination() {\n    const testimAppData = getSessionPlayerFolder();\n\n    const playerDestination = path.resolve(testimAppData, 'sessionPlayer.zip');\n\n    return playerDestination;\n}\n\nasync function downloadAndUnzip(loc: string, playerFileName: string, isRetry = false): Promise<Awaited<ReturnType<typeof unzipFile>>> {\n    try {\n        await getSource(loc, playerFileName);\n        return await unzipFile(playerFileName, getSessionPlayerFolder());\n    } catch (err) {\n        if (isRetry) {\n            throw err;\n        }\n        return await downloadAndUnzip(loc, playerFileName, true);\n    }\n}\n\nexport async function preparePlayer(location: string, canary?: boolean) {\n    logger.info('prepare player', { location, canary });\n    const playerFileName = getPlayerDestination();\n    return localRunnerCache.memoize(\n        async () => {\n            const loc = await getPlayerLocation(location, canary);\n            await downloadAndUnzip(loc, playerFileName);\n            // return a truthy value, so the caching has a value, and doesn't ignore\n            return {};\n        },\n        'preparePlayer',\n        MSEC_IN_HALF_DAY,\n        [location, canary, playerFileName],\n    )();\n}\n", "import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport ora from 'ora';\nimport { ArgError } from './errors';\nimport { downloadAndSave, unzipFile, TESTIM_BROWSER_DIR, doesPathExist } from './utils';\n\nexport const CHROMIUM_VERSION = '1000968'; // '973306' = 101.0.4899.0  '1000968' = 103.0.5046.0;\nconst DOWNLOAD_CHROME_FOLDER = path.join(TESTIM_BROWSER_DIR, `chrome-${CHROMIUM_VERSION}`);\n\nfunction getCurrentPlatform() {\n    const osType = os.type().toLowerCase();\n    if (osType === 'darwin') {\n        return os.arch() === 'arm' ? 'mac_arm' : 'mac';\n    }\n    if (osType === 'windows_nt') {\n        return os.arch() === 'x64' ? 'win64' : 'win32';\n    }\n    return 'linux';\n}\n\nexport async function downloadAndInstallChromium() {\n    /** Inspired by puppeteer's implementation https://github.com/puppeteer/puppeteer/blob/main/src/node/BrowserFetcher.ts#L45 */\n    const platform = getCurrentPlatform();\n\n    // example download url: https://storage.googleapis.com/chromium-browser-snapshots/Mac/1000968/chrome-mac.zip\n    const storageBaseUrl = 'https://storage.googleapis.com/chromium-browser-snapshots';\n    const platformFolder = {\n        linux: 'Linux_x64',\n        mac: 'Mac',\n        mac_arm: 'Mac_Arm', // eslint-disable-line camelcase\n        win32: 'Win',\n        win64: 'Win_x64',\n    };\n    if (!(platform in platformFolder)) {\n        throw new ArgError(`Unsupported platform: ${platform}`);\n    }\n    // Windows archive name changed at r591479.\n    const winArchiveName = parseInt(CHROMIUM_VERSION, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n    const platformArchiveName = {\n        linux: 'chrome-linux',\n        mac: 'chrome-mac',\n        mac_arm: 'chrome-mac', // eslint-disable-line camelcase\n        win32: winArchiveName,\n        win64: winArchiveName,\n    };\n    const binaryPaths = {\n        linux: 'chrome',\n        mac: 'Chromium.app/Contents/MacOS/Chromium',\n        mac_arm: 'Chromium.app/Contents/MacOS/Chromium', // eslint-disable-line camelcase\n        win32: 'chrome.exe',\n        win64: 'chrome.exe',\n    };\n    const downloadUrl = `${storageBaseUrl}/${platformFolder[platform]}/${CHROMIUM_VERSION}/${platformArchiveName[platform]}.zip`;\n    const downloadArchivePath = path.join(DOWNLOAD_CHROME_FOLDER, platformArchiveName[platform]);\n    const downloadedZipFile = `${downloadArchivePath}.zip`;\n    const binaryPath = path.join(downloadArchivePath, binaryPaths[platform]);\n\n    if (await doesPathExist(binaryPath)) {\n        return binaryPath;\n    }\n    if (!(await doesPathExist(downloadedZipFile))) {\n        const downloadSpinner = ora('Downloading Chromium').start();\n        try {\n            await fs.promises.mkdir(DOWNLOAD_CHROME_FOLDER);\n            await downloadAndSave(downloadUrl, downloadedZipFile);\n            // todo - We can add a failover here if the download fails if we host the file too\n        } catch (e) {\n            const errorMessage = `Failed to download Chromium: ${e.message}`;\n            downloadSpinner.fail(errorMessage);\n            throw new Error(errorMessage);\n        }\n        downloadSpinner.succeed();\n    }\n    const extractSpinner = ora('Extracting Chromium').start();\n    try {\n        await unzipFile(downloadedZipFile, DOWNLOAD_CHROME_FOLDER);\n    } catch (e) {\n        const errorMessage = `Failed to extract Chromium: ${e.message}`;\n        extractSpinner.fail(errorMessage);\n        throw new Error(errorMessage);\n    }\n    extractSpinner.succeed();\n    return binaryPath;\n}\n", "import * as config from './config';\nimport * as httpRequest from './httpRequest';\nimport * as localRunnerCache from './runnerFileCache';\nimport { ArgError } from '../errors';\nimport { getLogger } from './logger';\nimport type { InitializedUserWithAuth } from './testimServicesApi';\n\nconst logger = getLogger('testim-custom-token');\n\nlet _serverToken: string | undefined;\nlet _serverTokenExp: number | undefined;\nlet _refreshToken: string | undefined;\nlet _ngrokToken: string | undefined;\nlet _isNgrokWhitelisted: boolean | undefined;\nlet _projectId: string | null = null;\nlet _token: string | null = null;\n\nconst FIVE_MIN_IN_MS = 5 * 60 * 1000;\n\nexport async function init(projectId: string, token: string) {\n    _projectId = projectId;\n    _token = token;\n    const tokenValue = await generateToken();\n    return tokenValue;\n}\n\nexport function initFromData(authData: InitializedUserWithAuth['authData'], projectId: string, token: string) {\n    _serverToken = authData.token;\n    _projectId = projectId;\n    _token = token;\n    _serverTokenExp = getTokenExp(_serverToken);\n    _refreshToken = authData.refreshToken;\n    _ngrokToken = authData.ngrokToken;\n    _isNgrokWhitelisted = authData.isNgrokWhitelisted;\n}\n\nfunction getTokenV3(projectId = _projectId, token = _token) {\n    return localRunnerCache.memoize(() => {\n        logger.info('request to get cli token from server');\n        return httpRequest.post<{ ngrokToken?: string; isNgrokWhitelisted?: boolean; refreshToken: string; token: string; uid: string }>({\n            url: `${config.SERVICES_HOST}/auth/token`,\n            body: { projectId, token },\n        });\n    }, 'getTokenV3', FIVE_MIN_IN_MS * 10, { projectId, token })();\n}\n\nasync function refreshToken() {\n    logger.info('request to refresh JWT cli token from server');\n    const customToken = await httpRequest.post<{ token: string }>({\n        url: `${config.SERVICES_HOST}/auth/refreshToken`,\n        body: { token: _serverToken, refreshToken: _refreshToken },\n    });\n    _serverToken = customToken.token;\n    _serverTokenExp = getTokenExp(_serverToken);\n    return _serverToken;\n}\n\nasync function generateToken() {\n    try {\n        const customToken = await getTokenV3();\n        logger.info('successfully get cli token from server');\n        _serverToken = customToken.token;\n        _serverTokenExp = getTokenExp(_serverToken);\n        _refreshToken = customToken.refreshToken;\n        _ngrokToken = customToken.ngrokToken;\n        _isNgrokWhitelisted = customToken.isNgrokWhitelisted;\n        return _serverToken;\n    } catch (error) {\n        if (error.message.includes('Unauthorized')) {\n            throw new ArgError(\n                'Error trying to retrieve CLI token. ' +\n                'Your CLI token and project might not match. ' +\n                'Please make sure to pass `--project` and `--token` that' +\n                ' match to each other or make sure they match in your ~/.testim file.');\n        }\n        logger.error(`While trying to retrieve CLI token. caught error: ${error}`, { projectId: _projectId });\n        throw new ArgError(`While trying to retrieve CLI token, caught error: ${error}`);\n    }\n}\n\nfunction getTokenExp(token: string) {\n    const jwtLib = require('jsonwebtoken');\n    const jwt = jwtLib.decode(token);\n    return jwt.exp * 1000;\n}\n\nexport async function getCustomTokenV3() {\n    if (!_serverTokenExp) {\n        return generateToken();\n    }\n\n    // Refresh the token earlier than needed, to give clickim a chance to have more time to run, as it can't refresh it itself.\n    if (_serverTokenExp < (Date.now() + (4 * FIVE_MIN_IN_MS))) {\n        try {\n            return await refreshToken();\n        } catch (err) {\n            logger.error('failed to refresh token, executing fallback', err);\n            return generateToken();\n        }\n    }\n    return _serverToken!;\n}\n\nexport function getRefreshToken() {\n    return _refreshToken;\n}\n\nexport interface TokenUserData { uid: string; ngrokToken?: string; isNgrokWhitelisted?: boolean }\nexport function getTokenV3UserData(): Partial<TokenUserData> {\n    if (_serverToken) {\n        const jwtLib = require('jsonwebtoken');\n        const data = jwtLib.decode(_serverToken);\n        return { uid: data.id, ngrokToken: _ngrokToken, isNgrokWhitelisted: _isNgrokWhitelisted };\n    }\n    return {};\n}\n", "// copied from https://github.com/watson/ci-info/blob/master/index.js\nexport const isCi = Boolean(\n    process.env.CI || // Travis CI, CircleCI, Cirrus CI, Gitlab CI, Appveyor, CodeShip, dsari\n    process.env.CONTINUOUS_INTEGRATION || // Travis CI, Cirrus CI\n    process.env.BUILD_NUMBER || // Jenkins, TeamCity\n    process.env.RUN_ID || // TaskCluster, dsari\n    false,\n);\n", "import * as _ from 'lodash';\nimport * as pako from 'pako';\nimport * as utils from '../utils';\nimport * as config from './config';\nimport * as constants from './constants';\nimport * as httpRequest from './httpRequest';\nimport * as testimCustomToken from './testimCustomToken';\nimport pRetry from 'p-retry';\nimport hash from 'object-hash';\nimport { ArgError } from '../errors';\nimport { getLogger } from './logger';\nimport type { AwaitedReturnType } from '../utils';\nimport type { RawGrid } from 'services/src/commons/mongo/models/grid';\nimport type { LightweightSettings, RunnerOptions } from '../runOptions';\nimport type { TestRunStatus, TestRunStatusTestResult } from '../testRunStatus';\nimport type { RawBranchesData } from 'services/src/commons/mongo/models/branchesData';\nimport type { Defaults } from 'services/src/commons/mongo/db-dto-definitions/DbProject';\nimport type { ApplitoolsIntegrationData } from 'clickim/src/common/api/testimApplitoolsApi';\n\nconst runnerVersion = utils.getRunnerVersion();\nconst logger = getLogger('testim service api');\n\nconst DEFAULT_REQUEST_RETRY = 3;\nconst GRID_PATH = '/grid';\n\ntype TestStatus = typeof constants.runnerTestStatus[keyof typeof constants.runnerTestStatus];\n\n// #region utilities\nasync function getTokenHeader() {\n    const bearerToken = await testimCustomToken.getCustomTokenV3();\n    if (!bearerToken) {\n        throw new Error('Failed to get token from server');\n    }\n    return { Authorization: `Bearer ${bearerToken}` };\n}\n\nasync function postAuth<T = any>({\n    url, body, headers = {}, timeout, retry,\n}: { url: string; body: object; headers?: { [key: string]: any }; timeout?: number; retry?: number }) {\n    const tokenHeaders = await getTokenHeader();\n    const finalHeaders = Object.assign({}, headers, tokenHeaders);\n    return httpRequest.post<T>({\n        url: `${config.SERVICES_HOST}${url || ''}`,\n        body,\n        headers: finalHeaders,\n        timeout,\n        retry,\n    });\n}\n\nasync function postAuthFormData<T = any>(url: string, fields: { [fieldName: string]: any }, files: httpRequest.Files, headers: object = {}, timeout: number | undefined = undefined) {\n    const tokenHeaders = await getTokenHeader();\n    const finalHeaders = Object.assign({}, headers, tokenHeaders);\n    return await httpRequest.postForm<T>(`${config.SERVICES_HOST}${url || ''}`, fields, files, finalHeaders, timeout);\n}\n\nasync function putAuth<T = any>(url: string, body: object) {\n    const headers = await getTokenHeader();\n    return await httpRequest.put<T>(`${config.SERVICES_HOST}${url || ''}`, body, headers);\n}\n\nasync function deleteAuth<T = any>(url: string, body: object) {\n    const headers = await getTokenHeader();\n    return await httpRequest.deleteReq<T>(`${config.SERVICES_HOST}${url || ''}`, body, headers);\n}\n\nasync function getWithAuth<T = any>(url: string, query?: string | object | null, options?: { isBinary?: boolean; skipProxy?: boolean }, timeout?: number) {\n    const headers = await getTokenHeader();\n    return await httpRequest.get<T>(`${config.SERVICES_HOST}${url || ''}`, query || undefined, headers, timeout, options);\n}\n// #endregion\n\nexport function getS3Artifact<T = any>(url: string, timeout?: number) {\n    return pRetry(() => getWithAuth<T>(`/storage${url}`, null, { isBinary: true }, timeout), { retries: DEFAULT_REQUEST_RETRY });\n}\n\n// TODO: unused?\nexport async function getTestPlan(projectId: string, testPlanNames: string[]) {\n    //TODO: need to be checked after 3 months to prevent users from using old version\n    const parseProperty = (dataValue?: string | string[] | null): string[] => (dataValue == null ? [] : (typeof (dataValue) === 'string' && JSON.parse(dataValue)) || dataValue);\n    type TestPlans = AwaitedReturnType<typeof import('services/src/test-plan/service')['testPlan']['getAll']>;\n    const body = await pRetry(() => getWithAuth<TestPlans>('/testPlan', { projectId, name: testPlanNames.join(',') }), { retries: DEFAULT_REQUEST_RETRY });\n    return body.map(({ testConfigIds, beforeAllLabels, testLabels, afterAllLabels, ...testPlan }) => Object.assign(testPlan, {\n        testConfigIds: parseProperty(testConfigIds),\n        beforeAllLabels: parseProperty(beforeAllLabels),\n        testLabels: parseProperty(testLabels),\n        afterAllLabels: parseProperty(afterAllLabels),\n    }));\n}\n\nexport async function loadSfdcCredential({ branch, projectId }: { projectId: string; branch: string }) {\n    const branchData = await pRetry(() => getWithAuth<RawBranchesData>(`/branch/branchData/${branch}`, {\n        projectId,\n    }), { retries: DEFAULT_REQUEST_RETRY });\n    return branchData?.sfdcCredential;\n}\n\ninterface LoadTestParams { testId: string; branch: string; projectId: string; skipSharedSteps?: boolean; useBranchMap?: boolean }\nexport function loadTest({ testId, branch, projectId, skipSharedSteps = false, useBranchMap = true }: LoadTestParams) {\n    return pRetry(() => getWithAuth<AwaitedReturnType<typeof import('services/src/test/service').TestService['getTestById']>>(`/test/${testId}`, {\n        projectId,\n        branch,\n        skipSharedSteps,\n        useBranchMap,\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport function saveTestPlanResult(projectId: string, testPlanId: string, result: { success: boolean; executions: { executionId: string; status: boolean }[]; executionId: string }) {\n    return pRetry(() => postAuth<void>({ url: '/testPlan/result', body: { projectId, testPlanId, result } }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport function updateTestStatus(projectId: string, executionId: string, testId: string, resultId: string, status: string, data: object, retries = DEFAULT_REQUEST_RETRY) {\n    return pRetry(() => putAuth<void>('/result/run/test', {\n        runId: executionId,\n        testId,\n        resultId,\n        status,\n        projectId,\n        runnerVersion,\n        ...data,\n    }), { retries });\n}\n\nexport function updateExecutionTests(\n    executionId: string, runnerStatuses: string[], status: TestStatus, reason: string, success: boolean, startTime: number | null, endTime: number | null, projectId: string,\n) {\n    return pRetry(() => putAuth<void>('/result/run/tests', {\n        runId: executionId,\n        runnerStatuses,\n        status,\n        reason,\n        success,\n        startTime,\n        endTime,\n        projectId,\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\ninterface ReportExecutionStartedParams {\n    executionId: string;\n    projectId: string;\n    labels: string | never[];\n    startTime: number;\n    executions: { [testResultId: string]: TestRunStatusTestResult };\n    config: TestRunStatus['execConfig'];\n    resultLabels: string[];\n    remoteRunId: string | undefined;\n    localRunUserId: string | undefined;\n    isLocalRun: boolean;\n    intersections: RunnerOptions['intersections'];\n}\nexport async function reportExecutionStarted({\n    executionId,\n    projectId,\n    labels,\n    startTime,\n    executions,\n    config: _config,\n    resultLabels,\n    remoteRunId,\n    localRunUserId,\n    isLocalRun,\n    intersections,\n}: ReportExecutionStartedParams) {\n    const { isCi: isCiRun } = await import('../cli/isCiRun');\n    return postAuth<void>({\n        timeout: 90000,\n        url: '/result/run',\n        body: {\n            runId: executionId,\n            projectId,\n            labels,\n            startTime,\n            execution: executions,\n            status: 'RUNNING',\n            config: _config,\n            resultLabels,\n            remoteRunId,\n            intersections,\n            metadata: {\n                isCiRun,\n                localRunUserId,\n                isLocalRun,\n            },\n        },\n        retry: 3, // TODO: add a log in the callback\n    });\n}\n\nexport function reportExecutionFinished(\n    status: string,\n    executionId: string,\n    projectId: string,\n    success: boolean,\n    tmsOptions: object = {},\n    remoteRunId: string | undefined = undefined,\n    resultExtraData: any = undefined,\n) {\n    const endTime = Date.now();\n\n    return pRetry(() => putAuth<void>('/result/run', {\n        runId: executionId,\n        projectId,\n        endTime,\n        status,\n        success,\n        tmsOptions,\n        remoteRunId,\n        resultExtraData,\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport async function getTestPlanTestList(projectId: string, names: string[], planIds: string[], branch: string, intersections: RunnerOptions['intersections']) {\n    return pRetry(() => postAuth<AwaitedReturnType<typeof import('services/src/test-plan/service')['testPlan']['getTestPlanTestList']>>({\n        url: '/testPlan/list',\n        body: { projectId, names, planIds, branch, intersections },\n        // people who send insane lists get a timeout :(\n        timeout: 120000,\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\ninterface GetSuiteTestListParams {\n    projectId: string;\n    labels: string[];\n    testIds: string[];\n    testNames: string[];\n    testConfigNames?: string[];\n    suiteNames: string[];\n    suiteIds: string[];\n    branch: string;\n    rerunFailedByRunId?: string;\n    testConfigIds?: string[];\n    intersections: import('../runOptions').RunnerOptions['intersections'];\n}\nexport function getSuiteTestList({\n    projectId, labels, testIds, testNames, testConfigNames, suiteNames, suiteIds, branch, rerunFailedByRunId, testConfigIds, intersections,\n}: GetSuiteTestListParams) {\n    return pRetry(() => postAuth<import('services/src/suite/service').RunListResult>({\n        url: '/suite/v2/list',\n        body: {\n            projectId,\n            labels,\n            testIds,\n            testNames,\n            testConfigNames,\n            suiteNames,\n            suiteIds,\n            branch,\n            rerunFailedByRunId,\n            testConfigIds,\n            intersections,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport async function getAppDetails({ appId, projectId }: { appId: string; projectId: string }) {\n    try {\n        type MobileApp = AwaitedReturnType<typeof import('services/src/mobile-app/service')['getByAppId']>;\n        return await pRetry(() => getWithAuth<MobileApp>(`/mobile-app/app/${appId}?projectId=${projectId}`), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n    } catch (error) {\n        logger.error('failed getting application details', { appId, error });\n        return undefined;\n    }\n}\n\nexport async function getUsageForCurrentBillingPeriod(projectId: string) {\n    try {\n        type UsageCurrentBillingPeriod = AwaitedReturnType<typeof import('services/src/plan/planService')['getUsageStatusForCurrentBillingPeriodByProjectId']>;\n        return await pRetry(() => getWithAuth<UsageCurrentBillingPeriod>(`/plan/project/${projectId}/usage-current-billing-period`), { retries: DEFAULT_REQUEST_RETRY });\n    } catch (error) {\n        logger.error('failed getting usage for current billing period', { projectId, error });\n        return undefined;\n    }\n}\n\nexport function isTestResultCompleted(resultId: string, projectId: string, testRetryKey: `${number}:${number}`) {\n    return pRetry(() => getWithAuth<{ isComplete: boolean }>(`/result/${resultId}/isComplete`, { projectId, testRetryKey }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport function getTestResults(testId: string, resultId: string, projectId: string, branch: string) {\n    type TestResult = AwaitedReturnType<typeof import('services/src/test/service').TestService['getTestResultV2']>;\n    return pRetry(() => getWithAuth<TestResult>(`/test/v2/${testId}/result/${resultId}`, { projectId, branch }), { retries: DEFAULT_REQUEST_RETRY, factor: 1 });\n}\n\nexport function keepAliveGrid(projectId: string, slots: { gridId: string; slotId: string }[]) {\n    return postAuth<{ status: 'success' }>({\n        url: `/grid/keep-alive?reqId=${utils.guid()}`,\n        body: { projectId, slots },\n        timeout: 10000,\n    });\n}\n\nexport function releaseGridSlot(companyId: string, projectId: string, slotId: string, gridId: string, browser: string) {\n    return postAuth<{ status: 'success' }>({\n        url: `/grid/release?reqId=${utils.guid()}`,\n        body: {\n            companyId, projectId, slotId, gridId, browser,\n        },\n    });\n}\n\nexport function getHybridGridProvider(body: { companyId: string; gridId: string; maxRetries: number; currentRetry: number; browser: string; usingTunnel: boolean }) {\n    return postAuth<AwaitedReturnType<typeof import('services/src/grid/hybridGridService')['getGridProvider']>>({\n        url: '/grid/hybrid/provider',\n        body,\n    });\n}\n\nexport function getGridByName(companyId: string, projectId: string, gridName: string, browser: string, executionId: string) {\n    return pRetry(() => getWithAuth<{ status: 'success'; grid: RawGrid } | { status: 'error'; code: string }>('/grid/name', {\n        companyId, projectId, name: gridName, browser, executionId, reqId: utils.guid(),\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport function getGridById(companyId: string, projectId: string, gridId: string, browser: string, executionId: string) {\n    return pRetry(() => getWithAuth<{ status: 'success'; grid: RawGrid } | { status: 'error'; code: string }>(\n        `/grid/${gridId}`,\n        { companyId, projectId, browser, executionId, reqId: utils.guid() },\n    ), { retries: DEFAULT_REQUEST_RETRY });\n}\n\ninterface InitializeUserWithAuthParams { projectId: string; token: string; branchName?: string; lightweightMode?: LightweightSettings; localGrid: boolean }\nexport interface InitializedUserWithAuth {\n    authData: { token: string; refreshToken: string; uid: string; ngrokToken?: string; isNgrokWhitelisted?: boolean };\n    editorConfig: { editorUrl: string };\n    companyByProjectId: AwaitedReturnType<typeof import('services/src/company/companyService')['getCompanyByProjectIdUsingCache']>;\n    projectById: NonNullable<AwaitedReturnType<typeof import('services/src/commons/testimCache')['project']['getById']>>;\n    allGrids: RawGrid[];\n    branchName: string | RawBranchesData | null;\n}\nexport async function initializeUserWithAuth({ projectId, token, branchName, lightweightMode, localGrid }: InitializeUserWithAuthParams) {\n    try {\n        return await pRetry(() => httpRequest.post<InitializedUserWithAuth>({\n            url: `${config.SERVICES_HOST}/executions/initialize`,\n            body: {\n                projectId,\n                token,\n                branchName: branchName || 'master',\n                lightweightMode,\n                localGrid,\n            },\n        }), { retries: DEFAULT_REQUEST_RETRY });\n    } catch (e) {\n        logger.error('error initializing info from server', e);\n        if (e?.message?.includes('Bad Request')) {\n            throw new ArgError(\n                'Error trying to retrieve CLI token. ' +\n                'Your CLI token and project might not match. ' +\n                'Please make sure to pass `--project` and `--token` that' +\n                ' match to each other or make sure they match in your ~/.testim file.');\n        }\n        if (e?.code?.includes('ENOTFOUND')) {\n            throw new ArgError('Due to network connectivity issues, Testim CLI has been unable to connect to the Testim backend.');\n        }\n        throw e;\n    }\n}\n\nexport async function getEditorUrl() {\n    if (config.EDITOR_URL) {\n        return { editorUrl: config.EDITOR_URL };\n    }\n    try {\n        return await pRetry(() => getWithAuth<{ editorUrl: string }>('/system-info/editor-url'), {\n            retries: DEFAULT_REQUEST_RETRY,\n            onFailedAttempt: error => {\n                if (error.attemptNumber >= DEFAULT_REQUEST_RETRY) {\n                    throw error;\n                }\n            },\n        });\n    } catch (err) {\n        logger.error('cannot retrieve editor-url from server');\n        return { editorUrl: 'https://app.testim.io' };\n    }\n}\n\nexport function getAllGrids(companyId: string) {\n    return pRetry(() => getWithAuth<AwaitedReturnType<typeof import('services/src/grid/gridService')['GridService']['getAllGrids']>>('/grid', { companyId }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport const fetchLambdatestConfig = async () => pRetry(\n    () => getWithAuth<typeof import('services/src/commons/gridSettings')['LAMBDATEST_CONFIG']>('/grid/lt/config'),\n    { retries: DEFAULT_REQUEST_RETRY },\n);\n\nexport const getLabFeaturesByProjectId = async (projectId: string) => pRetry(\n    () => getWithAuth<NonNullable<AwaitedReturnType<typeof import('services/src/commons/testimCache')['labFeatures']['getLabFeaturesByProjectIdV2']>>>(`/labFeature/v2/project/${projectId}`),\n    { retries: DEFAULT_REQUEST_RETRY },\n);\n\n\nexport function getRealData(projectId: string, channel: string, query: string) {\n    interface RealDataRes { success: boolean; data: AwaitedReturnType<typeof import('services/src/real-data/realDataService')['getDataByModel']> }\n    return pRetry(\n        () => getWithAuth<RealDataRes>(`/real-data/${channel}?${query}&projectId=${projectId}`),\n        { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport function updateTestResult(projectId: string, resultId: string, testId: string, testResult: object, remoteRunId?: string) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/result/test',\n        body: {\n            projectId,\n            resultId,\n            testId,\n            testResult,\n            remoteRunId,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport function clearTestResult(projectId: string, resultId: string, testId: string, testResult: object) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/result/test/clear',\n        body: {\n            projectId,\n            resultId,\n            testId,\n            testResult,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport function saveRemoteStep(projectId: string, resultId: string, stepId: string, remoteStep: object) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/remoteStep',\n        body: {\n            projectId,\n            resultId,\n            stepId,\n            remoteStep,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nfunction relativize(uri: string) {\n    return uri.startsWith('/') ? uri : `/${uri}`;\n}\n\nfunction getStorageRelativePath(filePath: string, bucket: string, projectId: string) {\n    let fullPath = relativize(filePath);\n    if (projectId) {\n        fullPath = `/${projectId}${fullPath}`;\n    }\n    if (bucket) {\n        fullPath = `/${bucket}${fullPath}`;\n    }\n\n    return fullPath;\n}\n\nasync function uploadArtifact(projectId: string, testId: string, testResultId: string, content: string, subType: string, mimeType = 'application/octet-stream') {\n    let fileSuffix = null;\n    if (mimeType === 'application/json') {\n        fileSuffix = '.json';\n    }\n    const fileName = `${subType}_${utils.guid()}${fileSuffix || ''}`;\n    const path = `${testId}/${testResultId}/${fileName}`;\n    const storagePath = getStorageRelativePath(path, 'test-result-artifacts', projectId);\n\n    const buffer = Buffer.from(pako.gzip(content, {\n        level: 3, // sufficient time/size ratio.\n    }));\n\n    const files = {\n        file: {\n            fileName,\n            buffer,\n        },\n    };\n\n    await pRetry(\n        () => postAuthFormData(`/storage${storagePath}`, {}, files, { 'X-Asset-Encoding': 'gzip' }),\n        { retries: DEFAULT_REQUEST_RETRY, factor: 1 },\n    );\n    return storagePath;\n}\n\nexport const uploadRunDataArtifact = _.memoize(async (projectId: string, testId: string, testResultId: string, runData: object) => {\n    if (_.isEmpty(runData)) {\n        return undefined;\n    }\n    return await uploadArtifact(projectId, testId, testResultId, JSON.stringify(runData), 'test-run-data', 'application/json');\n}, (projectId, testId, testResultId, runData) => `${hash(runData)}:${testId}:${testResultId}`);\n\nexport const updateTestDataArtifact = _.memoize(async (projectId: string, testId: string, testResultId: string, testData: object | undefined, projectDefaults: Defaults) => {\n    if (!testData || _.isEmpty(testData)) {\n        return undefined;\n    }\n    const removeHiddenParamsInTestData = () => {\n        const testDataValueClone = _.clone(testData);\n        if (projectDefaults?.hiddenParams) {\n            const { hiddenParams } = projectDefaults;\n            (hiddenParams || []).forEach((param) => {\n                if (testDataValueClone[param as keyof typeof testDataValueClone]) {\n                    Object.assign(testDataValueClone, { [param]: constants.test.HIDDEN_PARAM });\n                }\n            });\n        }\n        return testDataValueClone;\n    };\n\n    return await uploadArtifact(projectId, testId, testResultId, JSON.stringify(removeHiddenParamsInTestData()), 'test-test-data', 'application/json');\n}, (projectId, testId, testResultId, testData) => `${hash(testData!)}:${testId}:${testResultId}`);\n\nexport function addTestRetry({\n    projectId,\n    runId,\n    testId,\n    newResultId,\n    originalTestResultId,\n    previousTestResultId,\n    testResult,\n}: { projectId: string; runId: string; testId: string; newResultId: string; originalTestResultId?: string; previousTestResultId?: string; testResult: object }) {\n    return pRetry(() => postAuth<{ success: boolean }>({\n        url: '/result/test/retry',\n        body: {\n            projectId,\n            newResultId,\n            originalTestResultId,\n            previousTestResultId,\n            testId,\n            runId,\n            testResult,\n        },\n    }), { retries: DEFAULT_REQUEST_RETRY });\n}\n\nexport async function getApplitoolsIntegrationData(projectId: string) {\n    try {\n        return await getWithAuth<ApplitoolsIntegrationData>(`/integration/applitools/v3/connected?projectId=${projectId}`);\n    } catch (err) {\n        logger.warn('could\\'nt get applitools integration data.', { err });\n        return {} as Partial<ApplitoolsIntegrationData>;\n    }\n}\n\ntype AcquiredTunnels = AwaitedReturnType<typeof import('services/src/tunnel/service')['tunnelService']['acquireTunnel']>;\nexport async function getCloudflareTunnel(companyId: string, routes: string[]) {\n    try {\n        return await putAuth<AcquiredTunnels>('/tunnel', { companyId, routes });\n    } catch (err) {\n        logger.warn('could\\'nt get tunnel.', { err });\n        return {} as AcquiredTunnels;\n    }\n}\n\nexport async function forceUpdateCloudflareTunnelRoutes(companyId: string, tunnelId: string) {\n    try {\n        return await postAuth<void>({ url: `/tunnel/${tunnelId}`, body: { companyId } });\n    } catch (err) {\n        logger.warn('could\\'nt get tunnel.', { err });\n        return undefined;\n    }\n}\n\nexport async function deleteCloudflareTunnel(companyId: string, tunnelId: string) {\n    try {\n        return await deleteAuth<void>(`/tunnel/${tunnelId}`, { companyId });\n    } catch (err) {\n        logger.warn('could\\'nt get tunnel.', { err });\n        return undefined;\n    }\n}\n\nexport function updateRemoteRunFailure(body: { remoteRunId: string; projectId: string; token: string; error: string }) {\n    return httpRequest.post<void>({ url: `${config.SERVICES_HOST}/result/remoteRunFailure`, body });\n}\n\ninterface GetMobileDevicesFromGridParams { projectId: string; projectType: string; gridId: string; companyId: string; selectors: string }\nexport async function getMobileDevicesFromGrid({ projectId, projectType, gridId, companyId, selectors }: GetMobileDevicesFromGridParams) {\n    let url = `${GRID_PATH}/mobileDevices/${gridId}/${companyId}?projectType=${projectType}`;\n    url = selectors ? `${url}&selectors=${encodeURIComponent(selectors)}` : url;\n    try {\n        return await pRetry(() => getWithAuth<import('services/src/grid/mobileGridService').MobileDevice[]>(url, { projectId }), { retries: DEFAULT_REQUEST_RETRY });\n    } catch (err) {\n        logger.warn('could\\'nt get devices from headspin grid.', { err });\n        return null;\n    }\n}\n", "import { join, resolve } from 'path';\n\nexport const options: { playerPath: string | undefined } = { playerPath: undefined };\n\nlet sessionPlayerInit: import('clickim/src/background/sessionPlayerInit').SessionPlayerInit | undefined;\n\nexport const getSessionPlayer = () => {\n    if (sessionPlayerInit) {\n        return sessionPlayerInit;\n    }\n    const perf = require('./performance-logger') as typeof import('./performance-logger');\n\n    perf.log('getSessionPlayerRequire start');\n    const { getSessionPlayerFolder } = require('./prepareRunnerAndTestimStartUtils') as typeof import('./prepareRunnerAndTestimStartUtils');\n\n    const testimAppDataFolder = getSessionPlayerFolder();\n    const path = options.playerPath ? resolve(options.playerPath, 'src/background/sessionPlayerInit.ts') : join(testimAppDataFolder, 'sessionPlayer.js');\n\n    const sessionPlayer = require(path) as import('clickim/src/background/sessionPlayerInit').SessionPlayerInit; // eslint-disable-line import/no-dynamic-require\n\n    perf.log('getSessionPlayerRequire end');\n    sessionPlayerInit = sessionPlayer;\n    return sessionPlayer;\n};\n", "import * as perf from './performance-logger';\nimport * as servicesApi from './testimServicesApi';\nimport * as localRunnerCache from './runnerFileCache';\nimport * as testimCustomToken from './testimCustomToken';\nimport { CLI_MODE } from './constants';\nimport type { RunnerOptions } from '../runOptions';\nimport type { CommonSharedOptions } from '../runner';\n\nconst FIVE_MINUTES_MS = 1000 * 60 * 5;\nconst TEN_HOURS_MS = 1000 * 60 * 60 * 10;\n\nfunction preloadSlowRequires(mode?: RunnerOptions['mode']) {\n    process.nextTick(() => {\n        if (!([CLI_MODE.SELENIUM, CLI_MODE.APPIUM] as string[]).includes(mode!)) {\n            return;\n        }\n        // heuristic to pay the cost of loading the sessionPlayer here while we are waiting for the backend\n        try {\n            require('./getSessionPlayerRequire').getSessionPlayer();\n            // jsdom for the same reason, we don't require workerSelenium here since it actually takes longer to load\n            // then it takes for the backend to return \uD83E\uDD2F\n            require('jsdom');\n        } catch (e) {\n            //silent catch\n        }\n    });\n}\n\nexport async function initializeUserWithAuth(options: CommonSharedOptions) {\n    const { project, token, lightweightMode, useLocalChromeDriver, useChromeLauncher, mode } = options;\n\n    const lightweightModeGeneral = Boolean(lightweightMode?.general);\n    const localGrid = Boolean(useLocalChromeDriver || useChromeLauncher);\n    const memoizationTTL = lightweightModeGeneral ? TEN_HOURS_MS : FIVE_MINUTES_MS;\n\n    perf.log('before initializeUserWithAuth');\n    const result = await localRunnerCache.memoize(async () => {\n        preloadSlowRequires(mode);\n        return await servicesApi.initializeUserWithAuth({\n            projectId: project,\n            token,\n            branchName: options.branch,\n            lightweightMode,\n            localGrid,\n        });\n    }, 'initializeUserWithAuth', memoizationTTL, { project, token, branchName: options.branch, lightweightModeGeneral, localGrid })();\n    perf.log('after initializeUserWithAuth');\n\n    testimCustomToken.initFromData(result.authData, options.project, options.token);\n    return result;\n}\n", "import * as os from 'os';\nimport * as utils from '../utils';\nimport * as mockNetworkRuleFileSchema from './mockNetworkRuleFileSchema.json';\nimport * as prepareRunnerAndTestimStartUtils from './prepareRunnerAndTestimStartUtils';\nimport Ajv from 'ajv';\nimport { CLI_MODE } from './constants';\nimport { downloadAndInstallChromium } from '../chromiumInstaller';\nimport type { RunnerOptions } from '../runOptions';\n\nconst MAX_RULE_FILE_SIZE_IN_MB = 1;\nconst PREPARE_MOCK_NETWORK_ERROR_PREFIX = 'JSON file supplied to --mock-network-pattern';\n\nconst logger = require('./logger').getLogger('prepare runner');\n\nexport async function prepare(options: RunnerOptions) {\n    let chromedriverPromise = Promise.resolve();\n\n    const hasNoGrid = !options.host && !options.gridId && !options.grid && (!options.testPlan || options.testPlan.length === 0);\n    const isTdkRun = options.files.length !== 0;\n    if ((hasNoGrid && isTdkRun) || options.useLocalChromeDriver) {\n        options.chromeBinaryLocation = options.downloadBrowser ? await downloadAndInstallChromium() : options.chromeBinaryLocation;\n        chromedriverPromise = prepareRunnerAndTestimStartUtils.prepareChromeDriver(\n            { projectId: options.project, userId: options.user },\n            { chromeBinaryLocation: options.chromeBinaryLocation },\n            Boolean(options.lightweightMode?.general),\n        );\n        options.useLocalChromeDriver = true;\n    }\n\n    if (!options.playerRequirePath && options.mode !== CLI_MODE.EXTENSION) {\n        await prepareRunnerAndTestimStartUtils.preparePlayer(options.playerLocation, options.canary);\n    }\n    if (options.mode === CLI_MODE.EXTENSION && !options.ext) {\n        await prepareRunnerAndTestimStartUtils.prepareExtension(options.extensionLocation);\n    }\n\n    let customExtensionLocation;\n\n    if (options.installCustomExtension) {\n        const unlimitedSize = Boolean(options.useLocalChromeDriver || options.useChromeLauncher);\n        customExtensionLocation = await prepareRunnerAndTestimStartUtils.prepareCustomExtension(options.installCustomExtension, unlimitedSize);\n    }\n\n    await chromedriverPromise;\n\n    return customExtensionLocation;\n}\n\nexport async function prepareMockNetwork(location: string) {\n    logger.info('prepare MockNetwork', { location });\n    const _rulesJson = await utils.getSourceAsBuffer(location);\n    const rulesJsonBuf = Buffer.isBuffer(_rulesJson) ? _rulesJson : _rulesJson.body;\n    if (rulesJsonBuf.byteLength > MAX_RULE_FILE_SIZE_IN_MB * 1_000_000) {\n        throw new Error(`${PREPARE_MOCK_NETWORK_ERROR_PREFIX} exceeded ${MAX_RULE_FILE_SIZE_IN_MB}MB`);\n    }\n\n    let rulesJson;\n    try {\n        rulesJson = JSON.parse(rulesJsonBuf.toString('utf-8'));\n    } catch (error) {\n        throw new Error(`${PREPARE_MOCK_NETWORK_ERROR_PREFIX} cannot be parsed.${os.EOL}${error}`);\n    }\n\n    const ajv = new Ajv();\n    const valid = ajv.validate(mockNetworkRuleFileSchema, rulesJson);\n    if (!valid) {\n        const errors = ajv.errors?.map((e, i) => `${++i}) ${e.dataPath} ${e.message}`).join(os.EOL);\n        throw new Error(`${PREPARE_MOCK_NETWORK_ERROR_PREFIX} is malformed.${os.EOL}${errors}`);\n    }\n\n    return rulesJson.entries;\n}\n\nexport { initializeUserWithAuth } from './initializeUserWithAuth';\n", "/* eslint-disable no-console */\nimport { getLogger } from './commons/logger';\nimport { promiseTimeout, promiseMap } from './utils';\n\nconst logger = getLogger('process-handler');\nconst exitHooks: Array<() => void | PromiseLike<void>> = [];\n\nexport function registerProcessForCleanup(onExit: (e?: any) => void | PromiseLike<any>, _process = process) {\n    async function cleanup(err: any) {\n        // give cleanup and socket reports a chance to run\n        await promiseTimeout(promiseMap(exitHooks, async hook => hook()), 10000).catch(() => null);\n        onExit(err);\n    }\n    _process.on('uncaughtException', async (err) => {\n        logger.error('Caught exception', { err });\n        console.log('Uncaught exception');\n        if (err.message) {\n            console.log('Message =', err.message);\n        }\n        if ((err as any).reason) {\n            console.log('Reason =', (err as any).reason);\n        }\n        await cleanup(err);\n    });\n\n    _process.on('unhandledRejection', (reason) => {\n        // rollout manages promises incorrectly and generates unhandled rejections from within their code\n        logger.fatal('Caught unhandled promise rejection', reason as any);\n        //TODO(benji) - this is a pretty shitty way to detect this error since rollout can change their API endpoint\n        if ((reason as any)?.message?.includes('ENOTFOUND x-api.rollout.io')) {\n            // this is not a fatal error - we recover from this in feature-flags service\n            return;\n        }\n\n        throw reason;\n    });\n\n    _process.on('rejectionHandled', () => {\n        logger.error('Caught rejection handled');\n    });\n\n    _process.once('SIGTERM', () => {\n        const msg = 'Runner aborted - SIGTERM event';\n        const err = new Error(msg);\n        logger.error(msg);\n        cleanup(err);\n        throw err;\n    });\n\n    _process.once('SIGINT', () => {\n        const msg = 'Runner aborted - SIGINT event';\n        const err = new Error(msg);\n        logger.error(msg);\n        cleanup(err);\n        throw err;\n    });\n\n    // One time self-call is expected :(\n    _process.once('exit', (e) => {\n        onExit(e);\n    });\n}\n\nexport function registerExitHook(hook: () => void | PromiseLike<any>) {\n    exitHooks.push(hook);\n}\n\nexport function reset() {\n    exitHooks.splice(0, exitHooks.length);\n}\n", "import * as config from './commons/config';\nimport type { OptionValues } from 'commander';\n\nexport function getExtensionsUrl(program: OptionValues, useCanonicalURL: boolean) {\n    const zipFileSuffix = program.canary ? '-master.zip' : '.zip';\n    const firefox = `${useCanonicalURL ? config.CANONICAL_BLOB_URL : config.BLOB_URL}/extension/testim-firefox-profile${zipFileSuffix}`;\n    const chrome = `${useCanonicalURL ? config.CANONICAL_EDGE_URL : config.BLOB_URL}/extension/testim-headless${zipFileSuffix}`;\n    return {\n        firefox,\n        chrome,\n        'edge-chromium': chrome,\n    };\n}\n\nexport function getResolvedExtensionUrl(program: OptionValues) {\n    const { chrome, firefox } = getExtensionsUrl(program, false);\n\n    if (program.browser === 'firefox') {\n        return firefox;\n    }\n    if (program.browser === 'chrome') {\n        return chrome;\n    }\n    return [chrome, firefox] as const;\n}\n\nexport function getPlayerUrl(program: OptionValues) {\n    const playerUrlPrefix = `${config.BLOB_URL}/extension/sessionPlayer`;\n    const playerUrl = program.canary ? `${playerUrlPrefix}-master` : playerUrlPrefix;\n\n    return playerUrl;\n}\n", "import * as config from './config';\nimport Analytics from 'analytics-node';\n\n/* segment.io */\nconst analytics = new Analytics('sJOSIGKa5x5rJEGsaOlCjrgozAf7FnVY', { flushAt: 1 });\n\nconst anonymousId = require('crypto').randomBytes(20).toString('hex');\n\nexport function identify(data: Parameters<Analytics['identify']>[0]) {\n    if (config.IS_ON_PREM) {\n        return;\n    }\n    if (!data?.userId) {\n        data = { anonymousId };\n    }\n    analytics.identify(data);\n}\n\nexport function trackWithCIUser(eventName: string, properties?: any) {\n    return track('ci', eventName, properties);\n}\n\nexport function track(userId: string | null | undefined, eventName: string, properties: any) {\n    if (config.IS_ON_PREM) {\n        return;\n    }\n    const id = userId ? { userId } : { anonymousId };\n    analytics.track(Object.assign(id, {\n        event: eventName,\n        properties,\n    }));\n}\n", "import * as runOptionsUtils from './runOptionsUtils';\nimport * as analytics from './commons/testimAnalytics';\nimport { ArgError } from './errors';\nimport type { OptionValues } from 'commander';\nimport type { AgentModeOptions } from './runOptions';\n\n\nexport function isAgentFlow(program: OptionValues) {\n    if (program.start) {\n        analytics.track(null, 'cli-start-command', { downloadBrowser: Boolean(program.downloadBrowser) });\n    }\n    if (program.startV2 || program.start || program.agent) {\n        return true;\n    }\n\n    return false;\n}\n\nexport async function runAgentFlow(program: OptionValues): Promise<AgentModeOptions> {\n    const agentModes = ['playground-playwright', 'playground-puppeteer', 'playground-selenium'];\n    let installPlaygroundPlaywrightDeps = false;\n    let installPlaygroundPuppeteerDeps = false;\n    let installPlaygroundSeleniumDeps = false;\n\n    let startTestimBrowser = false;\n\n    if (program.start) {\n        startTestimBrowser = true;\n    }\n\n    if (Number.isNaN(program.agentPort)) {\n        throw new ArgError('Agent port is not number');\n    }\n\n    if (typeof program.agent === 'string' && agentModes.some(mode => program.agent.includes(mode))) {\n        const selectedModes = program.agent.split(',').map(mode => mode.trim());\n        if (selectedModes.includes('playground-playwright')) {\n            installPlaygroundPlaywrightDeps = true;\n        }\n\n        if (selectedModes.includes('playground-puppeteer')) {\n            installPlaygroundPuppeteerDeps = true;\n        }\n\n        if (selectedModes.includes('playground-selenium')) {\n            installPlaygroundSeleniumDeps = true;\n        }\n    }\n\n    const playerUrl = runOptionsUtils.getPlayerUrl(program);\n\n    // eslint-disable-next-line no-console\n    console.log('Start Testim CLI on Agent mode');\n    return {\n        project: program.project,\n        token: program.token,\n        agentMode: true,\n        agentPort: program.agentPort,\n        agentBind: program.agentBind,\n        openEditor: program.openEditor,\n        installPlaygroundPlaywrightDeps,\n        installPlaygroundPuppeteerDeps,\n        installPlaygroundSeleniumDeps,\n        startTestimBrowser,\n        ext: program.ext,\n        extensionPath: program.extensionPath,\n        playerLocation: program.playerPath || playerUrl,\n        canary: program.canary,\n        playerPath: program.playerPath,\n        playerRequirePath: program.playerRequirePath,\n        downloadBrowser: Boolean(program.downloadBrowser),\n    };\n}\n", "import { exec } from 'child_process';\n\nexport function launchChrome(url: string) {\n    const { platform } = process;\n\n    if (platform === 'win32') {\n        exec(`start chrome ${url}`);\n    } else if (platform === 'darwin') {\n        exec(`open -a \"Google Chrome\" ${url}`);\n    } else if (platform === 'linux') {\n        exec(`google-chrome ${url}`);\n    }\n}\n", "import * as os from 'os';\nimport * as path from 'path';\nimport * as YAML from 'yaml';\nimport * as utils from './utils';\nimport { promises as fsPromises } from 'fs';\nimport { launchChrome } from './commons/chrome-launcher';\nimport type { AddressInfo } from 'net';\nimport type { Project } from 'clickim/src/app/services/projectsService';\n\nexport async function getProjectId() {\n    return getCredentialProperty('projectId');\n}\n\nexport async function getToken() {\n    return getCredentialProperty('token');\n}\n\nfunction timeout<T>(promise: Promise<T>, ms: number) {\n    // we need this to time out even if we disabled timeouts system wide\n    return Promise.race([promise, utils.delay(ms).then(() => { throw new utils.TimeoutError('timeout'); })]);\n}\n\nasync function getCredentialsFromChrome() {\n    const app = (await import('express')).default();\n    const loginInfoFromChrome = (async function waitForChromeToSendData() {\n        return timeout(new Promise<Project[]>(resolve => {\n            app.get('/loginInfo', (req, res) => {\n                resolve(JSON.parse(Buffer.from(req.query.info as string, 'base64').toString()));\n                res.status(200).end();\n            });\n        }), 60000).catch(() => null);\n    }());\n    await new Promise((resolve, reject) => {\n        // @ts-expect-error this doesn't behave as defined in types\n        const server = app.listen(42543, (err) => {\n            if (err) {\n                reject(err);\n            }\n            resolve((server.address() as AddressInfo).port);\n        });\n    });\n\n    try {\n        const { getEditorUrl } = await import('./commons/testimServicesApi');\n        const { editorUrl } = await getEditorUrl();\n        launchChrome(`${editorUrl}/#/new-test`);\n    } catch (err) {\n        // eslint-disable-next-line no-console\n        console.log('Unable to open Testim automatically - please manually go to https://app.testim.io');\n    }\n\n    const data = await loginInfoFromChrome;\n    return data;\n}\n\nexport async function doLogin({ overwriteExisting = true, projects = null }: { overwriteExisting?: boolean; projects?: Project[] | null } = {}) {\n    const homedir = os.homedir();\n\n    const testimCredentialsFile = path.join(homedir, '.testim');\n\n    const isExist = await utils.doesPathExist(testimCredentialsFile);\n\n    if (isExist && !overwriteExisting) {\n        return;\n    }\n\n    const credentials: { token?: string; projectId?: string } = {};\n\n    const [{ default: prompts }, { default: ora }] = await Promise.all([import('prompts'), import('ora')]);\n\n    const spinner = ora('Getting credentials from Testim extension ...').start();\n\n    if (!projects) {\n        projects = await timeout(getCredentialsFromChrome(), 62000).catch(() => null);\n    }\n\n    // @ts-expect-error old version, can probably be removed safely\n    if (projects?.token) { // V1(legacy) of the login extension API\n        // @ts-expect-error old version, can probably be removed safely\n        credentials.token = projects.token;\n        // @ts-expect-error old version, can probably be removed safely\n        credentials.projectId = projects.projectId;\n        spinner.succeed();\n\n        await writeCredentials(testimCredentialsFile, credentials);\n        return;\n    } if (projects?.length) { // V2(current) of the login extension API\n        spinner.succeed();\n\n        const response = projects.length === 1 ?\n            { project: projects[0] } :\n            await prompts({\n                type: 'select',\n                name: 'project',\n                message: 'There are multiple projects associated with your user account. Please select the project you would like to connect to:',\n                choices: projects.map(p => ({ title: p.name, value: p })),\n            });\n\n        credentials.token = response.project.ci.token;\n        credentials.projectId = response.project.id;\n        await writeCredentials(testimCredentialsFile, credentials);\n        return;\n    }\n\n    spinner.fail();\n    // eslint-disable-next-line no-console\n    console.log('Error getting credentials - please pass `--token` and `--project` to the CLI or try again');\n}\n\nasync function writeCredentials(testimCredentialsFile: string, credentials: { token?: string; projectId?: string }) {\n    await fsPromises.writeFile(testimCredentialsFile, YAML.stringify(credentials));\n    // eslint-disable-next-line no-console\n    console.log(`Testim credentials saved in '${testimCredentialsFile}'`);\n}\n\nasync function getCredentialProperty(property: 'projectId' | 'token') {\n    const homedir = os.homedir();\n\n    const testimCredentialsFile = path.join(homedir, '.testim');\n\n    const isExist = await utils.doesPathExist(testimCredentialsFile);\n\n    let credentials: { token?: string; projectId?: string } = {};\n\n    if (isExist) {\n        try {\n            credentials = YAML.parse((await fsPromises.readFile(testimCredentialsFile)).toString());\n        } catch (err) {\n            // just use new credentials.\n        }\n    }\n\n    // YAML.parse can return `null` or `undefined` if we fail with an empty/malformed file.\n    credentials ||= {};\n\n    return credentials[property];\n}\n", "/* eslint-disable no-console */\nimport ms from 'ms';\nimport chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as url from 'url';\nimport * as _ from 'lodash';\nimport * as path from 'path';\nimport * as utils from './utils';\nimport * as runOptionsUtils from './runOptionsUtils';\nimport * as runOptionsAgentFlow from './runOptionsAgentFlow';\nimport * as localRunnerCache from './commons/runnerFileCache';\nimport { Command } from 'commander';\nimport { CLI_MODE } from './commons/constants';\nimport { NoArgsError, ArgError } from './errors';\nimport { EDGE_CHROMIUM_MIN_VERSION } from './player/constants';\nimport { replaceArgsWithNoDashes } from './utils';\nimport type { SerializedGrid } from './services/gridService';\nimport type { TestRunStatusTestResult } from './testRunStatus';\nimport type { TokenUserData } from './commons/testimCustomToken';\nimport type { InitializedUserWithAuth } from './commons/testimServicesApi';\n\nconst camelizeHyphenValues = (prop: string) => prop.replace(/-([a-z])/g, (m, w) => w.toUpperCase());\n\nconst collect = (val: string, col: string[]) => {\n    col.push(val);\n    return col;\n};\n\nconst cli = new Command();\n\nconst list = (val: string) => val.split(',');\n\nconst mergeValues = (first: any, second: any) => ((!first || first.length === 0) ? second : first);\n\n\nconst allowedChromeFlags = ['enable-heavy-ad-intervention', 'heavy-ad-privacy-mitigations', 'use-fake-device-for-media-stream', 'use-fake-ui-for-media-stream', 'proxy-server'];\n\nconst printUsage = () => {\n    function isDefaultHelpLine(line: string) {\n        return line.includes('-h, --help');\n    }\n\n    function isParamsJsonOption(line: string) {\n        return line.includes('--params [params-json-string]');\n    }\n\n    function isExtOnlyOption(line: string) {\n        return line.includes('--ext') || line.includes('--extension-path');\n    }\n\n    function isPlayerOption(line: string) {\n        return line.includes('--player-path') || line.includes('--player-require-path');\n    }\n\n    function isScheduler(line: string) {\n        return (\n            line.includes('--executionId') ||\n            line.includes('--source') ||\n            line.includes('--resultId') ||\n            line.includes('--remoteRunId') ||\n            line.includes('--schedulerId')\n        );\n    }\n\n    function isWebdriverTimeout(line: string) {\n        return (\n            line.includes('--get-browser-timeout') ||\n            line.includes('--get-browser-retries') ||\n            line.includes('--get-session-timeout') ||\n            line.includes('--get-session-retries') ||\n            line.includes('--driver-request-timeout') ||\n            line.includes('--driver-request-retries')\n        );\n    }\n\n    function isUserId(line: string) {\n        return line.includes('--user');\n    }\n\n    function isMonitorPerformance(line: string) {\n        return line.includes('shouldMonitorPerformance');\n    }\n\n    function isSaveRCALocally(line: string) {\n        return line.includes('--save-rca-locally');\n    }\n\n    function isExitCodeIgnoreFailingTests(line: string) {\n        return line.includes('--exit-code-ignore-failing-tests');\n    }\n\n    function isDeprecatedHighSpeed(line: string) {\n        return line.includes('--high-speed'); // high speed mode was renamed to turbo mode\n    }\n\n    function isUrls(line: string) {\n        return line.includes('--urls');\n    }\n\n    function isTestStartTimeout(line: string) {\n        return line.includes('--test-start-timeout');\n    }\n\n    function isInstallLazyDeps(line: string) {\n        return line.includes('--install-lazy-deps');\n    }\n\n    cli.help((txt) => {\n        const lines = txt.split('\\n');\n        return lines\n            .filter( // hide CLI options\n                (ln) =>\n                    !isExtOnlyOption(ln) &&\n                    !isParamsJsonOption(ln) &&\n                    !isDefaultHelpLine(ln) &&\n                    !isPlayerOption(ln) &&\n                    !isScheduler(ln) &&\n                    !isMonitorPerformance(ln) &&\n                    !isUserId(ln) &&\n                    !isWebdriverTimeout(ln) &&\n                    !isSaveRCALocally(ln) &&\n                    !isExitCodeIgnoreFailingTests(ln) &&\n                    !isDeprecatedHighSpeed(ln) &&\n                    !isUrls(ln) &&\n                    !isTestStartTimeout(ln) &&\n                    !isInstallLazyDeps(ln),\n            )\n            .join('\\n');\n    });\n};\n\nconst printDeprecationWarning = (deprecatedUsage: string, newUsage: string) => {\n    const newUsageString = newUsage ? `Please use ${newUsage} instead.` : '';\n    console.log(chalk.yellow(`\\nWARNING: ${deprecatedUsage} is deprecated. ${newUsageString}\\n`));\n};\n\nconst CODE_COVERAGE_REPORTER_OPTIONS = [\n    'clover',\n    'html',\n    'json-summary',\n    'json',\n    'lcov',\n    'lcovonly',\n    'teamcity',\n    'text-lcov',\n    'text-summary',\n    'text',\n];\n\nconst { env, argv, stdout, exit, cwd } = global.process;\n\nconst LOG_LEVEL_OPTIONS = ['trace', 'debug', 'info', 'warn', 'error', 'silent'];\n\n\nreplaceArgsWithNoDashes(argv, new Set(['run', 'connect', 'agent', 'tunneld', 'start', 'init', 'install-lazy-deps']));\n\n\ncli\n    .description('Testim.io CLI')\n    .option('--run [file-glob-pattern]', 'codeful test files to run', collect, [])\n    .option('-h --help', 'output usage information', printUsage)\n    .option('-o --options-file [options-file.json]', '')\n    .option('-c --config-file [config-file.js]', '')\n    .option('--test-config [test-config]', 'test config name to override for all tests in current execution', collect, [])\n    .option('--test-config-id [test-config-id]', 'test config ID to override for all tests in current execution', collect, [])\n    .option('--params-file [params-file.json]', '')\n    .option('--params [params-json-string]', '')\n    .option('-t, --testId [test-id]', 'test ID to run', collect, [])\n    .option('-w, --webpackConfig [webpack-configuration]', 'webpack configuration used to build the code based project')\n    .option('--test-id [test-id]', 'test ID to run', collect, [])\n    .option('-l, --label [label]', 'labels to search test by', collect, [])\n    .option('-n, --name [test-name]', 'test name to run', collect, [])\n    .option('--project [project-id]', 'project ID')\n    .option('-r, --report-file [report junit xml path]', 'where to save junit xml results file')\n    .option('--urls', 'add step urls to the junit report')\n    .option('--override-report-file-classname [override-report-file-classname]', 'custom junit class name for the junit reporter')\n    .option('--reporters [names]', 'report types', list)\n    .option('-h, --host [host-name]', 'host name or ip containing the selenium grid')\n    .option('-p, --port [host-port]', 'host port')\n    .option('-g, --grid [grid-name]', 'grid name')\n    .option('--path [grid-path]', 'grid path')\n    .option('--protocol [grid-protocol]', 'grid protocol http or https')\n    .option('--grid-username [grid-username]', 'grid http basic auth username')\n    .option('--grid-password [grid-password]', 'grid http basic auth password')\n    .option('-gi --grid-id [grid-id]', 'grid ID')\n    .option('-b, --browser [browser-type]', 'browser type (chrome/firefox)')\n    .option('-h, --headless [headless]', 'run in headless mode')\n    .option('-m, --mode [runner-mode]', 'use extension or selenium mode (extension/selenium/appium)')\n    .option('--branch [branch]', 'branch name', undefined)\n    .option('--base-url [base-url]', 'change base-url to a specified url for all tests in current execution')\n    .option('--token [token]', 'identification token to testim')\n    .option('--is-regression-baseline-run', 'save doms and run results as regression baseline data')\n    .option('--parallel [number-of-tests]', 'number of tests to run in parallel')\n    .option('--before-parallel [number-of-tests]', 'number of tests to run in parallel during the before phase of a test plan')\n    .option('--after-parallel [number-of-tests]', 'number of tests to run in parallel during the after phase of a test plan')\n    .option('--canary [canary-mode]', 'enable canary mode', false)\n    .option('--test-plan [test-plan-name]', 'test plan to run', collect, [])\n    .option('--test-plan-id [test-plan-id]', 'test plan to run', collect, [])\n    .option('--suite [suite-name]', 'suite to run', collect, [])\n    .option('--suite-id [suite-id]', 'suite ID to run', collect, [])\n    .option('--rerun-failed-by-run-id [run-id]', 'allows re-running failed tests from a specific run ID')\n    .option('--disable-grid-check [boolean]', 'disable checking if selenium grid is available', false)\n    .option('--disable-native-events [boolean]', 'pass nativeEvents=false capability to the selenium browser (in selenium mode)', false)\n    .option('--disable-timeout-retry [boolean]', 'disable retry after test pass test timeout', false)\n    .option('--ca-file [ca-file-location]', 'ca certificate file location')\n    .option('--proxy [proxy-url]', 'proxy url to all requests')\n    .option('--proxy-for-grid [proxy-for-grid]', 'used together with --proxy to also router grid traffic through a proxy')\n    .option('--result-label [result-label]', 'result label', collect, [])\n    .option('-oen --override-execution-name [execution-name]', 'override the default execution name', '')\n    .option('--retries [max_num_of_retries]', 'number of retries on test failure, defaults to 0 (no retries)', Number, 0)\n    .option('--set-retention [retention-in-days]', 'set the number of days for results retention')\n    .option('--user [user-id]', 'user ID for local Testim-CLI')\n    .option('--pass-zero-tests', 'don\\'t fail the run if no tests were found')\n    //Mobile options\n    .option('--device-model [device-model]', 'The device model\tto use, iPhone 12, Nexus 5X, SM-G900P etc....')\n    .option('--device-udid [device-udid]', 'the device unique  id')\n    .option('--os-version [os-version]', 'The operating system version number')\n    .option('--app-id [app-id]', 'The application id from app library on Testim Editor App')\n    .option('--appium-log-level [appium-log-level]', 'Level of logging verbosity')\n    .option('-rad --reset-app-data [reset-app-data]', 'set noReset appium  capability to true, default value true!', false)\n    .option('-fr --full-reset [full-reset]', 'set fullReset appium capability to true to reinstall application on session start and session end')\n    .option('-roso --reset-on-session-start-only [reset-on-session-start-only]', 'set resetOnSessionStartOnly appium capability to true to avoid uninstall app on session end (ios run only)', false)\n    .option('-str --suppress-tms-reporting [suppress-tms-reporting]', 'disable test management reporting', false)\n    .option('-tsr --tms-suppress-reporting [tms-suppress-reporting]', 'disable test management reporting', false)\n    .option('-tid --tms-run-id [tms-run-id]', 'update existing result in test management', '')\n    .option('-tff --tms-field-file [tms-field-file.json]', 'pass field file location to add custom result field to the tms result report', '')\n\n    .option('--disable-file-cache', 'disable internal CLI file caching')\n    .option('--file-cache-location [directory]', ' internal CLI file caching location')\n\n    // Timeout\n    .option('--test-start-timeout [test-start-timeout]', 'The time to wait for a test to start after getting a browser session', Number, Number(env.TESTIM_TEST_START_TIMEOUT) || (2 * 60 * 1000))\n    .option('--timeout [test-timeout]', 'Test run timeout in milliseconds', Number)\n    .option('--browser-timeout [open-browser-timeout]', 'Get browser from grid timeout in milliseconds', Number)\n    .option('--new-browser-wait-timeout [max-wait-to-browser]', 'Maximum get browser wait in minutes', Number)\n\n    // New Timeouts\n    .option('--get-browser-timeout [get-browser-timeout]', 'Timeout for a single attempt to get browser from the grid configured in the project\\'s plan', Number) // getBrowserTimeout\n    .option('--get-browser-retries [get-browser-retries]', 'Number of attempts to get browser from the grid configured in the project\\'s plan', Number) // getBrowserRetries\n    .option('--get-session-timeout [get-session-timeout]', 'Timeout for \"/session\" request to the selenium server', Number, ms('90s')) // getSessionTimeout\n    .option('--get-session-retries [get-session-retries]', 'Retries for \"/session\" request to the selenium server', Number, 3) // getSessionRetries\n    .option('--driver-request-timeout [driver-request-timeout]', 'Timeout for any WebDriver request to the grid server', Number, ms('90s')) // driverRequestTimeout\n    .option('--driver-request-retries [driver-request-retries]', 'Retries for any WebDriver request to the grid server', Number, 3) // driverRequestRetries\n\n    // Run chrome ext mode locally\n    .option('--use-local-chrome-driver [use-local-chrome-driver]', 'use a local ChromeDriver instance instead of a selenium grid')\n    .option('--chrome-binary-location [chrome-binary-location]', 'Chrome binary location')\n\n    // Run chrome ext mode locally using chrome launcher\n    .option('--use-chrome-launcher', 'use a local Chrome installation without selenium')\n\n    // Mock network\n    .option('-mnh --mock-network-har', 'use the HAR file configured in the Testim editor to mock network traffic')\n    .option('-mnp --mock-network-pattern [local file location path]', 'use a JSON rule file to mock network traffic (Rule file schema: https://help.testim.io/page/mocking-network-traffic)')\n    .option(\n        '-omf --override-mapping-file [local file location path]',\n        'pass map file location to override mock network (see schema: https://help.testim.io/page/mocking-network-traffic)',\n    )\n    .option('-dmn --disable-mock-network', 'Disable mock mode for the entire CLI run')\n    .option('--run-quarantined-tests', 'Run quarantine tests')\n\n    // Code coverage\n    .option('--collect-code-coverage', 'collect code coverage for all js files under base url')\n    .option('--code-coverage-url-filter [url pattern]', 'collect code coverage for all js files matching url filter (url including asterisk)')\n    .option('--code-coverage-report-path [path]', 'where to save coverage report (default ./coverage)')\n    .option('--code-coverage-source-map-path [path]', 'path of source code')\n    .option('--code-coverage-reporter [reporter]', `set code coverage reporter (default html and text), options: ${CODE_COVERAGE_REPORTER_OPTIONS.join('/')}`, collect, [])\n    .option('--code-coverage-include [pattern]', 'set selecting files for coverage (default src/**)', collect, [])\n\n    // SauceLab\n    .option('--sauce-user [sauce-lab-user]', 'user to connect to sauce labs')\n    .option('--sauce-key [sauce-lab-key]', 'key to use when connecting to sauce labs')\n    .option('--sauce-options [sauce-options]', 'json file of browser and os options for sauce')\n\n    // Browserstack\n    .option('--browserstack-user [browserstack-user]', 'user to connect to browserStack')\n    .option('--browserstack-key [browserstack-key]', 'key to use when connecting to browserStack')\n    .option('--browserstack-options [browserstack-options]', 'json file of browser and os options for browserStack')\n\n    // Perfecto\n    .option('--perfecto-token [perfecto-token]', 'security token to use when connecting to perfecto')\n    .option('--perfecto-options [perfecto-options]', 'json file of browser and os options for perfecto')\n\n    // Experitest\n    .option('--experitest-token [experitest-token]', 'security token to use when connecting to experitest')\n\n    // TestObject\n    .option('--testobject-key [testobject-key]', 'api key to use when connecting to testobject')\n    .option('--testobject-options [testobject-options]', 'json file of options for testobject')\n\n    // Extension\n    .option('--ext [extension src path]', 'use extension from path (default it \\'/..\\')')\n    .option('--extension-path [path to extension archived file]', 'override the used extension')\n\n    //Customer Extension\n    .option('--install-custom-extension [chrome extension zipped file url or local path]', 'chrome extension to be installed in the browser')\n\n    // Player\n    .option('--player-path [path to player file]')\n    .option('--player-require-path [path to unminified player - development only]')\n\n    // Codim Init\n    .option('--init [init]', 'Path for an initial test app')\n\n    // Node Inspect as a flag\n    .option('--inspect [port]', 'Opens node inspector at given port', Number)\n\n    // Logging in - saving token and projectId\n    .option('--login', 'Log in to Testim')\n    .option('--require-credentials', 'Log in to Testim if not already logged in')\n\n    // Tunnel\n    .option('--tunneld', 'run a tunnel daemon only')\n    .option('--tunnel [tunnel]', 'enable tunnel')\n    .option('--tunnel-routes [routes]', 'tunnel routes for cloudflare tunnels')\n    .option('--tunnel-port [tunnel-port]', 'tunnel port address')\n    .option('--tunnel-host-header [tunnel-host-header]', 'tunnel host header')\n    .option('--tunnel-region [tunnel-region]', 'ngrok tunnel region')\n    .option('--tunnel-diagnostics', 'collect ngrok tunnel diagnostics')\n    .option('--tunnel-use-http-address [tunnel-use-http-address]', 'use http:// address instead of https://', false)\n    .option('--external-lambdatest-tunnel-id [tunnel-id]', 'use existing lambdatest tunnel ID')\n    .option('--external-lambdatest-use-wss', 'use wss instead of ssh for LT', false)\n    .option('--external-lambdatest-disable-automation-tunneling', 'don\\'t tunnel Testim calls in LT tunnel', true)\n    .option('--external-lambdatest-mitm', 'Turn on LT Man in the middle', false)\n\n    .option('--w3c-capabilities [enable-w3c-caps-mode]', 'enable/disable w3c capabilities format (default enable)', JSON.parse as any, true)\n    .option('--old-capabilities [enable-old-caps-mode]', 'enable/disable old capabilities format (default enable)', JSON.parse as any, true)\n    .option('--disable-sockets', 'Disable CLI sockets', false)\n\n    // Remote run options\n    .option('--executionId [execution-id]', '', '')\n    .option('--remoteRunId [remote-run-id]', '', '')\n    .option('--schedulerId [scheduler-id]', '', '')\n    .option('--source [source]', '', 'cli')\n    .option('--resultId [result-id]', '', '')\n\n    // Agent mode\n    .option('--connect, --agent [enable-agent-mode]', 'enable Testim CLI agent mode', false)\n    .option('--start [enable-start]', 'Connect to testim and open the editor in a standalone browser', false)\n    .option('--download-browser', 'when used with the start option, downloads a fixed version to run Testim editor in', false)\n    .option('--agent-port [agent-port]', 'set agent port', Number, 42543)\n    .option('--agent-bind [agent-host-bind]', 'set agent host bind', '127.0.0.1')\n\n    .option('--chrome-extra-prefs [chrome-extra-prefs]', 'add extra chrome preferences', '')\n    .option('--chrome-extra-args [chrome-extra-args]', 'add extra chrome arguments separated by \\',\\'', '')\n    .option('--chrome-block-location [chrome-block-location]', 'block chrome geolocation', false)\n    .option('--chrome-user-data-dir [chrome-user-data-dir]', 'use custom chrome user date dir', false)\n\n    .option('--disable-cookies-same-site-none-requires-secure [disable-same-site-none-requires-secure]', 'Disable cookies without SameSite must be secure', false)\n\n    .option('--selenium-caps-file [selenium-caps-file.json]', 'json file to merge into Testim selenium desired capabilities')\n\n    .option('--version [version]', 'print the current version of the Testim CLI and exit', false)\n    .option('--monitor-performance', 'collect test playback performance data')\n\n    .option('--high-speed', 'DEPRECATED: use --turbo-mode instead') // When removing, remove from the program.help output filter\n    .option('--turbo-mode', 'run in turbo mode')\n    .option('--lightweight-mode [settings]', 'run lightweight mode')\n    .option('--create-prefeched-data [location]', 'prefetch data into local cache file')\n    .option('--use-prefeched-data [location]', 'use prefetched data from local cache file, and force using only cached data')\n    .option('--save-rca-locally [path]', 'save root cause analysis assets locally')\n\n    .option('--exit-code-ignore-failing-tests', 'return exit code of zero when tests fail. non zero exit code will mean a real error occurred')\n\n    .option('--intersect-with-label [label]', 'Out of the execution\\'s test list, run only those tests that have the specified label', collect, [])\n    .option('--intersect-with-suite [suiteName]', 'Out of the execution\\'s test list, run only those tests that are included in the specified suite (by suite name)', collect, [])\n    .option('--intersect-with-suite-id [suiteId]', 'Out of the execution\\'s test list, run only those tests that are included in the specified suite (by suite ID)', collect, [])\n\n    .option('--install-lazy-deps [install-lazy-deps]', 'Install all lazy dependencies from package.json', false)\n    .parse(argv);\n\n\nconst program = cli.opts();\n\nconst setHostAndPortForSauceLab = () => {\n    if (program.grid || program.gridId) {\n        return;\n    }\n    if (!program.host) {\n        program.host = 'ondemand.saucelabs.com';\n    }\n    if (!program.port) {\n        program.port = 80;\n    }\n};\n\nconst setHostAndPortForBrowserStack = () => {\n    if (program.grid || program.gridId) {\n        return;\n    }\n    if (!program.host) {\n        program.host = 'hub-cloud.browserstack.com';\n    }\n    if (!program.port) {\n        program.port = 80;\n    }\n};\n\n\nexport const process = async (): Promise<Options> => {\n    if (program.inspect) {\n        const inspector = require('inspector');\n        inspector.open(program.inspect);\n    }\n\n    let userParamsData = {};\n    let chromeExtraPrefs = {};\n    const chromeExtraArgs = [];\n    let seleniumCapsFileContent = {};\n\n    if (!argv.slice(2).length) {\n        printUsage();\n        throw new NoArgsError();\n    }\n\n    if (program.requireCredentials) {\n        const credentialsManager = await import('./credentialsManager');\n        const projectId = await credentialsManager.getProjectId();\n        const token = await credentialsManager.getToken();\n\n        if (!projectId || !token) {\n            await credentialsManager.doLogin();\n        }\n    }\n\n    if (program.login) {\n        const credentialsManager = await import('./credentialsManager');\n        await credentialsManager.doLogin();\n\n        return { loginMode: true };\n    }\n\n    if (program.init) {\n        return {\n            initCodimMode: true,\n            initTestProject: program.init,\n        };\n    }\n\n    if (program.version) {\n        const message = 'Testim CLI Version: ';\n        if (env.npm_package_version) {\n            console.log(message, env.npm_package_version);\n            exit(0);\n        }\n        const version = utils.getRunnerVersion();\n        if (version) {\n            console.log(message, version);\n            exit(0);\n        }\n        console.log('Could not find version, please check the package.json manually');\n        exit(0);\n    }\n\n    if (program.installLazyDeps) {\n        return { installLazyDepsMode: true };\n    }\n\n    if (program.disableFileCache) {\n        localRunnerCache.disable();\n    }\n\n    const cacheLocationProvided = program.fileCacheLocation || program.usePrefechedData || program.createPrefechedData;\n\n    if (cacheLocationProvided) {\n        const location = path.resolve(cacheLocationProvided);\n        localRunnerCache.setCacheLocation(location);\n    }\n\n    if (program.usePrefechedData) {\n        localRunnerCache.disableCacheMiss();\n    }\n\n    if (program.playerRequirePath) {\n        const fullPlayerPath = path.resolve(program.playerRequirePath);\n        console.log('Using Local Clickim for Player Require Path =', fullPlayerPath);\n        const projectFile = path.join(fullPlayerPath, 'tsconfig.node.json');\n\n        // [NOTE] playerRequirePath is a dev flag\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        const tsnodeApi = require('ts-node');\n        const tsNodeRegisterInstance = tsnodeApi.register({\n            project: projectFile,\n            ignore: [\n                // restore default value\n                /node_modules/,\n                // based on that code:\n                // https://github.com/TypeStrong/ts-node/blob/c1ae9a069a824368c9aaf89f4454b131af44a92f/src/index.ts#L368\n                // it will not touch this project files, but will work on clickim code\n                new RegExp(`^${_.escapeRegExp(path.relative(cwd(), __dirname))}`),\n            ],\n            transpileOnly: true,\n        });\n\n        // [NOTE] playerRequirePath is a dev flag\n        // eslint-disable-next-line import/no-extraneous-dependencies\n        const tsConfigPathsApi = require('tsconfig-paths');\n        tsConfigPathsApi.register({\n            paths: tsNodeRegisterInstance.config.options.paths,\n            baseUrl: tsNodeRegisterInstance.config.options.baseUrl,\n        });\n\n        require('./commons/getSessionPlayerRequire').options.playerPath = fullPlayerPath;\n        const Module = require('module');\n        const originalRequire = Module.prototype.require;\n        Module.prototype.require = function requireThatOverridesSessionPlayer(id: string) {\n            if (id === 'rox-alias') {\n                return originalRequire.call(this, 'rox-node');\n            }\n            // eslint-disable-next-line prefer-rest-params\n            return originalRequire.apply(this, arguments);\n        };\n    }\n\n    if (program.caFile) {\n        global.caFileContent = fs.readFileSync(program.caFile);\n    }\n\n    if (program.proxy) {\n        global.proxyUri = program.proxy;\n        // used by Clickim internally and by the runner, included here lazily to not make things slower for the\n        // non-proxy case\n        global.SuperagentProxy = require('superagent-proxy');\n        global.ProxyAgent = require('proxy-agent');\n        global.HttpsProxyAgent = require('https-proxy-agent');\n    }\n\n    if (program.proxyForGrid && !program.proxy) {\n        throw new ArgError('missing --proxy option');\n    }\n\n    if (runOptionsAgentFlow.isAgentFlow(program)) {\n        return runOptionsAgentFlow.runAgentFlow(program);\n    }\n\n    // merge options from file\n    try {\n        let options = {} as object;\n        if (program.configFile) {\n            // eslint-disable-next-line import/no-dynamic-require\n            options = require(path.join(cwd(), program.configFile)).config;\n        } else if (program.optionsFile) {\n            // eslint-disable-next-line import/no-dynamic-require\n            options = require(path.join(cwd(), program.optionsFile));\n        }\n\n        // technically would work on anything, but no reason to add a tick for nothing.\n        if (options && typeof (options as PromiseLike<any>).then === 'function') {\n            options = await options;\n        }\n\n        Object.keys(options).forEach((prop) => {\n            const safePropName = camelizeHyphenValues(prop);\n            program[safePropName] = mergeValues(program[safePropName], options[prop as keyof typeof options]);\n        });\n    } catch (err) {\n        err.message = `Unable to read options file: ${err.message}`;\n        throw err;\n    }\n\n    if (program.tunneld) {\n        return {\n            tunnel: true,\n            tunnelPort: program.tunnelPort,\n            tunnelRoutes: program.tunnelRoutes,\n            tunnelRoutesOutput: program.tunnelRoutesOutput,\n            tunnelHostHeader: program.tunnelHostHeader,\n            tunnelRegion: program.tunnelRegion,\n            tunnelDiagnostics: program.tunnelDiagnostics,\n            tunnelUseHttpAddress: program.tunnelUseHttpAddress,\n            tunnelOnlyMode: true,\n            token: program.token,\n            project: program.project,\n        };\n    }\n\n\n    const isTestConfigSpecified = program.testConfig?.length || program.testConfigId?.length;\n    const isTestPlanSpecified = program.testPlan?.length || program.testPlanId?.length;\n    const isSuiteSpecified = program.suite?.length || program.suiteId?.length;\n\n    if (program.seleniumCapsFile) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            seleniumCapsFileContent = require(path.join(cwd(), program.seleniumCapsFile));\n        } catch (err) {\n            throw new ArgError(`Failed to parse selenium caps file file error: ${err.message}`);\n        }\n    }\n\n    if (program.reporters?.includes('junit') && !program.reportFile) {\n        console.log('Warning: please define --report-file option for JUnit reporter');\n    }\n\n    if (!program.tunnel && program.externalLambdatestTunnelId) {\n        throw new ArgError('missing --tunnel parameter');\n    }\n\n    if (!program.tunnel && program.externalLambdatestUseWss) {\n        throw new ArgError('missing --tunnel parameter');\n    }\n\n    if (!program.tunnel && [program.tunnelPort, program.tunnelHostHeader, program.tunnelRegion, program.tunnelDiagnostics].some(Boolean)) {\n        throw new ArgError('missing --tunnel parameter');\n    }\n    if (program.chromeExtraPrefs) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            chromeExtraPrefs = require(path.join(cwd(), program.chromeExtraPrefs));\n        } catch (err) {\n            throw new ArgError(`Failed to read/open chrome extra prefs file error: ${err.message}`);\n        }\n    }\n\n    if (program.chromeExtraArgs) {\n        const args = program.chromeExtraArgs.split(',');\n        for (const arg of args) {\n            const [argName] = arg.split('=');\n            if (allowedChromeFlags.includes(argName) || program.useLocalChromeDriver || program.useChromeLauncher) {\n                chromeExtraArgs.push(arg);\n                if (argName === 'proxy-server') {\n                    chromeExtraArgs.push('proxy-bypass-list=*.testim.io;*.coralogix.com;*.cloudinary.com;*.rollout.io');\n                }\n            } else {\n                console.warn(`Ignoring an unsupported chrome arg (${argName}), allowed values: ${JSON.stringify(allowedChromeFlags)}`);\n            }\n        }\n    }\n\n    if (program.paramsFile) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            userParamsData = Object.assign({}, userParamsData, require(path.join(cwd(), program.paramsFile)));\n        } catch (err) {\n            throw new ArgError(`Failed to read/open params file error: ${err.message}`);\n        }\n    }\n\n    if (program.params) {\n        try {\n            userParamsData = Object.assign({}, userParamsData, JSON.parse(program.params));\n        } catch (err) {\n            throw new ArgError(`Failed to parse params string error: ${err.message}`);\n        }\n    }\n\n    // SauceLabs Options\n    if ((program.sauceUser && !program.sauceKey) || (!program.sauceUser && program.sauceKey)) {\n        throw new ArgError('missing --sauce-user <sauce-user> or --sauce-key <sauce-key>');\n    }\n\n    if (program.sauceUser && program.sauceKey) {\n        setHostAndPortForSauceLab();\n        program.saucelabs = {};\n\n        program.saucelabs.username = program.sauceUser;\n        program.saucelabs.accessKey = program.sauceKey;\n    }\n\n    if (program.sauceOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const sOptions = require(path.join(cwd(), program.sauceOptions));\n            const isMobile = sOptions.platformName && ['ios', 'android'].includes(sOptions.platformName.toLowerCase());\n            if (sOptions.browserName) {\n                const browserName = sOptions.browserName.toLowerCase();\n                switch (browserName) {\n                    case 'microsoftedge':\n                        program.browser = 'edge';\n                        break;\n                    default:\n                        program.browser = browserName;\n                }\n            }\n\n            if (program.browser === 'edge' && parseFloat(sOptions.version) >= EDGE_CHROMIUM_MIN_VERSION) {\n                program.browser = 'edge-chromium';\n            }\n\n            const isBadVersion = parseFloat(sOptions.version) < 50 && !['dev', 'beta'].includes(sOptions.version);\n            if (!isMobile && program.browser === 'chrome' && isBadVersion) {\n                throw new ArgError('The minimum chrome supported version is 50.0');\n            }\n\n            program.saucelabs = Object.assign({}, program.saucelabs, sOptions);\n        } catch (err) {\n            throw new ArgError(`Failed to parse saucelabs options file error: ${err.message}`);\n        }\n    }\n\n    // BrowserStack options\n    if ((program.browserstackUser && !program.browserstackKey) || (!program.browserstackUser && program.browserstackKey)) {\n        throw new ArgError('missing --browserstack-user <browserstack-user> or --browserstack-key <browserstack-key>');\n    }\n    if (program.browserstackUser && program.browserstackKey) {\n        setHostAndPortForBrowserStack();\n        program.browserstack = {};\n\n        program.browserstack['browserstack.user'] = program.browserstackUser;\n        program.browserstack['browserstack.key'] = program.browserstackKey;\n    }\n\n    if (program.browserstackOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const bsOptions = require(path.join(cwd(), program.browserstackOptions));\n            const isMobile = bsOptions.platform && ['mac', 'android'].includes(bsOptions.platform.toLowerCase());\n            if (bsOptions.browserName) {\n                program.browser = bsOptions.browserName.toLowerCase();\n            }\n\n            if (program.browser === 'edge' && parseFloat(bsOptions.browser_version) >= EDGE_CHROMIUM_MIN_VERSION) {\n                program.browser = 'edge-chromium';\n            }\n\n            if (!isMobile && parseFloat(bsOptions.browser_version) < 50 && program.browser === 'chrome') {\n                throw new ArgError('The minimum chrome supported version is 50.0');\n            }\n\n            program.browserstack = Object.assign({}, program.browserstack, bsOptions);\n        } catch (err) {\n            throw new ArgError(`Failed to parse browserstack options file error: ${err.message}`);\n        }\n    }\n\n    program.perfecto = {};\n\n    if (program.perfectoToken) {\n        program.perfecto.securityToken = program.perfectoToken;\n    }\n\n    if (program.perfectoOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const perfectoOptions = require(path.join(cwd(), program.perfectoOptions));\n            const DEFAULTS = { location: 'US East', securityToken: program.perfectoToken };\n            program.perfecto = Object.assign({}, DEFAULTS, perfectoOptions);\n        } catch (err) {\n            throw new ArgError(`Failed to parse perfecto options file error: ${err.message}`);\n        }\n    }\n\n    program.testobjectSauce = {};\n\n    if (program.testobjectKey) {\n        program.testobjectSauce.testobjectApiKey = program.testobjectKey;\n    }\n\n    if (program.testobjectOptions) {\n        try {\n            // eslint-disable-next-line import/no-dynamic-require\n            const testobjectOptions = require(path.join(cwd(), program.testobjectOptions));\n            const DEFAULTS = { testobjectApiKey: program.testobjectKey };\n            program.testobjectSauce = Object.assign({}, DEFAULTS, testobjectOptions);\n        } catch (err) {\n            throw new ArgError(`Failed to parse test object options file error: ${err.message}`);\n        }\n    }\n\n    if (!program.project) {\n        const credentialsManager = await import('./credentialsManager');\n        const projectId = await credentialsManager.getProjectId();\n\n        if (projectId) {\n            program.project = projectId;\n        } else {\n            throw new ArgError('missing project-id info, either --login to provide new credentials or use --project <project-id>');\n        }\n    }\n\n    if (!program.mode) {\n        // we default to selenium mode in Codim for debuggability\n        program.mode = program.run.length ? 'selenium' : 'extension';\n    }\n\n    if (program.testConfig) {\n        // convert single test config inputs to array (e.g. from configFile)\n        program.testConfig = [program.testConfig].flat();\n    }\n\n    if (program.testConfigId) {\n        // convert single test config inputs to array (e.g. from configFile)\n        program.testConfigId = [program.testConfigId].flat();\n    }\n\n    program.retries = !program.retries || typeof program.retries === 'boolean' ? 1 : Number(program.retries) + 1;\n    program.browserTimeout = !program.browserTimeout || typeof program.browserTimeout === 'boolean' ? 60 * 1000 : program.browserTimeout;\n    program.newBrowserWaitTimeout = !program.newBrowserWaitTimeout || typeof program.newBrowserWaitTimeout === 'boolean' ? 10 * 60 * 1000 : program.newBrowserWaitTimeout * 60 * 1000;\n\n    if (!program.getBrowserTimeout) {\n        program.getBrowserTimeout = program.browserTimeout;\n    }\n    if (!program.getBrowserRetries) {\n        program.getBrowserRetries = Math.round(program.newBrowserWaitTimeout / program.browserTimeout);\n    }\n    program.getSessionTimeout = program.browserTimeout < program.getSessionTimeout ? program.getSessionTimeout : program.browserTimeout;\n    program.driverRequestTimeout = program.browserTimeout < program.driverRequestTimeout ? program.driverRequestTimeout : program.browserTimeout;\n\n    const timeoutWasGiven = Boolean(program.timeout);\n    program.timeout = !program.timeout || typeof program.timeout === 'boolean' ? 10 * 60 * 1000 : program.timeout;\n    program.beforeParallel = !program.beforeParallel || typeof program.beforeParallel === 'boolean' ? 1 : Number(program.beforeParallel);\n    program.parallel = !program.parallel || typeof program.parallel === 'boolean' ? 1 : Number(program.parallel);\n    program.afterParallel = !program.afterParallel || typeof program.afterParallel === 'boolean' ? 1 : Number(program.afterParallel);\n    if (program.parallel > 1 && program.run && !program.gridId && !program.grid &&\n        ((!program.testPlan || program.testPlan.length === 0) && !program.testPlanId?.length) && stdout.isTTY && !program.headless && !env.TERM) {\n        const prompts = require('prompts');\n        const response = await prompts({\n            type: 'toggle',\n            name: 'isSure',\n            message: 'Running in parallel without --headless flag will open several browsers on your computer. Are you sure?',\n            initial: false,\n            active: 'yes',\n            inactive: 'no',\n        });\n\n        if (!response.isSure) {\n            exit(0);\n        }\n    }\n\n    program.tunnelPort = !program.tunnelPort || typeof program.tunnelPort === 'boolean' ? '80' : program.tunnelPort;\n\n    program.port &&= Number(program.port);\n\n    if (program.retries <= 0 || Number.isNaN(program.retries)) {\n        throw new ArgError('test failure retry count could not be a negative number or string, --retries <max_num_of_retries>');\n    }\n\n    if (program.retries > 21) {\n        throw new ArgError('Max number of retries exceeded. Number cannot be greater than 20, --retries <max_num_of_retries>');\n    }\n\n    if (!program.token) {\n        const credentialsManager = await import('./credentialsManager');\n        const credentialToken = await credentialsManager.getToken();\n\n        if (credentialToken) {\n            program.token = credentialToken;\n        } else {\n            throw new ArgError('missing Testim Access Token, either --login to provide new credentials or use --token <testim-access-token>, contact info@testim.io if you need a new one.');\n        }\n    }\n\n    if (program.browserTimeout <= 0 || Number.isNaN(program.browserTimeout)) {\n        throw new ArgError('get browser timeout could not be a negative number, --browser-timeout <get-browser-timeout>');\n    }\n\n    if (program.newBrowserWaitTimeout <= 0 || Number.isNaN(program.newBrowserWaitTimeout)) {\n        throw new ArgError('max new browser wait timeout could not be a negative number, --new-browser-wait-timeout <max-wait-to-browser>');\n    }\n\n    if (program.timeout <= 0 || Number.isNaN(program.timeout)) {\n        throw new ArgError('test run timeout could not be a negative number, --timeout <run-timeout>');\n    }\n\n    if (program.beforeParallel <= 0 || Number.isNaN(program.beforeParallel)) {\n        throw new ArgError('before-parallel could not be a negative number or not number, --before-parallel <number-of-tests>');\n    }\n\n    if (program.parallel <= 0 || Number.isNaN(program.parallel)) {\n        throw new ArgError('parallel could not be a negative number or not number, --parallel <number-of-tests>');\n    }\n\n    if (program.afterParallel <= 0 || Number.isNaN(program.afterParallel)) {\n        throw new ArgError('after-parallel could not be a negative number or not number, --after-parallel <number-of-tests>');\n    }\n\n    if (![CLI_MODE.EXTENSION, CLI_MODE.SELENIUM, CLI_MODE.APPIUM].includes(program.mode)) {\n        throw new ArgError(`runner mode <${program.mode}> is not supported`);\n    }\n\n    if ((program.mode !== CLI_MODE.SELENIUM) && program.disableNativeEvents) {\n        throw new ArgError('disable-native-events is only applicable in selenium mode');\n    }\n\n    if (\n        !program.browser &&\n        !isTestConfigSpecified &&\n        !isTestPlanSpecified\n    ) {\n        program.browser = 'chrome';\n    }\n\n    if (!program.appiumLogLevel) {\n        program.appiumLogLevel = 'silent';\n    }\n\n    if (!LOG_LEVEL_OPTIONS.includes(program.appiumLogLevel)) {\n        throw new ArgError(`runner appium-log-level <${program.appiumLogLevel}> is not supported`);\n    }\n\n    if (program.testPlan && program.testPlan.length === 0 && program.testPlanId && program.testPlanId.length === 0) {\n        if (\n            typeof program.host !== 'string' &&\n            typeof program.grid !== 'string' &&\n            typeof program.gridId !== 'string' &&\n            program.run.length === 0 &&\n            !program.useLocalChromeDriver &&\n            !program.useChromeLauncher &&\n            !program.createPrefechedData\n        ) {\n            throw new ArgError(\n                'missing remote grid address parameter, specify --host <host-name-or-ip> or --grid <grid-name> or --grid-id <grid-id>',\n            );\n        }\n    } else if (\n        program.testId.length ||\n        program.label.length ||\n        program.name.length ||\n        isTestConfigSpecified ||\n        program.browser ||\n        isSuiteSpecified ||\n        program.useLocalChromeDriver ||\n        program.useChromeLauncher\n    ) {\n        throw new ArgError(\n            'cannot set --testId, --label, --name, --browser, --test-config, --test-config-id, --use-local-chrome-driver --use-chrome-launcher or --suite with --test-plan option',\n        );\n    }\n\n    if (!isTestPlanSpecified && (program.beforeParallel !== 1 || program.afterParallel !== 1)) {\n        throw new ArgError('cannot set --before-parallel or --after-parallel without --test-plan option');\n    }\n\n    if (\n        (program.testId.length ||\n            isTestPlanSpecified ||\n            program.label.length ||\n            program.name.length ||\n            isSuiteSpecified) &&\n        program.file\n    ) {\n        throw new ArgError(\n            'Cannot pass codeful automation tests with --testId --label --name or --suite',\n        );\n    }\n\n    const numberOfDefinedHosts = [program.host, program.grid, program.gridId].filter(Boolean).length;\n    if (numberOfDefinedHosts > 1) {\n        throw new ArgError('please define exactly one of --grid or --grid-id or --host');\n    }\n\n    if (program.host?.includes('/')) {\n        if (!/^(f|ht)tps?:\\/\\//i.test(program.host)) {\n            program.host = `http://${program.host}`;\n        }\n        program.host = url.parse(program.host).hostname;\n    }\n\n    if (program.resultLabel.length) {\n        program.resultLabel = (program.resultLabel as string[]).map(label => label.trim()).filter(Boolean);\n        const invalidLabels = (program.resultLabel as string[]).filter(label => label.length >= 250).filter(Boolean);\n        if (program.branch === 'auto-detect' && program.resultLabel.includes('auto-detect-branch') && utils.getEnvironmentGitBranch()) {\n            program.resultLabel.unshift(utils.getEnvironmentGitBranch());\n        }\n        if (invalidLabels.length) {\n            throw new ArgError('A result label cannot exceed 250 characters');\n        }\n    }\n\n    const extHeadlessUrl = runOptionsUtils.getResolvedExtensionUrl(program);\n    const playerUrl = runOptionsUtils.getPlayerUrl(program);\n\n    if (!program.w3cCapabilities && !program.oldCapabilities) {\n        throw new ArgError('cannot set --w3c-capabilities and --old-capabilities options as false');\n    }\n    program.protocol ||= program.port === 443 ? 'https' : 'http';\n    if (!['http', 'https'].includes(program.protocol)) {\n        throw new ArgError('invalid --protocol value, allow --protocol http or https');\n    }\n\n    if (program.rerunFailedByRunId && program.branch) {\n        throw new ArgError('It is not possible to use --branch with --rerun-failed-by-run-id. Tests will automatically run on the same branch that was used in the original run');\n    }\n\n    if (program.rerunFailedByRunId &&\n        (isSuiteSpecified || program.name.length ||\n            program.testId.length || program.label.length || isTestPlanSpecified)) {\n        throw new ArgError('Re-running failed tests is not possible when suite (--suite),' +\n            ' label (--label), plan (--test-plan), or other test flags (--test) are provided. Please remove these flags and try again');\n    }\n\n    if (program.run.length) {\n        const glob = require('glob');\n        program.files = _.flatMap(program.run, files => glob.sync(files));\n        if (program.files.length === 0) {\n            throw new ArgError(`No files found at path '${program.run}'.`);\n        }\n    } else {\n        program.files = [];\n    }\n\n    if (program.setRetention && !_.inRange(_.parseInt(program.setRetention), 1, 11)) {\n        throw new ArgError('Please provide the number of days that the test results will be retained for (--set-retention must be a whole number between 1 to 10)');\n    }\n    program.setRetention &&= Number(program.setRetention);\n\n    const mockNetworkDeprecationMsg = 'is no longer supported, please use --override-mapping-file';\n    if (program.mockNetworkHar) {\n        throw new ArgError(`--mock-network-har ${mockNetworkDeprecationMsg}`);\n    }\n    if (program.mockNetworkPattern) {\n        throw new ArgError(`--mock-network-pattern ${mockNetworkDeprecationMsg}`);\n    }\n\n    if (program.disableMockNetwork && program.overrideMappingFile) {\n        throw new ArgError('You can either use --disable-mock-network or --override-mapping-file');\n    }\n\n    if (!program.collectCodeCoverage && program.codeCoverageSourceMapPath) {\n        throw new ArgError('cannot set --code-coverage-source-map-path without passing --collect-code-coverage');\n    }\n\n    if (!program.collectCodeCoverage && program.codeCoverageReporter.length) {\n        throw new ArgError('cannot set --code-coverage-reporter without passing --collect-code-coverage');\n    }\n\n    if (!program.collectCodeCoverage && program.codeCoverageInclude.length) {\n        throw new ArgError('cannot set --code-coverage-include without passing --collect-code-coverage');\n    }\n\n    if (program.collectCodeCoverage && program.codeCoverageReporter && _.difference(program.codeCoverageReporter, CODE_COVERAGE_REPORTER_OPTIONS).length) {\n        const diff = _.difference(program.codeCoverageReporter, CODE_COVERAGE_REPORTER_OPTIONS);\n        throw new ArgError(`invalid --code-coverage-reporter parameters ${diff.join('/')}`);\n    }\n\n    program.codeCoverageReporter = program.codeCoverageReporter.length === 0 ? ['html', 'text'] : program.codeCoverageReporter;\n    program.codeCoverageInclude = program.codeCoverageInclude.length === 0 ? ['src/**'] : program.codeCoverageInclude;\n\n    const extensionOnlyOptions = {\n        mockNetworkHar: '--mock-network-har',\n        mockNetworkPattern: '--mock-network-pattern',\n        overrideMappingFile: '--override-mapping-file',\n        codeCoverageUrlFilter: '--code-coverage-url-filter',\n        collectCodeCoverage: '--collect-code-coverage',\n        disableMockNetwork: '--disable-mock-network',\n        useChromeLauncher: '--use-chrome-launcher',\n    };\n    const usedExtensionOptions = Object.keys(extensionOnlyOptions).filter(key => Boolean(program[key]));\n\n    if (program.mode !== CLI_MODE.EXTENSION && usedExtensionOptions.length) {\n        const multi = usedExtensionOptions.length > 1 ? 'are' : 'is';\n        throw new ArgError(`${usedExtensionOptions.map(key => extensionOnlyOptions[key as keyof typeof extensionOnlyOptions]).join(' and ')} ${multi} only applicable in extension mode`);\n    }\n\n    if (program.tmsFieldFile) {\n        try {\n            const fileContent = fs.readFileSync(program.tmsFieldFile);\n            // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n            program.tmsCustomFields = JSON.parse(fileContent);\n        } catch (err) {\n            throw new ArgError(`failed to parse field file error: ${err.message}`);\n        }\n    }\n\n    /** Handling deprecation of High speed mode (renamed to Turbo mode) */\n    if (program.highSpeed) {\n        printDeprecationWarning('--high-speed', ' --turbo-mode');\n        program.turboMode = true;\n    }\n\n    if (program.deviceUdid && (program.deviceModel || program.osVersion)) {\n        throw new ArgError('It is not possible to use --osVersion or  --deviceModel with  --device-udid. device-udid is unique and cannot be combined with another flag');\n    }\n    if (program.resetAppData && program.fullReset) {\n        throw new ArgError('It is not possible to set both --reset-app-data and --full-reset capabilities to true at the same time!');\n    }\n\n    if (program.resetOnSessionStartOnly && !program.fullReset) {\n        console.warn('Ignoring --reset-on-session-start-only flag, should be used when --full-reset is provided for ios runs');\n    }\n    if (program.lightweightMode) {\n        try {\n            const DEFAULTS = {\n                general: true,\n                disableLabs: true,\n                disableFeatureFlags: true,\n                disableAssets: true,\n                disablePixelValidation: true,\n                disableResults: true,\n                disableStepDelay: true,\n                disableRemoteStep: true,\n                assumePreloadedSharedSteps: true,\n                disableVisibilityCheck: false,\n                disableLocators: false,\n                bypassSetup: false,\n                disableAutoImprove: true,\n                disableQuotaBlocking: true,\n                onlyTestIdsNoSuite: true,\n                uploadAssetsAndResultsOnFailure: true,\n                preloadTests: true,\n                disableProjectDefaults: true,\n                type: 'lightweight',\n            };\n\n            const lightweightModeOptions = typeof program.lightweightMode === 'string' ? JSON.parse(program.lightweightMode) : {};\n            program.lightweightMode = Object.assign({}, DEFAULTS, lightweightModeOptions);\n        } catch (err) {\n            throw new ArgError(`failed to parse lightweightMode settings error: ${err.message}`);\n        }\n    } else if (program.turboMode && program.mode === CLI_MODE.EXTENSION) {\n        program.lightweightMode = {\n            general: true,\n            disableLabs: false,\n            disableFeatureFlags: false,\n            disableAssets: true,\n            disablePixelValidation: false,\n            disableResults: true,\n            disableStepDelay: true,\n            disableRemoteStep: false,\n            assumePreloadedSharedSteps: false,\n            disableVisibilityCheck: false,\n            disableLocators: false,\n            bypassSetup: false,\n            disableQuotaBlocking: false,\n            disableAutoImprove: false,\n            onlyTestIdsNoSuite: false,\n            uploadAssetsAndResultsOnFailure: true,\n            preloadTests: false,\n            disableProjectDefaults: false,\n            type: 'turboMode',\n        };\n    }\n\n    if (typeof program.baseUrl === 'boolean') {\n        throw new ArgError('base url cannot be used as a flag, and must contain a string value');\n    }\n\n    return ({\n        testId: [program.testId].flat(),\n        name: [program.name as unknown as string | string[]].flat(),\n        label: [program.label].flat(),\n        suites: [program.suite].flat(),\n        suiteIds: [program.suiteId].flat(),\n        testPlan: [program.testPlan].flat(),\n        testPlanIds: [program.testPlanId].flat(),\n        files: [program.files].flat(),\n        webpackConfig: program.webpackConfig,\n        reportFile: program.reportFile,\n        urls: program.urls,\n        reportFileClassname: program.overrideReportFileClassname,\n        reporters: program.reporters,\n        project: program.project,\n        host: program.host,\n        headless: program.headless,\n        useLocalChromeDriver: program.useLocalChromeDriver,\n        chromeBinaryLocation: program.chromeBinaryLocation,\n        useChromeLauncher: program.useChromeLauncher,\n        port: program.port,\n        grid: program.grid,\n        gridId: program.gridId,\n        disableNativeEvents: program.disableNativeEvents,\n        saucelabs: program.saucelabs,\n        browserstack: program.browserstack,\n        baseUrl: program.baseUrl,\n        branch: (program.branch === 'auto-detect' ? utils.getEnvironmentGitBranch() : program.branch) || 'master',\n        autoDetect: program.branch === 'auto-detect',\n        token: program.token,\n        userParamsData,\n        mode: program.mode,\n        isRegressionBaselineRun: program.isRegressionBaselineRun,\n        browser: program.browser,\n        beforeParallel: program.beforeParallel,\n        parallel: program.parallel,\n        afterParallel: program.afterParallel,\n        canary: program.canary,\n        rerunFailedByRunId: program.rerunFailedByRunId,\n        disableGridCheck: program.disableGridCheck,\n        disableTimeoutRetry: program.disableTimeoutRetry,\n        resultLabels: program.resultLabel,\n        path: program.path,\n        protocol: program.protocol,\n        perfecto: program.perfecto,\n        experitestToken: program.experitestToken,\n        testobjectSauce: program.testobjectSauce,\n        gridUsername: program.gridUsername,\n        gridPassword: program.gridPassword,\n        overrideExecutionName: program.overrideExecutionName,\n\n        tmsSuppressReporting: Boolean(program.suppressTmsReporting) || Boolean(program.tmsSuppressReporting),\n        tmsRunId: program.tmsRunId,\n        tmsCustomFields: program.tmsCustomFields,\n\n        proxyForGrid: program.proxyForGrid,\n        retentionDays: program.setRetention,\n        passZeroTests: Boolean(program.passZeroTests),\n        runQuarantinedTests: Boolean(program.runQuarantinedTests),\n        //Mobile-Flags\n        deviceModel: program.deviceModel,\n        deviceUdid: program.deviceUdid,\n        osVersion: program.osVersion,\n        appId: program.appId,\n        appiumLogLevel: program.appiumLogLevel,\n        resetAppData: program.resetAppData,\n        fullReset: program.fullReset,\n        resetOnSessionStartOnly: program.resetOnSessionStartOnly,\n\n        // Extension\n        ext: program.ext,\n        extensionLocation: [program.extensionPath || extHeadlessUrl].flat(),\n        extensionPath: program.extensionPath,\n\n        // Player\n        playerLocation: program.playerPath || playerUrl,\n        playerPath: program.playerPath,\n        playerRequirePath: program.playerRequirePath,\n\n        // Tunnel\n        tunnel: program.tunnel,\n        tunnelPort: program.tunnelPort,\n        tunnelRoutes: program.tunnelRoutes,\n        tunnelRoutesOutput: program.tunnelRoutesOutput,\n        tunnelHostHeader: program.tunnelHostHeader,\n        tunnelRegion: program.tunnelRegion,\n        tunnelDiagnostics: program.tunnelDiagnostics,\n        tunnelUseHttpAddress: program.tunnelUseHttpAddress,\n        externalLambdatestTunnelId: program.externalLambdatestTunnelId,\n        externalLambdatestUseWss: program.externalLambdatestUseWss || false,\n        externalLambdatestDisableAutomationTunneling: Boolean(program.externalLambdatestDisableAutomationTunneling),\n        externalLambdatestMitm: Boolean(program.externalLambdatestMitm),\n\n        // Hooks\n        beforeTest: program.beforeTest,\n        afterTest: program.afterTest,\n        beforeSuite: program.beforeSuite,\n        afterSuite: program.afterSuite,\n\n        // Timeout\n        timeout: program.timeout,\n        timeoutWasGiven,\n        browserTimeout: program.browserTimeout,\n        newBrowserWaitTimeout: program.newBrowserWaitTimeout,\n\n        // New Timeouts\n        getBrowserTimeout: program.getBrowserTimeout,\n        getBrowserRetries: program.getBrowserRetries,\n        getSessionTimeout: program.getSessionTimeout,\n        getSessionRetries: program.getSessionRetries,\n        driverRequestTimeout: program.driverRequestTimeout,\n        driverRequestRetries: program.driverRequestRetries,\n\n        testStartTimeout: program.testStartTimeout,\n\n        testConfigNames: program.testConfig,\n        testConfigIds: program.testConfigId,\n\n        // Mock network\n        overrideMappingFile: program.overrideMappingFile,\n        disableMockNetwork: program.disableMockNetwork,\n\n        // Code coverage\n        codeCoverageUrlFilter: program.codeCoverageUrlFilter,\n        collectCodeCoverage: program.collectCodeCoverage,\n        codeCoverageReportPath: program.codeCoverageReportPath,\n        codeCoverageSourceMapPath: program.codeCoverageSourceMapPath,\n        codeCoverageReporter: program.codeCoverageReporter,\n        codeCoverageInclude: program.codeCoverageInclude,\n\n        // Remote run options\n        executionId: program.executionId,\n        remoteRunId: program.remoteRunId,\n        schedulerId: program.schedulerId,\n        source: program.source,\n        resultId: program.resultId,\n\n        //Customer Extension\n        installCustomExtension: program.installCustomExtension,\n\n        w3cCapabilities: program.w3cCapabilities,\n        oldCapabilities: program.oldCapabilities,\n\n        chromeBlockLocation: program.chromeBlockLocation,\n        chromeUserDataDir: program.chromeUserDataDir,\n        retries: program.retries,\n        chromeExtraPrefs,\n        chromeExtraArgs,\n\n        disableCookiesSameSiteNoneRequiresSecure: program.disableCookiesSameSiteNoneRequiresSecure,\n\n        seleniumCapsFileContent,\n        shouldMonitorPerformance: program.monitorPerformance,\n\n        user: program.user,\n\n        lightweightMode: program.lightweightMode,\n        createPrefechedData: program.createPrefechedData,\n\n        saveRCALocally: program.saveRcaLocally,\n        exitCodeIgnoreFailingTests: program.exitCodeIgnoreFailingTests,\n\n        disableSockets: program.disableSockets,\n\n        // intersections\n        intersections: {\n            labels: program.intersectWithLabel.length ? [program.intersectWithLabel].flat() : undefined,\n            suiteNames: program.intersectWithSuite.length ? [program.intersectWithSuite].flat() : undefined,\n            suiteIds: program.intersectWithSuiteId.length ? [program.intersectWithSuiteId].flat() : undefined,\n        },\n\n        downloadBrowser: program.downloadBrowser,\n    });\n};\n\nexport interface InstallLazyDepsOptions {\n    installLazyDepsMode: true;\n}\n\nexport interface LoginModeOptions {\n    loginMode: true;\n}\n\nexport interface InitModeOptions {\n    initCodimMode: true;\n    initTestProject: string;\n}\n\nexport interface AgentModeOptions {\n    agentMode: true;\n    project?: string;\n    token?: string;\n    agentPort: number;\n    agentBind?: string;\n    openEditor?: boolean;\n    installPlaygroundPlaywrightDeps: boolean;\n    installPlaygroundPuppeteerDeps: boolean;\n    installPlaygroundSeleniumDeps: boolean;\n    startTestimBrowser: boolean;\n    ext?: string;\n    extensionPath?: string;\n    playerLocation: string;\n    canary?: boolean;\n    playerPath?: string;\n    playerRequirePath?: string;\n    downloadBrowser: boolean;\n}\n\nexport interface TunnelDaemonOptions {\n    tunnelOnlyMode: true;\n    tunnelRoutes: string[];\n    tunnelRoutesOutput: string;\n    tunnelHostHeader?: string;\n    tunnelRegion?: string;\n}\n\nexport interface TunnelOptions extends TunnelDaemonOptions, ServerDetailsBasedOnOptions {\n    tunnel: true;\n    tunnelUseHttpAddress?: boolean;\n    token: string;\n    project: string;\n    tunnelDiagnostics?: boolean;\n    tunnelPort?: number;\n}\n\ntype CodeCoverageReporter = 'clover' | 'html' | 'json-summary' | 'json' | 'lcov' | 'lcovonly' | 'teamcity' | 'text-lcov' | 'text-summary' | 'text';\n\ntype AppiumLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'silent';\nexport interface LightweightSettings {\n    type: 'lightweight' | 'turboMode';\n    general: boolean;\n    disableLabs: boolean;\n    disableFeatureFlags: boolean;\n    disableAssets: boolean;\n    disablePixelValidation: boolean;\n    disableResults: boolean;\n    disableStepDelay: boolean;\n    disableRemoteStep: boolean;\n    assumePreloadedSharedSteps: boolean;\n    disableVisibilityCheck: boolean;\n    disableLocators: boolean;\n    bypassSetup: boolean;\n    disableAutoImprove: boolean;\n    disableQuotaBlocking: boolean;\n    onlyTestIdsNoSuite: boolean;\n    uploadAssetsAndResultsOnFailure: boolean;\n    preloadTests: boolean;\n    disableProjectDefaults: boolean;\n}\n\nexport interface ProjectData extends Pick<InitializedUserWithAuth['projectById'], 'type' | 'name' | 'defaults'> {\n    projectId: string;\n}\ninterface ServerDetailsBasedOnOptions {\n    company?: {\n        companyId: string;\n        onprem: boolean;\n        storageBaseUrl: string;\n        storageType: string;\n        name: string;\n        planType: 'pro' | 'free' | 'trial';\n        isPOC: boolean;\n        isStartUp: boolean;\n        activePlan: import('services/src/commons/mongo/db-dto-definitions/DbCompanyProjects').Plan;\n    };\n    gridData?: SerializedGrid & { failedGetBrowserAttempts?: number };\n    sfdcCredential?: string;\n    editorUrl?: string;\n    allGrids?: InitializedUserWithAuth['allGrids'];\n    authData?: InitializedUserWithAuth['authData'];\n    projectData?: ProjectData;\n    userData?: {\n        projectId: string;\n        servicesUrl: string;\n        company: RunnerOptions['company'];\n        loginData: Partial<TokenUserData> & {\n            token: string;\n            refreshToken: string;\n            authData: Partial<TokenUserData>;\n        };\n    };\n}\ninterface BeforeTestHook {\n    (params: TestRunStatusTestResult & { exportsGlobal: { [key: string]: any }; globalParameters: { [key: string]: any } }, token: string): PromiseLike<{ [key: string]: any } | undefined>;\n}\ninterface AfterTestHook {\n    (params: TestRunStatusTestResult & { exportsGlobal: { [key: string]: any }; globalParameters: { [key: string]: any } }, token: string): PromiseLike<void>;\n}\n\n// TODO: consider typing better, based on the validations we do (example: must have one of grid/grid-id/host&port/test plan)\nexport interface RunnerOptions extends ServerDetailsBasedOnOptions, Partial<Omit<TunnelOptions, 'tunnelOnlyMode' | 'tunnel' | keyof ServerDetailsBasedOnOptions>> {\n    token: string;\n    project: string;\n    user?: string;\n    webpackConfig?: string;\n    headless?: boolean;\n    disableNativeEvents?: boolean;\n    baseUrl?: string;\n    branch: string;\n    autoDetect: boolean;\n    userParamsData: object;\n    mode: 'selenium' | 'extension' | 'appium';\n    isRegressionBaselineRun?: boolean;\n    canary?: boolean;\n    rerunFailedByRunId?: string;\n    disableTimeoutRetry?: boolean;\n    resultLabels: string[];\n    path?: string;\n    protocol?: string;\n    testobjectSauce: { testobjectApiKey?: string };\n    overrideExecutionName?: string;\n    passZeroTests: boolean;\n    runQuarantinedTests: boolean;\n    downloadBrowser: boolean;\n    disableSockets: boolean;\n    disableCookiesSameSiteNoneRequiresSecure: boolean;\n    shouldMonitorPerformance?: boolean;\n    exitCodeIgnoreFailingTests?: boolean;\n    seleniumCapsFileContent: object;\n    retentionDays?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\n    retries?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20;\n    runParams?: { [testResultId: string]: object | undefined };\n\n    // #region mobile flags\n    deviceModel?: string;\n    deviceUdid?: string;\n    osVersion?: string;\n    appId?: string;\n    appiumLogLevel: AppiumLogLevel;\n    fullReset?: boolean;\n    resetAppData: boolean;\n    resetOnSessionStartOnly: boolean;\n    // #endregion\n\n    // #region What to execute\n    testId: string[];\n    name: string[];\n    label: string[];\n    suites: string[];\n    suiteIds: string[];\n    testPlan: string[];\n    testPlanIds: string[];\n    files: string[];\n    // #endregion\n\n    // #region Test config to use\n    testConfigNames?: string[];\n    testConfigIds?: string[];\n    // #endregion\n\n    // #region Grid details\n    grid?: string;\n    gridId?: string;\n    host?: string;\n    port?: number;\n    gridUsername?: string;\n    gridPassword?: string;\n    useLocalChromeDriver?: boolean;\n    chromeBinaryLocation?: string;\n    useChromeLauncher?: boolean;\n\n    disableGridCheck: boolean;\n    browser?: 'edge-chromium' | 'firefox' | 'safari' | 'chrome';\n\n    proxyForGrid: string;\n\n    experitestToken?: string;\n    saucelabs: { username: string; accessKey: string; platform?: string; platformName?: string };\n    perfecto: { securityToken?: string; location?: string };\n    browserstack: { 'browserstack.user': string; 'browserstack.key': string; os_version?: string; platform?: string };\n    // #endregion\n\n    // #region Report settings\n    reportFile?: string;\n    reportFileClassname?: string | true;\n    reporters?: string[];\n    // #endregion\n\n    // #region Parallel settings\n    beforeParallel: number;\n    parallel: number;\n    afterParallel: number;\n    //#endregion\n\n    // #region TMS\n    tmsSuppressReporting: boolean;\n    tmsRunId?: string;\n    tmsCustomFields?: string;\n    // #endregion\n\n    // #region Extension debugging\n    ext?: string;\n    extensionLocation: string[];\n    extensionPath?: string;\n    // #endregion\n\n    // #region Session Player debugging\n    playerLocation: string;\n    playerPath?: string;\n    playerRequirePath?: string;\n    // #endregion\n\n    // #region Tunnel\n    tunnel?: boolean;\n    externalLambdatestTunnelId?: string;\n    externalLambdatestUseWss?: string;\n    externalLambdatestDisableAutomationTunneling: boolean;\n    externalLambdatestMitm: boolean;\n    // #endregion\n\n    // #region Hooks\n    beforeTest?: BeforeTestHook;\n    afterTest?: AfterTestHook;\n    beforeSuite?: (params: { projectId: string; executionId: string; testNames?: string[] }) => PromiseLike<{ [key: string]: any } | undefined>;\n    afterSuite?: (params: { exportsGlobal: { [key: string]: any }; tests: any[]; total: number; passed: number; skipped: number }) => PromiseLike<void>;\n    // #endregion\n\n    // #region Timeouts\n    testStartTimeout: number;\n    timeout: number;\n    timeoutWasGiven: boolean;\n    browserTimeout: number;\n    newBrowserWaitTimeout: number;\n    getBrowserTimeout: number;\n    getBrowserRetries: number;\n    getSessionTimeout: number;\n    getSessionRetries: number;\n    driverRequestTimeout: number;\n    driverRequestRetries: number;\n    // #endregion\n\n    // #region Mock network\n    overrideMappingFile?: string;\n    mockNetworkRules?: object;\n    disableMockNetwork?: boolean;\n    // #endregion\n\n    // #region Code coverage\n    codeCoverageUrlFilter?: string;\n    collectCodeCoverage?: boolean;\n    codeCoverageReportPath?: string;\n    codeCoverageSourceMapPath?: string;\n    codeCoverageReporter: CodeCoverageReporter[];\n    codeCoverageInclude: string[];\n    // #endregion\n\n    // #region Remote run options\n    executionId?: string;\n    remoteRunId?: string;\n    schedulerId?: string;\n    source?: string;\n    resultId?: string;\n    // #endregion\n\n    // #region Customer Extension\n    installCustomExtension?: string;\n    // #endregion\n\n    // #region Capabilities format\n    w3cCapabilities: boolean;\n    oldCapabilities: boolean;\n    // #endregion\n\n    // #region Chrome specific settings\n    chromeBlockLocation: boolean;\n    chromeUserDataDir: false | string;\n    chromeExtraPrefs: object;\n    chromeExtraArgs: string[];\n    // #endregion\n\n    // #region Lightweight / Turbo Mode\n    lightweightMode?: LightweightSettings;\n    createPrefechedData?: boolean;\n    saveRCALocally?: boolean | string;\n    localRCASaver?: string;\n    // #endregion\n\n    // #region intersections\n    intersections: { labels?: string[]; suiteNames?: string[]; suiteIds?: string[] };\n    // #endregion\n\n    // #region visited URLs\n    urls?: string;\n    // #endregion\n}\n\nexport type Options = |\n    InstallLazyDepsOptions |\n    LoginModeOptions |\n    InitModeOptions |\n    AgentModeOptions |\n    TunnelOptions |\n    RunnerOptions;\n", "/* eslint-disable no-console */\n// fixes the local build if running the runner locally\nimport * as path from 'path';\nimport { existsSync } from 'fs';\nimport { execSync } from 'child_process';\n\nconst location = path.resolve(__filename);\nconst isDevBuild = typeof global.meta?.IS_LOCAL !== 'boolean' || (!location.includes('node_modules') && path.dirname(location).endsWith('src'));\n\nif (isDevBuild && !existsSync(path.resolve(location, '..', '..', '..', 'webdriverio', 'build', 'index.js'))) {\n    console.log(\"Hi developer, we're initializing the runner dev env for the first time for you \u2764\uFE0F\");\n    execSync('yarn workspace @testim/webdriverio build', { cwd: path.resolve(location, '..', '..') });\n}\n\n", "import ora from 'ora';\nimport * as npmWrapper from './npmWrapper';\nimport { getLogger } from './logger';\nimport { getCliLocation } from '../utils';\nimport { lazyDependencies } from '../../package.json';\nimport { requireWithFallback } from './requireWithFallback';\n\nconst logger = getLogger('lazy-require');\nconst ongoingCalls = new Map();\n\nexport async function lazyRequire(dependency: string, options: { silent?: boolean } = {}) {\n    const packageLocally = npmWrapper.getPackageIfInstalledLocally(dependency);\n    if (packageLocally) {\n        return packageLocally;\n    }\n\n    let spinner;\n    if (!options.silent) {\n        spinner = ora(`Installing ${dependency} before first usage...`).start();\n    }\n\n    try {\n        const requiredModule = await memoizedLazyRequire(dependency);\n        if (spinner) {\n            spinner.succeed();\n        }\n        return requiredModule;\n    } catch (error) {\n        logger.warn('failed to install dependency lazily', { dependency, err: error });\n        const depVersionToInstall = getVersionOfLazyDep(dependency);\n        const depWithVersions = `${dependency}@${depVersionToInstall}`;\n\n        const removeGlobal = process.argv.includes('npx');\n        const globalFlag = removeGlobal ? '' : '-g ';\n        const errorMessage = `Installation of ${dependency} failed. This typically means you are running an out-of-date version of Node.js or NPM.` +\n        `Please manually install by running the following command: npm install ${globalFlag}${depWithVersions}`;\n\n        if (spinner) {\n            spinner.fail(errorMessage);\n        }\n\n        throw error;\n    }\n}\n\nasync function memoizedLazyRequire(identifier: string) {\n    if (ongoingCalls.has(identifier)) {\n        return ongoingCalls.get(identifier);\n    }\n\n    ongoingCalls.set(identifier, lazyRequireImpl(identifier));\n    ongoingCalls.get(identifier).catch(() => {\n        ongoingCalls.delete(identifier);\n    });\n\n    return ongoingCalls.get(identifier);\n}\n\nasync function lazyRequireImpl(dependency: string) {\n    const packageLocally = npmWrapper.getPackageIfInstalledLocally(dependency);\n\n    if (packageLocally) {\n        return packageLocally;\n    }\n\n    const depVersionToInstall = getVersionOfLazyDep(dependency);\n\n    const depWithVersions = `${dependency}@${depVersionToInstall}`;\n\n    await npmWrapper.installPackageLocally(getCliLocation(), depWithVersions);\n\n    return requireWithFallback(dependency);\n}\n\nexport async function installAllLazyDependencies() {\n    const allLazyDependencies = Object.keys(lazyDependencies);\n\n    for (const dep of allLazyDependencies) {\n        await lazyRequireImpl(dep);\n    }\n}\n\nfunction getVersionOfLazyDep(dependencyToFind: string) {\n    const depEntry = Object.entries(lazyDependencies)\n        .find(([dep]) => dep === dependencyToFind);\n\n    if (!depEntry) {\n        throw new Error('The given package name is not lazyDependencies');\n    }\n\n    return depEntry[1];\n}\n", "/* eslint-disable no-console */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as childProcess from 'child_process';\nimport ora from 'ora';\nimport chalk from 'chalk';\nimport prompts from 'prompts';\nimport validateNpmPackageName from 'validate-npm-package-name';\nimport { promisify } from 'util';\nimport { ArgError } from '../errors';\nimport { copyDir } from '../utils/fsUtils';\n\nconst exec = promisify(childProcess.exec);\n\n/** @param {string} name */\nexport async function init(name: boolean | string) {\n    let typedName: string = typeof name === 'string' ? name : '';\n    if (typeof name !== 'string' || !name.trim()) {\n        const response = await prompts({\n            type: 'text',\n            name: 'project',\n            message: 'Please enter Project name',\n            validate: value => String(value).length > 3,\n        });\n        typedName = response.project;\n    }\n\n    const fullPath = path.resolve(typedName);\n\n    if (fs.existsSync(fullPath) && fs.readdirSync(fullPath).length !== 0) {\n        console.log(`${fullPath} is not empty. Quitting...`);\n        process.exit(1);\n    }\n\n    const packageName = fullPath.substr(Math.max(fullPath.lastIndexOf('/'), fullPath.lastIndexOf('\\\\')) + 1);\n\n    const nameValidity = validateNpmPackageName(packageName);\n\n    if (!nameValidity.validForNewPackages) {\n        const message = `The name '${packageName}' is not a valid package name:`;\n        console.log(chalk.red(message));\n        if (nameValidity.errors) nameValidity.errors.forEach((e) => console.log(chalk.red(e)));\n        if (nameValidity.warnings) nameValidity.warnings.forEach((e) => console.log(chalk.yellowBright(`warning: ${e}`)));\n\n        throw new ArgError(`${message}\\nvalidation errors:\\n${nameValidity.errors?.join('\\n') || ''}\\nwarnings:\\n${nameValidity.warnings?.join('\\n') || ''}`);\n    }\n\n    const response = await prompts({\n        type: 'toggle',\n        name: 'isJs',\n        message: 'Add support for TypeScript?',\n        initial: true,\n        active: 'no',\n        inactive: 'yes',\n    });\n\n    const sourceFolder = response.isJs ? 'template.js' : 'template.ts'; // these are directories and not file names\n    const templatesPath = typeof global.meta?.IS_LOCAL === 'boolean' ? 'codim' : '';\n\n    const source = path.join(__dirname, templatesPath, sourceFolder);\n    const destDir = path.join(process.cwd(), typedName);\n\n    let spinner = ora(`Creating new test project in ${destDir}`).start();\n\n    await copyDir(source, destDir);\n\n    const sourcePackageJson = path.join(__dirname, templatesPath, sourceFolder, 'package.json');\n    const destPackageJson = path.join(process.cwd(), typedName, 'package.json');\n\n    const packageContents = await fs.promises.readFile(sourcePackageJson);\n\n    const newPackageJson = packageContents.toString().replace('~testim-codeful-test-project~', packageName);\n\n    await fs.promises.writeFile(destPackageJson, newPackageJson);\n\n    const gitIgnore = 'node_modules';\n    const gitIgnoreFilePath = path.join(process.cwd(), typedName, '.gitignore');\n    await fs.promises.writeFile(gitIgnoreFilePath, gitIgnore);\n\n    spinner.succeed();\n    spinner = ora('Installing dependencies').start();\n    await exec('npm install', { cwd: destDir });\n\n    spinner.succeed();\n\n    console.log(`Testim Dev Kit project folder successfully created in ${destDir}.`);\n}\n", "import * as _ from 'lodash';\nimport * as localRunnerCache from './runnerFileCache';\nimport * as servicesApi from './testimServicesApi';\nimport { promiseMap } from '../utils';\nimport type { RunnerOptions } from '../runOptions';\n\nconst TEN_HOURS = 1000 * 60 * 60 * 10;\n\nexport async function preloadTests(options: RunnerOptions) {\n    if (!Array.isArray(options.testId) || !options.testId.length) {\n        return {};\n    }\n    const opts = {\n        branch: options.branch,\n        projectId: options.project,\n    };\n    return await localRunnerCache.memoize(async () => {\n        const results = await promiseMap(options.testId, testId => servicesApi.loadTest({ ...opts, testId }), { concurrency: 2 });\n        return _.keyBy(results, 'testData.id');\n    }, 'loadTests', TEN_HOURS, [opts, options.testId])();\n}\n", "/* eslint-disable no-console */\n\nimport chalk from 'chalk';\nimport * as semver from 'semver';\nimport * as utils from './utils';\nimport * as config from './commons/config';\nimport * as npmWrapper from './commons/npmWrapper';\nimport * as localRunnerCache from './commons/runnerFileCache';\nimport { getLogger } from './commons/logger';\n\nconst logger = getLogger('npm-driver');\n\nconst getNpmVersion = localRunnerCache.memoize(() => npmWrapper.getLatestPackageVersion('@testim/testim-cli'), 'getNpmVersion');\n\nexport function getPackageVersion() {\n    return utils.getRunnerVersion();\n}\n\nexport async function checkNpmVersion() {\n    if (config.IS_ON_PREM || !global.meta?.IS_RELEASE) {\n        return;\n    }\n    try {\n        const latestVersion = await utils.promiseTimeout(getNpmVersion(), 5000, 'The API call to NPM timed out');\n        const packVersion = getPackageVersion();\n        if (packVersion && semver.lt(packVersion, latestVersion)) {\n            console.log(chalk.yellow(\n                `Warning: You are using version ${packVersion}, a newer version is available. To update please run npm install (npm install -g @testim/testim-cli)`),\n            );\n        }\n    } catch (err) {\n        logger.warn('Failed to get NPM version', { err });\n    }\n}\n", "import * as utils from '../utils';\nimport { ArgError } from '../errors';\nimport { getLogger } from './logger';\nimport { lazyRequire } from './lazyRequire';\nimport type { TokenUserData } from './testimCustomToken';\nimport type { RunnerOptions, TunnelOptions } from 'src/runOptions';\n\nconst logger = getLogger('testimNgrok');\n\nconst WHITELISTED_TUNNEL_DOMAIN_SUFFIX = '.whitelisted-ngrok.testim.io';\n\nlet ngrokTunnelUrl = '';\nlet statsTimeout: NodeJS.Timeout | undefined;\n\nexport const connectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions, authData: Partial<TokenUserData> = {}) => {\n    if (!authData.ngrokToken) {\n        throw new ArgError('tunnel feature is not enabled, please contact support - info@testim.io.');\n    }\n\n    let hostname;\n    if (authData.isNgrokWhitelisted) {\n        hostname = `${utils.guid()}-${options.projectData!.projectId}${WHITELISTED_TUNNEL_DOMAIN_SUFFIX}`;\n    }\n\n    const connectOpt: Record<string, string | number | undefined> = {\n        proto: 'http',\n        addr: options.tunnelPort || 80,\n        authtoken: authData.ngrokToken,\n        hostname,\n    };\n    if (options.tunnelHostHeader) {\n        // eslint-disable-next-line camelcase\n        connectOpt.host_header = options.tunnelHostHeader;\n    }\n    if (options.tunnelRegion) {\n        connectOpt.region = options.tunnelRegion;\n    }\n\n    const ngrok = await lazyRequire('ngrok');\n    const url = await ngrok.connect(connectOpt);\n\n    if (options.tunnelUseHttpAddress && url.startsWith('https://')) {\n        logger.info('replace https to http');\n        const newUrl = url.replace('https://', 'http://');\n\n        ngrokTunnelUrl = newUrl;\n    } else {\n        ngrokTunnelUrl = url;\n    }\n\n    if (options.tunnelDiagnostics) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        collectNgrokStats();\n    }\n    (options as RunnerOptions).baseUrl = ngrokTunnelUrl;\n};\n\nexport const collectNgrokStats = async (rerun = true) => {\n    try {\n        const ngrok = await lazyRequire('ngrok');\n        const api = ngrok.getApi();\n        const { tunnels } = await api.listTunnels() as { tunnels: { public_url: string }[] };\n        const tunnel = tunnels.find(t => t.public_url === ngrokTunnelUrl);\n\n        // eslint-disable-next-line no-console\n        console.log('ngrok stats', tunnel);\n        logger.info('ngrok stats', { tunnel });\n    } catch (err) {\n        logger.error('error collecting ngrok stats', { err });\n    }\n    if (rerun) {\n        statsTimeout = setTimeout(() => collectNgrokStats(), 10000);\n    }\n};\n\nexport const disconnectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions) => {\n    if (!ngrokTunnelUrl) {\n        return;\n    }\n\n    clearTimeout(statsTimeout!);\n    if (options.tunnelDiagnostics) {\n        await collectNgrokStats(false);\n    }\n    const ngrok = await lazyRequire('ngrok');\n    await ngrok.disconnect(ngrokTunnelUrl);\n};\n", "import * as os from 'os';\nimport * as fs from 'fs';\nimport * as childProcess from 'child_process';\nimport * as utils from '../utils';\nimport * as servicesApi from './testimServicesApi';\nimport type { RunnerOptions, TunnelOptions } from 'src/runOptions';\n\nconst TUNNEL_BINARY_ORIGIN = 'https://github.com/cloudflare/cloudflared/releases/download/2022.4.1/';\nconst TUNNEL_BINARY_PATHNAME: Partial<{ [os: string]: { path: string; extract?: true } }> = {\n    win32ia32: { path: 'cloudflared-windows-386.exe' },\n    win32x64: { path: 'cloudflared-windows-amd64.exe' },\n    darwinx64: { path: 'cloudflared-darwin-amd64.tgz', extract: true },\n    linuxia32: { path: 'cloudflared-linux-386' },\n    linuxx64: { path: 'cloudflared-linux-amd64' },\n};\nconst TUNNEL_BINARY_DIRECTORY = os.tmpdir();\nconst TUNNEL_BINARY_LOCATION = `${TUNNEL_BINARY_DIRECTORY}/cloudflared`;\n\n\nlet tunnelId: string | null | undefined = null;\nlet tunnelProcess: childProcess.ChildProcess | null = null;\n\nexport const prepareTunnel = async () => {\n    const isBinaryExist = await utils.doesPathExist(TUNNEL_BINARY_LOCATION);\n    if (isBinaryExist) {\n        return;\n    }\n\n    const downloadUrl = TUNNEL_BINARY_PATHNAME[os.platform() + os.arch()];\n    if (!downloadUrl) {\n        throw new Error(`tunnel on ${os.platform() + os.arch()} platform is not supported.`);\n    }\n    const destination = downloadUrl.extract ? TUNNEL_BINARY_DIRECTORY + downloadUrl.path : TUNNEL_BINARY_LOCATION;\n    await utils.downloadAndSave(`${TUNNEL_BINARY_ORIGIN}/${downloadUrl.path}`, destination);\n    if (downloadUrl.extract) {\n        await utils.unzipFile(destination, TUNNEL_BINARY_DIRECTORY);\n    }\n    await fs.promises.chmod(TUNNEL_BINARY_LOCATION, '755');\n};\n\nexport const connectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions) => {\n    const tunnelBaseUrl = (options as RunnerOptions).baseUrl || `http://localhost:${options.tunnelPort || 80}`;\n    const tunnelRoutes = ('tunnelRoutes' in options && options.tunnelRoutes) || [tunnelBaseUrl];\n    const [result] = await Promise.all([\n        servicesApi.getCloudflareTunnel(options.company!.companyId, tunnelRoutes),\n        prepareTunnel(),\n    ]);\n    tunnelId = result._id;\n    tunnelProcess = childProcess.spawn(TUNNEL_BINARY_LOCATION, ['tunnel', '--no-autoupdate', 'run', '--force', '--token', result.token!], { stdio: 'inherit' });\n    await servicesApi.forceUpdateCloudflareTunnelRoutes(options.company!.companyId, tunnelId!);\n\n    if ('tunnelRoutesOutput' in options && options.tunnelRoutesOutput) {\n        await fs.promises.writeFile(options.tunnelRoutesOutput, JSON.stringify(result.routesMapping, null, 2));\n    }\n\n    (options as RunnerOptions).baseUrl = `${options.tunnelUseHttpAddress ? 'http' : 'https'}://${result.routesMapping![tunnelBaseUrl as keyof typeof result.routesMapping]}`;\n};\n\nexport const disconnectTunnel = async (options: Partial<TunnelOptions> | RunnerOptions) => {\n    const promises = [];\n    if (tunnelId) {\n        promises.push(servicesApi.deleteCloudflareTunnel(options.company!.companyId, tunnelId));\n    }\n    if (tunnelProcess) {\n        promises.push(new Promise<void>((resolve, reject) => {\n            tunnelProcess!.on('close', (code) => {\n                if (code) {\n                    reject(new Error(`tunnel process exited with code ${code}`));\n                }\n                resolve();\n            });\n            tunnelProcess!.kill();\n        }));\n    }\n    return await Promise.all(promises);\n};\n", "import Rox from 'rox-node';\nimport { getLogger } from './logger';\nimport { promiseTimeout } from '../utils';\nimport { ROLLOUT_KEY, IS_ON_PREM, GATEWAY_URL } from './config';\n\nconst logger = getLogger('FeatureFlagsService');\n\n// IS_UNIT_TEST = disable rollout if code run in unit test mode to ignore mocha process stuck on running\nconst USE_FEATURE_FLAGS = !IS_ON_PREM && !process.env.IS_UNIT_TEST && !GATEWAY_URL;\n\nconst FORCE_FETCH_TIMEOUT_MS = 20_000; // rollout sometimes takes up to 15 seconds to load\nconst SEC_IN_DAY = 60 * 60 * 24;\nconst LAB_FEATURE_FLAG_VALUES = ['labs', 'disabled', 'enabled'] as const;\n\nclass LabFeatureFlag extends Rox.Variant {\n    constructor(initialValue = 'disabled') {\n        super(initialValue, LAB_FEATURE_FLAG_VALUES);\n    }\n\n    getValue() {\n        const value = super.getValue() as typeof LAB_FEATURE_FLAG_VALUES[number];\n        if (!LAB_FEATURE_FLAG_VALUES.includes(value)) {\n            logger.warn('unexpected value for lab feature flag. Falling back to value \"labs\"', { featureFlagName: this.name, value });\n            return 'labs';\n        }\n\n        return value;\n    }\n}\n\nclass FeatureFlagsService {\n    public readonly flags;\n    constructor() {\n        this.flags = {\n            useNewWSCLI: new Rox.Flag(),\n            useSafariWebdriverVisibilityChecks: new Rox.Flag(),\n            useClickimVisibilityChecks: new Rox.Flag(),\n            runGetElementCodeInAut: new Rox.Flag(),\n            enableFrameSwitchOptimization: new Rox.Flag(),\n            maximumJsResultSize: new Rox.Configuration(2000 * 1024),\n            skipFileInputClicks: new Rox.Flag(),\n            errorMessageOnBadNetwork: new Rox.Flag(true),\n            warnOnBadNetwork: new Rox.Flag(false),\n            overrideAzureStorageUrl: new Rox.Flag(),\n            useJsInputCodeInSafari: new Rox.Flag(),\n            useJsInputCodeInFirefox: new Rox.Flag(),\n            autoSaveDownloadFileFireFox: new Rox.Flag(true),\n            safariSelectOptionDispatchEventOnSelectElement: new Rox.Flag(true),\n            experimentalPreCodeCompilation: new Rox.Flag(true),\n            /** Enables using top level await inside custom actions */\n            experimentalAsyncCustomCode: new Rox.Flag(),\n            useSameBrowserForMultiTests: new LabFeatureFlag('labs'),\n            highSpeedMode: new LabFeatureFlag(),\n            usePortedHtml5DragDrop: new Rox.Flag(),\n            testNamesToBeforeSuiteHook: new Rox.Flag(),\n            // @ts-expect-error variant expects to get an options array, but it works also without it.\n            addCustomCapabilities: new Rox.Variant('{}'),\n            enableWorkerThreadsCliCodeExecution: new Rox.Flag(true),\n            LTNetworkCapabilities: new Rox.Flag(),\n            downloadToBase64: new Rox.Flag(),\n            dec2022eolBrowsers: new Rox.Flag(),\n            publicGridURL: new Rox.Configuration('public-grid.testim.io'),\n            allowAppFromDeviceRuns: new Rox.Flag(true),\n        };\n        Rox.register('default', this.flags);\n    }\n\n    setProjectId(projectId: string) {\n        Rox.setCustomStringProperty('projectId', projectId);\n    }\n\n    setProjectType(projectType: string) {\n        Rox.setCustomStringProperty('projectType', projectType);\n    }\n\n    setCompanyProductType(productType: string) {\n        Rox.setCustomStringProperty('productType', productType);\n    }\n\n    setCompanyId(companyId: string) {\n        Rox.setCustomStringProperty('companyId', companyId);\n    }\n\n    setPlanType(planType: string) {\n        Rox.setCustomStringProperty('planType', planType);\n    }\n\n    setIsPOC(isPOC: boolean) {\n        Rox.setCustomBooleanProperty('isPOC', isPOC);\n    }\n\n    setIsStartUp(isStartUp: boolean) {\n        Rox.setCustomBooleanProperty('isStartUp', isStartUp);\n    }\n\n    setRunnerMode(mode: string) {\n        Rox.setCustomStringProperty('runnerMode', mode);\n    }\n\n    async fetch() {\n        if (!USE_FEATURE_FLAGS) {\n            return undefined;\n        }\n        const opts: Rox.RoxSetupOptions = {\n            fetchIntervalInSec: SEC_IN_DAY, // we don't actually want to refresh feature flags in the CLI,\n            disableNetworkFetch: false,\n        };\n\n\n        if (global.ProxyAgent) {\n            const agent = new global.ProxyAgent(global.proxyUri);\n            Object.assign(opts, { httpsAgent: agent, httpAgent: agent });\n        }\n\n        return promiseTimeout(Rox.setup(ROLLOUT_KEY, opts), FORCE_FETCH_TIMEOUT_MS)\n            .catch(err => logger.error('failed to get feature flag status', err));\n    }\n}\n\nexport type LabFeatureFlagType = LabFeatureFlag;\nexport const featureFlagsService = new FeatureFlagsService();\n", "import ms from 'ms';\nimport pRetry from 'p-retry';\nimport * as os from 'os';\nimport * as portfinder from 'portfinder';\nimport * as childProcess from 'child_process';\nimport * as utils from '../utils';\nimport * as httpRequest from '../commons/httpRequest';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport { ArgError } from '../errors';\nimport { getLogger } from '../commons/logger';\nimport { getExtensionsUrl } from '../runOptionsUtils';\nimport { gridTypes, CLI_MODE } from '../commons/constants';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport type { SerializedGrid } from './gridService';\nimport type { RunnerOptions, TunnelOptions } from '../runOptions';\n\nconst logger = getLogger('lambdatestService');\n\nconst LT_TUNNEL_BINARY_ORIGIN = 'https://downloads.lambdatest.com/tunnel/v3';\nconst LT_TUNNEL_BINARY_PATHNAME = {\n    win32ia32: 'windows/32bit/LT_Windows.zip',\n    win32x64: 'windows/64bit/LT_Windows.zip',\n    darwinia32: 'mac/32bit/LT_Mac.zip',\n    darwinx64: 'mac/64bit/LT_Mac.zip',\n    darwinarm64: 'mac/64bit/LT_Mac.zip',\n    linuxia32: 'linux/32bit/LT_Linux.zip',\n    linuxx64: 'linux/64bit/LT_Linux.zip',\n    freebsdia32: 'freebsd/32bit/LT_Freebsd.zip',\n    freebsdx64: 'freebsd/64bit/LT_Freebsd.zip',\n};\nconst LT_TUNNEL_BINARY_DIRECTORY = `${os.tmpdir()}/LT`;\nconst LT_TUNNEL_BINARY_LOCATION = `${LT_TUNNEL_BINARY_DIRECTORY}/LT`;\n\nconst LT_MINIMUM_CONNECTION_RETRY_TIMEOUT = ms('15m');\n\ntype LambdaTestConfig = utils.AwaitedReturnType<typeof servicesApi.fetchLambdatestConfig>;\n\nexport class LambdatestService {\n    isActive = false;\n    static tunnel: childProcess.ChildProcess | undefined;\n    static tunnelName: string | undefined;\n    static lambdatestConfigPromise: Promise<LambdaTestConfig> | undefined;\n    static lambdatestConfig: LambdaTestConfig | undefined;\n\n    public static isLambdatestGrid(gridData: SerializedGrid) {\n        return gridData.type === gridTypes.LAMBDATEST || (gridData.type === gridTypes.HYBRID && gridData.provider === 'lambdatest');\n    }\n\n    public isLambdatestRun() {\n        return this.isActive;\n    }\n\n    public async enableIfNeeded(gridData: SerializedGrid) {\n        if (!LambdatestService.isLambdatestGrid(gridData)) {\n            return;\n        }\n\n        LambdatestService.lambdatestConfigPromise ||= servicesApi.fetchLambdatestConfig();\n        LambdatestService.lambdatestConfig = await LambdatestService.lambdatestConfigPromise;\n        this.isActive = true;\n    }\n\n    public disable() {\n        this.isActive = false;\n    }\n\n    public get getSessionTimeout() {\n        if (!this.isActive) {\n            return null;\n        }\n        return LT_MINIMUM_CONNECTION_RETRY_TIMEOUT;\n    }\n\n    public get getSessionRetries() {\n        if (!this.isActive) {\n            return null;\n        }\n        return 1;\n    }\n\n    // https://www.lambdatest.com/support/docs/beta-lambda-tunnel-for-corporate-firewalls/\n    private static async prepareTunnel() {\n        const isBinaryExist = await utils.doesPathExist(LT_TUNNEL_BINARY_LOCATION);\n        if (isBinaryExist) {\n            return;\n        }\n\n        const downloadUrl = LT_TUNNEL_BINARY_PATHNAME[os.platform() + os.arch() as keyof typeof LT_TUNNEL_BINARY_PATHNAME];\n        if (!downloadUrl) {\n            throw new Error(`tunnel on ${os.platform() + os.arch()} platform is not supported.`);\n        }\n        const zipLocation = `${LT_TUNNEL_BINARY_DIRECTORY}.zip`;\n        await utils.downloadAndSave(`${LT_TUNNEL_BINARY_ORIGIN}/${downloadUrl}`, zipLocation);\n        await utils.unzipFile(zipLocation, LT_TUNNEL_BINARY_DIRECTORY);\n    }\n\n    public static async connectTunnel(runnerOptions: Partial<TunnelOptions> | RunnerOptions) {\n        if ((runnerOptions as RunnerOptions).externalLambdatestTunnelId) {\n            LambdatestService.tunnelName = (runnerOptions as RunnerOptions).externalLambdatestTunnelId;\n            return;\n        }\n        await this.prepareTunnel();\n        const infoAPIPort = await portfinder.getPortPromise();\n        const { gridData = {}, gridUsername, gridPassword } = runnerOptions as RunnerOptions;\n        const proxyUri = global.proxyUri;\n        LambdatestService.tunnelName = utils.guid();\n\n        let tunnelArgs = [\n            '--tunnelName', LambdatestService.tunnelName,\n            '--infoAPIPort', String(infoAPIPort),\n        ];\n\n        if ((runnerOptions as RunnerOptions).externalLambdatestUseWss) {\n            tunnelArgs = [...tunnelArgs, '--mode', 'ws'];\n        }\n        if ((runnerOptions as RunnerOptions).externalLambdatestDisableAutomationTunneling) {\n            // eslint-disable-next-line max-len\n            tunnelArgs = [...tunnelArgs, '--bypassHosts', 'run.testim.io,services.testim.io,api.coralogix.com,conf.rollout.io,statestore.rollout.io,push.rollout.io,analytic.rollout.io,res.cloudinary.com'];\n        }\n\n        if (gridData.tunnelUser && gridData.tunnelKey) {\n            tunnelArgs = [...tunnelArgs, '--user', gridData.tunnelUser, '--key', gridData.tunnelKey];\n        } else if (gridUsername && gridPassword) {\n            tunnelArgs = [...tunnelArgs, '--user', gridUsername, '--key', gridPassword];\n        } else {\n            throw new ArgError('tunnel requires username and password');\n        }\n\n        if (proxyUri) {\n            try {\n                const proxyUrl = new URL(proxyUri);\n                tunnelArgs = [...tunnelArgs, '--proxy-host', proxyUrl.hostname];\n                if (proxyUrl.port) {\n                    tunnelArgs = [...tunnelArgs, '--proxy-port', proxyUrl.port];\n                }\n                if (proxyUrl.username && proxyUrl.password) {\n                    tunnelArgs = [...tunnelArgs, '--proxy-user', proxyUrl.username, '--proxy-pass', proxyUrl.password];\n                }\n            } catch (e) {\n                throw new ArgError('proxy url is invalid');\n            }\n        }\n\n        if ((runnerOptions as RunnerOptions).externalLambdatestMitm) {\n            tunnelArgs = [...tunnelArgs, '--mitm'];\n        }\n\n        LambdatestService.tunnel = childProcess.spawn('./LT', tunnelArgs, { cwd: LT_TUNNEL_BINARY_DIRECTORY });\n\n        let stdoutResult = '';\n        let stderrResult = '';\n\n        LambdatestService.tunnel.stdout!.on('data', (data) => {\n            stdoutResult += data.toString();\n        });\n\n        LambdatestService.tunnel.stderr!.on('data', (data) => {\n            stderrResult += data.toString();\n        });\n\n        // verify that LT tunnel strated successfully\n        try {\n            const ltInfo = await pRetry(() => httpRequest.get(`http://127.0.0.1:${infoAPIPort}/api/v1.0/info`, {}, {}, undefined, { skipProxy: true }), { retries: 30, minTimeout: 2000 });\n            logger.info('LT tunnel info', ltInfo);\n        } catch (err) {\n            logger.error('Failed to start LT tunnel', { err, stdoutResult, stderrResult });\n            throw err;\n        }\n    }\n\n    public static async disconnectTunnel(runnerOptions: Partial<TunnelOptions> | RunnerOptions) {\n        if ((runnerOptions as RunnerOptions).externalLambdatestTunnelId || !LambdatestService.tunnel) {\n            return undefined;\n        }\n        return new Promise<void>((resolve, reject) => {\n            LambdatestService.tunnel!.on('close', (code) => {\n                if (code) {\n                    reject(new Error(`tunnel process exited with code ${code}`));\n                }\n                resolve();\n            });\n            LambdatestService.tunnel!.kill();\n        });\n    }\n\n    getCapabilities(runnerOptions: RunnerOptions, browser: string, executionId: string, testResultId: string, testName: string) {\n        if (!this.isActive) {\n            return {};\n        }\n\n        const defaultBrowserCaps = LambdatestService.lambdatestConfig!.CAPABILITIES[browser as keyof LambdaTestConfig['CAPABILITIES']] || {};\n\n\n        const tunnelCaps = {\n            ...(LambdatestService.tunnelName && { tunnel: true, tunnelName: LambdatestService.tunnelName }),\n        };\n\n        let loadExtension: string[] = [];\n        const { mode, canary, ext, extensionPath, installCustomExtension } = runnerOptions;\n        if (mode === CLI_MODE.EXTENSION && !ext) {\n            const extUrls = getExtensionsUrl({ canary } as any, true);\n            if (!extensionPath && extUrls[browser as keyof typeof extUrls]) {\n                loadExtension = [...loadExtension, extUrls[browser as keyof typeof extUrls]];\n            }\n            if (extensionPath && utils.isURL(extensionPath)) {\n                loadExtension = [...loadExtension, extensionPath];\n            }\n        }\n        if (installCustomExtension && utils.isURL(installCustomExtension)) {\n            loadExtension = [...loadExtension, installCustomExtension];\n        }\n\n        return {\n            build: executionId,\n            name: `${testResultId} - ${testName}`,\n            platform: LambdatestService.lambdatestConfig!.PLATFORM,\n            // eslint-disable-next-line camelcase\n            selenium_version: LambdatestService.lambdatestConfig!.SELENIUM_VERSION,\n            resolution: LambdatestService.lambdatestConfig!.RESOLUTION,\n            timezone: LambdatestService.lambdatestConfig!.TIMEZONE,\n            ...defaultBrowserCaps,\n            loadExtension,\n            ...tunnelCaps,\n            console: true,\n            queueTimeout: 300, // time a session spends in the LT queue, in seconds (apparently 300 is the minimum)\n            // visual: true, // [NOTE]: activate LT screenshots feature (can slow test).\n            network: featureFlagsService.flags.LTNetworkCapabilities.isEnabled(), // [NOTE]: activate LT capture network logs feature (can cause network issues).\n            // fixedIP: '10.80.34.143', // [NOTE]: this is for debug purposes with LT team.\n        };\n    }\n}\n", "import * as testimNgrok from './testimNgrok';\nimport * as processHandler from '../processHandler';\nimport * as testimCloudflare from './testimCloudflare';\nimport * as testimCustomToken from './testimCustomToken';\nimport ora from 'ora';\nimport { getLogger } from './logger';\nimport { gridTypes } from './constants';\nimport { LambdatestService } from '../services/lambdatestService';\nimport type { RunnerOptions, TunnelOptions } from 'src/runOptions';\n\nconst logger = getLogger('tunnel');\ntype Options = Partial<TunnelOptions> | RunnerOptions;\n\nconst shouldUseLambdatestTunnel = (options: Options) => [gridTypes.LAMBDATEST, gridTypes.HYBRID].includes(options.gridData?.type as any) && options.gridData!.tunnel === 'lambdatest';\nconst shouldUseCloudflareTunnel = (options: Options) => options.tunnelRoutes || (options.gridData?.type === gridTypes.HYBRID && options.gridData!.tunnel === 'cloudflare');\n\nexport const connect = async (options: Options) => {\n    if (!options.tunnel) {\n        return;\n    }\n\n    const authData = testimCustomToken.getTokenV3UserData();\n    let spinner;\n    try {\n        if (shouldUseLambdatestTunnel(options)) {\n            spinner = ora('Starting testim lambdatest tunnel...').start();\n            await LambdatestService.connectTunnel(options);\n        } else if (shouldUseCloudflareTunnel(options)) {\n            spinner = ora('Starting testim cloudflare tunnel...').start();\n            await testimCloudflare.connectTunnel(options);\n        } else {\n            spinner = ora('Starting testim ngrok tunnel...').start();\n            await testimNgrok.connectTunnel(options, authData);\n        }\n        spinner.succeed();\n    } catch (err) {\n        const msg = 'Failed to start tunnel. Please contact support@testim.io';\n        logger.error('Failed to open tunnel', { err });\n        spinner?.fail(msg);\n        throw new Error(msg);\n    }\n};\n\nexport const disconnect = async (options: Options) => {\n    if (!options.tunnel) {\n        return;\n    }\n\n    try {\n        if (shouldUseLambdatestTunnel(options)) {\n            await LambdatestService.disconnectTunnel(options);\n        } else if ('tunnelRoutes' in options) {\n            await testimCloudflare.disconnectTunnel(options);\n        } else {\n            await testimNgrok.disconnectTunnel(options);\n        }\n    } catch (err) {\n        const msg = 'catch error - failed to close tunnel';\n        logger.error(msg, { err });\n        throw new Error(msg);\n    }\n};\n\nexport const serveTunneling = async (options: Partial<TunnelOptions>, waitFor = new Promise(() => { /* avoid exiting process */ })) => {\n    await connect(options);\n    processHandler.registerExitHook(() => disconnect(options));\n    return await waitFor;\n};\n", "import * as _ from 'lodash';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport { getLogger } from '../commons/logger';\nimport { hasTestPlanFlag, promiseMap } from '../utils';\nimport { gridMessages, gridTypes } from '../commons/constants';\nimport { GridError, ArgError, GridConcurrencyError } from '../errors';\nimport type { AwaitedReturnType } from '../utils';\nimport type { RunnerOptions } from '../runOptions';\nimport type { CommonSharedOptions } from '../runner';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { LambdatestService } from './LambdatestService';\nimport type { RawTestPlan } from 'services/src/commons/mongo/models/testPlan';\nimport type { RawGrid, TunnelType } from 'services/src/commons/mongo/models/grid';\n\nconst logger = getLogger('grid-service');\n\ntype VendorType = 'testobject' | 'saucelabs' | 'perfecto' | 'hostAndPort';\nconst gridCache: Record<number, { gridId: string; companyId: string; slotId: string; browser: string }> = {};\nconst urlExtractRegex = /(^(https?):\\/{2})?(.*)/;\nlet keepAliveTimer: NodeJS.Timeout | null = null;\n\nfunction extractProtocol(grid: GridSerializationInput) {\n    if (grid.protocol) {\n        return grid.protocol;\n    }\n\n    if ([gridTypes.TESTIM, gridTypes.BROWSERSTACK, gridTypes.SAUCELABS].includes(grid.type as any) && grid.port === 443) {\n        return 'https';\n    }\n\n    if ([gridTypes.TESTIM_ENTERPRISE, gridTypes.LAMBDATEST, gridTypes.DEVICE_FARM].includes(grid.type as any)) {\n        const urlExtract = urlExtractRegex.exec(grid.host!);\n        return (urlExtract?.[2] as 'http') || 'https';\n    }\n\n    return '';\n}\n\nfunction extractHost(hostUrl?: string) {\n    const urlExtract = urlExtractRegex.exec(hostUrl!);\n    return urlExtract?.[3];\n}\n\ntype HybridGridProvider = AwaitedReturnType<typeof servicesApi.getHybridGridProvider>;\ntype GridSerializationInput = Partial<Omit<RawGrid, 'type'> & Pick<HybridGridProvider['connectionDetails'], 'external'> & SerializedGrid>;\nexport interface SerializedGrid {\n    mode?: 'local';\n    host?: string;\n    port?: number;\n    path?: string;\n    protocol?: string;\n    accessToken?: string;\n    slotId?: string;\n    gridId?: string;\n    tunnel?: TunnelType;\n    user?: string;\n    key?: string;\n    type?: string;\n    name?: string;\n    provider?: string;\n    tunnelUser?: string;\n    tunnelKey?: string;\n}\nfunction getSerializableObject(grid?: GridSerializationInput): SerializedGrid {\n    const host = grid && extractHost(grid.host);\n    const port = grid?.port;\n    const path = grid?.path;\n    const protocol = grid && extractProtocol(grid);\n    const accessToken = grid?.token;\n    const slotId = grid?.slotId;\n    const tunnel = grid?.hybrid?.tunnel;\n    const user = grid?.external?.user;\n    const key = grid?.external?.key;\n    const type = grid?.type;\n    const tunnelUser = type === gridTypes.HYBRID ? (tunnel && grid.hybrid?.external?.[grid.hybrid.tunnel as keyof typeof grid.hybrid.external]?.user) : user;\n    const tunnelKey = type === gridTypes.HYBRID ? (tunnel && grid.hybrid?.external?.[grid.hybrid.tunnel as keyof typeof grid.hybrid.external]?.key) : key;\n    const name = grid?.name;\n    const gridId = grid && (grid._id || grid.gridId);\n    const provider = grid?.provider;\n\n    return {\n        host, port, path, protocol, accessToken, slotId, gridId, tunnel, user, key, type, name, provider, tunnelUser, tunnelKey,\n    };\n}\n\nexport const addItemToGridCache = (workerId: number, companyId: string, gridId: string, slotId: string, browser: string) => {\n    gridCache[workerId] = { gridId, companyId, slotId, browser };\n};\n\ntype GridRes = { status: 'success'; grid: RawGrid } | { status: 'error'; code: string };\nasync function handleGetGridResponse(projectId: string, companyId: string, workerId: number, browser: string, getFun: () => Promise<GridRes>) {\n    let res: Awaited<ReturnType<typeof getFun>>;\n    try {\n        res = await getFun();\n    } catch (err) {\n        logger.error('failed to get grid', { projectId, companyId, err });\n        throw new Error(gridMessages.UNKNOWN);\n    }\n    logger.info('get grid info', Object.assign({}, res, { projectId, companyId }));\n    if (!res || (!['success', 'error'].includes(res.status))) {\n        logger.error('invalid response - get grid', { res });\n        throw new Error(gridMessages.UNKNOWN);\n    }\n\n    if (res.status === 'success') {\n        const serGrid = getSerializableObject(res.grid);\n        addItemToGridCache(workerId, companyId, serGrid.gridId!, serGrid.slotId!, browser);\n        return serGrid;\n    }\n\n    if (res.code === 'not-found') {\n        throw new GridError(gridMessages.NOT_FOUND);\n    }\n\n    if (res.code === 'no-available-slot') {\n        throw new GridConcurrencyError(`Failed to run test on ${browser} - concurrency limit reached`);\n    }\n\n    logger.error('invalid code error response - get grid', { res });\n    throw new GridError(gridMessages.UNKNOWN);\n}\n\nfunction getHostAndPortById(workerId: number, companyId: string, projectId: string, gridId: string, browser: string, executionId: string) {\n    return handleGetGridResponse(projectId, companyId, workerId, browser, () =>\n        servicesApi.getGridById(companyId, projectId, gridId, browser, executionId),\n    );\n}\n\nfunction getHostAndPortByName(workerId: number, companyId: string, projectId: string, gridName: string, browser: string, executionId: string, options: RunnerOptions) {\n    const get = () => {\n        const grid = options.allGrids?.find(g => (g.name || '').toLowerCase() === gridName.toLowerCase());\n        if (grid?._id) {\n            return servicesApi.getGridById(companyId, projectId, grid._id, browser, executionId);\n        }\n        return servicesApi.getGridByName(companyId, projectId, gridName, browser, executionId);\n    };\n    return handleGetGridResponse(projectId, companyId, workerId, browser, get);\n}\n\nfunction getAllGrids(companyId: string) {\n    return servicesApi.getAllGrids(companyId);\n}\n\nasync function getGridDataByGridId(companyId: string, gridId: string, allGrids?: RawGrid[]) {\n    const grids = allGrids || await getAllGrids(companyId);\n    const grid = grids.find(g => g._id === gridId);\n    if (!grid) {\n        throw new ArgError(`Failed to find grid id: ${gridId}`);\n    }\n    return getSerializableObject(grid);\n}\n\nasync function getGridDataByGridName(companyId: string, gridName: string, allGrids?: RawGrid[]) {\n    const grids = allGrids || await getAllGrids(companyId);\n    const grid = grids.find(g => (g.name || '').toLowerCase() === gridName.toLowerCase());\n    if (!grid) {\n        throw new ArgError(`Failed to find grid name: ${gridName}`);\n    }\n    return getSerializableObject(grid);\n}\n\nexport async function releaseGridSlot(workerId: number, projectId: string) {\n    const gridData = gridCache[workerId];\n    if (!gridData) {\n        return;\n    }\n\n    const { slotId, gridId, browser, companyId } = gridData;\n    delete gridCache[workerId];\n    if (!slotId) {\n        logger.warn('failed to find grid slot id', { projectId });\n        return;\n    }\n\n    logger.info('release slot id', { projectId, companyId, slotId, gridId, browser });\n    try {\n        await servicesApi.releaseGridSlot(companyId, projectId, slotId, gridId, browser);\n    } catch (err) {\n        logger.error('failed to release slot', { projectId, err });\n    }\n}\n\nasync function _keepAlive(projectId: string) {\n    const slots = Object.values(gridCache).filter(Boolean);\n\n    if (slots.length === 0) {\n        return;\n    }\n\n    logger.info('keep alive worker slots', { projectId, slots });\n    try {\n        await servicesApi.keepAliveGrid(projectId, slots);\n    } catch (err) {\n        logger.error('failed to update grid keep alive', { err, slots, projectId });\n    }\n}\n\nfunction startKeepAlive(projectId: string) {\n    const KEEP_ALIVE_INTERVAL = 10 * 1000;\n    keepAliveTimer = global.setInterval(_keepAlive, KEEP_ALIVE_INTERVAL, projectId);\n}\n\nasync function releaseAllSlots(projectId: string) {\n    const workerIds = Object.keys(gridCache);\n\n    if (!workerIds.length) {\n        return;\n    }\n\n    logger.warn('not all slots released before end runner flow', { projectId });\n    try {\n        await promiseMap(workerIds, workerId => releaseGridSlot(Number(workerId), projectId));\n    } catch (err) {\n        logger.error('failed to release all slots', { err, projectId });\n    }\n}\n\nasync function endKeepAlive(projectId: string) {\n    await releaseAllSlots(projectId);\n    clearInterval(keepAliveTimer!);\n}\nexport const keepAlive = {\n    start: startKeepAlive,\n    end: endKeepAlive,\n};\n\nfunction getVendorKeyFromOptions(type: VendorType, options: CommonSharedOptions) {\n    const { testobjectSauce, saucelabs } = options;\n    if (type === 'testobject') {\n        return testobjectSauce!.testobjectApiKey;\n    }\n    if (type === 'saucelabs') {\n        return saucelabs!.accessKey;\n    }\n    return undefined;\n}\n\nfunction getVendorUserFromOptions(type: VendorType, options: CommonSharedOptions) {\n    const { saucelabs } = options;\n    if (type === 'saucelabs') {\n        return saucelabs!.username;\n    }\n    return undefined;\n}\n\nfunction getOptionGrid(options: CommonSharedOptions): SerializedGrid {\n    const getGridType = () => {\n        if (!_.isEmpty(options.testobjectSauce)) {\n            return 'testobject';\n        }\n\n        if (!_.isEmpty(options.saucelabs)) {\n            return 'saucelabs';\n        }\n\n        if (!_.isEmpty(options.perfecto)) {\n            return 'perfecto';\n        }\n\n        return 'hostAndPort';\n    };\n    const type = getGridType();\n    const { host, port, path, protocol } = options;\n    const key = getVendorKeyFromOptions(type, options);\n    const user = getVendorUserFromOptions(type, options);\n    return { host, port, path, protocol, type, user, key };\n}\n\nexport async function getTestPlanGridData(options: RunnerOptions, testPlanData: RawTestPlan) {\n    const companyId = options.company!.companyId;\n    return await getGridDataByGridId(companyId, testPlanData.gridId, options.allGrids);\n}\n\nexport async function getGridData(options: CommonSharedOptions) {\n    const {\n        allGrids = undefined, company,\n        host, useLocalChromeDriver, useChromeLauncher, gridId, grid,\n    } = options;\n    if (useLocalChromeDriver || useChromeLauncher) {\n        return { mode: 'local' } as SerializedGrid;\n    }\n    if (host) {\n        return getOptionGrid(options);\n    }\n    const companyId = company?.companyId;\n    if (gridId) {\n        return getGridDataByGridId(companyId!, gridId, allGrids);\n    }\n    if (grid) {\n        return getGridDataByGridName(companyId!, grid, allGrids);\n    }\n    if (hasTestPlanFlag(options) || options.tunnelOnlyMode) {\n        logger.info('skipping getting grid, as it is set on test plan', { companyId });\n        return undefined;\n    }\n\n    throw new GridError('Missing host or grid configuration');\n}\n\nexport async function getGridSlot(browser: string, executionId: string, options: RunnerOptions, workerId: number) {\n    const getGridDataFromServer = async () => {\n        const { host, project, grid, gridId, useLocalChromeDriver, useChromeLauncher, company } = options;\n        const companyId = company?.companyId;\n        if (useLocalChromeDriver || useChromeLauncher) {\n            return { mode: 'local' } satisfies SerializedGrid;\n        }\n        if (host) {\n            return getOptionGrid(options);\n        }\n        if (gridId) {\n            return getHostAndPortById(workerId, companyId!, project, gridId, browser, executionId);\n        }\n        if (grid) {\n            return getHostAndPortByName(workerId, companyId!, project, grid, browser, executionId, options);\n        }\n        throw new GridError('Missing host or grid configuration');\n    };\n\n    const gridInfo = await getGridDataFromServer();\n    return gridInfo;\n}\n\nexport const handleHybridOrVendorIfNeeded = async (\n    runnerOptions: Partial<RunnerOptions> = { },\n    gridInfo: Partial<SerializedGrid> = {},\n    testRunConfig: Partial<TestRunHandler['runConfig']> = {},\n    lambdatestService: Partial<LambdatestService> = {},\n    retryConfig: { maxRetries?: number; currentRetry?: number } = {},\n) => {\n    const { company: { companyId } = {} } = runnerOptions;\n    const { gridId, type } = gridInfo as SerializedGrid;\n    const browser = runnerOptions.browser || testRunConfig.browserValue;\n    const usingTunnel = Boolean(runnerOptions.tunnel);\n    const { maxRetries, currentRetry } = retryConfig;\n\n    if (!gridId || !type) {\n        return gridInfo;\n    }\n\n    if (type === gridTypes.LAMBDATEST) {\n        await lambdatestService.enableIfNeeded?.(gridInfo);\n    }\n\n    if (type !== gridTypes.HYBRID || !companyId || !browser || !maxRetries || !currentRetry) {\n        return gridInfo;\n    }\n\n    const response = await servicesApi.getHybridGridProvider({ companyId, gridId, maxRetries, currentRetry, browser, usingTunnel });\n    logger.info('handling hybrid grid', { response, companyId });\n    const gridData = getSerializableObject({ ...gridInfo, ...response.connectionDetails, provider: response.provider } as SerializedGrid);\n    if (response.provider !== 'lambdatest') {\n        lambdatestService.disable?.();\n    }\n    if (response.provider === 'lambdatest') {\n        await lambdatestService.enableIfNeeded?.(gridData);\n    }\n\n    return gridData;\n};\n", "import type { InitializedUserWithAuth } from '../commons/testimServicesApi';\nimport type { RawBranchesData } from 'services/src/commons/mongo/models/branchesData';\n\nlet currentBranch: string | undefined;\n\nexport function getCurrentBranch() {\n    return currentBranch || 'master';\n}\n\nexport function setCurrentBranch(branchData: InitializedUserWithAuth['branchName'] = 'master', acknowledgeAutoDetect: boolean | string = 'false') {\n    if (typeof branchData !== 'string' && branchData?.branch && branchData.branch === 'master') {\n        currentBranch = 'master';\n        return;\n    }\n    if (branchData && !(branchData as RawBranchesData).isArchived) {\n        currentBranch = (branchData as RawBranchesData).branch || branchData as string;\n        return;\n    }\n    currentBranch = acknowledgeAutoDetect ? 'master' : undefined;\n}\n", "import * as utils from '../utils';\nimport * as constants from '../commons/constants';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\n\nexport const isFailedTest = (testResult: TestRunStatusTestResult) => {\n    const { status, sessionType, success, mobile } = testResult;\n    if (mobile?.isAppFromDevice || mobile?.isAppForIosVirtualDevice) {\n        return false;\n    }\n    return status === constants.runnerTestStatus.FAILED || (sessionType === constants.sessionType.CODEFUL && success === false);\n};\n\nexport const isAbortedTest = (testResult: TestRunStatusTestResult) => {\n    const { status } = testResult;\n    return status === constants.runnerTestStatus.ABORTED;\n};\n\nexport const isPassedTest = (testResult: TestRunStatusTestResult) => {\n    const { status, sessionType, success } = testResult;\n    return status === constants.runnerTestStatus.PASSED || (sessionType === constants.sessionType.CODEFUL && success === true);\n};\n\nexport const isSkippedTest = (testResult: TestRunStatusTestResult) => testResult.runnerStatus === constants.runnerStatus.SKIPPED;\nexport const isEvaluatingTest = (testResult: TestRunStatusTestResult) => testResult.testStatus === constants.testStatus.EVALUATING;\n\nconst isContainer = (testResult: TestRunStatusTestResult, isCodeMode?: boolean) => {\n    if (!isCodeMode) {\n        return false;\n    }\n    return !testResult.runConfig;\n};\n\n\ninterface TestResultsObj { [resultId: string]: TestRunStatusTestResult }\n\nexport const getSkippedCount = (testResults: TestResultsObj, options: RunnerOptions) =>\n    Object.values(testResults).filter((testResult) => isSkippedTest(testResult) && utils.isQuarantineAndNotRemoteRun(testResult, options || testResult.mobile?.isAppFromDevice || testResult.mobile?.isAppForIosVirtualDevice)).length;\n\nexport const getFailureEvaluatingCount = (testResults: TestResultsObj) =>\n    Object.values(testResults).filter((testResult) => isFailedTest(testResult) && isEvaluatingTest(testResult)).length;\n\nexport const getFailedTests = (testResults: TestResultsObj, isCodeMode?: boolean) =>\n    Object.values(testResults).filter((testResult) => isFailedTest(testResult) && !isContainer(testResult, isCodeMode));\n\nexport const getPassedTests = (testResults: TestResultsObj, isCodeMode?: boolean) =>\n    Object.values(testResults).filter((testResult) => isPassedTest(testResult) && !isContainer(testResult, isCodeMode));\n\nexport const getAbortedTests = (testResults: TestResultsObj, isCodeMode?: boolean) =>\n    Object.values(testResults).filter((testResult) => isAbortedTest(testResult) && !isContainer(testResult, isCodeMode));\n\n/**\n * Long comment for file rename history!\n * Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n * Aenean et massa nisi.\n * Morbi pellentesque, nisi a interdum dapibus, lacus massa laoreet neque, vel dapibus erat nibh in dui.\n * Donec mollis ac velit nec tincidunt.\n * Nunc nisi ligula, fermentum vel metus lacinia, tempus dapibus mi.\n * Nullam mollis posuere hendrerit.\n * Cras semper justo in suscipit scelerisque.\n * Maecenas eu fringilla felis, nec rutrum libero.\n * Suspendisse rutrum dictum mi in maximus.\n * Sed vel metus ut dolor tristique commodo.\n * Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n * Nulla facilisi.\n * Duis ultrices sollicitudin ex, ac efficitur leo rutrum sed.\n * Quisque dapibus, diam eleifend tristique pulvinar, turpis neque varius lacus, in auctor ipsum nisl at ligula.\n * In dictum convallis eros et hendrerit.\n * In enim sem, tempus ac finibus nec, fringilla a neque.\n * Duis sodales, elit ac pharetra fermentum, velit risus ultrices lectus, sit amet sollicitudin sapien mi ac dolor.\n * Nullam urna dui, pharetra eu finibus id, congue ac lectus.\n * Sed eu vulputate mi.\n * Maecenas sit amet sapien egestas, iaculis lorem sed, hendrerit massa.\n * Etiam eget risus viverra, mollis nisi eget, pellentesque nisi.\n * Phasellus consequat, lacus eget viverra hendrerit, purus risus lobortis elit, a volutpat magna lorem faucibus sapien.\n * Maecenas fringilla imperdiet nisi ut iaculis.\n * Vestibulum laoreet erat eget mi aliquam, et luctus metus tincidunt.\n * Phasellus rhoncus purus in tincidunt ullamcorper.\n */\n", "import { getLogger } from '../commons/logger';\nimport { getPassedTests } from './reporterUtils';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nconst logger = getLogger('debug-reporter');\n\nconst MASK_OPTIONS = {\n    token: undefined,\n    userParamsData: undefined,\n    projectData: undefined,\n    allGrids: undefined,\n    gridData: undefined,\n    awsAccessKeyId: undefined,\n    awsSecretAccessKey: undefined,\n    runParams: undefined,\n    perfecto: undefined,\n    testobjectSauce: undefined,\n};\n\nexport class DebugReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions) {\n    }\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number) {\n        logger.info('Test Started', { testId: test.testId, testName: test.name, resultId: test.resultId, workerId });\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number) {\n        const gridData = this.options.gridData || {};\n        const provider = gridData.provider;\n        const host = gridData.host;\n        const gridId = gridData.gridId;\n        const gridType = gridData.type;\n        const failedGetBrowserAttempts = gridData.failedGetBrowserAttempts;\n        logger.info('Test Finished', {\n            testId: test.testId,\n            testName: test.name,\n            resultId: test.resultId,\n            success: test.success,\n            duration: test.duration,\n            browser: this.options.browser,\n            companyId: this.options.company!.companyId,\n            grid: { provider, host, failedGetBrowserAttempts, id: gridId, type: gridType },\n            workerId,\n        });\n    }\n\n    public onTestPlanStarted(beforeTests: ExecutionList, tests: ExecutionList, afterTests: ExecutionList, testPlanName: string, executionId: string, isAnonymous: boolean, configName: string | null) {\n        const args = stripTokenFromConsoleArguments(process.argv);\n\n        logger.info('Test Plan Started', { executionId, testPlanName, isAnonymous, configName, options: Object.assign({}, this.options, MASK_OPTIONS), args });\n    }\n\n    public onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }, testPlanName: string, duration: number, executionId: string, isAnonymous: boolean, isCodeMode: boolean) {\n        const passed = getPassedTests(testResults, isCodeMode).length;\n        const failed = Object.keys(testResults).length - passed;\n\n        logger.info('Test Plan Finished', { isAnonymous, passed, failed, testPlanName, options: Object.assign({}, this.options, MASK_OPTIONS), duration, executionId });\n    }\n}\n\nfunction stripTokenFromConsoleArguments(args: string[]) {\n    let indexOfTokenFlag = args.indexOf('--token');\n    if (indexOfTokenFlag === -1) {\n        indexOfTokenFlag = args.indexOf('--t');\n    }\n\n    if (indexOfTokenFlag !== -1) {\n        try {\n            const newArgs = args.slice();\n            newArgs.splice(indexOfTokenFlag, 2);\n\n            return newArgs;\n        } catch (e) {\n            /* empty */\n        }\n    }\n\n    return args;\n}\n", "import { gridTypes } from './constants';\n\nclass FeatureAvailabilityService {\n    private _planType: 'free' | 'trial' | 'pro';\n    constructor() {\n        this._planType = 'free';\n    }\n\n    setPlanType(planType: FeatureAvailabilityService['_planType']) {\n        this._planType = planType;\n    }\n\n    get isTestStatusEnabled() {\n        return ['pro', 'trial'].includes(this._planType);\n    }\n\n    shouldShowFreeGridRunWarning(gridType: string | undefined) {\n        return this._planType !== 'pro' && gridType === gridTypes.DEVICE_FARM;\n    }\n}\n\nexport const featureAvailabilityService = new FeatureAvailabilityService();\n", "/* eslint-disable no-console */\nimport chalk from 'chalk';\nimport * as _ from 'lodash';\nimport * as utils from '../utils';\nimport * as constants from '../commons/constants';\nimport { featureAvailabilityService } from '../commons/featureAvailabilityService';\nimport {\n    getAbortedTests,\n    getFailedTests,\n    getPassedTests,\n    getFailureEvaluatingCount,\n    getSkippedCount,\n} from './reporterUtils';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\nconst colorize = { success: chalk.green, warn: chalk.yellow, error: chalk.red };\nconst { CLI_MODE } = constants;\nconst DEVICE = 'device';\n\nclass ConsoleReporter implements IReporter {\n    private readonly config;\n    constructor(private readonly options: RunnerOptions, private readonly branchToUse: string) {\n        this.config = {\n            showWorkerNames: options.parallel > 1, // we show worker names when there is more than one worker\n        };\n    }\n\n    private toWorkerIdPrefix(workerId: number) {\n        return this.config.showWorkerNames ? `W:${workerId}` : '';\n    }\n\n    private printWorkerDivider() {\n        console.log('-'.repeat(process.stdout.columns || 83));\n    }\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number, isRerun?: boolean, isCodeMode?: boolean) {\n        const type = isCodeMode ? 'File' : 'Test';\n        const testIdLabel = test.isTestsContainer ? '' : `(${test.testId})`;\n        const testUrlLabel = test.isTestsContainer ? '' : `url: ${chalk.underline(utils.getTestUrl(this.options.editorUrl!, this.options.project, test.testId, test.resultId, this.branchToUse))}`;\n        console.log(this.toWorkerIdPrefix(workerId), `${type} \"${test.name}\" started ${testIdLabel} ${testUrlLabel}`.trim());\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number, isRerun?: boolean, isCodeMode?: boolean) {\n        if (isCodeMode) {\n            // ignore print of file run done\n            return;\n        }\n        const testStatus = test.success ? constants.runnerTestStatus.PASSED : constants.runnerTestStatus.FAILED;\n        const testIdLabel = test.isTestsContainer ? ' ' : `(${test.testId})`;\n        const color = colorize[test.success ? 'success' : 'error'];\n\n        console.log(color(this.toWorkerIdPrefix(workerId), `Test \"${test.name}\" finished status: ${testStatus} ${testIdLabel} duration: ${utils.getDuration(test.duration)}`));\n    }\n\n    private printAllFailedTests(failedTests: TestRunStatusTestResult[]) {\n        if (!failedTests.length) {\n            return;\n        }\n        const failedTestStrings = failedTests.map(failedTest => {\n            const testUrl = utils.getTestUrl(this.options.editorUrl!, this.options.project, failedTest.testId, failedTest.resultId, this.branchToUse);\n            if (failedTest.isTestsContainer) {\n                return failedTest.name; // no working url\n            }\n            return `${failedTest.name} : ${testUrl}`;\n        });\n        console.log(colorize.error('Failed runs are:'));\n        console.log(colorize.error(failedTestStrings.join('\\n\\r')));\n    }\n\n    public onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }, testPlanName: string, duration: number, executionId: string, isAnonymous: boolean, isCodeMode: boolean) {\n        const failedTests = getFailedTests(testResults, isCodeMode);\n        const passedTests = getPassedTests(testResults, isCodeMode);\n        const abortedTests = getAbortedTests(testResults, isCodeMode);\n\n        const passed = passedTests.length;\n        const aborted = abortedTests.length;\n        let failed = failedTests.length;\n        let failedEvaluatingString = '';\n        let skippedString = '';\n        if (featureAvailabilityService.isTestStatusEnabled) {\n            const failureEvaluatingCount = getFailureEvaluatingCount(testResults);\n            failedEvaluatingString = ` FAILED-EVALUATING: ${failureEvaluatingCount}`;\n            failed -= failureEvaluatingCount;\n\n            const skippedCount = getSkippedCount(testResults, this.options);\n            skippedString = ` SKIPPED: ${skippedCount}`;\n        }\n\n        const planName = this.buildTestPlanName(isAnonymous, testPlanName, isCodeMode);\n\n        let message;\n        const color = colorize[failed ? 'error' : 'success'];\n        const executionStats = `PASSED: ${passed} FAILED: ${failed}${failedEvaluatingString} ABORTED: ${aborted}${skippedString} Duration: ${utils.getDuration(duration)}`;\n\n        if (isCodeMode || planName.trim() === '' || planName.trim() === 'Anonymous') {\n            message = `Tests completed. ${executionStats} (Execution ID: ${executionId})`;\n        } else {\n            message = `Test plan${planName} completed ${executionStats} (${executionId})`;\n        }\n\n        this.printWorkerDivider();\n        console.log(color(message));\n        this.printWorkerDivider();\n\n        this.printAllFailedTests(failedTests);\n    }\n\n    private buildTestPlanName(isAnonymous: boolean, testPlanName: string, isCodeMode?: boolean) {\n        if (isCodeMode) {\n            return '';\n        }\n        const suitesString = _.isEmpty(this.options.suites) ? '' : `Suite: ${this.options.suites}`;\n        const labelsString = _.isEmpty(this.options.label) ? '' : `Label: ${this.options.label}`;\n        const namesString = _.isEmpty(this.options.name) ? '' : `Name: ${this.options.name}`;\n        const testIdString = _.isEmpty(this.options.testId) ? '' : `Test Id: ${this.options.testId}`;\n        const name = [namesString, labelsString, suitesString, testIdString].filter(Boolean).join(', ');\n        return isAnonymous ? ` anonymous (${name})` : ` '${testPlanName}'`;\n    }\n\n    public onTestPlanStarted(\n        beforeTests: ExecutionList,\n        tests: ExecutionList,\n        afterTests: ExecutionList,\n        testPlanName: string,\n        executionId: string,\n        isAnonymous: boolean,\n        configName: string | null,\n        isCodeMode: boolean,\n    ) {\n        const writeTestList = (testList: TestWithCustomTestDataAndRunConfig[]) => {\n            testList.forEach((test, index) => {\n                const ds = test.testData?.index ? `- ${test.testData.index} / ${test.testData.total} Data set` : '';\n                const testIdLabel = isCodeMode ? '' : `(${test.testId})`;\n                console.log('\\t', index + 1, ':', `${test.name}${utils.isQuarantineAndNotRemoteRun(test, this.options) ? '-quarantine' : ''}`, testIdLabel, ds);\n            });\n        };\n        const configString = configName ? `config '${configName}'` : 'default configs';\n\n        if (isCodeMode) {\n            console.log(`Run test plan, Project: ${this.options.project} (Execution ID: ${executionId}):`);\n        } else {\n            const sfdcCredentialLog = this.options.sfdcCredential ? ` SfdcCredential: ${this.options.sfdcCredential}` : '';\n            const planStats = `${configString}, Project: ${this.options.project}, Branch: ${this.branchToUse}${sfdcCredentialLog}`;\n            console.log(`Run${this.buildTestPlanName(isAnonymous, testPlanName)} test plan with ${planStats} (${executionId})`);\n        }\n        this.printWorkerDivider();\n\n        if (beforeTests.length > 0) {\n            console.log('Before all:');\n            writeTestList(beforeTests as TestWithCustomTestDataAndRunConfig[]);\n        }\n\n        const listName = isCodeMode ? 'File list:' : 'Test list:';\n        console.log(listName);\n        writeTestList(tests as TestWithCustomTestDataAndRunConfig[]);\n\n        if (afterTests.length > 0) {\n            console.log('After all:');\n            writeTestList(afterTests as TestWithCustomTestDataAndRunConfig[]);\n        }\n        this.printWorkerDivider();\n    }\n\n    public onGetSlot(workerId: number, browser: string) {\n        const gridNameOrId = this.options.grid || this.options.gridId;\n        const instanceType = this.options.mode === CLI_MODE.APPIUM ? DEVICE : browser;\n        if (gridNameOrId) {\n            console.log(this.toWorkerIdPrefix(workerId), `Get ${chalk.underline(instanceType)} slot from ${chalk.underline(gridNameOrId)}`);\n        }\n    }\n\n    public onGetSession(workerId: number, testName: string, mode: string) {\n        const instanceType = mode === CLI_MODE.APPIUM ? DEVICE : 'browser';\n        console.log(this.toWorkerIdPrefix(workerId), `Get ${instanceType} to run ${chalk.underline(testName)}`);\n    }\n\n    public onWaitToTestStart(workerId: number) {\n        console.log(this.toWorkerIdPrefix(workerId), 'Wait for test start');\n    }\n\n    public onWaitToTestComplete(workerId: number, isCodeMode: boolean, debuggerAddress: string | undefined) {\n        const type = isCodeMode ? 'file' : 'test';\n        console.log(this.toWorkerIdPrefix(workerId), `Wait for ${type} complete`);\n        if (debuggerAddress && isCodeMode) {\n            // TODO(Chemi) Benji and Amitai both left Testim. Decide without them what to do with this comment.\n            // TODO(Benji) decide with Amitai what we want to do with this\n            console.log(this.toWorkerIdPrefix(workerId), `Chrome Debugger available at ${debuggerAddress}`);\n        }\n    }\n\n    public onGetBrowserFailure(workerId: number, projectId: string, attempt: number) {\n        if (attempt !== 2) {\n            return; // we want to try 2 times before showing the message once\n        }\n        // heuristic, show the message on the same attempt\n        const gridNameOrId = this.options.grid || this.options.gridId;\n        const instanceType = this.options.mode === CLI_MODE.APPIUM ? 'device' : 'browser';\n        if (gridNameOrId) { // if the user passes a grid or a gridId - show those\n            console.log(colorize.warn(this.toWorkerIdPrefix(workerId), `It is taking us some time to get a ${instanceType} from the grid ${gridNameOrId}`));\n        } else if (this.options.useLocalChromeDriver) {\n            console.log(colorize.warn(this.toWorkerIdPrefix(workerId), 'We are having issues starting ChromeDriver for you locally'));\n        } else if (this.options.host) {\n            const gridType = this.options.mode === CLI_MODE.APPIUM ? 'Appium' : 'Selenium';\n            console.log(colorize.warn(this.toWorkerIdPrefix(workerId), `We are having issues reaching your ${gridType} grid at ${this.options.host}:${this.options.port || 4444}`));\n        } else {\n            // in other cases - print nothing\n        }\n    }\n}\n\nexport const Reporter = ConsoleReporter;\n", "/* eslint-disable no-console */\nimport * as xml2js from 'xml2js';\nimport * as utils from '../utils';\nimport { promises as fsPromises } from 'fs';\nimport { featureAvailabilityService } from '../commons/featureAvailabilityService';\nimport {\n    isAbortedTest,\n    isSkippedTest,\n    getFailedTests,\n    isFailedTest,\n    getFailureEvaluatingCount,\n    getSkippedCount,\n    getAbortedTests,\n} from './reporterUtils';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestPlanRunner } from '../runners/TestPlanRunner';\n\ntype TestPlanResult = Awaited<ReturnType<TestPlanRunner['runAnonymousTestPlan']>>;\n\nclass JunitReporter implements IReporter {\n    readonly classname: string;\n    constructor(private readonly options: RunnerOptions, private readonly branchToUse: string) {\n        this.classname = 'testim.io.test';\n        if (typeof options.reportFileClassname === 'string') {\n            this.classname = options.reportFileClassname;\n        }\n        if (options.reportFileClassname === true) {\n            this.classname = ''; // specific case for passing empty string which makes junit-viewer display test name\n        }\n    }\n\n    private async createResultsReport(testResults: TestPlanResult) {\n        const reportFile = this.options.reportFile;\n        const projectId = this.options.project;\n\n        const reportText = await report(this.options.editorUrl!, testResults, projectId, this.branchToUse, this.classname, this.options);\n        if (!reportFile) {\n            return undefined;\n        }\n        try {\n            await fsPromises.writeFile(reportFile, reportText);\n            console.log('JUnit XML file saved to', reportFile);\n            return testResults;\n        } catch (err) {\n            console.error('could not save report file', reportFile, err);\n            return testResults;\n        }\n    }\n\n    public async onAllTestPlansFinished(testPlanResults: TestPlanResult) {\n        await this.createResultsReport(testPlanResults);\n    }\n}\n\nfunction getPrintName(testResult: TestPlanResult[number]['results'][string]) {\n    const testData = testResult.testData || {};\n    const testDataNumber = typeof testData.total === 'number' ? ` - ${testData.index} / ${testData.total} Data set` : '';\n    return `${testResult.name}${testDataNumber}`;\n}\nfunction getVisitedUrlsList(testResult: TestPlanResult[number]['results'][string]) {\n    if (!testResult.visitedUrlsList) {\n        console.log('No URLs found:', 'Please contact our support team or remove the --urls flag from the CLI command');\n    }\n    const visitedUrls = testResult.visitedUrlsList || '';\n    return `${visitedUrls}`;\n}\nfunction getVisitedUrlsJson(testResult: TestPlanResult[number]['results'][string]) {\n    const visitedUrls = testResult.visitedUrlsJson || '';\n    return `${visitedUrls}`;\n}\nasync function report(editorUrl: string, testPlanResults: TestPlanResult, projectId: string, branch: string, classname: string, options: RunnerOptions) {\n    function createTestCaseObject(testResult: TestPlanResult[number]['results'][string]) {\n        const testResultUrl = utils.getTestUrl(editorUrl, projectId, testResult.testId, testResult.resultId, branch);\n        interface TestResultObject {\n            'system-out': string;\n            'visited-urls-list'?: string;\n            'visited-urls-json'?: string;\n            $: { name: string; classname: string; time: number; ownedBy: string; ownerEmail: string };\n            failure?: { $: { message: string } };\n            skipped?: {};\n        }\n        const testResultObject: TestResultObject = {\n            $: {\n                name: getPrintName(testResult),\n                classname,\n                time: utils.getDurationSec(testResult.duration),\n                ownedBy: testResult.testOwnerName,\n                ownerEmail: testResult.testOwnerEmail,\n            },\n            'system-out': testResultUrl,\n        };\n\n        if (isFailedTest(testResult) || isAbortedTest(testResult)) {\n            const prefixMessage = `Step Failed: ${testResult.failureReason || testResult.reason}`;\n            const message = isFailedTest(testResult) ? `${prefixMessage} More info at: ${testResultUrl}` : prefixMessage;\n            testResultObject.failure = {\n                $: {\n                    message,\n                },\n            };\n        }\n        if (isSkippedTest(testResult) && utils.isQuarantineAndNotRemoteRun(testResult, options) && featureAvailabilityService.isTestStatusEnabled) {\n            testResultObject.skipped = {};\n        }\n\n        if (options.urls) {\n            testResultObject['visited-urls-list'] = getVisitedUrlsList(testResult);\n            testResultObject['visited-urls-json'] = getVisitedUrlsJson(testResult);\n        }\n\n        return testResultObject;\n    }\n\n    function createTestSuiteObject(testPlanResult: TestPlanResult[number]) {\n        const { results, testPlanName, configName } = testPlanResult;\n        const testResults = results || {};\n        const suiteName = configName && testPlanName ? `${testPlanName} with config '${configName}'` : testPlanName;\n        interface TestSuiteAttributes { name: string; tests: number; failure: number; timestamp: string; skipped?: number; 'failure-evaluating'?: number }\n        const testSuiteAttributes: TestSuiteAttributes = {\n            name: suiteName || 'selenium run',\n            tests: getTestCount(testResults),\n            failure: getFailedCount(testResults),\n            timestamp: getSuiteTimestamp(testPlanResults),\n        };\n        if (featureAvailabilityService.isTestStatusEnabled) {\n            testSuiteAttributes.skipped = getSkippedCount(testResults, options);\n            const failureEvaluatingCount = getFailureEvaluatingCount(testResults);\n            testSuiteAttributes.failure -= failureEvaluatingCount;\n            testSuiteAttributes['failure-evaluating'] = failureEvaluatingCount;\n        }\n        return {\n            $: testSuiteAttributes,\n            testcase: Object.keys(testResults).map(resultId => createTestCaseObject(testResults[resultId])),\n        };\n    }\n\n    function getSuiteTimestamp(testResults: TestPlanResult[number]['results']) {\n        const startTimeArr = Object.keys(testResults).map(resultId => testResults[resultId].startTime);\n        const minTestStartTime = Math.min.apply(null, startTimeArr);\n        return minTestStartTime ? new Date(minTestStartTime).toISOString() : new Date().toISOString();\n    }\n\n    function getTestCount(testResults: TestPlanResult[number]['results']) {\n        return Object.keys(testResults).length;\n    }\n\n    function getFailedCount(testResults: TestPlanResult[number]['results']) {\n        return getFailedTests(testResults).length + getAbortedTests(testResults).length;\n    }\n\n    const testResultObject = {\n        testsuites: {\n            testsuite: testPlanResults.map(testPlanResult => createTestSuiteObject(testPlanResult)),\n        },\n    };\n\n\n    try {\n        const builder = new xml2js.Builder();\n        const jUnitXmlReporter = builder.buildObject(testResultObject);\n        return jUnitXmlReporter;\n    } catch (err) {\n        return createErrorjUnitReporter(err);\n    }\n}\n\nfunction createErrorjUnitReporter(err: Error) {\n    const builder = new xml2js.Builder();\n    const errorJunitObject = {\n        testsuites: {\n            testsuite: {\n                $: {\n                    name: 'selenium run',\n                    tests: 1,\n                    failure: 1,\n                    timestamp: Date.now(),\n                },\n                testcase: {\n                    $: {\n                        name: 'junit reporter generator failed',\n                        classname: 'testim.io.jUnitXmlReporter',\n                    },\n                    error: {\n                        $: {\n                            message: err.message,\n                        },\n                    },\n                },\n            },\n        },\n    };\n    return builder.buildObject(errorJunitObject);\n}\n\nexport const Reporter = JunitReporter;\n", "/* eslint-disable no-console */\nimport { getLogger } from '../commons/logger';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nconst logger = getLogger('team-city-reporter');\n\nfunction tidy(text: string | null | undefined) {\n    if (!text) {\n        return '';\n    }\n    return text\n        .replace(/\\|/g, '||')\n        .replace(/'/g, \"|'\")\n        .replace(/\\n/g, '|n')\n        .replace(/\\r/g, '|r')\n        .replace(/\\u0085/g, '|x')\n        .replace(/\\u2028/g, '|l')\n        .replace(/\\u2029/g, '|p')\n        .replace(/\\[/g, '|[')\n        .replace(/\\]/g, '|]');\n}\n\nclass TeamCityReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions) {\n    }\n\n    private getPrintName(test: TestRunStatusTestResult) {\n        const testConfig = test.config || {};\n        const testDataNumber = typeof testConfig.testDataTotal === 'number' ? ` - ${testConfig.testDataIndex} / ${testConfig.testDataTotal} Data set` : '';\n        const teamCityName = `${test.name} (${test.testId})${testDataNumber}`;\n        return tidy(teamCityName);\n    }\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number, isRerun?: boolean, isCodeMode?: boolean, resultId?: string) {\n        if (isRerun) {\n            logger.debug('skip report test started because is rerun');\n            return;\n        }\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testStarted name='${name}' captureStandardOutput='true' flowId='${resultId}']`);\n    }\n\n    public onTestFailed(test: TestRunStatusTestResult, failureReason: TestRunStatusTestResult['failureReason'], testurl: string, testId: string, isRerun: boolean, resultId: string) {\n        if (isRerun) {\n            logger.debug('skip report test failed because is rerun');\n            return;\n        }\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testFailed name='${name}' message='${tidy(failureReason)}' details='${tidy(testurl)}' flowId='${resultId}']`);\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number, isRerun?: boolean) {\n        if (isRerun) {\n            logger.debug('skip report test finished because is rerun');\n            return;\n        }\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testFinished name='${name}' duration='${test.duration}' flowId='${test.resultId}']`);\n    }\n\n    public onTestIgnored(workerId: number, test: TestRunStatusTestResult, message = 'ignore') {\n        const name = this.getPrintName(test);\n        console.log(`##teamcity[testIgnored name='${name}' message='${tidy(message)}']`);\n    }\n\n    onTestPlanStarted(beforeTests: ExecutionList, tests: ExecutionList, afterTests: ExecutionList, testPlanName: string) {\n        console.log(`##teamcity[testSuiteStarted name='${tidy(testPlanName)}']`);\n    }\n\n    onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }, testPlanName: string) {\n        console.log(`##teamcity[testSuiteFinished name='${tidy(testPlanName)}']`);\n    }\n}\n\nexport const Reporter = TeamCityReporter;\n", "import type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from '../runners/TestPlanRunner';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\n/* eslint-disable no-console */\nclass JsonReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions) {\n    }\n\n    public onTestStarted(test: TestRunStatusTestResult, workerId: number) {\n        const event = {\n            name: 'testStarted',\n            data: {\n                test,\n                workerId,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n\n    public onTestFinished(test: TestRunStatusTestResult, workerId: number) {\n        const event = {\n            name: 'testFinished',\n            data: {\n                test,\n                workerId,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n\n    public onTestPlanStarted(beforeTests: ExecutionList, tests: ExecutionList, afterTests: ExecutionList, testPlanName: string, executionId: string) {\n        const event = {\n            name: 'suiteStarted',\n            data: {\n                projectId: this.options.project,\n                executionId,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n\n    public onTestPlanFinished(testResults: { [resultId: string]: TestRunStatusTestResult }) {\n        const event = {\n            name: 'suiteFinished',\n            data: {\n                testResults,\n            },\n        };\n\n        console.log(JSON.stringify(event));\n    }\n}\n\nexport const Reporter = JsonReporter;\n", "import * as utils from '../utils';\nimport { launchChrome } from '../commons/chrome-launcher';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nclass ChromeReporter implements IReporter {\n    constructor(private readonly options: RunnerOptions, private readonly branchToUse: string) {\n    }\n\n    onTestStarted(test: TestRunStatusTestResult, workerId: number, isRerun?: boolean, isCodeMode?: boolean) {\n        if (isCodeMode) {\n            return undefined;\n        }\n        const testUrl = utils.getTestUrl(this.options.editorUrl!, this.options.project, test.testId, test.resultId, this.branchToUse);\n        return launchChrome(testUrl);\n    }\n}\n\nexport const Reporter = ChromeReporter;\n", "import { DebugReporter } from './debugReporter';\nimport { getLogger } from '../commons/logger';\nimport type { IReporter } from './IReporter';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\n\nconst logger = getLogger('reporter');\n\nclass Reporter implements Required<IReporter> {\n    reporters: IReporter[] = [];\n    onGetBrowserFailure = this.generateHook('onGetBrowserFailure');\n    onGetBrowserSuccess = this.generateHook('onGetBrowserSuccess');\n    onTestPlanStarted = this.generateHook('onTestPlanStarted');\n    onGetSlot = this.generateHook('onGetSlot');\n    onGetSession = this.generateHook('onGetSession');\n    onTestFinished = this.generateHook('onTestFinished');\n    onTestFailed = this.generateHook('onTestFailed');\n    onTestPassed = this.generateHook('onTestPassed');\n    onTestStarted = this.generateHook('onTestStarted');\n    onTestIgnored = this.generateHook('onTestIgnored');\n    onWaitToTestStart = this.generateHook('onWaitToTestStart');\n    onWaitToTestComplete = this.generateHook('onWaitToTestComplete');\n    onTestPlanFinished = this.generateHook('onTestPlanFinished', this.onTestPlanFinishedMutator);\n    onAllTestPlansFinished = this.generateHook('onAllTestPlansFinished', this.onAllTestPlansFinishedMutator);\n\n    public async setOptions(options: RunnerOptions, branchToUse: string) {\n        this.reporters = [];\n        const optReporters = options.reporters;\n        this.reporters.push(new DebugReporter(options));\n\n        if (optReporters === undefined || optReporters.length === 0) {\n            const { Reporter: ConsoleReporter } = await import('./consoleReporter');\n            this.reporters.push(new ConsoleReporter(options, branchToUse));\n            if (options?.reportFile !== undefined) {\n                const { Reporter: JunitReporter } = await import('./junitReporter');\n                this.reporters.push(new JunitReporter(options, branchToUse));\n            }\n        } else {\n            const reporterModules = await Promise.all([\n                optReporters.includes('teamcity') && import('./teamCityReporter'),\n                optReporters.includes('console') && import('./consoleReporter'),\n                optReporters.includes('junit') && import('./junitReporter'),\n                optReporters.includes('json') && import('./jsonReporter'),\n                optReporters.includes('chrome') && import('./chromeReporter'),\n            ]);\n            reporterModules.forEach((reporterModule) => {\n                if (!reporterModule) {\n                    return;\n                }\n                this.reporters.push(new reporterModule.Reporter(options, branchToUse));\n            });\n        }\n    }\n\n    private onTestPlanFinishedMutator(\n        testResults: { [resultId: string]: TestRunStatusTestResult },\n        testPlanName: string,\n        startTime: number,\n        executionId: string,\n        isAnonymous: boolean | undefined,\n        isCodeMode: boolean,\n        childTestResults: any[] | undefined,\n    ) {\n        let results: { [resultId: string]: any } = {};\n\n        // TODO: remove mutation of testResults from the Reporter\n        if (childTestResults) {\n            const childValues = Object.values(childTestResults);\n            if (childValues.length > 0) {\n                for (const child of Object.values(childTestResults)) {\n                    results[child.id] = child;\n                }\n                for (const parent of Object.keys(testResults)) {\n                    if (!childValues.some(c => c.parentResultId !== parent)) {\n                        results[parent] = testResults[parent];\n                    }\n                }\n            } else {\n                logger.warn('childTestResults is not array');\n                results = testResults;\n            }\n        } else {\n            results = testResults;\n        }\n        const duration = Date.now() - (startTime || 0);\n        return [results, testPlanName, duration, executionId, isAnonymous, isCodeMode, undefined] as Parameters<Required<IReporter>['onTestPlanFinished']>;\n    }\n\n    private onAllTestPlansFinishedMutator(testPlanResults: Parameters<Required<IReporter>['onAllTestPlansFinished']>[0]) {\n        // TODO: remove mutation of testPlanResults from the Reporter\n        for (const result of testPlanResults) {\n            if (result.childTestResults) {\n                result.results = {};\n                const childValues = Object.values(result.childTestResults);\n                for (const child of childValues) {\n                    result.results[child.id] = child;\n                }\n                for (const parent of Object.keys(testPlanResults)) {\n                    if (!childValues.some(c => c.parentResultId !== parent)) {\n                        result.results[parent] = testPlanResults[parent as any as number];\n                    }\n                }\n            }\n        }\n        return [testPlanResults] as Parameters<Required<IReporter>['onAllTestPlansFinished']>;\n    }\n\n    private generateHook<T extends keyof IReporter>(name: T, preHookMutator?: (...args: [...Parameters<Required<IReporter>[T]>]) => [...Parameters<Required<IReporter>[T]>]) {\n        return async (...args: [...Parameters<Required<IReporter>[T]>]) => {\n            const data = preHookMutator?.(...args);\n            for (const reporter of this.reporters) {\n                // @ts-expect-error TS is unable to figure out what is happening here\n                await reporter[name]?.(...(data || args));\n            }\n        };\n    }\n}\n\nexport const reporter = new Reporter();\n", "import * as analytics from '../commons/testimAnalytics';\nimport { isCi } from '../cli/isCiRun';\nimport type { getLogger } from '../commons/logger';\nimport type { LightweightSettings } from '../runOptions';\nimport type { CompanyPlanTypes } from 'services/src/commons/utils';\nimport type { ProjectType } from 'services/src/commons/mongo/models/project';\n\nconst calcSource = (source: string, user?: string) => {\n    if (source !== 'cli' && source !== 'cli-local') {\n        return source;\n    }\n\n    if (isCi && user) {\n        return 'ci-with-user';\n    }\n\n    if (isCi) {\n        return 'ci';\n    }\n\n    if (user) {\n        return 'cli-with-user';\n    }\n\n    return source;\n};\n\nfunction setLightweightAnalytics(properties: { [key: string]: any }, lightweightMode?: LightweightSettings) {\n    if (lightweightMode?.type) {\n        properties[`${lightweightMode.type}Mode`] = true;\n    }\n    return properties;\n}\n\nexport function analyticsTestStart({\n    executionId, projectId, testId, resultId, companyId, companyName, projectName, companyPlan, sessionType, source, user, lightweightMode, isStartUp, projectType, appSource,\n}: Omit<AnalyticsParams, 'result' | 'logger'>) {\n    const properties = setLightweightAnalytics({\n        executionId,\n        projectId,\n        testId,\n        resultId,\n        companyId,\n        companyName,\n        projectName,\n        companyPlan,\n        sessionType,\n        source: calcSource(source, user),\n        isStartUp,\n        projectType,\n        ...(['android', 'ios'].includes(projectType!) && appSource && { appSource }),\n    }, lightweightMode);\n    analytics.trackWithCIUser('test-run-ci', properties);\n}\n\ninterface AnalyticsParams {\n    executionId: string;\n    projectId: string;\n    testId: string;\n    resultId: string;\n    result: any;\n    companyId?: string;\n    companyName?: string;\n    projectName?: string;\n    companyPlan?: CompanyPlanTypes;\n    sessionType: 'codeless' | 'codeful';\n    source: string;\n    user?: string;\n    lightweightMode?: LightweightSettings;\n    logger: ReturnType<typeof getLogger>;\n    isStartUp?: boolean;\n    projectType?: ProjectType;\n    appSource?: string;\n}\nexport function analyticsTestEnd({\n    executionId, projectId, testId, resultId, result, companyId, companyName, projectName, companyPlan, sessionType, source, user, lightweightMode,\n    logger, isStartUp, projectType, appSource,\n}: AnalyticsParams) {\n    try {\n        const properties = setLightweightAnalytics({\n            executionId,\n            projectId,\n            testId,\n            resultId,\n            companyId,\n            companyName,\n            projectName,\n            companyPlan,\n            sessionType,\n            mockNetworkEnabled: result.wasMockNetworkActivated,\n            source: calcSource(source, user),\n            isStartUp,\n            projectType,\n            ...(['android', 'ios'].includes(projectType!) && appSource && { appSource }),\n        }, lightweightMode);\n\n        if (result.success) {\n            analytics.trackWithCIUser('test-run-ci-success', properties);\n            return;\n        }\n        analytics.trackWithCIUser('test-run-ci-fail', Object.assign({}, properties, { failureReason: result.failureReason }));\n    } catch (err) {\n        logger.error('failed to update test end analytics', { err });\n    }\n}\n\nexport function analyticsExecsStart({ executionId, projectId, sessionType }: { executionId: string; projectId: string; sessionType: 'codeless' | 'codeful' }) {\n    analytics.trackWithCIUser('batch-run-ci', {\n        executionId,\n        projectId,\n        sessionType,\n    });\n}\n", "import { ReportBase } from 'istanbul-lib-report';\n\nexport class SummaryToObjectReport extends ReportBase {\n    constructor(opts) {\n        super();\n\n        opts = opts || {};\n        this.appendToObject = opts.appendToObject || {};\n    }\n\n    onStart(node) {\n        const summary = node.getCoverageSummary();\n        this.appendToObject = Object.assign(this.appendToObject, summary.toJSON());\n    }\n}\n", "import ora from 'ora';\nimport moment from 'moment';\nimport TestExclude from 'test-exclude';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as reports from 'istanbul-reports';\nimport * as libReport from 'istanbul-lib-report';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport { ArgError } from '../errors';\nimport { promiseMap } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport { SummaryToObjectReport } from './SummaryToObjectReport';\n\nconst logger = getLogger('test-run-status');\n\nconst convertToURL = (_path) => {\n    try {\n        return new URL(_path);\n    } catch (err) {\n        try {\n            return new URL(`file://${_path}`);\n        } catch (e) {\n            return {};\n        }\n    }\n};\n\nconst pathHasQueryParam = (_path) => {\n    const urlObj = convertToURL(_path);\n    return !!urlObj.search;\n};\n\nconst parsePath = (_path) => {\n    if (!_path) {\n        return '';\n    }\n    const urlObj = convertToURL(_path);\n    return urlObj.pathname.substring(1);\n};\n\nconst excludePath = (codeCoverageInclude, _path) => {\n    const pathname = parsePath(_path);\n    const exclude = new TestExclude({\n        relativePath: false,\n        include: codeCoverageInclude,\n    });\n\n    return !exclude.shouldInstrument(pathname);\n};\n\nconst removeAfterQuestionMark = (str) => str.substring(0, str.indexOf('?'));\n\nexport const getSourceMap = async ({ source, sourceMapDir, sourceMapType }) => {\n    const convertSourceMap = await lazyRequire('convert-source-map');\n    if (sourceMapType === 'file' && !sourceMapDir) {\n        throw new ArgError('--code-coverage-source-map-path [path]');\n    }\n    return sourceMapDir ?\n        convertSourceMap.fromMapFileSource(source, sourceMapDir) :\n        convertSourceMap.fromSource(source);\n};\n\nexport const remapCoverage = async (options, storagePath, sourceMaps) => {\n    const { codeCoverageInclude } = options;\n    await promiseMap(Object.values(sourceMaps), async (sourceMap) => {\n        if (!sourceMap) {\n            return;\n        }\n        const sourceMapObject = sourceMap.toObject();\n        await promiseMap(sourceMapObject.sources, async (sourcePath, index) => {\n            if (excludePath(codeCoverageInclude, sourcePath)) {\n                return;\n            }\n            const parsedPath = rewritePath(storagePath, sourcePath);\n            await fs.promises.mkdir(path.parse(parsedPath).dir, { recursive: true });\n            await fs.promises.writeFile(parsedPath, sourceMapObject.sourcesContent[index]);\n        });\n    });\n};\n\nconst htmlReportLinkMapper = {\n    getPath(node) {\n        if (typeof node === 'string') {\n            return node;\n        }\n        let filePath = node.getQualifiedName();\n        if (node.isSummary()) {\n            if (filePath !== '') {\n                filePath += '/index.html';\n            } else {\n                filePath = 'index.html';\n            }\n        } else {\n            if (pathHasQueryParam(filePath)) {\n                filePath = removeAfterQuestionMark(filePath);\n            }\n            filePath += '.html';\n        }\n        return filePath;\n    },\n\n    relativePath(source, target) {\n        const targetPath = this.getPath(target);\n        const sourcePath = path.dirname(this.getPath(source));\n        return path.posix.relative(sourcePath, targetPath);\n    },\n\n    assetPath(node, name) {\n        return this.relativePath(this.getPath(node), name);\n    },\n};\n\nconst rewritePath = (storagePath, fileUrl) => {\n    const parsedPath = path.resolve(storagePath, parsePath(fileUrl));\n    return `${parsedPath}.js`;\n};\n\nexport const saveCoverageReports = async (options, coverageMap, reportDir, tempJsDir) => {\n    const { codeCoverageReporter } = options;\n    const reportSummary = {};\n    const context = libReport.createContext({\n        dir: reportDir,\n        coverageMap,\n        watermarks: libReport.getDefaultWatermarks(),\n        sourceFinder: (filePath) => {\n            try {\n                const parsedPath = rewritePath(tempJsDir, filePath);\n                return fs.readFileSync(parsedPath, 'utf8');\n            } catch (ex) {\n                throw new Error(`Unable to lookup source: ${filePath} (${ex.message})`);\n            }\n        },\n    });\n\n    (new SummaryToObjectReport({ appendToObject: reportSummary })).execute(context);\n    if (Array.isArray(codeCoverageReporter)) {\n        codeCoverageReporter.forEach((reporter) => {\n            let cfg = { projectRoot: '/' };\n            if (reporter === 'html') {\n                cfg = { linkMapper: htmlReportLinkMapper };\n            }\n            reports.create(reporter, cfg).execute(context);\n        });\n    }\n    return reportSummary;\n};\n\nexport const convertV8ToIstanbul = async (options, { source, sourceMap, functions }) => {\n    const { codeCoverageInclude } = options;\n    if (!sourceMap || sourceMap.sourcemap.sources.length === 0) {\n        return undefined;\n    }\n    const v8toIstanbul = await lazyRequire('v8-to-istanbul');\n    const converter = v8toIstanbul('FAKE_PATH', 0, {\n        source,\n        sourceMap,\n    }, (_path) => excludePath(codeCoverageInclude, _path));\n    await converter.load();\n    converter.applyCoverage(functions);\n    return converter.toIstanbul();\n};\n\nconst collectAndMergeJsCoverageData = async (projectId, branch, runId) => {\n    const DOWNLOAD_COVERAGE_DATA_CONCURRENCY = 20;\n    const { mergeProcessCovs } = await lazyRequire('@bcoe/v8-coverage');\n    let mergedCoverages = { result: [] };\n\n    const covUrlMap = new Map();\n    const realDataRes = await servicesApi.getRealData(projectId, 'testResult', `runId=${runId}`);\n    const testResults = realDataRes.data.docs;\n\n    await promiseMap(\n        testResults.flatMap((testResult) => testResult.JSCoverageURLS || []),\n        async (coverageURL) => {\n            const data = await servicesApi.getS3Artifact(coverageURL, 90000);\n            await promiseMap(data, async (cov) => {\n                if (!covUrlMap.has(cov.url)) {\n                    let text = cov.text;\n                    if (cov.sourceUrl) {\n                        // set temp value to reduce read S3 file\n                        covUrlMap.set(cov.url, 'TEMP');\n                        text = await servicesApi.getS3ArtifactText(cov.sourceUrl);\n                    }\n                    covUrlMap.set(cov.url, {\n                        text,\n                        url: cov.url,\n                        sourceMapType: cov.sourceMapType,\n                        hash: cov.hash,\n                    });\n                }\n                delete cov.text;\n                mergedCoverages = mergeProcessCovs([mergedCoverages, { result: [cov] }]);\n            });\n        },\n        { concurrency: DOWNLOAD_COVERAGE_DATA_CONCURRENCY },\n    );\n\n    return { covUrlMap, mergedCoverages };\n};\n\nexport const calculateCoverage = async (options, branchToUse, numOfTests, runId) => {\n    if (!options.collectCodeCoverage) {\n        return undefined;\n    }\n    logger.info('start js coverage process');\n    const spinner = ora(`analyzing coverage for ${numOfTests} ${numOfTests === 1 ? 'test' : 'tests'}`).start();\n    const baseDir = path.resolve(options.codeCoverageReportPath || './coverage');\n    const tempJsDir = path.resolve(baseDir, `.js/${moment().format('DDMMYYYYHHmmss')}`);\n    const sourceMapDir = options.codeCoverageSourceMapPath ? path.resolve(options.codeCoverageSourceMapPath) : undefined;\n    try {\n        const [libCoverage, { mergedCoverages, covUrlMap }] = await Promise.all([\n            lazyRequire('istanbul-lib-coverage'),\n            collectAndMergeJsCoverageData(options.project, branchToUse, runId),\n        ]);\n\n        if (mergedCoverages.result.length === 0) {\n            spinner.fail('Failed to report coverage information - js code coverage is empty');\n            return undefined;\n        }\n        logger.info('start js coverage merge and remap', { numOfFiles: covUrlMap.size, numMergedCoverages: mergedCoverages.result.length });\n        const coverageMap = libCoverage.createCoverageMap({});\n\n        const sourceMaps = {};\n        await promiseMap(mergedCoverages.result, async ({ url, functions }) => {\n            const { text: source, sourceMapType } = covUrlMap.get(url);\n\n            const sourceMap = await this.getSourceMap({ sourceMapType, url, source, sourceMapDir });\n            sourceMaps[url] = sourceMap;\n\n            const istanbulCoverage = await this.convertV8ToIstanbul(options, { source, sourceMap, functions });\n            coverageMap.merge(istanbulCoverage);\n        });\n        await this.remapCoverage(options, tempJsDir, sourceMaps);\n        const coverageSummary = await this.saveCoverageReports(options, coverageMap, baseDir, tempJsDir);\n        spinner.succeed();\n        return coverageSummary;\n    } catch (err) {\n        const baseMsg = 'Failed to report coverage information';\n        if (err instanceof ArgError) {\n            spinner.fail(`${baseMsg}, missing arg: ${err.message}`);\n        } else {\n            spinner.fail(baseMsg);\n        }\n        logger.error(baseMsg, { err });\n    }\n\n    return undefined;\n};\n", "import { guid, calcPercentile } from '../utils';\n\nexport const SELENIUM_PERF_MARKS = {\n    GET_BROWSER: 'GET_BROWSER',\n    GET_HTML: 'GET_HTML',\n    GET_ELEMENT: 'GET_ELEMENT',\n    GET_SCREENSHOT: 'GET_SCREENSHOT',\n} as const;\n\ntype SeleniumPrefMark = typeof SELENIUM_PERF_MARKS[keyof typeof SELENIUM_PERF_MARKS];\ntype SeleniumPrefMarkAndAll = SeleniumPrefMark | 'ALL';\n\nexport class SeleniumPerfStats {\n    marks = Object.fromEntries(Object.values(Object.assign({ ALL: 'ALL' }, SELENIUM_PERF_MARKS)).map(key => [key, []])) as any as { [mark in SeleniumPrefMarkAndAll]: number[] };\n    startTimes: { [mark: string]: number } = {};\n\n    markStart(mark: SeleniumPrefMark) {\n        const id = guid();\n        this.startTimes[`${mark}:${id}`] = Date.now();\n        return id;\n    }\n\n    markEnd(id: string, mark: SeleniumPrefMark) {\n        const markDuration = Date.now() - this.startTimes[`${mark}:${id}`];\n        delete this.startTimes[`${mark}:${id}`];\n\n        if (!this.marks[mark]) {\n            this.marks.ALL.push(markDuration);\n            return;\n        }\n        this.marks[mark].push(markDuration);\n    }\n\n    getStats() {\n        const entries = Object.entries(this.marks).flatMap(([key, samples]) => {\n            if (!Array.isArray(samples) || !samples.length) {\n                return [];\n            }\n            return [\n                [`${key}_COUNT`, samples.length],\n                [`${key}_P50`, calcPercentile(samples, 50)],\n                [`${key}_P95`, calcPercentile(samples, 95)],\n            ];\n        });\n        type Stat = 'COUNT' | 'P50' | 'P95';\n        return {\n            seleniumPerfMarks: this.marks,\n            seleniumStats: Object.fromEntries(entries) as { [stat in `${SeleniumPrefMarkAndAll}_${Stat}`]?: number },\n        };\n    }\n}\n\n", "import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport express from 'express';\nimport { ArgError } from '../errors';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport type { AddressInfo } from 'net';\nimport type { getLogger } from '../commons/logger';\nimport type { TestRunStatusTestResult } from '../testRunStatus';\nimport type { AgentModeOptions, RunnerOptions } from '../runOptions';\n\nconst DEFUALT_PATH = path.join(os.tmpdir(), 'testim/rca/');\n\nconst stepFileMap: { [stepId: string]: string } = {};\nconst resultFileMap: { [stepId: string]: string[] } = {};\n\nconst TYPE_RENAMES = {\n    'test-log': 'consoleLogs',\n    'har-file': 'networkLogs',\n} as const;\nconst TYPES = Object.keys(TYPE_RENAMES) as Array<keyof typeof TYPE_RENAMES>;\n\nexport function mapFilesToLocalDrive(test: TestRunStatusTestResult, logger: ReturnType<typeof getLogger>) {\n    try {\n        test.failurePath = (test.failurePath || []).map(f => Object.assign(f, stepFileMap[f.id] ? { screenshot: stepFileMap[f.id] } : {}));\n        Object.keys(resultFileMap).forEach(type => {\n            test.assets ||= {};\n            test.assets[TYPE_RENAMES[type as keyof typeof TYPE_RENAMES]] = resultFileMap[type];\n        });\n\n        test.assets ||= {};\n        test.assets.screenshots = Object.values(stepFileMap);\n    } catch (err) {\n        if (logger) {\n            logger.error('failed to map files to local drive', { err });\n        }\n        // set default values.\n        test.failurePath ||= [];\n        test.assets ||= {};\n        test.assets.screenshots ||= [];\n    }\n}\n\nexport async function initServer({ agentPort, agentBind, saveRCALocally }: Partial<Pick<AgentModeOptions, 'agentPort' | 'agentBind'> & Pick<RunnerOptions, 'saveRCALocally'>>) {\n    const multer = await lazyRequire('multer') as typeof import('multer');\n    const saveRCALocallyStr = typeof saveRCALocally === 'string' ? saveRCALocally : DEFUALT_PATH;\n\n    await fs.promises.mkdir(saveRCALocallyStr, { recursive: true });\n\n    const upload = multer({\n        storage: multer.diskStorage({\n            async destination(req, file, cb) {\n                const metadata = JSON.parse(req.body.metadata || '{}');\n                if (!metadata.testResultId) {\n                    return cb(new Error('missing testResultId'), '');\n                }\n                const destination = path.join(saveRCALocallyStr, metadata.testResultId);\n                try {\n                    await fs.promises.mkdir(destination, { recursive: true });\n                } catch (err) {\n                    return cb(err, '');\n                }\n                return cb(null, destination);\n            },\n            filename(req, file, cb) {\n                const { fileName } = req.body;\n                const metadata = JSON.parse(req.body.metadata || '{}');\n                if (!metadata.stepId && !fileName) {\n                    return cb(new Error('missing stepId or fileName'), '');\n                }\n                if (metadata.stepId) {\n                    const format = path.extname(fileName);\n                    return cb(null, `step_${metadata.stepId}_${metadata.stepName || ''}${format}`.replace(/[/\\\\?%*:|\"<>\\s]/g, '-'));\n                }\n                return cb(null, fileName);\n            },\n        }),\n    });\n\n    const app = express();\n\n    app.post('/', upload.single('file'), (req, res) => {\n        const metadata = JSON.parse(req.body.metadata || '{}');\n        if (metadata.stepId) {\n            stepFileMap[metadata.stepId] = req.file.path;\n        }\n        if (metadata.testResultId && TYPES.includes(metadata.subType)) {\n            resultFileMap[metadata.subType] ||= [];\n            resultFileMap[metadata.subType].push(req.file.path);\n        }\n        res.sendStatus(200);\n    });\n    app.use((req, res) => res.status(404).send('Endpoint Not Found'));\n\n    const { createServer } = await import('http');\n    return await new Promise<AddressInfo>((resolve, reject) => {\n        const server = createServer(app);\n        server.listen(agentPort, agentBind);\n        server.on('error', onError);\n        server.on('listening', () => resolve(server.address() as AddressInfo));\n\n        function onError(error: Error & { syscall?: string; code?: string }) {\n            if (error.syscall !== 'listen') {\n                return reject(error);\n            }\n\n            // handle specific listen errors with friendly messages\n            switch (error.code) {\n                case 'EACCES':\n                case 'EPERM':\n                    return reject(new ArgError(`Port ${agentPort} requires elevated privileges`));\n                case 'EADDRINUSE':\n                    return reject(new ArgError(`Port ${agentPort} is already in use`));\n                default:\n                    return reject(error);\n            }\n        }\n    });\n}\n", "/* eslint-disable no-console */\nimport * as _ from 'lodash';\nimport * as utils from './utils';\nimport { getLogger } from './commons/logger';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\nconst logger = getLogger('override-test-data-builder');\n\nexport class OverrideTestDataBuilder {\n    constructor(\n        private readonly params: any,\n        private readonly testInfoList: TestWithCustomTestDataAndRunConfig[],\n        private readonly projectId: string,\n    ) {\n    }\n\n    private isObjectNotArray(param: any): param is { [key: string]: any } {\n        return _.isObject(param) && !Array.isArray(param);\n    }\n\n    private isArrayOfObjects(params: any): params is { [key: string]: any }[] {\n        return Array.isArray(params) && params.filter(param => !this.isObjectNotArray(param)).length === 0;\n    }\n\n    public overrideTestData() {\n        const { params, projectId } = this;\n        if (this.isObjectNotArray(params) && typeof params.overrideTestData !== 'undefined') {\n            if (this.isObjectNotArray(params.overrideTestData) && !_.isEmpty(params.overrideTestData)) {\n                Object.keys(params.overrideTestData).forEach(testName => this.overrideSingleTest(testName, params.overrideTestData[testName]));\n                delete params.overrideTestData;\n            } else {\n                logger.error('invalid overrideTestData', { overrideTestData: params.overrideTestData, projectId });\n            }\n        }\n        if (this.isObjectNotArray(params) && typeof params.overrideAllTestsData !== 'undefined') {\n            if (_.isObject(params.overrideAllTestsData) && !_.isEmpty(params.overrideAllTestsData)) {\n                const testNames = this.testInfoList.map(test => test.name);\n                testNames.forEach(testName => this.overrideSingleTest(testName, params.overrideAllTestsData));\n                delete params.overrideAllTestsData;\n            } else {\n                logger.error('invalid overrideAllTestsData', { overrideAllTestsData: params.overrideAllTestsData, projectId });\n            }\n        }\n\n        return this.testInfoList;\n    }\n\n    private overrideSingleTest(testName: string, testOverrideTestData: any) {\n        const { projectId } = this;\n        if (this.isObjectNotArray(testOverrideTestData) || this.isArrayOfObjects(testOverrideTestData)) {\n            this.replaceAndCreateOverrideTestData(testName, testOverrideTestData);\n            return;\n        }\n        logger.error('skip override test data to test name', { testName, projectId });\n        console.error(`Invalid override test data provided to test '${testName}'`);\n    }\n\n    private replaceAndCreateOverrideTestData(testName: string, testOverrideTestData: { [key: string]: any }) {\n        const uniqueMatchIds = this.mapTestListToUniqueId(testName);\n        if (uniqueMatchIds.length === 0) {\n            return undefined;\n        }\n        return this.createNewTestPerOverrideTestData(uniqueMatchIds, testOverrideTestData);\n    }\n\n    private mapTestListToUniqueId(testName: string) {\n        const { testInfoList } = this;\n        return _.chain(testInfoList).map(test => {\n            if (test.name.toLowerCase() === testName.toLowerCase()) {\n                return this.generateTestUniqId(test);\n            }\n            return undefined;\n        }).compact().uniq()\n            .value();\n    }\n\n    private createNewTestPerOverrideTestData(uniqueMatchIds: string[], testOverrideTestData: { [key: string]: any }) {\n        const { testInfoList } = this;\n        return [...new Set(uniqueMatchIds)].map(uniqTestId => {\n            const testUniqIds = testInfoList.map(test => this.generateTestUniqId(test));\n            const firstIndex = testUniqIds.indexOf(uniqTestId);\n            const lastIndex = testUniqIds.lastIndexOf(uniqTestId);\n            const currentTest = testInfoList[firstIndex];\n            const newTestDataItems = this.createNewTestItems(currentTest, testOverrideTestData);\n            return testInfoList.splice(firstIndex, (lastIndex - firstIndex) + 1, ...newTestDataItems);\n        });\n    }\n\n    private createNewTestItems(currentTest: TestWithCustomTestDataAndRunConfig, testOverrideTestData: { [key: string]: any }) {\n        return (([] as { [key: string]: any }[]).concat(testOverrideTestData)).map((newTestData, index) => {\n            const testResultId = utils.guid();\n            return Object.assign({}, currentTest, {\n                resultId: testResultId,\n                testData: {\n                    value: newTestData,\n                    index: index + 1,\n                    total: testOverrideTestData.length || 1,\n                },\n            });\n        });\n    }\n\n    getTestType(test: TestWithCustomTestDataAndRunConfig & { isBeforeTestPlan?: true; isAfterTestPlan?: true }) {\n        if (test.isBeforeTestPlan) {\n            return 'before';\n        }\n        if (test.isAfterTestPlan) {\n            return 'after';\n        }\n        return 'test';\n    }\n\n    generateTestUniqId(test: TestWithCustomTestDataAndRunConfig) {\n        return `${test.testId}:${test.testConfig.id}:${this.getTestType(test)}`;\n    }\n}\n", "import * as _ from 'lodash';\nimport * as utils from './utils';\nimport * as constants from './commons/constants';\nimport * as gridService from './services/gridService';\nimport * as servicesApi from './commons/testimServicesApi';\nimport { ArgError } from './errors';\nimport { getLogger } from './commons/logger';\nimport { reporter } from './reports/reporter';\nimport { registerExitHook } from './processHandler';\nimport { calculateCoverage } from './coverage/jsCoverage';\nimport { SeleniumPerfStats } from './commons/SeleniumPerfStats';\nimport { mapFilesToLocalDrive } from './services/localRCASaver';\nimport { TESTIM_CONCURRENT_WORKER_COUNT } from './commons/config';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { OverrideTestDataBuilder } from './OverrideTestDataBuilder';\nimport { featureAvailabilityService } from './commons/featureAvailabilityService';\nimport type { RunnerOptions } from './runOptions';\nimport type { TDKTest } from './runners/buildCodeTests';\nimport type { ExecutionList } from './runners/TestPlanRunner';\nimport type { TestResult } from 'clickim/src/common/models/TestResult';\nimport type { TestResultUpdates } from './runners/ParallelWorkerManager';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\nconst logger = getLogger('test-run-status');\nconst gitBranch = utils.getEnvironmentGitBranch();\nconst gitCommit = process.env.GIT_COMMIT || process.env.CIRCLE_SHA1 || process.env.TRAVIS_COMMIT;\nconst gitRepoUrl = process.env.GIT_URL || process.env.CIRCLE_REPOSITORY_URL;\nconst runnerVersion = utils.getRunnerVersion();\n\ntype ExecConfig = TestRunStatus['execConfig'];\ninterface TestRunStatusResultConfig extends Omit<ExecConfig, 'browser'> {\n    isBeforeTestPlan?: true;\n    isAfterTestPlan?: true;\n    testDataTotal: number | null;\n    testDataIndex: number | null;\n    baseUrl: string;\n    testConfig: TestWithCustomTestDataAndRunConfig['overrideTestConfig'];\n    browser: string;\n    testDataUrl?: string;\n    testData?: object;\n    gridInfo?: gridService.SerializedGrid;\n}\nexport interface TestRunStatusTestResult {\n    workerId?: number;\n    testId: string;\n    status: utils.ValueOf<typeof constants['runnerTestStatus']>;\n    runnerStatus?: utils.ValueOf<typeof constants['runnerStatus']>;\n    sessionType?: utils.ValueOf<typeof constants['sessionType']>;\n    name: string;\n    resultId: string;\n    isTestsContainer: boolean;\n    testStatus: string;\n    testCreatorName: string | undefined;\n    testCreatorEmail: string | undefined;\n    testOwnerName: string | undefined;\n    testOwnerEmail: string | undefined;\n    testLabels: string[];\n    testSuites: string[];\n    allLabels: string[] | undefined;\n    config: TestRunStatusResultConfig;\n    startTime?: number;\n    failureReason?: string;\n    success?: boolean;\n    sessionId?: string;\n    duration?: number;\n    failurePath?: TestResult['failurePath'];\n    resultUrl?: string;\n    mobile?: { [key in 'isAppFromDevice' | 'isAppForIosVirtualDevice']?: boolean };\n    assets?: { [key in 'screenshots' | 'consoleLogs' | 'networkLogs']?: string[] };\n    runConfig?: TestWithCustomTestDataAndRunConfig['runConfig'];\n}\n\nasync function runHook<F extends(...arg: any) => PromiseLike<any>>(fn: F | undefined, ...args: Parameters<F>) {\n    if (!fn || typeof fn !== 'function') {\n        return undefined;\n    }\n\n    try {\n        const res = await fn(...args as Parameters<F>[]);\n        return (res || {}) as Awaited<ReturnType<F>>;\n    } catch (err) {\n        logger.warn('failed to run hook', { err });\n        throw new ArgError(`failed to run hook promise ${err.message}`);\n    }\n}\n\nexport class TestRunStatus {\n    private testRunStatus: { [testResultId: string]: TestRunStatusTestResult };\n    private exportsGlobal: object = {};\n    private startTime: number | null = null;\n    private beforeSuiteParams: object | undefined = {};\n    private executionStartedPromise = Promise.resolve();\n    private readonly execConfig;\n    private readonly fileUserParamsData: object;\n    private readonly seleniumPerfStats = new SeleniumPerfStats();\n    constructor(private testInfoList: ExecutionList, private readonly options: RunnerOptions, testPlanId: string | null, private readonly branchToUse: string) {\n        this.options.runParams ||= {};\n        this.fileUserParamsData = this.options.userParamsData;\n\n        const browserNames = utils.getUniqBrowsers(options, testInfoList as TestWithCustomTestDataAndRunConfig[]);\n        const runnerMode = options.lightweightMode ? options.lightweightMode.type : options.mode;\n        this.execConfig = {\n            parallel: TESTIM_CONCURRENT_WORKER_COUNT || options.parallel || 1,\n            browser: browserNames,\n            gitBranch,\n            gitCommit,\n            gitRepoUrl,\n            runnerVersion,\n            gridHost: options.host || options.gridData?.host,\n            testimBranch: branchToUse,\n            canaryMode: options.canary,\n            source: options.source,\n            schedulerId: options.schedulerId,\n            testPlanId,\n            testPlans: options.testPlan,\n            testLabels: options.label,\n            testSuites: [...new Set((testInfoList as TestWithCustomTestDataAndRunConfig[]).flatMap(test => test.testSuites))],\n            testNames: options.name,\n            testIds: options.testId,\n            testConfigs: options.testConfigNames,\n            testConfigIds: options.testConfigIds,\n            port: options.port,\n            browserTimeout: options.browserTimeout,\n            timeout: options.timeout,\n            newBrowserWaitTimeout: options.newBrowserWaitTimeout,\n            tunnel: options.tunnel,\n            tunnelPort: options.tunnelPort,\n            tunnelHostHeader: options.tunnelHostHeader,\n            runnerMode,\n            gridId: options.gridId || options.gridData?.gridId,\n            gridName: options.grid || options.gridData?.name,\n            gridType: options.gridData?.type,\n            retentionDays: options.retentionDays,\n            codeCoverageReportPath: options.codeCoverageReportPath,\n            collectCodeCoverage: options.codeCoverageUrlFilter || options.collectCodeCoverage,\n            sessionType: utils.getSessionType(options),\n        };\n\n        this.testRunStatus = this.calcTestRunStatus();\n    }\n\n    public waitForExecutionStartedFinished() {\n        return this.executionStartedPromise;\n    }\n\n    public getTestResult(resultId: string) {\n        return this.testRunStatus[resultId] as TestRunStatusTestResult | undefined;\n    }\n\n    public async addRetryTestResult({\n        newResultId, originalTestResultId, previousTestResultId, projectId, executionId, retryCount = 1,\n    }: { newResultId: string; originalTestResultId?: string; previousTestResultId?: string; projectId: string; executionId: string; retryCount?: number }) {\n        const orgTestResult = this.testRunStatus[originalTestResultId!] || {};\n        const {\n            config,\n            isTestsContainer,\n            testId,\n            name,\n            testStatus,\n            testCreatorName,\n            testCreatorEmail,\n            testOwnerName,\n            testOwnerEmail,\n            testLabels,\n            testSuites,\n            allLabels,\n        } = orgTestResult;\n\n        const newTestResult = {\n            originalTestResultId,\n            previousTestResultId,\n            config: _.cloneDeep(config),\n            testId,\n            status: 'QUEUED' as const,\n            name,\n            resultId: newResultId,\n            isTestsContainer,\n            retryCount,\n            testStatus,\n        };\n\n        this.testRunStatus[newResultId] = Object.assign({}, newTestResult, {\n            testCreatorName,\n            testCreatorEmail,\n            testOwnerName,\n            testOwnerEmail,\n            testLabels,\n            testSuites,\n            allLabels,\n        });\n\n        return servicesApi.addTestRetry({\n            projectId,\n            runId: executionId,\n            testId,\n            newResultId,\n            originalTestResultId,\n            previousTestResultId,\n            testResult: newTestResult,\n        });\n    }\n\n    public getAllTestResults() {\n        return this.testRunStatus;\n    }\n\n    private testStart(wid: number, executionId: string, resultId: string, isRerun: boolean | undefined) {\n        const test = this.getTestResult(resultId)!;\n        test.workerId = wid;\n        const isCodeMode = this.options.files.length > 0;\n        reporter.onTestStarted(test, wid, isRerun, isCodeMode, resultId);\n\n        return test;\n    }\n\n    private async updateTestStatusRunning(test: TestRunStatusTestResult, executionId: string, testRetryKey: `${number}:${number}`) {\n        const { project: projectId, remoteRunId, projectData } = this.options;\n        if (this.options.lightweightMode?.onlyTestIdsNoSuite) {\n            return this.executionStartedPromise;\n        }\n\n        let testDataUrl = '';\n\n        try {\n            testDataUrl = (await servicesApi.updateTestDataArtifact(projectId, test.testId, test.resultId, test.config.testData, projectData!.defaults)) || '';\n        } catch (err) {\n            logger.error('failed to upload test data artifact (runner)', { err });\n        }\n        const testConfig = _.cloneDeep(test.config);\n        delete testConfig.testData;\n        testConfig.testDataUrl = testDataUrl;\n        await this.executionStartedPromise;\n        return servicesApi.updateTestStatus(projectId, executionId, test.testId, test.resultId, 'RUNNING', { startTime: test.startTime, config: testConfig, remoteRunId, testRetryKey });\n    }\n\n    private async testStartReport(test: TestRunStatusTestResult, executionId: string, testRetryKey: `${number}:${number}`) {\n        if (utils.isQuarantineAndNotRemoteRun(test, this.options)) {\n            return undefined;\n        }\n        const globalParameters = this.exportsGlobal;\n        try {\n            const params = await runHook(this.options.beforeTest, Object.assign({}, test, { exportsGlobal: globalParameters, globalParameters }), this.options.userData!.loginData.token);\n\n            test.config.testData = Object.assign({}, test.config.testData, this.exportsGlobal, this.fileUserParamsData, this.beforeSuiteParams, params);\n            this.options.runParams![test.resultId] = test.config.testData;\n            test.startTime = Date.now();\n            await this.updateTestStatusRunning(test, executionId, testRetryKey);\n\n            return test;\n        } catch (err) {\n            logger.error('Failed to start test', { err });\n            throw err;\n        }\n    }\n\n    public testStartAndReport(wid: number, executionId: string, resultId: string, isRerun: boolean | undefined, testRetryKey: `${number}:${number}`) {\n        const test = this.testStart(wid, executionId, resultId, isRerun);\n        return this.testStartReport(test, executionId, testRetryKey);\n    }\n\n    public onGridSlot(resultId: string, gridInfo: gridService.SerializedGrid) {\n        const test = this.getTestResult(resultId)!;\n        test.config.gridInfo = Object.assign({}, gridInfo, { key: undefined, user: undefined });\n        logger.info('on get grid info', { gridInfo: test.config.gridInfo });\n    }\n\n    private reportTestStatus(workerId: number, result: TestResult, test: TestRunStatusTestResult, isRerun: boolean | undefined) {\n        const { name, testId, testStatus } = test;\n        const { resultId, success } = result;\n        if (testStatus === constants.testStatus.EVALUATING && featureAvailabilityService.isTestStatusEnabled) {\n            reporter.onTestIgnored(workerId, test, `test in ${constants.testStatus.EVALUATING} status`);\n            return;\n        }\n        if (success) {\n            reporter.onTestPassed(name);\n            return;\n        }\n        reporter.onTestFailed(\n            test,\n            test.failureReason,\n            utils.getTestUrl(this.options.editorUrl!, this.options.project, testId, resultId, this.branchToUse),\n            testId,\n            isRerun,\n            resultId,\n        );\n    }\n\n    private calcResultText(result: TestResult) {\n        return result.success ? constants.runnerTestStatus.PASSED : constants.runnerTestStatus.FAILED;\n    }\n\n    public onTestIgnored(wid: number, resultId: string) {\n        const test = this.getTestResult(resultId)!;\n        reporter.onTestIgnored(wid, test, `test in ${constants.testStatus.QUARANTINE}`);\n    }\n\n    private testEnd(wid: number, result: TestResult, executionId: string, sessionId: string, isRerun: boolean | undefined) {\n        const test = this.getTestResult(result.resultId)!;\n\n        const duration = (result.endTime! - result.startTime) || 0;\n        test.sessionId = sessionId;\n        test.startTime = result.startTime || test.startTime || Date.now();\n        test.duration = duration;\n        result.duration = duration;\n        test.failureReason = result.failureReason || result.reason;\n        result.failureReason = test.failureReason;\n        test.failurePath = result.failurePath;\n        test.resultId = result.resultId;\n        test.success = result.success;\n\n        if (this.options.saveRCALocally) {\n            mapFilesToLocalDrive(test, logger);\n        }\n\n        test.resultUrl = utils.getTestUrl(this.options.editorUrl!, this.options.project, test.testId, test.resultId, this.branchToUse);\n        test.status = this.calcResultText(result);\n\n        result.status = test.status as any;\n        result.name = test.name;\n        result.testStatus = test.testStatus;\n        result.testId ||= test.testId;\n        (result as any).testCreatorName = test.testCreatorName;\n        (result as any).testCreatorEmail = test.testCreatorEmail;\n        (result as any).testOwnerName = test.testOwnerName;\n        (result as any).testOwnerEmail = test.testOwnerEmail;\n        result.testData = test.config && typeof test.config.testDataTotal === 'number' ? {\n            total: test.config.testDataTotal,\n            index: test.config.testDataIndex,\n        } : {};\n\n        this.reportTestStatus(wid, result, test, isRerun);\n        const isCodeMode = this.options.files.length > 0;\n\n        reporter.onTestFinished(test, wid, isRerun, isCodeMode);\n\n        const afterMerge = Object.assign({}, this.exportsGlobal, result.exportsGlobal);\n\n        this.exportsGlobal = afterMerge;\n        return test;\n    }\n\n    private async testEndReport(test: TestRunStatusTestResult, executionId: string, result: TestResult, testResultUpdates: TestResultUpdates) {\n        const globalParameters = result.exportsGlobal!;\n        try {\n            try {\n                await runHook(this.options.afterTest, Object.assign({}, test, { exportsGlobal: globalParameters, globalParameters }), this.options.userData!.loginData.token);\n            } catch (err) {\n                logger.error('HOOK threw an error', { test: test.testId, err });\n                // eslint-disable-next-line no-console\n                console.error('HOOK threw an error', err); // show the customer that his hook failed.\n            }\n            if (this.options.lightweightMode?.onlyTestIdsNoSuite) {\n                return undefined;\n            }\n\n            return await servicesApi.updateTestStatus(this.options.project, executionId, test.testId, test.resultId, 'FINISHED', {\n                startTime: test.startTime,\n                endTime: result.endTime,\n                success: test.success,\n                failureReason: test.failureReason,\n                remoteRunId: this.options.remoteRunId,\n                ...testResultUpdates,\n            }, 5);\n        } catch (err) {\n            logger.error('Failed to update test finished', { err });\n            throw err;\n        }\n    }\n\n    public testEndAndReport(wid: number, result: TestResult, executionId: string, sessionId: string, isRerun: boolean | undefined, testResultUpdates: TestResultUpdates) {\n        const test = this.testEnd(wid, result, executionId, sessionId, isRerun);\n        return this.testEndReport(test, executionId, result, testResultUpdates);\n    }\n\n    private calcTestRunStatus() {\n        const { options, testInfoList } = this;\n        const companyId = options.company!.companyId;\n        const entries = (testInfoList as (TestWithCustomTestDataAndRunConfig & { isBeforeTestPlan?: true; isAfterTestPlan?: true })[]).map(testInfo => {\n            const runConfig = options.browser ? utils.getRunConfigByBrowserName(options.browser, options.saucelabs, options.browserstack) : testInfo.runConfig;\n\n            if (runConfig && featureFlagsService.flags.dec2022eolBrowsers.isEnabled() && utils.getBrowserInfo(runConfig.browserValue)?.eol) {\n                throw new ArgError(`Unsupported Browser: ${runConfig.browserName}`);\n            }\n            const isAppFromDevice = !featureFlagsService.flags.allowAppFromDeviceRuns.isEnabled() && utils.isAppFromDevice(testInfo.nativeApp);\n            const shouldSkipForMobile = utils.isMobileProject(options) && (utils.isAppForVirtualIosDevice(testInfo.nativeApp) || isAppFromDevice);\n            const shouldSkipTest = utils.isQuarantineAndNotRemoteRun(testInfo, options) || shouldSkipForMobile;\n            const data = {\n                testId: testInfo.testId,\n                status: shouldSkipTest ? constants.runnerTestStatus.SKIPPED : constants.runnerTestStatus.QUEUED,\n                name: testInfo.name,\n                resultId: testInfo.resultId,\n                isTestsContainer: (testInfo as unknown as TDKTest).isTestsContainer,\n                testStatus: testInfo.testStatus || constants.testStatus.DRAFT,\n                testCreatorName: testInfo.creatorName,\n                testCreatorEmail: testInfo.creatorEmail,\n                testOwnerName: testInfo.testOwnerName,\n                testOwnerEmail: testInfo.testOwnerEmail,\n                testLabels: testInfo.testLabels,\n                testSuites: testInfo.testSuites,\n                allLabels: testInfo.allLabels,\n                ...(shouldSkipForMobile && { reason: (utils.isAppForVirtualIosDevice(testInfo.nativeApp) ? 'virtual-build' : 'app-from-device') }),\n                config: Object.assign({}, this.execConfig, {\n                    companyId,\n                    testData: testInfo.testData?.value || null,\n                    isBeforeTestPlan: testInfo.isBeforeTestPlan,\n                    isAfterTestPlan: testInfo.isAfterTestPlan,\n                    testDataTotal: testInfo.testData?.total || null,\n                    testDataIndex: testInfo.testData?.index || null,\n                    baseUrl: options.baseUrl || testInfo.baseUrl || testInfo.testConfig.baseUrl,\n                    testConfig: testInfo.overrideTestConfig || testInfo.testConfig,\n                    browser: runConfig.browserValue.toLowerCase(),\n                }),\n            };\n            return [testInfo.resultId, data] as [string, TestRunStatusTestResult];\n        });\n        return Object.fromEntries(entries);\n    }\n\n    public async executionStart(executionId: string, projectId: string, startTime: number, testPlanName: string, testNames: string[]) {\n        logger.info('execution started', { executionId });\n        const { options } = this;\n        const { remoteRunId, projectData } = options;\n\n        registerExitHook(() => Promise.all([\n            gridService.keepAlive.end(projectId),\n            servicesApi.reportExecutionFinished(\n                'ABORTED',\n                executionId,\n                projectId,\n                false,\n                undefined,\n                remoteRunId,\n                undefined,\n            ),\n        ]));\n\n        this.startTime = startTime || Date.now();\n        const runHooksProps = {\n            projectId,\n            executionId,\n            ...(featureFlagsService.flags.testNamesToBeforeSuiteHook.isEnabled() && { testNames }),\n        };\n        const params = await runHook(options.beforeSuite, runHooksProps);\n        const overrideTestDataBuilder = new OverrideTestDataBuilder(params, _.cloneDeep(this.testInfoList as TestWithCustomTestDataAndRunConfig[]), projectId);\n        this.testInfoList = overrideTestDataBuilder.overrideTestData();\n        this.testRunStatus = this.calcTestRunStatus();\n        this.beforeSuiteParams = params;\n\n        const { testInfoList } = this;\n        const beforeTests = [];\n        const tests = [];\n        const afterTests = [];\n        for (const test of testInfoList as (TestWithCustomTestDataAndRunConfig & { isBeforeTestPlan?: true; isAfterTestPlan?: true })[]) {\n            if (test.isBeforeTestPlan) {\n                beforeTests.push(test);\n                continue;\n            }\n            if (test.isAfterTestPlan) {\n                afterTests.push(test);\n                continue;\n            }\n            tests.push(test);\n        }\n\n        const reportExecutionStarted = async () => {\n            const testResults = _.cloneDeep(this.testRunStatus);\n            await utils.promiseMap(Object.keys(testResults), async testResultId => {\n                const test = testResults[testResultId];\n                const testData = test.config?.testData;\n                const testId = test.testId;\n                const testDataUrl = await servicesApi.updateTestDataArtifact(projectId, testId, testResultId, testData, projectData!.defaults);\n                if (!testDataUrl) {\n                    return;\n                }\n                delete test.config.testData;\n                test.config.testDataUrl = testDataUrl;\n            });\n            const isLocalRun = Boolean(options.useLocalChromeDriver || options.useChromeLauncher);\n            const data = {\n                executionId,\n                projectId,\n                labels: testPlanName || [],\n                startTime,\n                executions: testResults,\n                config: this.execConfig,\n                resultLabels: options.resultLabels,\n                remoteRunId: options.remoteRunId,\n                localRunUserId: options.user,\n                isLocalRun,\n                intersections: options.intersections,\n            };\n            const ret = servicesApi.reportExecutionStarted(data);\n            this.executionStartedPromise = ret;\n            ret.catch(e => logger.error(e));\n            return ret;\n        };\n\n        try {\n            await reportExecutionStarted();\n        } catch (err) {\n            logger.error('Failed to start suite', { err });\n            // eslint-disable-next-line no-console\n            console.error('Failed to start test run. Please contact support@testim.io');\n        }\n        return { beforeTests, tests, afterTests };\n    }\n\n    public concatSeleniumPerfMarks(marks: { [keys in keyof SeleniumPerfStats['marks']]: number[] }) {\n        _.chain(marks)\n            .keys()\n            .each((key) => {\n                const typedKey = key as keyof SeleniumPerfStats['marks'];\n                if (this.seleniumPerfStats.marks[typedKey]) {\n                    this.seleniumPerfStats.marks[typedKey] = [...this.seleniumPerfStats.marks[typedKey], ...marks[typedKey]];\n                }\n            })\n            .value();\n    }\n\n    async executionEnd(executionId: string) {\n        const tests = utils.groupTestsByRetries(this.testRunStatus);\n        const total = tests.length;\n\n        let passed = 0;\n        let skipped = 0;\n        let failedInEvaluatingStatus = 0;\n        for (const { status, testStatus } of tests) {\n            if (status === constants.runnerTestStatus.PASSED) {\n                passed++;\n            }\n            if (status === constants.runnerTestStatus.SKIPPED) {\n                skipped++;\n            }\n            if (status === constants.runnerTestStatus.FAILED && testStatus === constants.testStatus.EVALUATING) {\n                failedInEvaluatingStatus++;\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { seleniumPerfMarks, ...resultExtraData } = this.seleniumPerfStats.getStats();\n\n        try {\n            await runHook(this.options.afterSuite, {\n                exportsGlobal: this.exportsGlobal,\n                tests,\n                total,\n                passed,\n                skipped,\n            });\n        } catch (err) {\n            // eslint-disable-next-line no-console\n            console.log('check your callback handler on afterSuite Hook for syntax or exception errors');\n            logger.warn('error while running afterSuite Hook', { err, projectId: this.options.projectData!.projectId, executionId: this.options.executionId });\n        }\n        const coverageSummary = await calculateCoverage(this.options, this.branchToUse, total, executionId);\n        Object.assign(resultExtraData, { coverageSummary });\n\n        if (this.options.lightweightMode?.onlyTestIdsNoSuite) {\n            return undefined;\n        }\n        try {\n            return await servicesApi.reportExecutionFinished(\n                'FINISHED',\n                executionId,\n                this.options.project,\n                total === (passed + skipped + failedInEvaluatingStatus),\n                {\n                    tmsSuppressReporting: this.options.tmsSuppressReporting,\n                    tmsRunId: this.options.tmsRunId,\n                    tmsCustomFields: this.options.tmsCustomFields,\n                },\n                this.options.remoteRunId,\n                resultExtraData,\n            );\n        } catch (err) {\n            logger.error('Failed to update suite finished', { err });\n            throw err;\n        }\n    }\n\n    public async markAllQueuedTests(executionId: string, status: TestRunStatusTestResult['status'], failureReason: string, success: boolean) {\n        const queuedResultIds = Object.keys(this.testRunStatus).filter(resultId => this.getTestResult(resultId)!.status === 'QUEUED');\n\n        await servicesApi.updateExecutionTests(\n            executionId,\n            ['QUEUED'],\n            status,\n            failureReason,\n            success,\n            this.startTime,\n            null,\n            this.options.project,\n        );\n        for (const resultId of queuedResultIds) {\n            const test = this.getTestResult(resultId)!;\n            test.status = status;\n            test.failureReason = failureReason;\n            test.success = success;\n        }\n        return this.testRunStatus;\n    }\n}\n", "/* eslint-disable camelcase */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\nimport * as _ from 'lodash';\nimport * as utils from '../utils';\nimport * as config from './config';\nimport { getLogger } from './logger';\nimport { featureFlagsService } from './featureFlagsService';\nimport { CLI_MODE, mobileWeb, gridTypes } from './constants';\nimport { LambdatestService } from '../services/lambdatestService';\nimport type { Agent } from 'agent-base';\nimport type { RunnerOptions } from '../runOptions';\n\nconst logger = getLogger('testim-desired-capabilities-builder');\n\nconst LOG_LEVEL = config.WEBDRIVER_DEBUG ? 'verbose' : 'silent';\nconst CONTENT_SETTING = {\n    CONTENT_SETTING_DEFAULT: 0,\n    CONTENT_SETTING_ALLOW: 1,\n    CONTENT_SETTING_BLOCK: 2,\n    CONTENT_SETTING_ASK: 3,\n};\nconst DEFAULT_CHROME_OPTIONS_ARGS = [\n    '--disable-popup-blocking',\n    '--ignore-gpu-blacklist',\n    '--auto-select-desktop-capture-source=Entire screen',\n    '--ignore-certificate-errors',\n    // Disable built-in Google Translate service\n    '--disable-features=TranslateUI',\n    // Disable various background network services, including extension updating,\n    // safe browsing service, upgrade detector, translate, UMA\n    '--disable-background-networking',\n    // Disable syncing to a Google account\n    '--disable-sync',\n    // Disable reporting to UMA, but allows for collection\n    '--metrics-recording-only',\n    // Disable installation of default apps on first run\n    '--disable-default-apps',\n    // Mute any audio\n    '--mute-audio',\n    // Skip first run wizards\n    '--no-first-run',\n    '--disable-back-forward-cache',\n];\n\ninterface SeleniumOpts {\n    host: string;\n    port: number;\n    path: string;\n    protocol: string;\n    logLevel: 'verbose' | 'silent';\n    connectionRetryTimeout: number;\n    connectionRetryCount: number;\n    getSessionTimeout: number;\n    getSessionRetries: number;\n    deprecationWarnings?: boolean;\n    desiredCapabilities: {\n        javascriptEnabled?: boolean;\n        locationContextEnabled?: boolean;\n        handlesAlerts?: boolean;\n        rotatable?: boolean;\n        acceptSslCerts?: boolean;\n        unexpectedAlertBehaviour?: string;\n        nativeEvents?: boolean;\n        testName?: string;\n        version?: string;\n        browserName?: string;\n        'moz:firefoxOptions'?: { prefs: any; args: string[] };\n        testim_firefox_profile?: string;\n        firefox_profile?: string;\n        'aws:maxDurationSecs'?: number;\n        'aws:idleTimeoutSecs'?: number;\n        'ms:edgeChromium'?: boolean;\n        browserVersion?: string;\n        platform?: string;\n        platformName?: string;\n        acceptInsecurecerts?: boolean;\n        unhandledPromptBehavior?: string;\n        'ms:edgeOptions'?: SeleniumOpts['desiredCapabilities']['chromeOptions'];\n        edgeOptions?: SeleniumOpts['desiredCapabilities']['chromeOptions'];\n        'goog:chromeOptions'?: SeleniumOpts['desiredCapabilities']['chromeOptions'];\n        chromeOptions?: {\n            prefs: any;\n            w3c?: boolean;\n            args?: string[];\n            extensions?: string[];\n            localState?: any;\n            mobileEmulation?: { deviceMetrics?: { width: number; height: number; pixelRatio: number }; userAgent: string };\n        };\n    };\n    capabilities?: { alwaysMatch: SeleniumOpts['desiredCapabilities']; firstMatch: [{}] };\n    headers?: {};\n    agent?: Agent;\n}\n\nconst getHash = (...str: string[]) => crypto.createHash('sha256').update(str.join('')).digest('hex');\n\nconst isDFGrid = (gridInfo: any) => gridInfo.type === gridTypes.DEVICE_FARM || (gridInfo.type === gridTypes.HYBRID && gridInfo.provider === 'devicefarm');\n\nconst convertToNewCapabilitiesFormat = (desiredCapabilities: SeleniumOpts['desiredCapabilities']) => {\n    if (Object.prototype.hasOwnProperty.call(desiredCapabilities, 'version')) {\n        desiredCapabilities.browserVersion = desiredCapabilities.version;\n        delete desiredCapabilities.version;\n    }\n    if (Object.prototype.hasOwnProperty.call(desiredCapabilities, 'platform')) {\n        desiredCapabilities.platformName = desiredCapabilities.platform;\n        delete desiredCapabilities.platform;\n    }\n    if (Object.prototype.hasOwnProperty.call(desiredCapabilities, 'acceptSslCerts')) {\n        desiredCapabilities.acceptInsecurecerts = desiredCapabilities.acceptSslCerts;\n        delete desiredCapabilities.acceptSslCerts;\n    }\n    if (Object.prototype.hasOwnProperty.call(desiredCapabilities, 'unexpectedAlertBehaviour')) {\n        desiredCapabilities.unhandledPromptBehavior = desiredCapabilities.unexpectedAlertBehaviour;\n        delete desiredCapabilities.unexpectedAlertBehaviour;\n    }\n};\n\nfunction buildSafariOptions(opts: SeleniumOpts, browserName: string) {\n    const safariOptions = {\n        browserName: 'safari',\n        ...(browserName === 'safari technology preview' && { 'safari.options': { technologyPreview: true } }),\n    };\n    Object.assign(opts.desiredCapabilities, safariOptions);\n    return opts;\n}\n\nfunction readFileToBase64(fileLocation: string) {\n    return fs.readFileSync(fileLocation, { encoding: 'base64' });\n}\n\nfunction setCustomExtension(customExtensionLocalLocation: string | undefined, extensions: string[], lambdatestService: LambdatestService | null) {\n    if (lambdatestService?.isLambdatestRun() && utils.isURL(customExtensionLocalLocation!)) {\n        return;\n    }\n\n    if (customExtensionLocalLocation) {\n        const extStr = readFileToBase64(customExtensionLocalLocation);\n        // for debugging purpose should be removed in the future\n        logger.info(`adding extension: custom, path: ${customExtensionLocalLocation} length: ${extStr.length} hash: ${getHash(extStr)} current extension count: ${extensions.length}`);\n        extensions.push(extStr);\n    }\n}\n\nfunction setTestimExtension(browserOptions: RunnerOptions, extensions: string[], args: string[], predefinedTestimExtension: string | null, lambdatestService: LambdatestService | null) {\n    if (lambdatestService?.isLambdatestRun()) {\n        return;\n    }\n\n    if (browserOptions.ext || predefinedTestimExtension) {\n        const extFromOptions = typeof (browserOptions.ext) === 'string' ? browserOptions.ext : (`${__dirname}/..`);\n        const ext = predefinedTestimExtension || extFromOptions;\n        const loadExt = `--load-extension=${ext}`;\n        logger.info(`adding extension: testim unpacked , path: ${ext}`);\n        args.push(loadExt);\n        return;\n    }\n\n    const zipFileSuffix = browserOptions.canary ? '-master.zip' : '.zip';\n    const filePath = path.join(process.cwd(), `testim-headless${zipFileSuffix}`);\n    const extStr = readFileToBase64(filePath);\n    // for debugging purpose should be removed in the future\n    logger.info(`adding extension: testim zipped, path: ${filePath} length: ${extStr.length} hash: ${getHash(extStr)} current extension count: ${extensions.length}`);\n    extensions.push(extStr);\n}\n\nfunction _buildChromiumOptions(\n    opts: SeleniumOpts,\n    browserOptions: RunnerOptions,\n    testRunConfig: any,\n    customExtensionLocalLocation: string | undefined,\n    gridInfo: any,\n    predefinedTestimExtension: string | null,\n    lambdatestService: LambdatestService | null,\n) {\n    // * Make sure to add any referenced attributes of the function arguments to the hash created in buildChromiumOptions * //\n\n    const browserName = testRunConfig.seleniumName || testRunConfig.browserValue;\n    const extensions: string[] = [];\n    const args = [...DEFAULT_CHROME_OPTIONS_ARGS];\n    if (browserOptions.headless) {\n        args.push('--headless');\n    }\n    //sauce labs issues - if you set w3c = true sauce search the data in capabilities instead of desiredCapabilities\n    const isW3CMode = () => browserOptions.mode !== CLI_MODE.EXTENSION;\n    const chromiumOptions: NonNullable<SeleniumOpts['desiredCapabilities']['chromeOptions']> = {\n        prefs: {\n            'profile.default_content_setting_values.popups': CONTENT_SETTING.CONTENT_SETTING_ALLOW,\n            // allow multiple download files\n            'profile.default_content_setting_values.automatic_downloads': CONTENT_SETTING.CONTENT_SETTING_ALLOW,\n            // disable pdf viewer\n            'plugins.always_open_pdf_externally': true,\n            // unintuitively stops download protection (\"Dangerous file blocked\")\n            // if needed in the future, consider adding --safebrowsing-disable-download-protection or --safebrowsing-disable-extension-blacklist to the chrome flags\n            'safebrowsing.enabled': true,\n            'profile.content_settings.exceptions.clipboard': {\n                '[*.],*': { last_modified: Date.now(), setting: 1 },\n            },\n            'download.allow_office_viewer_for_download': false,\n        },\n        w3c: isW3CMode(),\n    };\n\n    if (isDFGrid(gridInfo)) {\n        chromiumOptions.prefs['download.default_directory'] = 'C:\\\\Users\\\\testnode';\n        chromiumOptions.w3c = true;\n        opts.desiredCapabilities.version = 'latest-1';\n        opts.desiredCapabilities['aws:maxDurationSecs'] = 2400; // Maximum duration of the session before it is forcibly closed, in seconds. Range: 180 to 2400.\n        opts.desiredCapabilities['aws:idleTimeoutSecs'] = 60; // Maximum delay between WebDriver commands before the session is forcibly closed. Range: 30 to 900.\n    }\n\n    if (isDFGrid(gridInfo) && browserName === 'MicrosoftEdge') {\n        opts.desiredCapabilities['ms:edgeChromium'] = true;\n    }\n\n    if (browserOptions.chromeExtraPrefs) {\n        Object.assign(chromiumOptions.prefs, browserOptions.chromeExtraPrefs);\n    }\n\n    if (browserOptions.chromeExtraArgs) {\n        browserOptions.chromeExtraArgs.forEach(arg => args.push(`--${arg}`));\n    }\n\n    if (browserOptions.chromeBlockLocation) {\n        chromiumOptions.prefs['profile.default_content_setting_values.geolocation'] = CONTENT_SETTING.CONTENT_SETTING_BLOCK;\n    }\n\n    if (browserOptions.chromeUserDataDir) {\n        args.push(`--user-data-dir=${browserOptions.chromeUserDataDir}`);\n    }\n\n    if (browserOptions.projectData?.defaults?.disableChromiumGpu) {\n        args.push('--disable-gpu');\n    }\n\n    Object.assign(opts.desiredCapabilities, { browserName });\n\n    function setMobileEmulationSettings() {\n        if (testRunConfig.mobileEmulation) {\n            chromiumOptions.mobileEmulation = {\n                deviceMetrics: {\n                    width: testRunConfig.mobileEmulation.device.width,\n                    height: testRunConfig.mobileEmulation.device.height + mobileWeb.MOBILE_WEB_REMOTE_RUN_HEADER_SPACING,\n                    pixelRatio: testRunConfig.mobileEmulation.device.deviceScaleFactor,\n                },\n                userAgent: testRunConfig.mobileEmulation.userAgent,\n            };\n        }\n    }\n\n    setMobileEmulationSettings();\n\n    setCustomExtension(customExtensionLocalLocation, extensions, lambdatestService);\n    if (browserOptions.mode === CLI_MODE.EXTENSION) {\n        setTestimExtension(browserOptions, extensions, args, predefinedTestimExtension, lambdatestService);\n    }\n    if (extensions.length > 0) {\n        chromiumOptions.extensions = extensions;\n    }\n\n    if (browserOptions.disableCookiesSameSiteNoneRequiresSecure) {\n        chromiumOptions.localState = {\n            'browser.enabled_labs_experiments': [\n                'cookies-without-same-site-must-be-secure@2',\n            ],\n        };\n    }\n\n    chromiumOptions.args = args;\n    const optionsKey = { MicrosoftEdge: 'edgeOptions', chrome: 'chromeOptions' }[browserName as 'MicrosoftEdge' | 'chrome'] as 'edgeOptions' | 'chromeOptions';\n    const vendor = { MicrosoftEdge: 'ms', chrome: 'goog' }[browserName as 'MicrosoftEdge' | 'chrome'] as 'ms' | 'goog';\n\n    if (LambdatestService.isLambdatestGrid(gridInfo)) {\n        delete chromiumOptions.w3c;\n    }\n\n    if (browserOptions.oldCapabilities && gridInfo.type !== 'testimEnterprise' && !lambdatestService?.isLambdatestRun()) {\n        opts.desiredCapabilities[optionsKey] = chromiumOptions;\n    }\n\n    if (browserOptions.w3cCapabilities || gridInfo.type === 'testimEnterprise') {\n        opts.desiredCapabilities[`${vendor}:${optionsKey}` as 'ms:edgeOptions' | 'goog:chromeOptions'] = chromiumOptions;\n    }\n\n    return opts;\n}\n\nconst buildChromiumOptions = _.memoize(_buildChromiumOptions, (opts, browserOptions, testRunConfig, customExtensionLocalLocation, gridInfo, predefinedTestimExtension) => {\n    // Only hash the attributes which are used in _buildChromiumOptions, some others (which are irrelevant) change and invalidate the hash\n    const stringOptsDesiredCapabilities = JSON.stringify(opts.desiredCapabilities);\n    const stringBrowserOptions = JSON.stringify(_.omit(browserOptions, 'runParams'));\n    const stringTestRunConfig = JSON.stringify(testRunConfig);\n    const stringGridInfoType = JSON.stringify(gridInfo.type);\n    return getHash(stringOptsDesiredCapabilities, stringBrowserOptions, stringTestRunConfig, customExtensionLocalLocation!, stringGridInfoType, predefinedTestimExtension!);\n});\n\n\n// list of content type that Firefox browser will not open the download popup and start the download automaticlly into Downloads folder\nconst FIREFOX_FILE_NEVER_ASK = [\n    'application/force-download',\n    'application/pdf',\n    'application/x-pdf',\n    'application/acrobat',\n    'applications/vnd.pdf',\n    'text/pdf',\n    'text/x-pdf',\n    'application/vnd.cups-pdf',\n];\n\nfunction buildFirefoxOptions(opts: SeleniumOpts, browserOptions: RunnerOptions, lambdatestService: LambdatestService | null) {\n    const fireFoxPrefs = {\n        'pdfjs.disabled': true, //disable pdf viewer. Otherwise, the pdf viewer takes over when we download a pdf.\n    };\n\n    if (featureFlagsService.flags.autoSaveDownloadFileFireFox.isEnabled()) {\n        Object.assign(fireFoxPrefs, {\n            /* eslint-disable max-len */\n            'browser.helperApps.neverAsk.saveToDisk': FIREFOX_FILE_NEVER_ASK.join(','),\n            'browser.helperApps.neverAsk.openFile': FIREFOX_FILE_NEVER_ASK.join(','),\n            'browser.helperApps.alwaysAsk.force': false,\n            'browser.download.manager.useWindow': false, // A boolean value indicating whether or not to use the Downloads window (true) or display download status in the status bar (false) in the browser window.\n            'browser.download.manager.focusWhenStarting': false, // A boolean value that indicates whether or not to focus the Download Manager window when a download begins.\n            'browser.download.manager.alertOnEXEOpen': false, // A boolean value that indicates whether the UI Should alert the user about the dangers of opening (executing) an EXE. The user may check a \"don't ask\" box on the UI to toggle this.\n            'browser.download.manager.showWhenStarting': false, // A boolean value that indicates whether or not to show the Downloads window when a download begins.\n            'browser.download.manager.closeWhenDone': true, // As boolean value indicating whether or not the Downloads window should close automatically when downloads are completed.\n            'browser.download.manager.showAlertOnComplete': false, // A boolean value that indicates whether or not an alert should be shown when downloads complete.\n            /* eslint-enable max-len */\n        });\n    }\n\n    Object.assign(opts.desiredCapabilities, {\n        acceptInsecureCerts: true,\n        browserName: 'firefox',\n        marionette: true,\n        'moz:firefoxOptions': {\n            prefs: fireFoxPrefs,\n        },\n    }, lambdatestService?.isLambdatestRun() ? { enableCustomTranslation: true } : {});\n\n    if (browserOptions.disableCookiesSameSiteNoneRequiresSecure) {\n        opts.desiredCapabilities['moz:firefoxOptions']!.prefs['network.cookie.sameSite.noneRequiresSecure'] = false;\n    }\n\n    if (browserOptions.mode === CLI_MODE.EXTENSION) {\n        if (browserOptions.ext) {\n            opts.desiredCapabilities.testim_firefox_profile = browserOptions.ext;\n        } else {\n            const zipFileSuffix = browserOptions.canary ? '-master.zip' : '.zip';\n            const filePath = path.join(process.cwd(), `testim-firefox-profile${zipFileSuffix}`);\n            opts.desiredCapabilities.firefox_profile = readFileToBase64(filePath);\n        }\n    }\n\n\n    // more interesting options\n    // https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Headless_mode#Debugging_headless_Firefox\n    if (browserOptions.headless) {\n        if (!opts.desiredCapabilities['moz:firefoxOptions']!.args) {\n            opts.desiredCapabilities['moz:firefoxOptions']!.args = [];\n        }\n        opts.desiredCapabilities['moz:firefoxOptions']!.args.push('-headless');\n    }\n\n    return opts;\n}\n\nfunction buildSaucelabs(browserOptions: RunnerOptions, testName: string, testRunConfig: any): Partial<{ username: string; accessKey: string; platform: string; platformName: string; name: string }> {\n    const { saucelabs } = browserOptions;\n    if (saucelabs?.username && saucelabs.accessKey) {\n        if (testRunConfig) {\n            testRunConfig.sl.version = testRunConfig.browserValue === 'safari' ? testRunConfig.sl.safari_version : testRunConfig.sl.version;\n            testRunConfig.sl.appiumVersion = (saucelabs as any).appiumVersion || testRunConfig.sl.appiumVersion;\n            return Object.assign({}, testRunConfig.sl, saucelabs, { name: testName });\n        }\n        return Object.assign({}, saucelabs, { name: testName });\n    }\n    return {};\n}\n\ninterface BrowserStackOpts {\n    'browserstack.user': string;\n    'browserstack.key': string;\n    os_version: string;\n    platform: string;\n    name: string;\n    'safari.options': { technologyPreview: boolean };\n}\nfunction buildBrowserstack(browserOptions: RunnerOptions, testName: string, testRunConfig: any): Partial<BrowserStackOpts> {\n    if (!_.isEmpty(browserOptions.browserstack)) {\n        if (testRunConfig) {\n            testRunConfig.bs.browser_version = testRunConfig.browserValue === 'safari' ? testRunConfig.bs.safari_version : testRunConfig.bs.browser_version;\n            if (testRunConfig.browserValue === 'safari' && testRunConfig.bs.safari_version === '10') {\n                Object.assign(testRunConfig.bs, { 'safari.options': { technologyPreview: true } });\n            }\n            return Object.assign({}, testRunConfig.bs, browserOptions.browserstack, { name: testName });\n        }\n        return Object.assign({}, browserOptions.browserstack, { name: testName });\n    }\n    return {};\n}\n\nfunction buildPerfecto(browserOptions: RunnerOptions) {\n    if (browserOptions.perfecto) {\n        return browserOptions.perfecto;\n    }\n    return {};\n}\n\ninterface ExperitestOpts {\n    accessKey: string;\n    browserVersion: string;\n    platformName: string;\n    seleniumScreenshot: boolean;\n    newSessionWaitTimeout: number;\n}\nfunction buildExperitest(browserOptions: RunnerOptions, browser: string, sessionTimeoutSec: number): Partial<ExperitestOpts> {\n    if (browserOptions.experitestToken) {\n        const isSafari = browser === 'safari';\n        return {\n            accessKey: browserOptions.experitestToken,\n            browserVersion: 'latest',\n            platformName: isSafari ? 'MAC' : 'WIN10',\n            //Workaround to Experitest bug in take screenshot in Safari browser\n            seleniumScreenshot: isSafari,\n            newSessionWaitTimeout: sessionTimeoutSec,\n        };\n    }\n\n    return {};\n}\n\nfunction buildHeaders(browserOptions: RunnerOptions, gridInfo: any = {}) {\n    const { gridData = {}, gridUsername, gridPassword } = browserOptions;\n    const username = gridUsername || gridData.user || gridInfo.user;\n    const password = gridPassword || gridData.key || gridInfo.key;\n\n    const headers = {} as { [header: string]: string | string[] };\n    if (username && password) {\n        headers.Authorization = utils.buildBasicHeader(username, password);\n    }\n\n    return headers;\n}\n\nexport function buildSeleniumOptions(\n    browserOptions: RunnerOptions,\n    testName: string,\n    testRunConfig: any,\n    gridInfo: any,\n    customExtensionLocalLocation: string | undefined,\n    executionId: string,\n    testResultId: string,\n    lambdatestService: LambdatestService | null = null,\n) {\n    if (gridInfo.mode === 'local') {\n        const extensions: string[] = [];\n        const args = [...DEFAULT_CHROME_OPTIONS_ARGS];\n        const binaryLocation: { binary?: string } = {};\n\n        if (browserOptions.headless) {\n            args.push('--headless');\n        }\n\n        // @ts-expect-error These options don't exist in types, possibly only work with config file?\n        if (browserOptions.silentDebuggerExtensionApi) {\n            args.push('--silent-debugger-extension-api');\n        }\n\n        // @ts-expect-error These options don't exist in types, possibly only work with config file?\n        if (browserOptions.remoteDebuggingPort !== undefined) {\n            // @ts-expect-error These options don't exist in types, possibly only work with config file?\n            args.push(`--remote-debugging-port=${browserOptions.remoteDebuggingPort}`);\n        }\n\n        if (browserOptions.chromeExtraArgs) {\n            browserOptions.chromeExtraArgs.forEach(arg => args.push(`--${arg}`));\n        }\n\n        if (browserOptions.chromeBinaryLocation) {\n            binaryLocation.binary = browserOptions.chromeBinaryLocation;\n        }\n\n        if (browserOptions.mode !== 'selenium') {\n            setTestimExtension(browserOptions, extensions, args, null, lambdatestService);\n        }\n        setCustomExtension(customExtensionLocalLocation, extensions, lambdatestService);\n\n        return {\n            logLevel: LOG_LEVEL,\n            desiredCapabilities: {\n                chromeOptions: {\n                    args,\n                    extensions,\n                    ...binaryLocation,\n                },\n                browserName: 'chrome',\n            },\n            host: 'localhost',\n            port: 9515, // default chromedriver port\n        };\n    }\n\n    const { driverRequestTimeout, driverRequestRetries } = browserOptions;\n    const headers = buildHeaders(browserOptions, gridInfo);\n    let opts: SeleniumOpts = {\n        host: gridInfo.host,\n        port: gridInfo.port || 4444,\n        path: gridInfo.path || '/wd/hub',\n        protocol: gridInfo.protocol || 'http',\n        logLevel: LOG_LEVEL,\n        connectionRetryTimeout: driverRequestTimeout,\n        connectionRetryCount: driverRequestRetries,\n        getSessionTimeout: Math.max(lambdatestService!.getSessionTimeout!, browserOptions.getSessionTimeout),\n        getSessionRetries: lambdatestService!.getSessionRetries || browserOptions.getSessionRetries,\n        deprecationWarnings: false,\n        desiredCapabilities: {\n            javascriptEnabled: true,\n            locationContextEnabled: true,\n            handlesAlerts: true,\n            rotatable: true,\n            acceptSslCerts: true,\n            unexpectedAlertBehaviour: 'accept', // What the browser should do with an unhandled alert before throwing out the UnhandledAlertException - automatically click on accept\n            nativeEvents: true,\n            testName,\n        },\n        ...(!_.isEmpty(headers) && { headers }),\n        ...(browserOptions.proxyForGrid && { agent: global.ProxyAgent!(global.proxyUri) }),\n    };\n\n    if (isDFGrid(gridInfo)) {\n        browserOptions.oldCapabilities = false;\n        browserOptions.w3cCapabilities = true;\n        opts.desiredCapabilities = {\n            unexpectedAlertBehaviour: 'accept',\n        };\n    }\n\n    if (browserOptions.disableNativeEvents) {\n        opts.desiredCapabilities.nativeEvents = false;\n    }\n\n    if (gridInfo.user && gridInfo.key) {\n        if (gridInfo.type === 'saucelabs') {\n            browserOptions.saucelabs ||= {} as any;\n            browserOptions.saucelabs.username ||= gridInfo.user;\n            browserOptions.saucelabs.accessKey ||= gridInfo.key;\n        }\n\n        if (gridInfo.type === 'browserstack') {\n            browserOptions.browserstack ||= {} as any;\n            browserOptions.browserstack['browserstack.user'] ||= gridInfo.user;\n            browserOptions.browserstack['browserstack.key'] ||= gridInfo.key;\n        }\n    }\n\n    if (gridInfo.key && gridInfo.type === 'perfecto') {\n        browserOptions.perfecto.securityToken = gridInfo.key;\n    }\n\n    const browserTimeoutSec = Number(browserOptions.browserTimeout / 1000);\n    const browser = browserOptions.browser || testRunConfig?.browserValue;\n\n    _.merge(\n        opts.desiredCapabilities,\n        buildSaucelabs(browserOptions, testName, testRunConfig),\n        buildBrowserstack(browserOptions, testName, testRunConfig),\n        buildPerfecto(browserOptions),\n        buildExperitest(browserOptions, browser, browserTimeoutSec),\n        lambdatestService?.getCapabilities(browserOptions, browser, executionId, testResultId, testName),\n    );\n\n    let predefinedTestimExtension = null;\n    if (!browserOptions.ext && !browserOptions.extensionPath && gridInfo.host?.endsWith('.testim.io') && !browserOptions.canary && browserOptions.mode === CLI_MODE.EXTENSION) {\n        if (browser === 'chrome') {\n            predefinedTestimExtension = '/opt/testim-headless';\n        } else if (browser === 'edge-chromium') {\n            predefinedTestimExtension = 'C:/selenium/testim-headless';\n        }\n    }\n\n    if (gridInfo.host?.endsWith('.testim.io') && browser === 'edge-chromium') {\n        opts.desiredCapabilities.version = '83'; // Need to match GGR filter\n    }\n\n    switch (browser) {\n        case 'chrome':\n        case 'edge-chromium':\n            opts = buildChromiumOptions(opts, browserOptions, testRunConfig, customExtensionLocalLocation, gridInfo, predefinedTestimExtension, lambdatestService);\n            break;\n        case 'firefox':\n            opts = buildFirefoxOptions(opts, browserOptions, lambdatestService);\n            break;\n        case 'safari':\n        case 'safari technology preview':\n            opts = buildSafariOptions(opts, browser);\n            break;\n        default:\n            break;\n    }\n\n    _.merge(opts.desiredCapabilities, browserOptions.seleniumCapsFileContent);\n\n    try {\n        /**\n         * Targeted custom capabilities can be added to the desired capabilities object via the addCustomCapabilities FF.\n         * No targeting: { selenium_version: '3.141.59' }\n         * One level targeting (either grid provider, host, browser name or browser version): { \"devicefarm\": { selenium_version: '3.141.59' } }\n         * Two level targeting: { \"internet explorer\": { \"11\": { selenium_version: '3.141.59' } } }\n         */\n        const hostToProvider = {\n            'hub.lambdatest.com': 'lambdatest',\n            [featureFlagsService.flags.publicGridURL.getValue()]: 'testim',\n            'testgrid-devicefarm.us-west-2.amazonaws.com': 'devicefarm',\n        };\n        const byGrid = (capabilities: any) => capabilities[gridInfo.provider] || capabilities[opts.host] || capabilities[hostToProvider[opts.host]];\n        const getTargetingGroup = (capabilities: any) =>\n            byGrid(capabilities) ||\n            capabilities[opts.desiredCapabilities?.browserName as any] ||\n            capabilities[opts.desiredCapabilities?.version as any] ||\n            capabilities ||\n            {};\n        const capabilities = JSON.parse(featureFlagsService.flags.addCustomCapabilities.getValue() || '{}');\n        const customCapabilities = getTargetingGroup(getTargetingGroup(capabilities));\n\n        if (Object.keys(customCapabilities).length) {\n            logger.info(`Adding custom capabilities: ${JSON.stringify(customCapabilities)}`);\n            Object.assign(opts.desiredCapabilities, customCapabilities);\n        }\n    } catch (error) {\n        logger.error('Failed to load custom capabilities', {\n            error,\n            customCapabilities: featureFlagsService.flags.addCustomCapabilities.getValue(),\n        });\n    }\n\n    if (isDFGrid(gridInfo) && opts.desiredCapabilities && !opts.capabilities) {\n        convertToNewCapabilitiesFormat(opts.desiredCapabilities);\n        opts.capabilities = { alwaysMatch: opts.desiredCapabilities, firstMatch: [{}] };\n        delete (opts as any).desiredCapabilities;\n    }\n\n    return opts;\n}\n\ninterface AppiumOptionsParams {\n    projectType: 'desktopWeb' | 'mobileWeb' | 'android' | 'ios';\n    gridInfo: any;\n    testRunConfig: any;\n    nativeApp: any;\n    options: RunnerOptions;\n    appPath: string | null;\n    androidActivityWait: string | null;\n}\n//testRunConfig not in used for now\nexport function buildAppiumOptions({ projectType, gridInfo, nativeApp, options, appPath, androidActivityWait }: AppiumOptionsParams) {\n    const { deviceModel, osVersion, deviceUdid, fullReset, resetAppData, resetOnSessionStartOnly } = options;\n    const headspinSelector = {} as { model?: string; os_version?: string; device_id?: string };\n\n    if (!nativeApp && !appPath) {\n        throw Error('missing mobile app!');\n    }\n    if (gridInfo.type !== gridTypes.TESTIM_HEADSPIN) {\n        throw Error('unsupported grid was detected please make sure to select supported mobile grid');\n    }\n    const connection = {\n        protocol: gridInfo.protocol || 'https',\n        hostname: gridInfo.host,\n        port: gridInfo.port,\n        path: `/v0/${gridInfo.accessToken}/wd/hub`,\n        logLevel: options.appiumLogLevel,\n        // connectionRetryTimeout: 900000, -- not used for now\n    };\n    //TODO: check if more caps should be defined as default\n    let appCaps = {\n        'headspin:capture': true,\n        ...(!fullReset && !resetAppData && { 'appium:noReset': true }),\n        ...(!fullReset && resetAppData && { 'appium:noReset': false }),\n    } as Record<'headspin:capture' | 'appium:autoAcceptAlerts' | 'appium:noReset' | 'appium:autoGrantPermissions', boolean> & { 'headspin:selector'?: typeof headspinSelector };\n    switch (projectType) {\n        case 'ios':\n            appCaps = {\n                ...appCaps,\n                platformName: 'iOS',\n                'appium:autoAcceptAlerts': true,\n                'appium:automationName': 'XCUITest',\n                ...(fullReset && { 'appium:fullReset': fullReset, 'appium:resetOnSessionStartOnly': resetOnSessionStartOnly }),\n                ...(nativeApp && { 'appium:bundleId': nativeApp.id }),\n                ...(appPath && {\n                    'appium:app': appPath,\n                }),\n            };\n            break;\n        case 'android':\n            appCaps = {\n                ...appCaps,\n                platformName: 'Android',\n                ...(fullReset && { 'appium:fullReset': fullReset }),\n                ...(!fullReset && resetAppData && { 'appium:autoGrantPermissions': true }),\n                'appium:automationName': 'UiAutomator2',\n                'appium:appWaitActivity': androidActivityWait,\n                ...(nativeApp && {\n                    'appium:appPackage': nativeApp.id || nativeApp.packageName,\n                    'appium:appActivity': nativeApp.activity,\n                }),\n                ...(appPath && {\n                    'appium:app': appPath,\n                }),\n            };\n            break;\n        default:\n            throw Error(`unsupported mobile project ${projectType}`);\n    }\n    if (deviceModel) {\n        headspinSelector.model = deviceModel;\n    }\n    if (osVersion) {\n        headspinSelector.os_version = osVersion;\n    }\n    if (deviceUdid) {\n        headspinSelector.device_id = deviceUdid;\n        delete headspinSelector.model;\n        delete headspinSelector.os_version;\n    }\n    if (!_.isEmpty(headspinSelector)) {\n        appCaps['headspin:selector'] = headspinSelector;\n    }\n    return {\n        ...connection,\n        desiredCapabilities: appCaps,\n        capabilities: appCaps,\n    };\n}\n", "export function isOldProtocol(err) {\n    return (\n        err.message?.match(/Command not found/) ||\n        err.message === 'HTTP method not allowed' ||\n        err.message === 'Unknown error' ||\n        err.message?.match(/Unknown timeout type/) ||\n        err.seleniumStack?.type === 'UnknownCommand' ||\n        err.message?.match(/did not match a known command/) ||\n        err.message?.match(/Server returned HTTP response code: 405 for URL/) ||\n        err.seleniumStack?.message === 'The arguments passed to a command are either invalid or malformed.' ||\n        err.message?.match(/Invalid timeout type specified: ms/)\n    );\n}\n\nexport function encodeForSafari(url, isSafari, logger) {\n    if (!isSafari || !url) {\n        return url;\n    }\n\n    // don't touch the URL if it has %. Technically incorrect (% alone breaks Safari),\n    // but otherwise we can break other people's URLs. Replace spaces because it's safe.\n    if (url.includes('%')) {\n        return url.replace(/ /g, '%20');\n    }\n\n    try {\n        const isAlreadyEncoded = decodeURI(url) !== url;\n        if (isAlreadyEncoded) {\n            return url;\n        }\n        return encodeURI(url);\n    } catch (err) {\n        if (logger) {\n            logger.warn('tried to encode url but failed', { err, url });\n        }\n        return url;\n    }\n}\n", "/*\n * Copyright (C) 2017 Apple Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS\n * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n * THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// https://github.com/webdriverio/webdriverio/blob/master/packages/webdriverio/src/scripts/isElementDisplayed.js\n\n/**\n * check if element is visible\n * @param  {HTMLElement | null} element  element to check\n * @return {boolean}           true if element is within viewport\n */\nexport function isElementDisplayed(element) {\n    /** @param {Node} node @returns {node is HTMLElement} */\n    function nodeIsElement(node) {\n        if (!node) {\n            return false;\n        }\n\n        return [Node.ELEMENT_NODE, Node.DOCUMENT_NODE, Node.DOCUMENT_FRAGMENT_NODE].includes(node.nodeType);\n    }\n\n    /** @param {Node} el */\n    function parentElementForElement(el) {\n        if (!el) {\n            return null;\n        }\n\n        return enclosingNodeOrSelfMatchingPredicate(el.parentNode, nodeIsElement);\n    }\n\n    /** @param {HTMLElement} targetNode @param {(node: HTMLElement) => boolean} predicate */\n    function enclosingNodeOrSelfMatchingPredicate(targetNode, predicate) {\n        for (let node = targetNode; node && node !== targetNode.ownerDocument; node = node.parentNode) {\n            if (predicate(node)) {\n                return node;\n            }\n        }\n\n        return null;\n    }\n\n    /** @param {HTMLElement} targetElement @param {(el: HTMLElement) => boolean} predicate */\n    function enclosingElementOrSelfMatchingPredicate(targetElement, predicate) {\n        for (let el = targetElement; el && el !== targetElement.ownerDocument; el = parentElementForElement(el)) {\n            if (predicate(el)) {\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /** @param {HTMLElement} element @param {string} property @returns {string | null} */\n    function cascadedStylePropertyForElement(element, property) {\n        if (!element || !property) {\n            return null;\n        }\n        // if document-fragment, skip it and use element.host instead. This happens\n        // when the element is inside a shadow root.\n        // window.getComputedStyle errors on document-fragment.\n        if (element instanceof DocumentFragment) {\n            element = element.host;\n        }\n\n        const computedStyle = window.getComputedStyle(element);\n        const computedStyleProperty = computedStyle.getPropertyValue(property);\n        if (computedStyleProperty && computedStyleProperty !== 'inherit') {\n            return computedStyleProperty;\n        }\n\n        // Ideally getPropertyValue would return the 'used' or 'actual' value, but\n        // it doesn't for legacy reasons. So we need to do our own poor man's cascade.\n        // Fall back to the first non-'inherit' value found in an ancestor.\n        // In any case, getPropertyValue will not return 'initial'.\n\n        // FIXME: will this incorrectly inherit non-inheritable CSS properties?\n        // I think all important non-inheritable properties (width, height, etc.)\n        // for our purposes here are specially resolved, so this may not be an issue.\n        // Specification is here: https://drafts.csswg.org/cssom/#resolved-values\n        const parentElement = parentElementForElement(element);\n        return cascadedStylePropertyForElement(parentElement, property);\n    }\n\n    /** @param {HTMLElement} element @returns {boolean} */\n    function elementSubtreeHasNonZeroDimensions(element) {\n        const boundingBox = element.getBoundingClientRect();\n        if (boundingBox.width > 0 && boundingBox.height > 0) {\n            return true;\n        }\n\n        // Paths can have a zero width or height. Treat them as shown if the stroke width is positive.\n        if (element.tagName.toUpperCase() === 'PATH' && boundingBox.width + boundingBox.height > 0) {\n            const strokeWidth = cascadedStylePropertyForElement(element, 'stroke-width');\n            return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n        }\n\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow === 'hidden') {\n            return false;\n        }\n\n        // If the container's overflow is not hidden and it has zero size, consider the\n        // container to have non-zero dimensions if a child node has non-zero dimensions.\n        return Array.from(element.childNodes).some((childNode) => {\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return true;\n            }\n\n            if (nodeIsElement(childNode)) {\n                return elementSubtreeHasNonZeroDimensions(childNode);\n            }\n\n            return false;\n        });\n    }\n\n    /** @param {HTMLElement} element */\n    function elementOverflowsContainer(element) {\n        const cascadedOverflow = cascadedStylePropertyForElement(element, 'overflow');\n        if (cascadedOverflow !== 'hidden') {\n            return false;\n        }\n\n        // FIXME: this needs to take into account the scroll position of the element,\n        // the display modes of it and its ancestors, and the container it overflows.\n        // See Selenium's bot.dom.getOverflowState atom for an exhaustive list of edge cases.\n        return true;\n    }\n\n    /** @param {HTMLElement} element @returns {boolean} */\n    function isElementSubtreeHiddenByOverflow(element) {\n        if (!element) {\n            return false;\n        }\n\n        if (!elementOverflowsContainer(element)) {\n            return false;\n        }\n\n        if (!element.childNodes.length) {\n            return false;\n        }\n\n        // This element's subtree is hidden by overflow if all child subtrees are as well.\n        return Array.from(element.childNodes).every((childNode) => {\n            // Returns true if the child node is overflowed or otherwise hidden.\n            // Base case: not an element, has zero size, scrolled out, or doesn't overflow container.\n            // Visibility of text nodes is controlled by parent\n            if (childNode.nodeType === Node.TEXT_NODE) {\n                return false;\n            }\n            if (!nodeIsElement(childNode)) {\n                return true;\n            }\n\n            if (!elementSubtreeHasNonZeroDimensions(childNode)) {\n                return true;\n            }\n\n            // Recurse.\n            return isElementSubtreeHiddenByOverflow(childNode);\n        });\n    }\n    /**\n     * walk up the tree testing for a shadow root\n     * @param {Node | null} el @returns {boolean}\n     */\n    function isElementInsideShadowRoot(el) {\n        if (!el) {\n            return false;\n        }\n        if (el.parentNode?.host) {\n            return true;\n        }\n        return isElementInsideShadowRoot(el.parentNode);\n    }\n\n    // This is a partial re-implementation of Selenium's \"element is displayed\" algorithm.\n    // When the W3C specification's algorithm stabilizes, we should implement that.\n    // If this command is misdirected to the wrong document (and is NOT inside a shadow root), treat it as not shown.\n    if (!element || (!isElementInsideShadowRoot(element) && !document.contains(element))) {\n        return false;\n    }\n\n    // Special cases for specific tag names.\n    switch (element.tagName.toUpperCase()) {\n        case 'BODY':\n            return true;\n\n        case 'SCRIPT':\n        case 'NOSCRIPT':\n            return false;\n\n        case 'OPTGROUP':\n        case 'OPTION': {\n            // Option/optgroup are considered shown if the containing <select> is shown.\n            const enclosingSelectElement = enclosingNodeOrSelfMatchingPredicate(element, (e) => e.tagName.toUpperCase() === 'SELECT');\n            return isElementDisplayed(enclosingSelectElement);\n        }\n        case 'INPUT':\n            // <input type=\"hidden\"> is considered not shown.\n            if (element.type === 'hidden') {\n                return false;\n            }\n            break;\n            // case 'MAP':\n            // FIXME: Selenium has special handling for <map> elements. We don't do anything now.\n\n        default:\n            break;\n    }\n\n    if (cascadedStylePropertyForElement(element, 'visibility') !== 'visible') {\n        return false;\n    }\n\n    const hasAncestorWithZeroOpacity = !!enclosingElementOrSelfMatchingPredicate(element, (e) => Number(cascadedStylePropertyForElement(e, 'opacity')) === 0);\n    const hasAncestorWithDisplayNone = !!enclosingElementOrSelfMatchingPredicate(element, (e) => cascadedStylePropertyForElement(e, 'display') === 'none');\n    if (hasAncestorWithZeroOpacity || hasAncestorWithDisplayNone) {\n        return false;\n    }\n\n    if (!elementSubtreeHasNonZeroDimensions(element)) {\n        return false;\n    }\n\n    if (isElementSubtreeHiddenByOverflow(element)) {\n        return false;\n    }\n\n    return true;\n}\n", "import Queue from 'promise-queue';\nimport * as config from '../commons/config';\nimport * as webdriverio from '@testim/webdriverio';\nimport * as perf from '../commons/performance-logger';\nimport { extractElementId } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { UNICODE_CHARACTERS, W3C_ELEMENT_ID } from './constants';\nimport { isElementDisplayed } from './scripts/isElementDisplayed';\nimport { isOldProtocol, encodeForSafari } from './webDriverUtils';\nimport { SELENIUM_PERF_MARKS } from '../commons/SeleniumPerfStats';\n\nconst logger = getLogger('WebDriverApi');\n\nconst getViewportSizeHelper = function () {\n    return {\n        screenWidth: Math.floor(window.innerWidth || 0),\n        screenHeight: Math.floor(window.innerHeight || 0),\n    };\n};\n\nexport class WebdriverioWebDriverApi {\n    constructor() {\n        this.w3cRequests = {};\n    }\n\n    windowHandleMaximize() {\n        return this.addToQueue(() => this.client.windowHandleMaximize().then(result => ({\n            height: result.value.height,\n            width: result.value.width,\n        })));\n    }\n\n    rejectWithLog(err, func) {\n        const { testName, testResultId } = this;\n        const crashingFunc = func ? func.toString().substr(0, 2000) : '';\n        logger.warn('error from selenium', {\n            err, testResultId, testName, crashingFunc,\n        });\n        return Promise.reject(err);\n    }\n\n    initQueueRequests() {\n        let maxConcurrent = Infinity;\n        if (this.isAndroid()) {\n            maxConcurrent = 1;\n        }\n        if (typeof config.REQUESTS_QUEUE_SIZE !== 'undefined') {\n            maxConcurrent = config.REQUESTS_QUEUE_SIZE;\n        }\n        const maxQueue = Infinity;\n        this.queue = new Queue(maxConcurrent, maxQueue);\n    }\n\n    /**\n     * @template T\n     * @param {() => Promise<T>} func\n     */\n    async addToQueue(func) {\n        const perfId = this.seleniumPerfStats.markStart();\n        try {\n            return await this.queue.add(func);\n        } catch (err) {\n            return this.rejectWithLog(err, func);\n        } finally {\n            this.seleniumPerfStats.markEnd(perfId);\n        }\n    }\n\n    async initClient(capabilities, testName, testResultId) {\n        this.testName = testName;\n        this.testResultId = testResultId;\n        // silence warning regarding `buttonPress` being deprecated\n        capabilities.deprecationWarnings = false;\n        this.client = webdriverio.remote(capabilities);\n        this.initQueueRequests();\n        perf.log('right before addToQueue');\n        const perfId = this.seleniumPerfStats.markStart(SELENIUM_PERF_MARKS.GET_BROWSER);\n        try {\n            await this.addToQueue(() => {\n                logger.info('requesting browser', { testResultId, testName });\n                perf.log('before this.client.init');\n                return this.client.init();\n            });\n            perf.log('after client init');\n        } finally {\n            await this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_BROWSER);\n        }\n    }\n\n    get isMobile() {\n        return this.client.isMobile;\n    }\n\n    getSessionId() {\n        return this.client?.requestHandler?.sessionID;\n    }\n\n    isChrome() {\n        return this.client.desiredCapabilities.browserName === 'chrome';\n    }\n\n    isChromium() {\n        return this.isChrome() || this.isEdgeChromium();\n    }\n\n    isFirefox() {\n        return this.client.desiredCapabilities.browserName === 'firefox';\n    }\n\n    isSafari() {\n        return this.client.desiredCapabilities.browserName === 'safari' || this.client.desiredCapabilities.browserName === 'safari technology preview';\n    }\n\n    isAndroid() {\n        return this.client.desiredCapabilities.platformName === 'Android';\n    }\n\n    isEdgeChromium() {\n        return this.client.desiredCapabilities.browserName === 'MicrosoftEdge' && !this.client.desiredCapabilities._isOldEdge;\n    }\n\n    execute(...args) {\n        return this.addToQueue(() => {\n            let script = args.shift();\n\n            /*\n             * parameter check\n             */\n            if ((typeof script !== 'string' && typeof script !== 'function')) {\n                return Promise.reject(new Error('number or type of arguments don\\'t agree with execute protocol command'));\n            }\n\n            /*\n             * instances started as multibrowserinstance can't getting called with\n             * a function parameter, therefor we need to check if it starts with \"function () {\"\n             */\n            if (typeof script === 'function') {\n                script = `return (${script}).apply(null, arguments)`;\n            }\n\n            const decorateErrorWithExecutedScript = (err => {\n                err.executedScript = script;\n                throw err;\n            });\n            const newEndpoint = () => this.client.requestHandler.create('/session/:sessionId/execute/sync', {\n                script,\n                args,\n            }).catch(decorateErrorWithExecutedScript);\n            const oldEndpoint = () => this.client.requestHandler.create('/session/:sessionId/execute', { script, args })\n                .catch(decorateErrorWithExecutedScript);\n\n            if (this.w3cRequests.execute) {\n                return newEndpoint();\n            }\n\n            return oldEndpoint()\n                .catch(err => {\n                    /**\n                     * jsonwire command not supported try webdriver endpoint\n                     */\n                    if (isOldProtocol(err)) {\n                        this.w3cRequests.execute = true;\n                        return newEndpoint();\n                    }\n\n                    throw err;\n                });\n        });\n    }\n\n    /**\n     * note that script received here must accept a callback, and call it when they finish running!\n     * @param  {...any} args - the first argument is a script, the others are the script arguments.\n     */\n    executeAsync(...args) {\n        return this.addToQueue(() => {\n            let script = args.shift();\n\n            /*\n             * parameter check\n             */\n            if ((typeof script !== 'string' && typeof script !== 'function')) {\n                return Promise.reject(new Error('number or type of arguments don\\'t agree with execute protocol command'));\n            }\n\n            /*\n             * instances started as multibrowserinstance can't getting called with\n             * a function parameter, therefor we need to check if it starts with \"function () {\"\n             */\n            if (typeof script === 'function') {\n                script = `return (${script}).apply(null, arguments)`;\n            }\n\n            const newEndpoint = () => this.client.requestHandler.create('/session/:sessionId/execute/async', {\n                script,\n                args,\n            });\n            const oldEndpoint = () => this.client.requestHandler.create('/session/:sessionId/execute_async', {\n                script,\n                args,\n            });\n\n            if (this.w3cRequests.executeAsync) {\n                return newEndpoint();\n            }\n\n            return oldEndpoint()\n                .catch(err => {\n                    /**\n                     * jsonwire command not supported try webdriver endpoint\n                     */\n                    if (isOldProtocol(err)) {\n                        this.w3cRequests.executeAsync = true;\n                        return newEndpoint();\n                    }\n\n                    throw err;\n                });\n        });\n    }\n\n    async executeCDP(command, parameters = {}) {\n        if (!this.isChromium()) {\n            return undefined;\n        }\n        const result = await this.client.requestHandler.create({\n            path: '/session/:sessionId/chromium/send_command_and_get_result',\n            method: 'POST',\n        }, {\n            cmd: command,\n            params: parameters,\n        });\n        if (!result?.value?.targetInfos) {\n            return [];\n        }\n        return result.value.targetInfos;\n    }\n\n    takeScreenshot() {\n        const perfId = this.seleniumPerfStats.markStart(SELENIUM_PERF_MARKS.GET_SCREENSHOT);\n        return this.addToQueue(() => this.client.screenshot())\n            .finally(() => this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_SCREENSHOT));\n    }\n\n    takeElementScreenshot(element) {\n        const perfId = this.seleniumPerfStats.markStart(SELENIUM_PERF_MARKS.GET_SCREENSHOT);\n        return this.addToQueue(() => this.client.elementIdScreenshot(extractElementId(element)))\n            .finally(() => this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_SCREENSHOT));\n    }\n\n    /**\n     * @param {string} selector\n     * @returns {Promise<{ value: HTMLElement }>}\n    */\n    getElementBySelector(selector) {\n        return this.addToQueue(() => this.client.element(selector));\n    }\n\n    elementIdDisplayed(elementId) {\n        return this.addToQueue(() => {\n            const oldEndpoint = () => this.client.elementIdDisplayed(elementId);\n            const newEndpoint = () => this.execute(isElementDisplayed, { ELEMENT: elementId, [W3C_ELEMENT_ID]: elementId });\n\n            if (this.w3cRequests.elementIdDisplayed) {\n                return newEndpoint();\n            }\n\n            return oldEndpoint()\n                .catch(err => {\n                    /**\n                     * jsonwire command not supported try webdriver endpoint\n                     */\n                    if (isOldProtocol(err)) {\n                        this.w3cRequests.elementIdDisplayed = true;\n                        return newEndpoint();\n                    }\n\n                    throw err;\n                });\n        });\n    }\n\n    windowHandles() {\n        return this.addToQueue(() => {\n            const oldEndpoint = () => this.client.requestHandler.create('/session/:sessionId/window_handles');\n            const newEndpoint = () => this.client.requestHandler.create('/session/:sessionId/window/handles');\n\n            if (this.w3cRequests.windowHandles) {\n                return newEndpoint();\n            }\n\n            return oldEndpoint()\n                .catch(err => {\n                    /**\n                     * jsonwire command not supported try webdriver endpoint\n                     */\n                    if (isOldProtocol(err)) {\n                        this.w3cRequests.windowHandles = true;\n                        return newEndpoint();\n                    }\n\n                    throw err;\n                });\n        });\n    }\n\n    url(url) {\n        return this.addToQueue(() => this.client.url(encodeForSafari(url, this.isSafari(), logger)));\n    }\n\n    reloadTab() {\n        return this.addToQueue(() => this.client.refresh());\n    }\n\n    source() {\n        return this.addToQueue(() => this.client.source());\n    }\n\n    timeouts(type, ms) {\n        return this.addToQueue(() => {\n            const oldEndpoint = () => this.client.requestHandler.create('/session/:sessionId/timeouts', {\n                type,\n                ms,\n            });\n\n            const newEndpoint = () => this.client.requestHandler.create('/session/:sessionId/timeouts', {\n                [type]: ms,\n            });\n\n            if (this.w3cRequests.timeouts) {\n                return newEndpoint();\n            }\n\n            return oldEndpoint()\n                .catch(err => {\n                    if (isOldProtocol(err)) {\n                        this.w3cRequests.timeouts = true;\n                        return newEndpoint();\n                    }\n                    throw err;\n                });\n        });\n    }\n\n    scroll(xoffset, yoffset) {\n        xoffset = typeof xoffset === 'number' ? xoffset : 0;\n        yoffset = typeof yoffset === 'number' ? yoffset : 0;\n\n        const scroll = function (x, y) {\n            window.scrollTo(x, y);\n        };\n\n        return this.execute(scroll, xoffset, yoffset);\n    }\n\n    setValue(element, value) {\n        return this.elementIdClear(extractElementId(element))\n            .then(() => this.elementIdValue(extractElementId(element), value));\n    }\n\n    getViewportSize(prop) {\n        return this.execute(getViewportSizeHelper).then((res) => {\n            if (typeof prop === 'string' && prop.match(/(width|height)/)) {\n                prop = `screen${prop.slice(0, 1).toUpperCase()}${prop.slice(1)}`;\n                return res.value[prop];\n            }\n\n            return {\n                width: res.value.screenWidth || 0,\n                height: res.value.screenHeight || 0,\n            };\n        });\n    }\n\n    keys(value) {\n        const checkUnicode = _value => (UNICODE_CHARACTERS.hasOwnProperty(_value) ? [UNICODE_CHARACTERS[_value]] : _value.split(''));\n\n        let key = [];\n\n        /**\n         * replace key with corresponding unicode character\n         */\n        if (typeof value === 'string') {\n            key = checkUnicode(value);\n        } else if (value instanceof Array) {\n            for (const charSet of value) {\n                key = key.concat(checkUnicode(charSet));\n            }\n        } else {\n            return Promise.reject(new Error('number or type of arguments don\\'t agree with keys protocol command'));\n        }\n\n        const oldEndpoint = () => this.client.requestHandler.create('/session/:sessionId/keys', { value: key });\n        const newEndpoint = () => {\n            const keyDownActions = key.map((_value) => ({ type: 'keyDown', value: _value }));\n            const keyUpActions = key.map((_value) => ({ type: 'keyUp', value: _value }));\n\n            return this.actions([{\n                type: 'key',\n                id: 'keys',\n                actions: [...keyDownActions, ...keyUpActions],\n            }]);\n        };\n\n        if (this.w3cRequests.keys) {\n            return newEndpoint();\n        }\n\n        return this.addToQueue(() => oldEndpoint().catch(err => {\n            /**\n             * use W3C path if old path failed\n             */\n            if (isOldProtocol(err)) {\n                this.w3cRequests.keys = true;\n                return newEndpoint();\n            }\n\n            throw err;\n        }));\n    }\n\n    elementIdValue(elementId, value) {\n        return this.addToQueue(() => this.client.elementIdValue(elementId, value));\n    }\n\n    elementIdClear(elementId) {\n        return this.addToQueue(() => this.client.elementIdClear(elementId));\n    }\n\n    submitForm(element) {\n        return this.addToQueue(() => this.client.submit(extractElementId(element)));\n    }\n\n    buttonPress(button) {\n        return this.addToQueue(() => this.client.buttonPress(button));\n    }\n\n    findElementAndPress(element, xOffset, yOffset, button) {\n        return this.moveTo(extractElementId(element), xOffset, yOffset)\n            .then(() => this.buttonPress(button));\n    }\n\n    rightClick(element, xOffset, yOffset) {\n        return this.findElementAndPress(element, xOffset, yOffset, 'right');\n    }\n\n    leftClick(element, xOffset, yOffset) {\n        return this.findElementAndPress(element, xOffset, yOffset, 'left');\n    }\n\n    elementIdClick(elementId) {\n        return this.addToQueue(() => this.client.elementIdClick(elementId));\n    }\n\n    actions(actions) {\n        return this.addToQueue(() => this.client.actions(actions));\n    }\n\n    doDoubleClick() {\n        return this.addToQueue(() => this.client.doDoubleClick());\n    }\n\n    dragAndDrop(sourceSelector, destinationSelector) {\n        return this.addToQueue(() => this.client.dragAndDrop(sourceSelector, destinationSelector));\n    }\n\n    buttonDown() {\n        return this.addToQueue(() => this.client.buttonDown());\n    }\n\n    buttonUp() {\n        return this.addToQueue(() => this.client.buttonUp());\n    }\n\n    moveTo(element, xoffset, yoffset) {\n        const data = {};\n\n        if (typeof xoffset === 'number') {\n            data.xoffset = xoffset;\n        }\n\n        if (typeof yoffset === 'number') {\n            data.yoffset = yoffset;\n        }\n\n        // wordaround change offset to x=1 y=1 on Safari\n        if (this.isSafari() && !data.hasOwnProperty('yoffset')) {\n            data.yoffset = 1;\n        }\n\n        if (this.isSafari() && !data.hasOwnProperty('xoffset')) {\n            data.xoffset = 1;\n        }\n\n        if (typeof element === 'string') {\n            data.element = element;\n        }\n\n        return this.addToQueue(() => this.client.requestHandler.create('/session/:sessionId/moveto', data));\n    }\n\n    uploadFile(localFileLocation) {\n        return this.addToQueue(() => this.client.uploadFile(localFileLocation));\n    }\n\n    getUrl() {\n        return this.addToQueue(() => this.client.getUrl());\n    }\n\n    getTitle() {\n        return this.addToQueue(() => this.client.getTitle());\n    }\n\n    // eslint-disable-next-line default-param-last\n    windowHandleSize(windowHandle = 'current', size) {\n        return this.addToQueue(() => {\n            let data = {};\n\n            if (typeof windowHandle === 'object') {\n                [windowHandle, size] = ['current', windowHandle];\n            }\n\n            /*\n             * protocol options\n             */\n            const requestOptions = {\n                path: `/session/:sessionId/window/${windowHandle}/size`,\n                method: 'GET',\n            };\n\n            /*\n             * change window size if the new size is given\n             */\n            if (typeof size === 'object' && size.width && size.height) {\n                requestOptions.method = 'POST';\n                // The width and height value might return as a negative value, so\n                // we make sure to use its absolute value.\n                data = {\n                    width: Math.abs(size.width),\n                    height: Math.abs(size.height),\n                };\n            }\n\n            /*\n             * type check\n             */\n            if (requestOptions.method === 'POST' && typeof data.width !== 'number' && typeof data.height !== 'number') {\n                return Promise.reject(new Error('number or type of arguments don\\'t agree with windowHandleSize protocol command'));\n            }\n\n            const oldEndpoint = () => this.client.requestHandler.create(requestOptions, data);\n            const newEndpoint = () => {\n                requestOptions.path = '/session/:sessionId/window/rect';\n                return this.client.requestHandler.create(requestOptions, data);\n            };\n\n            if (this.w3cRequests.windowHandleSize) {\n                return newEndpoint();\n            }\n\n            return oldEndpoint()\n                .catch(err => {\n                    /**\n                     * use W3C path if old path failed\n                     */\n                    if (isOldProtocol(err)) {\n                        this.w3cRequests.windowHandleSize = true;\n                        return newEndpoint();\n                    }\n\n                    throw err;\n                });\n        });\n    }\n\n    setCookie(name, value, domain, httpOnly, secure, path, expiry) {\n        return this.addToQueue(() => this.client.setCookie({\n            name,\n            value,\n            domain,\n            httpOnly,\n            secure,\n            path,\n            expiry: expiry ? Math.floor(expiry) : expiry,\n        }));\n    }\n\n    getCookie(name) {\n        return this.addToQueue(() => this.client.requestHandler.create('/session/:sessionId/cookie')\n            .then(res => {\n                res.value = res.value || [];\n\n                if (typeof name === 'string') {\n                    return res.value.find((cookie) => cookie.name === name || cookie.name === encodeURIComponent(encodeURIComponent(name))) || null;\n                }\n\n                return res.value || (typeof name === 'string' ? null : []);\n            }));\n    }\n\n    deleteCookie(name) {\n        return this.addToQueue(() => this.client.deleteCookie(name));\n    }\n\n    isVisibleWithinViewport(selector) {\n        return this.addToQueue(() => this.client.isVisibleWithinViewport(selector));\n    }\n\n    getCurrentTabId() {\n        return this.addToQueue(() => this.client.getCurrentTabId());\n    }\n\n    frame(id) {\n        return this.addToQueue(() => this.client.frame(id));\n    }\n\n    switchTab(tabId) {\n        return this.addToQueue(() => this.client.switchTab(tabId));\n    }\n\n    alertAccept() {\n        return this.addToQueue(() => this.client.alertAccept());\n    }\n\n    log(type = 'browser') {\n        return this.addToQueue(() => this.client.log(type));\n    }\n\n    end() {\n        this.w3cRequests = {};\n        return this.queue ? this.addToQueue(() => this.client.end()) : Promise.resolve();\n    }\n\n    forceEnd() {\n        this.w3cRequests = {};\n        return this.client ? this.client.end() : Promise.resolve();\n    }\n\n    touchPerform(actions) {\n        return this.addToQueue(() => this.client.touchPerform(actions));\n    }\n\n    touchAction(attr) {\n        return this.addToQueue(() => this.client.touchAction(attr));\n    }\n\n    pressKeycode(keyCode) {\n        return this.addToQueue(() => this.client.pressKeycode(keyCode));\n    }\n\n    setImmediateValue(elementId, text) {\n        return this.addToQueue(() => this.client.setImmediateValue(elementId, text));\n    }\n\n    elementIdText(elementId) {\n        return this.addToQueue(() => this.client.elementIdText(elementId))\n            .then(res => res.value);\n    }\n\n    isAppInstalled(packageName) {\n        return this.addToQueue(() => this.client.isAppInstalled(packageName))\n            .then(isInstalled => {\n                const ret = !!isInstalled.value;\n                logger.info(`is app (${packageName}) installed? ${ret}`, isInstalled);\n                return ret;\n            });\n    }\n\n    launch() {\n        return this.addToQueue(() => this.client.launch());\n    }\n\n    context(id) {\n        return this.addToQueue(() => this.client.context(id));\n    }\n\n    elementIdLocation(elementId) {\n        return this.addToQueue(() => this.client.elementIdLocation(elementId));\n    }\n}\n", "/* global getLocatedElement, dispatchFocus */\nexport const doubleClick = function (eventData, done) {\n    const POINTER_EVENTS = ['pointerup', 'pointerdown', 'pointermove'];\n    const element = getLocatedElement(eventData.locatedElement);\n\n    if (!element) {\n        throw new Error('element not found');\n    }\n    const events = eventData.events;\n\n    const successObject = {\n        status: 'done',\n        success: true,\n    };\n\n    window.__unloadNavigator = function () { done(successObject); };\n\n    const getEventPosition = function (userEvent) {\n        function isWithinBounds(start, end, point) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {};\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    };\n\n    const getPointerEventDictionary = function (clientX, clientY) {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            bubbles: true,\n            cancelable: true,\n            button: 0,\n            pointerType: 'mouse',\n            isPrimary: true,\n        };\n    };\n\n    const createPointerEvent = function (eventType, clientX, clientY) {\n        if (!window.PointerEvent) {\n            return undefined;\n        }\n        const eventProperties = getPointerEventDictionary(clientX, clientY);\n        return new window.PointerEvent(eventType, eventProperties);\n    };\n\n    const createMouseEvent = function (eventType, clientX, clientY) {\n        const event = document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            false, /* ctrl */\n            false, /* alt */\n            false, /* shift */\n            false, /* meta */\n            0, /* button */\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    };\n\n    const findEffectiveActiveElement = function () {\n        let activeElement = document.activeElement;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    };\n\n    const getEvent = function (userEventData) {\n        const pos = getEventPosition(userEventData);\n        const eventType = userEventData.event;\n        if (POINTER_EVENTS.includes(eventType)) {\n            return createPointerEvent(eventType, pos.x, pos.y);\n        }\n        return createMouseEvent(eventType, pos.x, pos.y);\n    };\n    try {\n        events\n            .map((userEventData) => getEvent(userEventData))\n            .filter(Boolean)\n            .forEach((event) => element.dispatchEvent(event));\n        const oldActiveElement = findEffectiveActiveElement();\n        dispatchFocus(eventData.elementToFocusLocatedElement, oldActiveElement);\n        if (window.__unloadNavigator) {\n            window.removeEventListener('unload', window.__unloadNavigator);\n            window.__unloadNavigator = null;\n        }\n        done(successObject);\n    } catch (e) {\n        if (window.__unloadNavigator) {\n            window.removeEventListener('unload', window.__unloadNavigator);\n            window.__unloadNavigator = null;\n        }\n        done({\n            status: 'done',\n            result: e.toString(),\n            success: false,\n        });\n    }\n};\n", "export function dispatchFocus(targetElement, oldActiveElement) {\n    function createFocusEvent(eventName) {\n        const event = document.createEvent('HTMLEvents');\n        // TODO we want to use new Event, but mootools (used by zuora which is used by jfrog)\n        //  overrides window.Event and throws an error\n        event.initEvent(eventName, true, false);\n        return event;\n    }\n\n    function findEffectiveActiveElement() {\n        let activeElement = document.activeElement;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    }\n\n    function setFocus(element, oldActiveElement) {\n        if (oldActiveElement) {\n            oldActiveElement.dispatchEvent(createFocusEvent('focusout'));\n            oldActiveElement.dispatchEvent(createFocusEvent('blur'));\n        }\n        element.dispatchEvent(createFocusEvent('focusin'));\n        element.dispatchEvent(createFocusEvent('focus'));\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n        const currentActiveElement = findEffectiveActiveElement();\n        if (oldActiveElement && currentActiveElement === oldActiveElement && typeof oldActiveElement.blur === 'function') {\n            oldActiveElement.blur();\n        }\n    }\n\n    if (targetElement) {\n        const elementToFocus = getLocatedElement(targetElement);\n        if (elementToFocus && (elementToFocus !== oldActiveElement)) {\n            try {\n                setFocus(elementToFocus, oldActiveElement);\n            } catch (e) {\n                // ignore\n            }\n        }\n    } else if (oldActiveElement && typeof oldActiveElement.blur === 'function') {\n        oldActiveElement.blur();\n    }\n}\n", "/* eslint-disable arrow-body-style, no-shadow, @typescript-eslint/prefer-optional-chain, comma-spacing, no-empty, padded-blocks, semi, indent, unicorn/no-useless-promise-resolve-reject, default-param-last, comma-dangle, semi-style, consistent-return, radix, prefer-template, prefer-const, object-shorthand, no-trailing-spaces, operator-linebreak, no-else-return, unicorn/prefer-includes, prefer-arrow-callback, max-len, no-var */\n\nimport * as _ from 'lodash';\nimport * as utils from '../utils';\nimport * as perf from '../commons/performance-logger';\nimport * as desiredCapabilitiesBuilder from '../commons/testimDesiredCapabilitiesBuilder';\nimport parser from 'ua-parser-js';\nimport { W3C_ELEMENT_ID } from './constants';\nimport { getLogger } from '../commons/logger';\nimport { isOldProtocol } from './webDriverUtils';\nimport { WebdriverioWebDriverApi as WebDriverApi } from './WebdriverioWebDriverApi';\nimport { SeleniumError, SeleniumCrashError } from '../errors';\nimport { doubleClick } from './stepActions/scripts/doubleClick';\nimport { dispatchFocus } from './stepActions/scripts/focusElement';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { SeleniumPerfStats, SELENIUM_PERF_MARKS } from '../commons/SeleniumPerfStats';\n\nconst logger = getLogger('webdriver');\nconst [LEFT, RIGHT] = [0, 2];\nconst { extractElementId, getCdpAddressForHost } = utils;\n\nconst codeSnippets = () => {\n    const sessionPlayer = require('../commons/getSessionPlayerRequire').getSessionPlayer();\n    return sessionPlayer.codeSnippets;\n};\nconst locatorBuilderUtils = () => {\n    const sessionPlayer = require('../commons/getSessionPlayerRequire').getSessionPlayer();\n    return sessionPlayer.locatorBuilderUtils;\n};\nconst playerUtils = () => {\n    const sessionPlayer = require('../commons/getSessionPlayerRequire').getSessionPlayer();\n    return sessionPlayer.utils;\n};\n\nasync function getCdpAddress(initResult) {\n    try {\n        const debuggerHost = initResult?.value?.['goog:chromeOptions']?.debuggerAddress;\n        if (!debuggerHost) {\n            return undefined;\n        }\n        return await getCdpAddressForHost(debuggerHost);\n    } catch (e) {\n        logger.info('Error getting cdpAddress', e);\n        return undefined;\n    }\n}\nexport class WebDriver extends WebDriverApi {\n    constructor() {\n        super();\n        this.started = false;\n        this.keepAliveTimer = null;\n        this.unsupportedActions = {};\n        this._isAlive = false;\n        this._keepAliveRequests = [];\n        this.cdpUrl = undefined;\n        this.browserClosedCallbacks = [];\n        this.browserClosedFailedKeepAlives = 0;\n        this.ignoreHiddenTagsText = false;\n    }\n\n    registerToClosedBrowser(callback) {\n        this.browserClosedCallbacks.push(callback);\n    }\n\n    unregisterToClosedBrowser(callback) {\n        this.browserClosedCallbacks = this.browserClosedCallbacks.filter(cb => cb !== callback);\n    }\n\n    // eslint-disable-next-line max-len, default-param-last\n    async init(browserOptions, testName, testRunConfig, gridInfo, customExtensionLocalLocation, executionId, testResultId, seleniumPerfStats = new SeleniumPerfStats(), fastInit = false, lambdatestService) {\n        this.browserClosedFailedKeepAlives = 0;\n        this.ignoreHiddenTagsText = browserOptions?.company?.activePlan?.premiumFeatures?.ignoreHiddenTagsText;\n        this.browserClosedCallbacks = [];\n        // eslint-disable-next-line max-len\n        const capabilities = desiredCapabilitiesBuilder.buildSeleniumOptions(browserOptions, testName, testRunConfig, gridInfo, customExtensionLocalLocation, executionId, testResultId, lambdatestService);\n        if (capabilities.desiredCapabilities) {\n            delete capabilities.desiredCapabilities.marionette;\n        }\n        if (capabilities.capabilities) {\n            delete capabilities.capabilities.alwaysMatch.marionette;\n        }\n        this.initUnsupportedActions(lambdatestService?.isLambdatestRun());\n        this.browserAndOS = null;\n        this.seleniumPerfStats = seleniumPerfStats;\n        const driverDelay = fastInit ? 0 : 1500;\n        const focus = fastInit ? (() => { }) : () => this.executeJS('window.focus()');\n        try {\n            perf.log('before initClient in webdriver.js init');\n            const initResult = await this.initClient(capabilities, testName, testResultId);\n            perf.log('after initResult before getCdpAddress in init');\n            this.cdpUrl = await getCdpAddress(initResult);\n            perf.log('after getCdpAddress in webdriver.js init');\n            logger.info(`init new session testName: ${testName}`, { sessionId: this.getSessionId(), testResultId });\n            await utils.delay(driverDelay);\n            await focus();\n            perf.log('after focus and delay in webdriver.js init');\n        } catch (err) {\n            logger.error('failed to init webdriver', { err });\n            if (err.seleniumStack) {\n                const newError = new SeleniumError(err.seleniumStack);\n                const isFreeCompany = browserOptions?.company?.activePlan?.plan === 'free';\n                if (newError.message.includes('timed out waiting for a node') && isFreeCompany) {\n                    throw new Error('Our free grids are in full capacity, please try again or upgrade to our Professional plan');\n                }\n                throw newError;\n            }\n            throw new Error('failed to init client driver');\n        }\n    }\n\n    initUnsupportedActions(isLambdatestRun) {\n        if (isLambdatestRun) {\n            this.unsupportedActions = {\n                ...this.unsupportedActions,\n                move: true,\n            };\n        }\n    }\n\n    isAlive() {\n        return this._isAlive;\n    }\n\n    maxKeepAliveGap() {\n        const slidingPairsWindow = (arr) => _.zip(_.dropRight(arr, 1), _.drop(arr, 1));\n        const startTimeArray = this._keepAliveRequests.map(({ start }) => start).filter(Boolean);\n        const timeGaps = slidingPairsWindow(startTimeArray).map(([a, b]) => b - a);\n        return Math.max(...timeGaps);\n    }\n\n    isClosedBrowserError(err) {\n        if (!err || !err.seleniumStack || !err.message) {\n            return false;\n        }\n        return ((err.seleniumStack.type === 'UnknownError') &&\n            (err.message.includes('CLIENT_STOPPED_SESSION') || err.message.includes('BROWSER_TIMEOUT') || err.message.includes('was terminated due to TIMEOUT'))) ||\n            (err.seleniumStack.type === 'NoSuchWindow' && err.message.includes('window was already closed')) ||\n            (err.seleniumStack.type === 'SelectorTimeoutError' && err.message.includes('chrome not reachable'));\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n        this.started = true;\n        const that = this;\n        const keepAlive = function () {\n            function createKeepAliveRequestData(id) {\n                that._keepAliveRequests.push({ start: Date.now(), id });\n            }\n            function updateKeepAliveRequestData(field, id) {\n                (that._keepAliveRequests.find(item => item.id === id) || {})[field] = Date.now();\n            }\n\n            function checkKeepAliveScript() {\n                return window.getTestimStatus && window.getTestimStatus();\n            }\n\n            if (that.queue.getQueueLength() > 0) {\n                return Promise.resolve();\n            }\n\n            const requestId = utils.guid();\n            createKeepAliveRequestData(requestId);\n            return that.executeJS(checkKeepAliveScript)\n                .then(() => {\n                    that._isAlive = true;\n                    updateKeepAliveRequestData('end', requestId);\n                    that.browserClosedFailedKeepAlives = 0;\n                })\n                .catch(err => {\n                    updateKeepAliveRequestData('error', requestId);\n                    if (err.seleniumStack && err.seleniumStack.type === 'UnexpectedAlertOpen') {\n                        that.browserClosedFailedKeepAlives = 0;\n                        logger.warn('close unexpected alert open');\n                        return that.alertAccept().catch(innerErr => logger.warn('failed to click on alert', { err: innerErr }));\n                    }\n                    logger.warn('err while getting testim status', { err });\n                    that._isAlive = false;\n                    if (that.isClosedBrowserError(err)) {\n                        that.browserClosedFailedKeepAlives++;\n                        const CLOSED_BROWSER_THRESHOLD_COUNT = 3;\n                        if (that.browserClosedFailedKeepAlives >= CLOSED_BROWSER_THRESHOLD_COUNT) {\n                            that.browserClosedCallbacks.forEach(cb => {\n                                try {\n                                    cb(err);\n                                } catch { /* ignore */ }\n                            });\n                        }\n                    } else {\n                        that.browserClosedFailedKeepAlives = 0;\n                    }\n                    return undefined;\n                });\n        };\n\n        this.keepAliveTimer = setInterval(keepAlive, 10000);\n    }\n\n    switchToLocatedFrame(locatedElement) {\n        return this.getElement(locatedElement)\n            .then(async el => {\n                const elementId = extractElementId(el.value);\n                await this.switchToFrame({ ELEMENT: elementId, [W3C_ELEMENT_ID]: elementId });\n                return el;\n            });\n    }\n\n    switchToFrame(el) {\n        return this.frame(el);\n    }\n\n    switchToTopFrame() {\n        return this.frame().catch(err => {\n            if (err.message?.includes('ECONNREFUSED')) {\n                throw new SeleniumCrashError();\n            }\n            throw err;\n        });\n    }\n\n    /**\n     * @returns {Promise<{ value: HTMLElement | { [W3C_ELEMENT_ID]: string } | { ELEMENT: string } }>}\n    */\n    getElement(locatedElement) {\n        const perfId = this.seleniumPerfStats.markStart(SELENIUM_PERF_MARKS.GET_ELEMENT);\n        if (typeof locatedElement === 'string' || typeof locatedElement === 'number') { // support testimId in the meanwhile for backwards compatibility\n            return this.getElementBySelector(`[testim_dom_element_id='${locatedElement}']`)\n                .finally(() => this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_ELEMENT));\n        }\n        const getElementAtAut = (locatedElement && locatedElement.shadowPath && locatedElement.shadowPath.length) ||\n            (featureFlagsService.flags.runGetElementCodeInAut.isEnabled() && this.isSafari());\n\n        if (getElementAtAut) {\n            return this.execute(`\n                    var fn = ${codeSnippets().getLocatedElementCode};\n                    return fn.apply(null, arguments);\n                `, locatedElement\n            ).finally(() => this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_ELEMENT));\n        }\n\n        return this.getElementBySelector(`[testim_dom_element_id='${locatedElement && locatedElement.testimId}']`)\n            .finally(() => this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_ELEMENT));\n    }\n\n    executeJS(fn, args) {\n        return this.execute(fn, args);\n    }\n\n    executeJSWithArray(fn, args) {\n        args.unshift(fn);\n        return this.execute.apply(this, args);\n    }\n\n    executeCodeAsync(fn, timeout, args) {\n        return this.timeouts('script', timeout)\n            .then(() => this.executeAsync(fn, args));\n    }\n\n    /** @type {import('clickim/src/background/stepActions/stepActionUtils').StepActionUtils['markDynamicParent']} */\n    async markDynamicParent(target, dynamicParentId, frameHandler) {\n        function setDynamicParentAttribute(data) {\n            var attributeName = data.attributeName;\n            var attributeValue = data.attributeValue;\n            var element = getLocatedElement(data.locatedElement);\n            if (!element) {\n                throw new Error('could not find dynamic parent');\n            }\n            element.setAttribute(attributeName, attributeValue);\n        }\n\n        return this.executeJS(`\n            var getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            var setDynamicParentAttribute = ${setDynamicParentAttribute.toString()};\n            return setDynamicParentAttribute.apply(null, arguments)\n        `, {\n            attributeName: locatorBuilderUtils().DYNAMIC_PARENT_FIELD_NAME,\n            attributeValue: dynamicParentId,\n            locatedElement: target.locatedElement\n        });\n    }\n\n    /** @return {Promise<{ value: { top: number; left: number } | null }>} */\n    getLocatedElementRectWithPadding(locatedElement) {\n        // this is here to conform with clickim's logic in frame offset calculations\n        function getLocationCode(locatedElement) {\n            var element = getLocatedElement(locatedElement);\n            if (!element) {\n                return null;\n            }\n            var paddingTop = parseInt(window.getComputedStyle(element).paddingTop.replace('px', ''), 10) || 0;\n            var paddingLeft = parseInt(window.getComputedStyle(element).paddingLeft.replace('px', ''), 10) || 0;\n            var rect = element.getBoundingClientRect();\n            return { top: Math.round(rect.top + paddingTop), left: Math.round(rect.left + paddingLeft) };\n        }\n\n        return this.executeJS(`\n            var getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            var getLocation = ${getLocationCode.toString()};\n            return getLocation.apply(null, arguments)\n        `, locatedElement);\n    }\n\n    getElementLocationWithPadding(locatedElement) {\n        return this.getLocatedElementRectWithPadding(locatedElement);\n    }\n\n    /** @returns {Promise<{ value: null | Record<'bottom' | 'height' | 'x' | 'right' | 'y' | 'width', number> }>} */\n    getLocatedElementRect(locatedElement) {\n        function getLocationCode(locatedElement) {\n            var element = getLocatedElement(locatedElement);\n            if (!element) {\n                return null;\n            }\n            var rect = element.getBoundingClientRect();\n            return {\n                bottom: Math.round(rect.bottom),\n                height: Math.round(rect.height),\n                x: Math.round(rect.left),\n                right: Math.round(rect.right),\n                y: Math.round(rect.top),\n                width: Math.round(rect.width),\n            };\n        }\n\n        return this.executeJS(`\n            var getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            var getLocation = ${getLocationCode.toString()};\n            return getLocation.apply(null, arguments)\n        `, locatedElement);\n    }\n\n    getElementLocation(target) {\n        return this.getLocatedElementRect(target.locatedElement);\n    }\n\n    getTargetText(target) {\n        return this.getElementTextJS(target.locatedElement);\n    }\n\n    getElementTextJS(locatedElement) {\n        function extractTextCode(locatedElement, ignoreHiddenTagsText) {\n            // copy of utils.getElementTextContent to run inside content script\n            // sadly .children doesn't work for SVG elements in IE11\n            function clearTitleTags(node) {\n                if (!node.childNodes || node.childNodes.length === 0) {\n                    return node;\n                }\n\n                var children = Array.apply(null, node.childNodes).filter(function (x) { return x.nodeType === Node.ELEMENT_NODE; });\n                // eslint-disable-next-line prefer-arrow-callback\n                children.forEach(function (child) {\n                    if (typeof child.tagName === 'string' && child.tagName.toLowerCase() === 'title') {\n                        node.removeChild(child);\n                    } else {\n                        clearTitleTags(child);\n                    }\n                });\n                return node;\n            }\n\n            function isTextElement(element) {\n                var tagName = element.tagName;\n                return (tagName === 'INPUT' || tagName === 'TEXTAREA');\n            }\n\n            function getFixedTextContent(element) {\n                try { // fix for salesforce's custom-elements\n                    if (element.shadowRoot && Object.getOwnPropertyDescriptor(element.ownerDocument.defaultView.Node.prototype,'textContent').get.toString().indexOf('[native code]') === -1) {\n                        return element.shadowRoot.textContent.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                    }\n                // eslint-disable-next-line no-empty\n                } catch (err) { }\n                // eslint-disable-next-line prefer-arrow-callback\n                if (ignoreHiddenTagsText && Array.prototype.some.call(element.children, function (elem) { return elem.hidden; })) {\n                    var dupElement = element.cloneNode(true);\n                    // eslint-disable-next-line prefer-arrow-callback\n                    var hiddenChildren = Array.prototype.filter.call(dupElement.children, function (elem) { return elem.hidden; });\n                    // eslint-disable-next-line prefer-arrow-callback\n                    hiddenChildren.forEach(function (child) { \n                        dupElement.removeChild(child);\n                    });\n                    return dupElement.textContent.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                }\n                return element.textContent.replace(/(\\r\\n|\\n|\\r)/gm, '');\n            }\n\n            function getElementTextContent(element) {\n                if (isTextElement(element)) {\n                    return element.value;\n                } else if (element instanceof SVGElement) {\n                    var copyElement = element.cloneNode(true);\n                    return clearTitleTags(copyElement).textContent.replace(/(\\r\\n|\\n|\\r)/gm, '');\n                } else {\n                    return getFixedTextContent(element);\n                }\n            }\n\n            var element = getLocatedElement(locatedElement);\n            return element ? getElementTextContent(element) : '';\n        }\n\n        return this.executeJS(`\n            var getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            var extractText = ${extractTextCode.toString()};\n            return extractText.apply(null, arguments)\n        `, locatedElement, this.ignoreHiddenTagsText)\n            .then(result => result.value);\n    }\n\n    getHTML(locateStep) {\n        const getHTMLCode = codeSnippets().getHtmlCode(null, locateStep);\n        const perfId = this.seleniumPerfStats.markStart(SELENIUM_PERF_MARKS.GET_HTML);\n        return this.executeJS(getHTMLCode)\n            .then(result => {\n                this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_HTML);\n                return result.value;\n            })\n            .catch(err => {\n                this.seleniumPerfStats.markEnd(perfId, SELENIUM_PERF_MARKS.GET_HTML);\n                const testimInternalError = Object.assign(new Error(), { success: false, reason: err.toString(), errorType: 'internal-error' });\n                if (!this.client.requestHandler.sessionID) {\n                    // we got here after the driver has been disposed of. It's impossible to run JavaScript on the page.\n                    testimInternalError.extraInfo = 'Inside getHtml catch and trying to check if in quirks mode - but the session has already terminated';\n                    throw testimInternalError;\n                }\n                throw testimInternalError;\n            });\n    }\n\n    maximizeWithoutValidation() {\n        return this.windowHandleMaximize();\n    }\n\n    setViewportSizeNEW(size, type) {\n        const MAX_TRIES = 5;\n\n        const getViewportSizeScript = function () {\n            return {\n                screenWidth: Math.floor(window.innerWidth || 0),\n                screenHeight: Math.floor(window.innerHeight || 0)\n            };\n        };\n\n        /**\n         * to set viewport size properly we need to execute the process multiple times\n         * since the difference between the inner and outer size changes when browser\n         * switch between fullscreen modes or visibility of scrollbar\n         */\n        const _setViewportSize = (size, tryNo = 1) => {\n            /**\n             * get window size\n             */\n            return this.windowHandleSize()\n                .then((windowHandleSize) => {\n                    /**\n                     * get viewport size\n                     */\n                    return this.execute(getViewportSizeScript)\n                        .then(viewportSize => {\n                            const widthDiff = windowHandleSize.value.width - viewportSize.value.screenWidth;\n                            const heightDiff = windowHandleSize.value.height - viewportSize.value.screenHeight;\n                            /**\n                             * change window size with indent\n                             */\n                            return this.windowHandleSize({\n                                width: size.width + widthDiff,\n                                height: size.height + heightDiff\n                            });\n                        })\n                        .then(() => this.execute(getViewportSizeScript))\n                        .then(res => {\n                            /**\n                             * if viewport size not equals desired size, execute process again\n                             */\n                            if (tryNo < MAX_TRIES && (res.value.screenWidth !== size.width || res.value.screenHeight !== size.height)) {\n                                return _setViewportSize(size, tryNo + 1);\n                            }\n                        });\n                });\n        };\n\n        /**\n         * parameter check\n         */\n        if (typeof size !== 'object' ||\n            typeof size.width !== 'number' ||\n            typeof size.height !== 'number' ||\n            (typeof type !== 'undefined' && typeof type !== 'boolean')) {\n            throw new Error('number or type of arguments don\\'t agree with setViewportSize command');\n        }\n\n        const shouldIndent = (typeof type === 'undefined') ? true : type;\n\n        return shouldIndent ? _setViewportSize(size) : this.windowHandleSize(size);\n    }\n\n    setViewportSize(width, height) {\n        var type = true; //set to false to change window size, true (default) to change viewport size\n        return this.setViewportSizeNEW({\n            width: width,\n            height: height\n        }, type);\n    }\n\n    getBrowserMajorVersion(parse) {\n        try {\n            return parseInt(parse.browser.major, 10);\n        } catch (err) {\n            logger.error('failed to get browser version', { err: err });\n            return 0;\n        }\n    }\n\n    getBrowserAndOS() {\n        function getBrowserName(ua, browserDetails) {\n            var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n            if (/trident/i.test(M[1])) {\n                return 'Internet Explorer ' + browserDetails.major;\n            }\n            if (M[1] === 'Chrome' && ua.match(/\\bOPR\\/(\\d+)/) !== null) {\n                return 'opera';\n            }\n            if (M[1] === 'Chrome' && ua.match(/\\bEdge|Edg\\/(\\d+)/) !== null) {\n                return 'edge';\n            }\n            M = M[2] ? [M[1], M[2]] : [ua.appName, ua.appVersion, '-?'];\n            var tem = ua.match(/version\\/(\\d+)/i);\n            if (tem !== null) {\n                M.splice(1, 1, tem[1]);\n            }\n            return M[0].toLowerCase();\n        }\n\n        if (this.browserAndOS) {\n            return Promise.resolve(this.browserAndOS);\n        }\n\n        // eslint-disable-next-line prefer-arrow-callback\n        return this.executeJS(function () {\n            if (typeof window === 'undefined' || !window.navigator || !window.navigator.userAgent) {\n                return 'unknown';\n            }\n            return window.navigator.userAgent;\n        }).then(userAgent => {\n            const rawUserAgent = userAgent.value;\n            const parse = parser(rawUserAgent);\n            const osDetails = parse.os;\n            this.browserAndOS = {\n                os: osDetails.name + ' ' + osDetails.version,\n                browserMajor: this.getBrowserMajorVersion(parse),\n                browser: getBrowserName(userAgent.value, parse.browser),\n                userAgent: rawUserAgent,\n                browserVersion: parse.browser.version\n            };\n            return this.browserAndOS;\n        });\n    }\n\n    getUserAgentInfo() {\n        return this.executeJS(`return ${codeSnippets().getUserAgentInfo()}`)\n            .then(result => result.value);\n    }\n\n    setValue(element, value) {\n        return super.setValue(element, value);\n    }\n\n    getRelativeMoveActions(offsets, element) {\n        const { rect, clickOffset } = offsets;\n        const inViewCenter = this.inViewCenter(rect);\n        const left = Math.floor(clickOffset.x - inViewCenter.x);\n        const top = Math.floor(clickOffset.y - inViewCenter.y);\n\n        if (!playerUtils().isWithinBounds(-inViewCenter.x, inViewCenter.x, left) ||\n            !playerUtils().isWithinBounds(-inViewCenter.y, inViewCenter.y, top)) {\n            // [NOTE] the code is not supposed to get here! - using center (0,0) instead of step offsets.\n            // this is a fallback so the action will take place even if for some reason calculation went out of element..\n            logger.warn('using center as fallback for offset');\n            return this.getMoveActions(0, 0, element);\n        }\n        return this.getMoveActions(left, top, element);\n    }\n\n    computeAbsoluteMovement(offsets) {\n        const { frameOffset, rect, clickOffset } = offsets;\n        const fallbackLeft = rect.left + clickOffset.x + frameOffset.x;\n        const fallbackTop = rect.top + clickOffset.y + frameOffset.y;\n        return { x: fallbackLeft, y: fallbackTop };\n    }\n\n    actWithActionsAPI(offsets, button, element, actions) {\n        const moveActions = this.getRelativeMoveActions(offsets, element);\n        const clickActions = this.getClickActions(actions, button);\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            parameters: { pointerType: 'mouse' },\n            actions: moveActions.concat(clickActions),\n        }]).catch(err => {\n            logger.error('tried to use element origin but failed because of visibility, trying absolute', err);\n            const { x, y } = this.computeAbsoluteMovement(offsets);\n            const moveActions = this.getMoveActions(x, y);\n            return this.actions([{\n                type: 'pointer',\n                id: 'mouse',\n                parameters: { pointerType: 'mouse' },\n                actions: moveActions.concat(clickActions),\n            }]);\n        });\n    }\n\n    doubleClickWithActionsAPI(element, offsets) {\n        return this.actWithActionsAPI(offsets, LEFT, element, ['pointerDown', 'pointerUp', 'pointerDown', 'pointerUp']);\n    }\n\n    doubleClickWithJS(eventData) {\n        return this.executeCodeAsync(`\n            var getLocatedElement = ${codeSnippets().getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus.toString()};\n            var doubleClick = ${doubleClick.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return doubleClick.call(null, eventData, done);\n        `, eventData.timeout, eventData);\n    }\n\n    // eslint-disable-next-line default-param-last\n    getClickActions(types = [], button) {\n        return types.map(type => ({ type: type, button }));\n    }\n    // eslint-disable-next-line default-param-last\n    getClickActionList(types = [], button) {\n        return [{\n            type: 'pointer',\n            id: 'mouse',\n            actions: this.getClickActions(types, button),\n        }];\n    }\n\n    leftClickWithActionsAPI(element, offsets) {\n        return this.actWithActionsAPI(offsets, LEFT, element, ['pointerDown', 'pointerUp']);\n    }\n\n    rightClickWithActionsAPI(element, offsets) {\n        return this.actWithActionsAPI(offsets, RIGHT, element, ['pointerDown', 'pointerUp']);\n    }\n\n    rightClick(element, offsets) {\n        if (this.unsupportedActions.move) {\n            return this.rightClickWithActionsAPI(element, offsets);\n        }\n        return super.rightClick(element)\n            .catch(err => {\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.move = true;\n                    return this.rightClickWithActionsAPI(element, offsets);\n                }\n                throw err;\n            });\n    }\n\n    leftClick(element, offsets) {\n        if (this.unsupportedActions.move) {\n            return this.leftClickWithActionsAPI(element, offsets);\n        }\n        return super.leftClick(element)\n            .catch(err => {\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.move = true;\n                    return this.leftClickWithActionsAPI(element, offsets);\n                }\n                throw err;\n            });\n    }\n\n    dragAndDropOldAPI(sourceSeleniumElement, destinationSeleniumElement) {\n        return this.moveTo(extractElementId(sourceSeleniumElement))\n            .then(() => this.buttonDown())\n            .then(() => this.moveTo(extractElementId(destinationSeleniumElement)))\n            .then(() => this.buttonUp());\n    }\n\n    calculateElementMiddlePoint(locatedElement, offset = { top: 0, left: 0 }) {\n        return this.getLocatedElementRect(locatedElement).then(response => {\n            if (!response || !response.value) {\n                logger.warn(`could not find element for locatedElement ${locatedElement}`);\n                throw new Error('could not calculate rect');\n            }\n            const { x, y, width, height } = response.value;\n            return {\n                x: offset.left + x + (width / 2),\n                y: offset.top + y + (height / 2),\n            };\n        });\n    }\n\n    hover(seleniumElement, offsets) {\n        // this will attempt to use the old api with moveTOObject (using the selector)\n        // if the old api is unsupported, it will move absolutePoint, or calc the point using the seleniumElement and offset\n        if (this.unsupportedActions.move) {\n            return this.moveToElementWithActionsAPI(seleniumElement, offsets);\n        }\n\n        const { rect, clickOffset } = offsets;\n        const center = this.inViewCenter(rect);\n        // moveto element (actions and legacy) is always vs. the center of an element, so the offset needs to get fixed.\n        const xOffset = Math.floor(clickOffset.x - center.x);\n        const yOffset = Math.floor(clickOffset.y - center.y);\n\n        return this.moveTo(extractElementId(seleniumElement), xOffset, yOffset)\n            .catch(err => {\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.move = true;\n                    return this.moveToElementWithActionsAPI(seleniumElement, offsets);\n                }\n\n                throw err;\n            });\n    }\n\n    getMoveActions(x = 1, y = 1, origin = 'viewport', duration = 0) {\n        // force x != 0 ,y != 0 because of Safari issues\n        return [{ type: 'pointerMove', duration, x: Math.floor(x) || 1, y: Math.floor(y) || 1, origin }];\n    }\n\n    moveWithActionsAPI(point) {\n        const actions = this.getMoveActions(point.x, point.y);\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            actions,\n        }]);\n    }\n\n    moveToElementWithActionsAPI(seleniumElement, offsets) {\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            actions: this.getRelativeMoveActions(offsets, seleniumElement),\n        }]).catch(err => {\n            logger.error('tried to use element origin but failed because of visibility, trying location', err);\n            const point = this.computeAbsoluteMovement(offsets);\n            return this.moveWithActionsAPI(point);\n        });\n    }\n\n    getDragCoordinates(events) {\n        const mouseEvents = events.filter(e => e.event === 'mousemove' || e.event === 'pointermove');\n\n        const first = _.first(mouseEvents).pointerPosition;\n        const last = _.last(mouseEvents).pointerPosition;\n\n        return {\n            xDiff: last.screenX - first.screenX,\n            yDiff: last.screenY - first.screenY,\n        };\n    }\n\n    dragWithMoveTo(seleniumElement, xDiff, yDiff, xOffset, yOffset) {\n        return this.moveTo(extractElementId(seleniumElement), xOffset, yOffset)\n            .then(() => this.buttonDown())\n            .then(() => this.moveTo(extractElementId(seleniumElement), xDiff, yDiff))\n            .then(() => this.buttonUp());\n    }\n\n    dragWithActionsAPI(seleniumElement, xDiff, yDiff, xOffset, yOffset) {\n        const goToDrag = this.getMoveActions(xOffset, yOffset, seleniumElement, 1);\n        const startDrag = this.getClickActions(['pointerDown'], LEFT);\n        const doDrag = this.getMoveActions(xDiff, yDiff, 'pointer', 1);\n        const endDrag = this.getClickActions(['pointerUp'], LEFT);\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            actions: goToDrag.concat(startDrag).concat(doDrag).concat(endDrag),\n        }]);\n    }\n\n    drag(seleniumElement, targetRect, xElementOffset, yElementOffset, events) {\n        const { width, height } = targetRect;\n        const midXRelative = (xElementOffset - width / 2 + 1);\n        const midYRelative = (yElementOffset - height / 2);\n        return this.getDragCoordinates(events)\n            .then(coordinates => {\n                const { xDiff, yDiff } = coordinates;\n                if (this.unsupportedActions.move) {\n                    return this.dragWithActionsAPI(seleniumElement, xDiff, yDiff, midXRelative, midYRelative);\n                }\n                return this.dragWithMoveTo(seleniumElement, xDiff, yDiff, midXRelative, midYRelative)\n                    .catch(err => {\n                        if (isOldProtocol(err)) {\n                            this.unsupportedActions.move = true;\n                            return this.dragWithActionsAPI(seleniumElement, xDiff, yDiff, midXRelative, midYRelative);\n                        }\n                        throw err;\n                    });\n            });\n    }\n\n    getMoveRelativeSequence(startLeft, startTop, endLeft, endTop) {\n        const sqr = x => x * x;\n        const distance = (p1, p2) => Math.sqrt(sqr(p1.x - p2.x) + sqr(p1.y - p2.y));\n\n        const from = { x: startLeft, y: startTop };\n        const to = { x: endLeft, y: endTop };\n        const MOVE_EVENT_DIST = 10;\n        const eventCount = Math.round(distance(from, to) / MOVE_EVENT_DIST);\n\n        /* generate move events array */\n        const moves = Array.apply([], new Array(eventCount))\n            .map(() => ({\n                x: Math.round((to.x - from.x) / eventCount),\n                y: Math.round((to.y - from.y) / eventCount)\n            }));\n        return [{ x: 1, y: 1 }].concat(moves);\n    }\n\n    getMoveAbsoluteSequence(startLeft, startTop, endLeft, endTop) {\n        const relativeMoves = this.getMoveRelativeSequence(startLeft, startTop, endLeft, endTop);\n        return relativeMoves.reduce((newMoves, relativeMove) => {\n            const lastMove = _.last(newMoves);\n            return newMoves.concat({ x: Math.round(lastMove.x + relativeMove.x), y: Math.round(lastMove.y + relativeMove.y) });\n        }, [{ x: Math.round(startLeft), y: Math.round(startTop) }]);\n    }\n\n    async dragAndDropWithGeneratedMoves(sourceSeleniumElement, destinationSeleniumElement, rectsAndOffsets) {\n        const { fromRect, fromX, fromY, toRect, toX, toY } = rectsAndOffsets;\n        const moveSequence = this.getMoveRelativeSequence(fromRect.left + fromX, fromRect.top + fromY, toRect.left + toX, toRect.top + toY);\n\n        await this.moveTo(extractElementId(sourceSeleniumElement), Math.round(fromX), Math.round(fromY));\n        await this.buttonDown();\n        for (const movePosition of moveSequence) {\n            await this.moveTo(null, movePosition.x, movePosition.y);\n        }\n        await this.moveTo(extractElementId(destinationSeleniumElement), Math.round(toX), Math.round(toY));\n        return await this.buttonUp();\n    }\n\n    dragAndDropWithActionsAPIWithGeneratedMoves(rectsAndOffsets) {\n        const { fromRect, fromX, fromY, toRect, toX, toY } = rectsAndOffsets;\n        const startLeft = Math.round(fromRect.left + fromX);\n        const startTop = Math.round(fromRect.top + fromY);\n        const endLeft = Math.round(toRect.left + toX);\n        const endTop = Math.round(toRect.top + toY);\n        const moveSequence = this.getMoveAbsoluteSequence(fromRect.left + fromX, fromRect.top + fromY, toRect.left + toX, toRect.top + toY);\n        const startMovePositionActions = this.getMoveActions(startLeft, startTop);\n        const pointerDownActions = this.getClickActions(['pointerDown'], LEFT);\n        const moveSequenceActions = _.flatMap(moveSequence, movePosition => this.getMoveActions(movePosition.x, movePosition.y));\n        const endMovePositionActions = this.getMoveActions(endLeft, endTop);\n        const pointerUpActions = this.getClickActions(['pointerUp'], LEFT);\n        const actions = startMovePositionActions.concat(pointerDownActions).concat(moveSequenceActions).concat(endMovePositionActions).concat(pointerUpActions);\n\n        return this.actions([{\n            type: 'pointer',\n            id: 'mouse',\n            actions,\n        }]);\n    }\n\n    dragAndDrop(sourceSeleniumElement, destinationSeleniumElement, rectsAndOffsets) {\n        if (this.isSafari()) {\n            if (this.unsupportedActions.move) {\n                return this.dragAndDropWithActionsAPIWithGeneratedMoves(rectsAndOffsets);\n            }\n            return this.dragAndDropWithGeneratedMoves(sourceSeleniumElement, destinationSeleniumElement, rectsAndOffsets)\n                .catch(err => {\n                    if (isOldProtocol(err)) {\n                        this.unsupportedActions.move = true;\n                        return this.dragAndDropWithActionsAPIWithGeneratedMoves(rectsAndOffsets);\n                    }\n                    throw err;\n                });\n        }\n        if (this.unsupportedActions.move) {\n            return this.dragAndDropWithActionsAPI(rectsAndOffsets);\n        }\n        return this.dragAndDropOldAPI(sourceSeleniumElement, destinationSeleniumElement)\n            .catch(err => {\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.move = true;\n                    return this.dragAndDropWithActionsAPI(rectsAndOffsets);\n                }\n                throw err;\n            });\n    }\n\n    doubleClickFallback(element, eventData, offsets) {\n        if (this.isSafari()) {\n            return this.doubleClickWithJS(eventData);\n        }\n        return this.doubleClickWithActionsAPI(element, offsets);\n    }\n\n    doubleClick(element, eventData, offsets) {\n        if (this.unsupportedActions.move || this.isSafari()) { // doDoubleClick API doesn't work in Safari browser\n            return this.doubleClickFallback(element, eventData, offsets);\n        }\n        return this.moveTo(extractElementId(element))\n            .then(() => this.doDoubleClick())\n            .catch(err => {\n                if (isOldProtocol(err)) {\n                    this.unsupportedActions.move = true;\n                    return this.doubleClickFallback(element, eventData, offsets);\n                }\n                throw err;\n            });\n    }\n\n    dragAndDropWithActionsAPI(rectsAndOffsets) {\n        const { fromRect, fromX, fromY, toRect, toX, toY } = rectsAndOffsets;\n        const startLeft = Math.round(fromRect.left + fromX);\n        const startTop = Math.round(fromRect.top + fromY);\n        const endLeft = Math.round(toRect.left + toX);\n        const endTop = Math.round(toRect.top + toY);\n        return this.moveWithActionsAPI({ x: startLeft, y: startTop })\n            .then(() => {\n                const actions = this.getClickActionList(['pointerDown'], LEFT);\n                return this.actions(actions);\n            })\n            .then(() => this.moveWithActionsAPI({ x: endLeft, y: endTop }))\n            .then(() => {\n                const actions = this.getClickActionList(['pointerUp'], LEFT);\n                return this.actions(actions);\n            });\n    }\n\n    getTabIds() {\n        return this.windowHandles().then(r => r.value);\n    }\n\n    isVisible(el) {\n        return this.elementIdDisplayed(extractElementId(el)).then(r => r.value);\n    }\n\n    getSource() {\n        return this.source();\n    }\n\n    getElementRect(target) {\n        const defaultLocation = { width: 0, height: 0, top: 0, left: 0 };\n        return this.getElementLocation(target).catch((err) => logger.error('error getting element location', { err }))\n            .then(loc => {\n                if (loc?.value) {\n                    return {\n                        top: loc.value.y,\n                        left: loc.value.x,\n                        width: loc.value.width,\n                        height: loc.value.height,\n                    };\n                }\n                return defaultLocation;\n            });\n    }\n\n    end() {\n        logger.info('delete session', { sessionId: this.getSessionId() });\n        if (!this.getSessionId()) {\n            logger.warn('failed to close session because session is undefined');\n        }\n        clearInterval(this.keepAliveTimer);\n        return super.end()\n            .catch(() => {\n                /* !!!!SILENCE!!!! */\n            });\n    }\n\n    inViewCenter(rectangle) {\n        return {\n            x: rectangle.width / 2,\n            y: rectangle.height / 2,\n        };\n    }\n}\n", "import { getLogger } from '../commons/logger';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { getLabFeaturesByProjectId } from '../commons/testimServicesApi';\nimport type { ValueOf } from '../utils';\nimport type { LabFeatureFlagType } from '../commons/featureFlagsService';\nimport type { Plan } from 'services/src/commons/mongo/db-dto-definitions/DbCompanyProjects';\nimport type { RawLabFeatureProject } from 'services/src/commons/mongo/models/labFeatureProject';\n\nconst logger = getLogger('lab-features-service');\n\nclass LabFeaturesService {\n    featuresForProject: RawLabFeatureProject[] = [];\n    labBatman = false;\n\n    async loadLabFeatures(projectId: string, companyPlan: Plan) {\n        if (!companyPlan || !projectId) {\n            logger.error('missing companyPlan or projectId when loading lab features', { companyPlan, projectId });\n            this.featuresForProject = [];\n        }\n\n        try {\n            const labBatman = this.isLabsEnabledForCompany(companyPlan);\n            const features = labBatman ? (await getLabFeaturesByProjectId(projectId)) : [];\n            this.featuresForProject = features;\n            this.labBatman = labBatman;\n        } catch (err) {\n            logger.error('failed loading lab features', { err, companyPlan, projectId });\n            this.featuresForProject = [];\n        }\n    }\n\n    isFeatureAvailableForProject(featureFlagName: keyof typeof featureFlagsService['flags']) {\n        const featureFlag = featureFlagsService.flags[featureFlagName];\n        this.validateAsLabFeatureFlag(featureFlag);\n        const ffValue = (featureFlag as LabFeatureFlagType).getValue();\n        if (ffValue === 'disabled') {\n            return false;\n        }\n        if (ffValue === 'enabled') {\n            return true;\n        }\n\n        const { featuresForProject: features, labBatman } = this;\n        const labFeature = features.find(f => f.featureFlagName === featureFlagName);\n        const featureEnabled = labFeature?.enabled;\n\n        return Boolean(labBatman && featureEnabled);\n    }\n\n    isLabsEnabledForCompany(companyPlan: Plan) {\n        return Boolean(companyPlan?.premiumFeatures?.enableLabFeatures);\n    }\n\n    validateAsLabFeatureFlag(featureFlag: ValueOf<typeof featureFlagsService['flags']>) {\n        if ('getValue' in featureFlag) {\n            return;\n        }\n\n        const msg = `Attempted querying a lab feature flag which isn't a variant. This means that a wrong configuration is being used in FeatureFlagsService (for feature flag: ${featureFlag.name}`;\n        logger.error(msg, { featureFlagName: featureFlag.name });\n        throw new Error(msg);\n    }\n}\nexport const labFeaturesService = new LabFeaturesService();\n", "// @ts-check\n\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport * as utils from '../../../utils';\nimport * as npmWrapper from '../../../commons/npmWrapper';\nimport dataUriToBuffer from 'data-uri-to-buffer';\nimport { spawn as threadSpawn, config } from 'threads';\nimport { TimeoutError } from '../../../errors';\nimport { getLogger } from '../../../commons/logger';\nimport { getS3Artifact } from '../../../commons/testimServicesApi';\nimport { featureFlagsService } from '../../../commons/featureFlagsService';\n\nconst logger = getLogger('cli-service');\n\n/** @type {import('worker_threads') | false} */\nlet workerThreads;\n\nconfig.set({\n    basepath: {\n        node: __dirname,\n    },\n});\n\n/** @param {string} input */\nfunction convertWindowsBackslash(input) {\n    const isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(input);\n    const hasNonAscii = /[^\\u0000-\\u0080]+/.test(input); // eslint-disable-line no-control-regex\n\n    if (isExtendedLengthPath || hasNonAscii) {\n        return input;\n    }\n\n    return input.replace(/\\\\/g, '/');\n}\n\n/**\n * @param {string} transactionId\n * @param {any} incomingParams\n * @param {any} context\n * @param {any} code\n * @param {Record<string, string>} packageLocalLocations\n * @param {number=} timeout\n * @param {string=} fileDataUrl\n * @returns {Promise<RunCodeRes>}\n */\nfunction runCode(transactionId, incomingParams, context, code, packageLocalLocations = {}, timeout = undefined, fileDataUrl = undefined) {\n    const requireCode = Object.keys(packageLocalLocations).reduce((all, pMember) => {\n        all += `\n        var ${pMember} = require('${convertWindowsBackslash(packageLocalLocations[pMember])}');\n        `;\n        return all;\n    }, '');\n\n    const fileDataUrlToFileBuffer = !fileDataUrl ? 'var fileBuffer = null;' :\n        `\n            ${dataUriToBuffer.toString()}\n            var fileBuffer = dataUriToBuffer('${fileDataUrl}');\n        `;\n\n    function constructWithArguments(constructor, args) {\n        function F() {\n            return constructor.apply(this, args);\n        }\n\n        F.prototype = constructor.prototype;\n        return new F();\n    }\n\n    //https://github.com/anseki/console-substitute\n    const consoleOverride = `\n\n        const getMessage = arguments => {\n            const args = Array.prototype.slice.call(arguments);\n            let message = args.shift() + '';\n            if (!args.length) {\n                return message;\n            }\n            message = message.replace(/%([odifs])/g, function (s, param) {\n                // Formatting is not yet supported.\n                var arg;\n                if (!args.length) {\n                    return '';\n                }\n                arg = args.shift();\n                if (param === 'o') {\n                    return arg + '';\n                } else if (param === 'd' || param === 'i') {\n                    arg = typeof arg === 'boolean' ? (arg ? 1 : 0) : parseInt(arg, 10);\n                    return isNaN(arg) ? '0' : arg + '';\n                } else if (param === 'f') {\n                    arg = typeof arg === 'boolean' ? (arg ? 1 : 0) : parseFloat(arg);\n                    return isNaN(arg) ? '0.000000' : arg.toFixed(6) + '';\n                } else if (param === 's') {\n                    return arg + '';\n                }\n            });\n            if (message) {\n                args.unshift(message);\n            }\n            return args.join(' ').replace(/\\\\s*$/, ' ');\n        };\n\n        const pushNewMessage = (method, consoleArgs) => {\n            const message = getMessage(consoleArgs);\n            progress({\n                method,\n                msg: message,\n                timestamp: Date.now()\n            });\n        };\n\n        [\"log\", \"info\", \"warn\", \"error\", \"debug\"].forEach(function (method) {\n            const nativeMethod = console[method];\n            const oldMethod = nativeMethod && nativeMethod.bind(console);\n            console[method] = function () {\n                pushNewMessage(method, arguments);\n                oldMethod && oldMethod.apply(console, arguments);\n            };\n        });\n    `;\n\n    const injectCode = `\n        function injectCode(params, args, incomingParams, context, code, done) {\n            var constructWithArguments = ${constructWithArguments.toString()}\n\n            var resolve = function (result) {\n                done({\n                    status: 'done',\n                    result: result,\n                    success: true\n                });\n            };\n            var reject = function (result) {\n                done({\n                    status: 'failed',\n                    result: result,\n                    success: false\n                });\n            };\n\n            try {\n                params.push(code);\n                var functionToRun = constructWithArguments(Function, params);\n\n                var result = functionToRun.apply(null, args);\n                if (isPromise(result)) {\n                    result.then(function (res) {\n                        resolve({\n                            resultValue: res,\n                            exports: exportedData,\n                            exportsTest: exportedTestData,\n                            exportsGlobal: exportedGlobalData\n                        });\n                    }).catch(function (err) {\n                        reject({\n                            resultValue: err && err.toString(),\n                            exports: exportedData,\n                            exportsTest: exportedTestData,\n                            exportsGlobal: exportedGlobalData\n                        });\n                    });\n                } else {\n                    resolve({\n                        resultValue: result,\n                        exports: exportedData,\n                        exportsTest: exportedTestData,\n                        exportsGlobal: exportedGlobalData\n                    });\n                }\n            } catch (e) {\n                reject({\n                    resultValue: e && e.toString(),\n                    exports: exportedData,\n                    exportsTest: exportedTestData,\n                    exportsGlobal: exportedGlobalData\n                });\n            }\n        }\n    `;\n\n    const runFn = `\n        // A hack to fix an issue with stringified functions which use require. when compiling to JS, calls to require change to __require.\n        const __require = require;\n        ${requireCode}\n\n        ${fileDataUrlToFileBuffer}\n\n        ${consoleOverride}\n\n        var isPromise = ${utils.isPromise.toString()}\n\n        const {incomingParams, context, code} = input;\n\n        var exportedData = {};\n        var exportedTestData = {};\n        var exportedGlobalData = {};\n\n        var params = [\"context\"]\n            .concat(incomingParams.as.functionParameters)\n            .concat(${JSON.stringify(Object.keys(packageLocalLocations))})\n            .concat(['exports', 'exportsTest', 'exportsGlobal']);\n\n        var args = [context]\n            .concat(incomingParams.as.functionArguments)\n            .concat([${Object.keys(packageLocalLocations).join(',')}])\n            .concat([exportedData, exportedTestData, exportedGlobalData]);\n\n        if(fileBuffer) {\n            params = params.concat(['fileBuffer']);\n            args = args.concat([fileBuffer]);\n        }\n\n        ${injectCode}\n\n        injectCode(params, args, incomingParams, context, code, done);\n    `;\n\n    /** @type {ConsoleItem[]}} */\n    const testimConsoleLogDataAggregates = [];\n    const thread = threadSpawn(constructWithArguments(Function, ['input', 'done', 'progress', runFn]));\n    return utils.promiseTimeout(new Promise((/** @type {(res: RunCodeRes) => void} */ resolve) => {\n        thread\n            .send({ incomingParams, context, code })\n            .on('message', message => {\n                const messageWithLogs = Object.assign({}, message, { tstConsoleLogs: testimConsoleLogDataAggregates });\n                logger.debug('Run code worker response', { messageWithLogs, transactionId });\n                resolve(messageWithLogs);\n            })\n            .on('progress', (logMessage) => {\n                testimConsoleLogDataAggregates.push(logMessage);\n            })\n            .on('error', (err) => {\n                if (err.message === 'malformed data: URI') {\n                    logger.error('Run code worker error', { err, transactionId, fileDataUrl });\n                } else {\n                    logger.error('Run code worker error', { err, transactionId });\n                }\n\n                resolve({\n                    tstConsoleLogs: testimConsoleLogDataAggregates,\n                    status: 'failed',\n                    result: {\n                        resultValue: err?.toString(),\n                        exports: {},\n                        exportsTest: {},\n                        exportsGlobal: {},\n                    },\n                    success: false,\n                });\n            })\n            .on('exit', () => {\n                logger.debug('Run code worker has been terminated', { transactionId });\n            });\n    }), timeout)\n        .catch(err => {\n            if (!(err instanceof utils.TimeoutError)) {\n                throw err;\n            }\n            logger.warn('timeout to run code', { transactionId, err });\n            return {\n                tstConsoleLogs: testimConsoleLogDataAggregates,\n                /** @type {'failed'} should be as const when migrated to TS */\n                status: 'failed',\n                result: {\n                    resultValue: err?.toString(),\n                    exports: {},\n                    exportsTest: {},\n                    exportsGlobal: {},\n                },\n                success: false,\n            };\n        })\n        .finally(() => thread?.kill());\n}\n\n/** @param {string} _path */\nfunction requireOrImportMethod(_path) {\n    try {\n        return { sync: true, lib: globalThis.require(_path) };\n    } catch (err) {\n        if (err.code === 'ERR_REQUIRE_ESM') {\n            const pathModule = globalThis.require('path');\n\n            const lib = fs.promises.readFile(`${path}${pathModule.sep}package.json`).then(file => {\n                const packageJson = JSON.parse(file);\n                const fullPath = pathModule.join(_path, packageJson.main || `${pathModule.sep}index.js`);\n                return import(fullPath);\n            });\n\n            return { sync: false, lib };\n        }\n        throw err;\n    }\n}\n\n/** @typedef {{ method: 'log' | 'info' | 'warn' | 'error' | 'debug'; msg: string; timestamp: number }} ConsoleItem */\n/** @typedef {{ tstConsoleLogs: ConsoleItem[]; status: 'done' | 'failed'; result: { resultValue: any; exports: object; exportsTest: object; exportsGlobal: object }; success: boolean }} RunCodeRes */\n\n/**\n * @param {string} transactionId\n * @param {any} incomingParams\n * @param {any} context\n * @param {any} code\n * @param {number=} timeout\n * @param {string=} fileDataUrl\n * @returns {Promise<RunCodeRes>}\n */\nfunction runCodeWithWorkerThread(\n    transactionId,\n    incomingParams,\n    context,\n    code,\n    packageLocalLocations = {},\n    timeout = undefined,\n    fileDataUrl = undefined,\n) {\n    // technically shouldn't happen, but better safe than sorry.\n    if (!workerThreads) {\n        workerThreads = require('worker_threads');\n    }\n    const { Worker } = workerThreads;\n    const requireCode = Object.keys(packageLocalLocations).reduce((all, pMember) => {\n        all += `\n        var res = requireOrImportMethod('${convertWindowsBackslash(packageLocalLocations[pMember])}');\n        if (res.sync) {\n            var ${pMember} = res.lib;\n        } else {\n            var ${pMember} = await res.lib;\n        }\n        `;\n        return all;\n    }, '');\n\n    const fileDataUrlToFileBuffer = !fileDataUrl ? 'var fileBuffer = null;' :\n        `\n            ${dataUriToBuffer.toString()}\n            var fileBuffer = dataUriToBuffer('${fileDataUrl}');\n        `;\n\n    function constructWithArguments(constructor, args) {\n        function F() {\n            return constructor.apply(this, args);\n        }\n\n        F.prototype = constructor.prototype;\n        return new F();\n    }\n\n    //https://github.com/anseki/console-substitute\n    // note that this method is a bit different than the one in the non-worker one.\n    const consoleOverride = `\n        const getMessage = arguments => {\n            const args = Array.prototype.slice.call(arguments);\n            let message = args.shift() + '';\n            if (!args.length) {\n                return message;\n            }\n            message = message.replace(/%([odifs])/g, function (s, param) {\n                // Formatting is not yet supported.\n                var arg;\n                if (!args.length) {\n                    return '';\n                }\n                arg = args.shift();\n                if (param === 'o') {\n                    return arg + '';\n                } else if (param === 'd' || param === 'i') {\n                    arg = typeof arg === 'boolean' ? (arg ? 1 : 0) : parseInt(arg, 10);\n                    return isNaN(arg) ? '0' : arg + '';\n                } else if (param === 'f') {\n                    arg = typeof arg === 'boolean' ? (arg ? 1 : 0) : parseFloat(arg);\n                    return isNaN(arg) ? '0.000000' : arg.toFixed(6) + '';\n                } else if (param === 's') {\n                    return arg + '';\n                }\n            });\n            if (message) {\n                args.unshift(message);\n            }\n            return args.join(' ').replace(/\\\\s*$/, ' ');\n        };\n\n        const pushNewMessage = (method, consoleArgs) => {\n            const message = getMessage(consoleArgs);\n            parentPort.postMessage({\n                action: 'progress',\n                data: {\n                    method,\n                    msg: message,\n                    timestamp: Date.now(),\n                }\n            });\n        };\n\n        [\"log\", \"info\", \"warn\", \"error\", \"debug\"].forEach(function (method) {\n            const nativeMethod = console[method];\n            const oldMethod = nativeMethod && nativeMethod.bind(console);\n            console[method] = function () {\n                pushNewMessage(method, arguments);\n                oldMethod && oldMethod.apply(console, arguments);\n            };\n        });\n    `;\n\n    const injectCode = `\n        function injectCode(params, args, incomingParams, context, code) {\n            var constructWithArguments = ${constructWithArguments.toString()}\n\n            var resolve = function (result) {\n                parentPort.postMessage({\n                    action: 'finish',\n                    data: {\n                        status: 'done',\n                        result: result,\n                        success: true,\n                    }\n                });\n            };\n            var reject = function (result) {\n                parentPort.postMessage({\n                    action: 'finish',\n                    data: {\n                        status: 'failed',\n                        result: result,\n                        success: false,\n                    }\n                });\n            };\n\n            try {\n                params.push(code);\n                const AsyncFunction = Object.getPrototypeOf(async function(){}).constructor;\n                var functionToRun = constructWithArguments(AsyncFunction, params);\n\n                var result = functionToRun.apply(null, args);\n                if (isPromise(result)) {\n                    result.then(function (res) {\n                        resolve({\n                            resultValue: res,\n                            exports: exportedData,\n                            exportsTest: exportedTestData,\n                            exportsGlobal: exportedGlobalData\n                        });\n                    }).catch(function (err) {\n                        reject({\n                            resultValue: err && err.toString(),\n                            exports: exportedData,\n                            exportsTest: exportedTestData,\n                            exportsGlobal: exportedGlobalData\n                        });\n                    });\n                } else {\n                    resolve({\n                        resultValue: result,\n                        exports: exportedData,\n                        exportsTest: exportedTestData,\n                        exportsGlobal: exportedGlobalData\n                    });\n                }\n            } catch (e) {\n                reject({\n                    resultValue: e && e.toString(),\n                    exports: exportedData,\n                    exportsTest: exportedTestData,\n                    exportsGlobal: exportedGlobalData\n                });\n            }\n        }\n    `;\n\n    const runFn = `\n        (async function() {\n            // A hack to fix an issue with stringified functions which use require. when compiling to JS, calls to require change to __require.\n            const __require = require;\n            const { parentPort } = require('worker_threads');\n            var requireOrImportMethod = ${requireOrImportMethod}\n\n            // requireCode will set async to be true if needed.\n            ${requireCode}\n\n            ${fileDataUrlToFileBuffer}\n\n            ${consoleOverride}\n\n            var isPromise = ${utils.isPromise.toString()}\n\n            parentPort.once('message', input => {\n                const {incomingParams, context, code} = input;\n\n                var exportedData = {};\n                var exportedTestData = {};\n                var exportedGlobalData = {};\n\n                var params = [\"context\"]\n                    .concat(incomingParams.as.functionParameters)\n                    .concat(${JSON.stringify(Object.keys(packageLocalLocations))})\n                    .concat(['exports', 'exportsTest', 'exportsGlobal']);\n\n                var args = [context]\n                    .concat(incomingParams.as.functionArguments)\n                    .concat([${Object.keys(packageLocalLocations).join(',')}])\n                    .concat([exportedData, exportedTestData, exportedGlobalData]);\n\n                if(fileBuffer) {\n                    params = params.concat(['fileBuffer']);\n                    args = args.concat([fileBuffer]);\n                }\n\n                ${injectCode}\n\n                injectCode(params, args, incomingParams, context, code);\n            });\n        })();\n    `;\n\n    /** @type {ConsoleItem[]} */\n    const testimConsoleLogDataAggregates = [];\n    const thread = new Worker(runFn, {\n        eval: true,\n    });\n    return utils.promiseTimeout(new Promise((/** @type {(res: RunCodeRes) => void} */ resolve) => {\n        thread\n            .on('message', message => {\n                if (message.action === 'finish') {\n                    const { data } = message;\n                    const messageWithLogs = Object.assign({}, data, { tstConsoleLogs: testimConsoleLogDataAggregates });\n                    logger.debug('Run code worker response', { messageWithLogs, transactionId });\n                    resolve(messageWithLogs);\n                } else if (message.action === 'progress') {\n                    testimConsoleLogDataAggregates.push(message.data);\n                }\n            })\n            .on('error', (err) => {\n                if (err.message === 'malformed data: URI') {\n                    logger.error('Run code worker error', { err, transactionId, fileDataUrl });\n                } else {\n                    logger.error('Run code worker error', { err, transactionId });\n                }\n\n                resolve({\n                    tstConsoleLogs: testimConsoleLogDataAggregates,\n                    status: 'failed',\n                    result: {\n                        resultValue: err?.toString(),\n                        exports: {},\n                        exportsTest: {},\n                        exportsGlobal: {},\n                    },\n                    success: false,\n                });\n            })\n            .on('exit', () => {\n                logger.debug('Run code worker has been terminated', { transactionId });\n            });\n        // context can contain methods and proxies which cannot pass.\n        thread.postMessage({ incomingParams, context: JSON.parse(JSON.stringify(context)), code });\n    }), timeout)\n        .catch(err => {\n            if (!(err instanceof utils.TimeoutError)) {\n                throw err;\n            }\n            logger.warn('timeout to run code', { transactionId, err });\n            return {\n                tstConsoleLogs: testimConsoleLogDataAggregates,\n                /** @type {'failed'} should be as const when migrated to TS */\n                status: 'failed',\n                result: {\n                    resultValue: err?.toString(),\n                    exports: {},\n                    exportsTest: {},\n                    exportsGlobal: {},\n                },\n                success: false,\n            };\n        })\n        .finally(() => thread?.terminate());\n}\n\n/** @param {string} installFolder */\nasync function removeFolder(installFolder) {\n    try {\n        await fs.promises.rm(installFolder, { recursive: true, force: true });\n    } catch (err) {\n        logger.warn('failed to remove install npm packages folder', { err });\n    }\n}\n\n/**\n * @param {string} stepResultId\n * @param {string} testResultId\n * @param {string} stepId\n * @param {number} retryIndex\n */\nfunction getTransactionId(stepResultId, testResultId, stepId, retryIndex) {\n    return `${testResultId}_${stepId}_${stepResultId}_${retryIndex}`;\n}\n\n/**\n * @param {string} stepId\n * @param {string} testResultId\n * @param {number} retryIndex\n * @param {{ packageName: string; packageVersion: string }[]} packageData\n * @param {string} stepResultId\n * @param {number} timeout\n */\nexport async function installPackage(stepId, testResultId, retryIndex, packageData, stepResultId, timeout) {\n    const transactionId = getTransactionId(stepResultId, testResultId, stepId, retryIndex);\n    const { data } = await runNpmInstall(transactionId, packageData, timeout);\n    return data;\n}\n\n/**\n * @param {string} code\n * @param {string} stepId\n * @param {Pick<import('clickim/src/background/playbackContext').IncomingParams, 'as' | 'nodePackageParams'>} incomingParams\n * @param {{}} context\n * @param {string} testResultId\n * @param {number} retryIndex\n * @param {string} stepResultId\n * @param {number} timeout\n * @param {string=} fileDataUrl\n * @param {string=} s3filepath\n */\nexport async function runCodeWithPackages(code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, timeout, fileDataUrl, s3filepath) {\n    const packageLocalLocations = Object.fromEntries(incomingParams.nodePackageParams?.map(data => [data.paramName, data.testimPackageLocalLocation]) || []);\n    const transactionId = getTransactionId(stepResultId, testResultId, stepId, retryIndex);\n\n    if (s3filepath) {\n        const s3fileDataUrl = await getS3Artifact(s3filepath);\n        if (s3fileDataUrl) {\n            fileDataUrl = s3fileDataUrl;\n        }\n    }\n    if (typeof workerThreads === 'undefined') {\n        try {\n            workerThreads = require('worker_threads');\n        } catch (err) {\n            workerThreads = false;\n        }\n    }\n\n    if (Buffer.isBuffer(fileDataUrl)) { // Fix, S3 is returning a buffer and not a string on empty files\n        logger.debug('runCodeWithPackages: converted a buffer to base 64 string data URI', { fileDataUrl });\n        fileDataUrl = fileDataUrl.toString();\n    }\n\n    const emptyFileDataUrl = 'data:,';\n    if (fileDataUrl === 'data:') { // Fix chrome/safari bug that creates malformed data-uri for empty files\n        logger.debug('runCodeWithPackages, fileDataUrl was an empty string ', { fileDataUrl });\n        fileDataUrl = emptyFileDataUrl;\n    }\n\n    if (workerThreads && featureFlagsService.flags.enableWorkerThreadsCliCodeExecution.isEnabled()) {\n        const res = await runCodeWithWorkerThread(transactionId, incomingParams, context, code, packageLocalLocations, timeout, fileDataUrl);\n        return Object.assign({}, res, { nodeVersion: process.version });\n    }\n    const res = await runCode(transactionId, incomingParams, context, code, packageLocalLocations, timeout, fileDataUrl);\n    return Object.assign({}, res, { nodeVersion: process.version });\n}\n\n/**\n * @param {string} transactionId\n * @param {{ packageName: string; packageVersion: string }[]} packageData\n * @param {number} timeout\n */\nasync function runNpmInstall(transactionId, packageData, timeout) {\n    const packages = packageData.map(data => `${data.packageName}@${data.packageVersion}`);\n    const localPackageInstallFolder = getLocalPackageInstallFolder();\n    const installFolder = path.join(localPackageInstallFolder, `/${transactionId}`);\n    const proxyUri = global.proxyUri;\n\n\n    async function npmInstallation() {\n        let output = '';\n        try {\n            output = await npmWrapper.installPackages(installFolder, packages, proxyUri, timeout);\n            logger.info('npm package install finished', { transactionId, output, timeout });\n            if (Number(output.trim().split(' ')[1]) < packages.length) {\n                // TODO: I am not sure changing this to an error would be safe.\n                // eslint-disable-next-line no-throw-literal\n                throw 'npm package install failed, couldn\\'t install all packages';\n            }\n            const packageDataWithVersions = packageData.map(pData => {\n                const version = npmWrapper.getLocallyInstalledPackageVersion(installFolder, pData.packageName);\n                const packageFullName = `${pData.packageName}@${version}`;\n                const packageLocalLocation = path.resolve(installFolder, 'node_modules', pData.packageName);\n                return Object.assign({}, pData, {\n                    packageFullName,\n                    packageLocalLocation,\n                });\n            });\n\n            return { data: packageDataWithVersions, installFolder };\n        } catch (err) {\n            logger.warn('npm package install failed', { transactionId, err });\n            throw err;\n        }\n    }\n\n    try {\n        return await utils.promiseTimeout(npmInstallation(), timeout);\n    } catch (err) {\n        if (err instanceof TimeoutError) {\n            logger.warn('timeout to install package', { packages, transactionId, err, timeout });\n        }\n        throw err;\n    }\n}\n\nfunction getLocalPackageInstallFolder() {\n    return path.join(os.tmpdir(), '/testim_local_packages');\n}\n\nexport function cleanLocalPackageInstallFolder() {\n    const localPackageInstallFolder = getLocalPackageInstallFolder();\n    return removeFolder(localPackageInstallFolder);\n}\n", "import * as service from '../agent/routers/cliJsCode/service';\nimport { TimeoutError } from '../errors';\nimport { featureFlagsService } from '../commons/featureFlagsService';\n\nfunction isExceedingMaxResultSize(data, project) {\n    try {\n        const shouldEnforceMaxSize = project.defaults.enforceMaximumJsResultSize;\n        const maximumJsResultSize = featureFlagsService.flags.maximumJsResultSize.getValue();\n        const dataSizeExceeded = JSON.stringify(data).length > maximumJsResultSize;\n        if (!shouldEnforceMaxSize) {\n            return false;\n        }\n        return dataSizeExceeded;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport const run = async (browser, step, projectData) => {\n    const {\n        code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, runTimeout, fileDataUrl, s3filepath,\n    } = step.data;\n    try {\n        const data = await service.runCodeWithPackages(code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, runTimeout, fileDataUrl, s3filepath);\n        if (data && isExceedingMaxResultSize({ result: data.result, tstConsoleLogs: data.tstConsoleLogs }, projectData)) {\n            return {\n                code: 'js-result-max-size-exceeded',\n                success: false,\n            };\n        }\n        return { data, success: true };\n    } catch (err) {\n        if (err instanceof TimeoutError) {\n            throw new Error('Timeout while running action');\n        }\n        throw err;\n    }\n};\n", "import { getLogger } from '../../commons/logger';\n\nconst logger = getLogger('cookies-utils');\n\nexport class CookieUtils {\n    /** @param {import('../webdriver').WebDriver} driver */\n    constructor(driver) {\n        this.driver = driver;\n    }\n    async set(cookie) {\n        let domain = cookie.domain;\n        if (!cookie.hostOnly && domain && !domain.startsWith('.')) {\n            domain = `.${domain}`;\n        }\n        try {\n            return await this.driver.setCookie(cookie.name, cookie.value, domain, cookie.httpOnly, cookie.secure, cookie.path, cookie.expirationDate);\n        } catch (err) {\n            logger.error('failed to set cookie', { err });\n            throw err;\n        }\n    }\n\n    async get(cookie) {\n        try {\n            return await this.driver.getCookie(cookie.name);\n        } catch (err) {\n            logger.error('failed to get cookie', { err });\n            throw err;\n        }\n    }\n\n    async remove(cookie) {\n        try {\n            return await this.driver.deleteCookie(cookie.name);\n        } catch (err) {\n            logger.error('failed to remove cookie', { err });\n            throw err;\n        }\n    }\n}\n", "// @ts-check\n\nimport * as utils from '../../utils';\nimport pRetry from 'p-retry';\nimport { delay } from '../../utils';\nimport { getLogger } from '../../commons/logger';\nimport { PageNotAvailableError } from '../../errors';\n\nconst logger = getLogger('window-utils');\n\nexport class WindowUtils {\n    /**\n     * @param {number} id tab or worker id\n     * @param {import('../webdriver').WebDriver} driver\n     * */\n    constructor(id, driver) {\n        this.id = id;\n        this.driver = driver;\n    }\n\n    // Seems unused and not working since bad args to executeJS\n    getElementFromPoint(x, y) {\n        /* eslint-disable */\n        function elementFromPoint(x, y) {\n            var el = document.elementFromPoint(x, y);\n            return { testimId: el ? el.getAttribute('testim_dom_element_id') : null, tagName: el ? el.tagName : null };\n        }\n        /* eslint-enable */\n\n        return this.driver.executeJS(elementFromPoint, x, y).then(result => result.value);\n    }\n\n    getLocation() {\n        return this.driver.getUrl();\n    }\n\n    stopListeningToScroll() {\n        return Promise.resolve();\n    }\n\n    resumeListeningToScroll() {\n        return Promise.resolve();\n    }\n\n    scrollToPosition(pos) {\n        return this.driver.scroll(pos.x, pos.y);\n    }\n\n    scrollToPositionWithoutAnimation(pos) {\n        /* eslint-disable */\n        // if scroll behavior is not supported, then the scrolling is not animated anyway\n        function scrollWithoutAnimation(position) {\n            var scrollBehaviorSupported = 'scrollBehavior' in document.documentElement.style;\n            if (scrollBehaviorSupported) {\n                return window.scrollTo({ left: position.x, top: position.y, behavior: 'instant' });\n            }\n            return window.scrollTo(position.x, position.y);\n        }\n        /* eslint-enable */\n        return this.driver.executeJS(scrollWithoutAnimation, pos);\n    }\n\n    getCurrentScrollPosition() {\n        /* eslint-disable */\n        function scrollPosition() {\n            return { x: window.scrollX, y: window.scrollY };\n        }\n        /* eslint-enable */\n\n        return this.driver.executeJS(scrollPosition).then(result => result.value);\n    }\n\n    navigate(location, NAVIGATION_MAX_TIME = 15000) {\n        const that = this;\n\n        async function navigate(retries = 3) {\n            try {\n                await that.driver.url(location);\n            } catch (err) {\n                const shouldRetryNavigation = err.seleniumStack && err.message.includes('method IWebBrowser2::Navigate2() failed');\n                if (shouldRetryNavigation && retries > 0) {\n                    logger.warn('selenium navigation failed. retrying to navigate', { err });\n                    await delay(1500);\n                    return navigate(retries - 1);\n                }\n                throw err;\n            }\n            return undefined;\n        }\n\n        return Promise.race([navigate(), delay(NAVIGATION_MAX_TIME)]);\n    }\n\n    reloadTab(timeoutMSec = 15000) {\n        return Promise.race([\n            this.driver.reloadTab(),\n            delay(timeoutMSec),\n        ]);\n    }\n\n    getViewportSize() {\n        return this.driver.getViewportSize();\n    }\n\n    maximizeWithoutValidation() {\n        return this.driver.maximizeWithoutValidation();\n    }\n\n    getFullPageSize() {\n        /* eslint-disable */\n        function fullPageSize() {\n            var body = document.body;\n            var html = document.documentElement;\n            var height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n            var width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);\n            return {\n                height: height,\n                width: width\n            };\n        }\n        /* eslint-enable */\n\n        return this.driver.executeJS(fullPageSize).then(result => result.value);\n    }\n\n    extractToNewWindow() {\n        return Promise.resolve();\n    }\n\n    async checkSize(size) {\n        await utils.delay(1000);\n        const actualSize = await this.getViewportSize();\n        if (actualSize.width !== size.width || actualSize.height !== size.height) {\n            return Promise.reject({ actualSize, expectedSize: size });\n        }\n        return { actualSize, expectedSize: size };\n    }\n\n    async setViewportSize(size) {\n        await this.driver.setViewportSize(size.width, size.height);\n        return await this.checkSize(size);\n    }\n\n    async validatePageIsAvailable() {\n        /* eslint-disable */\n        function pageIsAvailable() {\n            var locationObj;\n            // this sometimes happens on IE\n            if (typeof location !== 'undefined') {\n                locationObj = location;\n            } else if (typeof window !== 'undefined' && typeof window.location !== 'undefined') {\n                locationObj = window.location;\n            } else {\n                return false;\n            }\n\n            return (\n                locationObj.href !== 'chrome-error://chromewebdata/' &&\n                locationObj.href !== 'safari-resource:/ErrorPage.html' &&\n                locationObj.href.indexOf('res://ieframe.dll/http_404.htm') !== 0 &&\n                locationObj.href.indexOf('ms-appx-web://microsoft.microsoftedge/assets/errorpages/') !== 0\n            );\n        }\n        /* eslint-enable */\n\n        const result = await this.driver.executeJS(pageIsAvailable);\n        if (!result.value) {\n            throw new PageNotAvailableError('validatePageIsAvailable:PageNotAvailableError');\n        }\n    }\n\n    focusTab() {\n        return this.driver.switchTab(this.id);\n    }\n\n    quit() {\n        return undefined;\n    }\n\n    async getOsAndBrowser() {\n        const osAndBrowser = await pRetry(() => this.driver.getBrowserAndOS(), { retries: 3 });\n        return {\n            uaBrowserName: osAndBrowser.browser,\n            uaOs: osAndBrowser.os,\n            userAgent: osAndBrowser.userAgent,\n            browserVersion: osAndBrowser.browserVersion,\n        };\n    }\n\n    getUserAgentInfo() {\n        return pRetry(() => this.driver.getUserAgentInfo(), { retries: 3 });\n    }\n}\n", "// @ts-check\n\nimport pRetry from 'p-retry';\n\nexport class ScreenshotUtils {\n    /**\n     * @param {any} tabId\n     * @param {import('../webdriver').WebDriver} driver\n     */\n    constructor(tabId, driver, options = { takeScreenshots: true }) {\n        this.tabId = tabId;\n        this.driver = driver;\n        this.options = options;\n    }\n\n    base64AddPadding(str) {\n        return str + Array(((4 - (str.length % 4)) % 4) + 1).join('=');\n    }\n\n    shouldTakeScreenshots() {\n        if (typeof this.options.takeScreenshots !== 'boolean') {\n            return true;\n        }\n        return this.options.takeScreenshots;\n    }\n\n    async takeScreenshot() {\n        if (!this.shouldTakeScreenshots()) {\n            return { devicePixelRatio: 1, image: '' };\n        }\n        const MAX_RETRY_COUNT = 3;\n        const SCREENSHOT_RETRY_DELAY = 2000;\n        const devicePixelRatioPromise = this.currentDevicePixelRatio ? Promise.resolve(this.currentDevicePixelRatio) : this.getDevicePixelRatio();\n        const getScreenshot = () => Promise.all([devicePixelRatioPromise, this.driver.takeScreenshot()]);\n        const [devicePixelRatio, image] = await pRetry(getScreenshot, { retries: MAX_RETRY_COUNT, minTimeout: SCREENSHOT_RETRY_DELAY });\n        const base64 = image ? image.value : '';\n        const dataUrl = `data:image/png;base64,${this.base64AddPadding(base64.replace(/[\\r\\n]/g, ''))}`;\n        return {\n            image: dataUrl,\n            devicePixelRatio,\n        };\n    }\n\n    async takeElementScreenshot(elem) {\n        if (!this.shouldTakeScreenshots()) {\n            return { devicePixelRatio: 1, image: '' };\n        }\n        const MAX_RETRY_COUNT = 3;\n        const SCREENSHOT_RETRY_DELAY = 2000;\n        const devicePixelRatioPromise = this.currentDevicePixelRatio ? Promise.resolve(this.currentDevicePixelRatio) : this.getDevicePixelRatio();\n        const getElemScreenshot = () => Promise.all([devicePixelRatioPromise, this.driver.takeElementScreenshot(elem)]);\n        const [devicePixelRatio, image] = await pRetry(getElemScreenshot, { retries: MAX_RETRY_COUNT, minTimeout: SCREENSHOT_RETRY_DELAY });\n        const base64 = image ? image.value : '';\n        const dataUrl = `data:image/png;base64,${this.base64AddPadding(base64.replace(/[\\r\\n]/g, ''))}`;\n        return {\n            image: dataUrl,\n            devicePixelRatio,\n        };\n    }\n\n    getDevicePixelRatio() {\n        function devicePixelRatioJS() {\n            try {\n                return window.devicePixelRatio;\n            } catch (err) {\n                return 1;\n            }\n        }\n\n        return this.driver.executeJS(devicePixelRatioJS).then(result => result.value);\n    }\n\n    forcePixelRatio(forceRatio = 1) {\n        this.currentDevicePixelRatio = forceRatio;\n        return Promise.resolve();\n    }\n\n    getCurrentDevicePixelRatio() {\n        return this.currentDevicePixelRatio;\n    }\n}\n", "// @ts-check\nimport * as _ from 'lodash';\nimport * as utils from '../../utils';\nimport Jimp from 'jimp';\nimport { getLogger } from '../../commons/logger';\n\nconst logger = getLogger('image-capture-utils');\n\nclass RectIsOutsideOfImageError extends Error {\n    constructor(message) {\n        super(message);\n        this.rectIsOutsideOfImageError = true;\n        Object.setPrototypeOf(this, RectIsOutsideOfImageError.prototype);\n    }\n}\n\nasync function cropImageFromImageData(imageData, imageInfo) {\n    const _image = imageInfo.image || imageInfo;\n    const pixelRatio = imageInfo.devicePixelRatio;\n\n    if (!_image) {\n        throw new Error('Failed to get image');\n    }\n\n    const imageRegExMatch = _image.match(/^data\\:[^;]*\\;base64,(.*)$/);\n    if (!imageRegExMatch) {\n        throw new Error('Image is not in base64 format');\n    }\n\n    // chromeCropImage2\n    const offset = imageData.offset || { top: 0, left: 0 };\n\n    offset.top *= pixelRatio;\n    offset.left *= pixelRatio;\n\n    // elementImage\n    if (!imageData.elementRect) {\n        logger.warn('missing elementRect', _.omit(imageData, 'image'));\n        return {};\n    }\n\n    const { elementRect } = imageData;\n    const image = await Jimp.read(Buffer.from(imageRegExMatch[1], 'base64'));\n    let x = elementRect.left * pixelRatio + offset.left * pixelRatio;\n    let y = elementRect.top * pixelRatio + offset.top * pixelRatio;\n    let width = elementRect.width * pixelRatio;\n    let height = elementRect.height * pixelRatio;\n\n    if (x < 0) {\n        width += x;\n        width = width < 0 ? 0 : width;\n        x = 0;\n    }\n\n    if (y < 0) {\n        height += y;\n        height = height < 0 ? 0 : height;\n        y = 0;\n    }\n\n    const imageWidth = image.bitmap.width;\n    const imageHeight = image.bitmap.height;\n    if ((x + width) > imageWidth) {\n        width = imageWidth - x;\n    }\n\n    if ((y + height) > imageHeight) {\n        height = imageHeight - y;\n    }\n\n    if (height <= 0 || width <= 0) {\n        throw new RectIsOutsideOfImageError('height or width is equal or lower than zero');\n    }\n\n    const cImage = image.crop(x, y, width, height);\n    const base64 = await cImage.getBase64Async(Jimp.MIME_PNG);\n    return { elementImage: base64 };\n}\n\nasync function chromeStitchImage(fullSize, parts) {\n    const fullImage = await Jimp.read(fullSize.width, fullSize.height);\n\n    for (const part of parts) {\n        const imageRegExMatch = part.image.match(/^data\\:[^;]*\\;base64,(.*)$/);\n        const partImage = await Jimp.read(Buffer.from(imageRegExMatch[1], 'base64'));\n        // From the code or types doesn't seem like `fullImage.composite` has an async Promise API\n        await new Promise((resolve, reject) => {\n            fullImage.composite(partImage, part.position.left, part.position.top, (err) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve();\n            });\n        });\n    }\n    const base64 = await fullImage.getBase64Async(Jimp.MIME_PNG);\n    return base64;\n}\n\nfunction stitchImage(fullSize, parts) {\n    return chromeStitchImage(fullSize, parts);\n}\n\n// ???????????\nfunction uploadDataUrl() {\n    return Promise.resolve();\n}\n\nfunction uploadAllDataUrls(imagesObject) {\n    function isImageUrl(key) {\n        return (typeof imagesObject[key] === 'string') && imagesObject[key].startsWith('data');\n    }\n\n    function updateKey(key) {\n        return uploadDataUrl(imagesObject[key]).then((imageUrl) => ({ key, url: imageUrl }));\n    }\n\n    return Promise.all(Object.keys(imagesObject).filter(isImageUrl).map(updateKey))\n        .then((keyUrlList) => keyUrlList.reduce((obj, current) => {\n            obj[current.key] = current.url;\n            return obj;\n        }, imagesObject));\n}\n\nfunction getElementAbsoluteRectangle(elementRect, pixelRatio) {\n    pixelRatio = pixelRatio || 1;\n    elementRect = elementRect || {\n        left: 0, top: 0, width: 0, height: 0,\n    };\n    return {\n        left: pixelRatio * Math.round(elementRect.left),\n        top: pixelRatio * Math.round(elementRect.top),\n        width: pixelRatio * Math.round(elementRect.width),\n        height: pixelRatio * Math.round(elementRect.height),\n        pixelRatio,\n    };\n}\n\nexport class ImageCaptureUtils {\n    /**\n     * @param {unknown} _unusedId\n     * @param {import('./windowUtils').WindowUtils} windowUtils\n     * @param {import('./screenshotUtils').ScreenshotUtils} screenshotUtils\n     * */\n    constructor(_unusedId, windowUtils, screenshotUtils) {\n        this.windowUtils = windowUtils;\n        this.screenshotUtils = screenshotUtils;\n    }\n\n    async takeViewPortImage() {\n        const imageInfo = await this.screenshotUtils.takeScreenshot();\n        return ((typeof imageInfo === 'string') ? imageInfo : imageInfo.image);\n    }\n\n    takeImageForComparison() {\n        return this.takeViewPortImage();\n    }\n\n    async takeAreaDataUrl(areas) {\n        // Future changes in clickim will pass parameters to this function as a single object\n        if (areas.areas) {\n            areas = areas.areas;\n        }\n\n        const imageInfo = await this.screenshotUtils.takeScreenshot();\n        const result = await cropImageFromImageData(areas, imageInfo);\n        result.screenImage = imageInfo.image;\n        result.absoluteScreenHighlight = getElementAbsoluteRectangle(areas.elementRect, imageInfo.devicePixelRatio);\n        return result;\n    }\n\n    async takeElementImage(elementId) {\n        const imageInfo = await this.screenshotUtils.takeElementScreenshot({ ELEMENT: elementId });\n        return ((typeof imageInfo === 'string') ? imageInfo : imageInfo.image);\n    }\n\n    async takeArea(areas) {\n        // Future changes in clickim will pass parameters to this function as a single object\n        if (areas.areas) {\n            areas = areas.areas;\n        }\n\n        const imageInfo = await this.screenshotUtils.takeScreenshot();\n        return uploadAllDataUrls({\n            screenImage: imageInfo.image,\n            absoluteScreenHighlight: getElementAbsoluteRectangle(areas.elementRect, imageInfo.devicePixelRatio),\n        });\n    }\n\n    forcePixelRatio(forceRatio) {\n        return this.screenshotUtils.forcePixelRatio(forceRatio);\n    }\n\n    getCurrentDevicePixelRatio() {\n        return this.screenshotUtils.getCurrentDevicePixelRatio();\n    }\n\n    async takeStitchedDataUrl(useImprovedScreenshotStitching) {\n        const { windowUtils, screenshotUtils } = this;\n\n        const stabilize = () => utils.delay(250);\n        const usingImprovedStitching = Boolean(useImprovedScreenshotStitching);\n\n        async function createPart(position, crop) {\n            if (usingImprovedStitching) {\n                await windowUtils.scrollToPositionWithoutAnimation(position);\n            } else {\n                await windowUtils.scrollToPosition(position);\n            }\n            await stabilize();\n            const imageInfo = await screenshotUtils.takeScreenshot();\n            const cropResult = await cropImageFromImageData({ elementRect: crop }, imageInfo);\n            return ({\n                position: { left: position.x + crop.left, top: position.y + crop.top },\n                size: { width: crop.width, height: crop.height },\n                image: cropResult.elementImage,\n            });\n        }\n\n        async function takeAllParts(positionsData) {\n            const allParts = [];\n            for (const nextPos of positionsData) {\n                const part = await createPart(nextPos.scrollPos, nextPos.cropData);\n                allParts.push(part);\n            }\n            return allParts;\n        }\n\n        function getPartsPositions(fullPageSize, viewPortSize) {\n            const FPW = Math.max(fullPageSize.width, viewPortSize.width);\n            const VPW = viewPortSize.width;\n            const FPH = Math.max(fullPageSize.height, viewPortSize.height);\n            const VPH = viewPortSize.height;\n            const Ws = Array.from({ length: Math.ceil(FPW / VPW) }, (__, i) => ({\n                scrollX: Math.min(i * VPW, FPW - VPW),\n                cropX: i * VPW - Math.min(i * VPW, FPW - VPW),\n                cropW: VPW - (i * VPW - Math.min(i * VPW, FPW - VPW)),\n            }));\n            const Hs = Array.from({ length: Math.ceil(FPH / VPH) }, (__, i) => ({\n                scrollY: Math.min(i * VPH, FPH - VPH),\n                cropY: i * VPH - Math.min(i * VPH, FPH - VPH),\n                cropH: VPH - (i * VPH - Math.min(i * VPH, FPH - VPH)),\n            }));\n            return Ws.flatMap(w => Hs.map(h => ({\n                scrollPos: { x: w.scrollX, y: h.scrollY },\n                cropData: {\n                    top: h.cropY,\n                    left: w.cropX,\n                    width: w.cropW,\n                    height: h.cropH,\n                },\n            }))\n            );\n        }\n\n        async function createStitchImage(fullPageSize, viewPortSize) {\n            const originalPosition = await windowUtils.getCurrentScrollPosition();\n            const positions = getPartsPositions(fullPageSize, viewPortSize);\n            const parts = await takeAllParts(positions);\n            await windowUtils.scrollToPosition(originalPosition);\n            return stitchImage(fullPageSize, parts);\n        }\n\n        const [fullPageSize, viewPortSize] = await Promise.all([windowUtils.getFullPageSize(), windowUtils.getViewportSize()]);\n        return await createStitchImage(fullPageSize, viewPortSize);\n    }\n}\n", "// @ts-check\n\nimport * as semver from 'semver';\nimport * as utils from '../../utils';\nimport { getLogger } from '../../commons/logger';\nimport { WindowUtils } from '../utils/windowUtils';\nimport { ScreenshotUtils } from '../utils/screenshotUtils';\nimport { ImageCaptureUtils } from '../utils/imageCaptureUtils';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\n\nconst logger = getLogger('tab-service');\n\n/**\n * @typedef {{\n *     attachDebugger(): Promise<any>,\n *     detachDebugger(): Promise<any>,\n *     onDebuggerDetached(): {},\n *     tabId: string,\n *     domUtils: { getDOM(): Promise<any> },\n *     windowUtils: WindowUtils,\n *     imageCaptureUtils: ImageCaptureUtils\n * }} TabUtil\n * */\n/**\n * @typedef {{\n *     infoId: any;\n *     url: any;\n *     title: any;\n *     favIconUrl: any;\n *     order: any;\n *     from: any;\n *     isMain: any;\n *     openerStepId: any;\n *     openerOriginalStepId?: any;\n *     isClosed?: boolean;\n *     currentUrl?: any;\n *     lastUpdatedUrl?: any;\n * }} TabInfo\n */\n/**\n * @typedef {{\n *     tabCount: number;\n *     tabInfos: Record<string, TabInfo>;\n *     lastActiveTabInfo?: any;\n *     currentTab?: any;\n * }} SessionTab\n */\n\nexport class TabService {\n    /** @param {import('../webdriver').WebDriver} driver */\n    constructor(driver) {\n        this.driver = driver;\n        /** @type {Record<string, TabUtil>} */\n        this._utils = {};\n        /** @type {Record<string, SessionTab>} */\n        this.sessionTabs = {};\n        /** @type {Record<string, string>} */\n        this.pendingTabs = {};\n        /** @type {Record<string, Set<any>>} */\n        this.addedTabs = {};\n    }\n\n    on() {}\n\n    tabCount(sessionId) {\n        if (this.sessionTabs[sessionId]) {\n            return this.sessionTabs[sessionId].tabCount;\n        }\n        return undefined;\n    }\n\n    getAllOpenTabIds(sessionId) {\n        const allTabInfos = this.getAllTabInfos(sessionId);\n        return Object.keys(allTabInfos)\n            .filter(tabId => !allTabInfos[tabId].isClosed);\n    }\n\n    /**\n     * Get last tab info for pixel validation\n     *\n     * @returns last tab info\n     */\n    getActiveTabInfo(sessionId) {\n        return this.sessionTabs[sessionId].lastActiveTabInfo;\n    }\n\n    getAllTabIds(sessionId) {\n        return Object.keys(this.getAllTabInfos(sessionId)).map(id => id);\n    }\n\n    isSessionTab(sessionId, tabId) {\n        return this.getAllTabIds(sessionId).includes(tabId);\n    }\n\n    createSesion(sessionId) {\n        if (this.sessionTabs[sessionId]) { // joining an existing session\n            return;\n        }\n        this.addedTabs[sessionId] = new Set();\n        this.sessionTabs[sessionId] = {\n            tabCount: 0,\n            tabInfos: {},\n        };\n    }\n\n    setAddFrameHandlerCallBack(addFrameHandlerCb) {\n        this.addFrameHandler = addFrameHandlerCb;\n    }\n\n    getAllTabInfoStrings(sessionId) {\n        const allIds = this.getAllTabIds(sessionId);\n        return allIds.map(tabId => {\n            const tabInfo = this.getTabInfo(sessionId, tabId);\n            return `tabId=${tabId}, url=${tabInfo.url}, order=${tabInfo.order}, isMain=${tabInfo.isMain}, openerStepId=${tabInfo.openerStepId}, isClosed=${tabInfo.isClosed}, currentUrl: ${tabInfo.currentUrl}, lastUpdatedUrl: ${tabInfo.lastUpdatedUrl}`;\n        });\n    }\n\n    getAllTabInfos(sessionId) {\n        return this.sessionTabs[sessionId].tabInfos;\n    }\n\n    addNewTab(sessionId, tabId, openerStepId, options = {}) {\n        if (this.addedTabs[sessionId].has(tabId)) {\n            return Promise.resolve();\n        }\n        this.addedTabs[sessionId].add(tabId);\n        logger.info(`Adding a new tab sessionId: ${sessionId}, tabId: ${tabId}, openerId: ${openerStepId}`);\n        return this.addTab(sessionId, tabId, this.sessionTabs[sessionId].tabCount++, openerStepId, options);\n    }\n\n    addOpenerStepId(sessionId, tabId, openerStepId) {\n        this.sessionTabs[sessionId].tabInfos[tabId].openerStepId = openerStepId;\n    }\n    addOpenerStep(sessionId, tabId, openerStep) {\n        this.sessionTabs[sessionId].tabInfos[tabId].openerStepId = openerStep.id;\n        this.sessionTabs[sessionId].tabInfos[tabId].openerOriginalStepId = openerStep.originalStepId;\n    }\n\n    fixMissingMainTab(sessionId) {\n        const mainTab = this.getMainTabInfo(sessionId);\n        if (mainTab) {\n            return;\n        }\n        const allTabInfos = this.getAllTabInfos(sessionId);\n        if (Object.keys(allTabInfos).length === 0) {\n            // no tab infos \uD83E\uDD37\n            return;\n        }\n        Object.values(this.getAllTabInfos(sessionId))[0].isMain = true;\n    }\n\n    async buildTabInfo(sessionId, tabId, order, openerStepId, options = {}) {\n        /** @type {{ title: any; url: any; isMainTab: string; favIconUrl?: any, openerTabId?: any }} */\n        const tab = await this.getTabDetails(tabId, sessionId, options);\n        const infoId = utils.guid();\n        function isMainTab(tabService) {\n            if (options.checkForMainTab) {\n                return tab.isMainTab;\n            }\n\n            if (!tab.isMainTab || tab.isMainTab === 'unknown') {\n                const missingMainTab = !tabService.getMainTabInfo(sessionId);\n                return missingMainTab;\n            }\n            return tab.isMainTab;\n        }\n        this.sessionTabs[sessionId].tabInfos[tabId] = {\n            infoId,\n            url: tab.url,\n            title: tab.title,\n            favIconUrl: tab.favIconUrl,\n            order,\n            from: this.getTabInfo(sessionId, tab.openerTabId),\n            isMain: isMainTab(this),\n            openerStepId,\n        };\n        return infoId;\n    }\n\n    async addTab(sessionId, id, order, openerStepId, options = {}) {\n        const infoId = await this.buildTabInfo(sessionId, id, order, openerStepId, options);\n        const _windowUtils = new WindowUtils(id, this.driver);\n        this._utils[infoId] = {\n            attachDebugger: () => Promise.resolve(),\n            detachDebugger: () => Promise.resolve(),\n            onDebuggerDetached: () => {},\n            tabId: id,\n            domUtils: { getDOM: () => Promise.resolve() },\n            windowUtils: _windowUtils,\n            imageCaptureUtils: new ImageCaptureUtils(\n                id,\n                _windowUtils,\n                new ScreenshotUtils(id, this.driver, { takeScreenshots: options.takeScreenshots }),\n            ),\n        };\n    }\n\n    getTabUtilsByTabIdAndSessionId(sessionId, tabId) {\n        const tabInfo = this.sessionTabs[sessionId].tabInfos[tabId];\n        return this._utils[tabInfo.infoId];\n    }\n\n    getTabUtilsByTabId(tabId) {\n        const infoId = Object.keys(this._utils).find(uId => this._utils[uId].tabId === tabId);\n        return this._utils[infoId];\n    }\n\n    getTabInfo(sessionId, id) {\n        return this.sessionTabs[sessionId].tabInfos[id];\n    }\n\n    getTabUtils(sessionId, tabInfo) {\n        if (!tabInfo) {\n            return this.getMainTabUtils(sessionId);\n        }\n\n        if (this._utils[tabInfo.infoId]) {\n            return this._utils[tabInfo.infoId];\n        }\n\n        if (tabInfo.isMain) {\n            return this.getMainTabUtils(sessionId);\n        }\n\n        const infos = this.getAllTabInfos(sessionId);\n        const nonMainTabs = Object.keys(infos)\n            .map(tabId => infos[tabId])\n            .filter(info => !info.isMain);\n        if (nonMainTabs.length === 1) {\n            return this._utils[nonMainTabs[0].infoId];\n        }\n\n        const sameTabs = Object.keys(sessionId)\n            .map(key => sessionId[key])\n            .filter(info => this.isSameTab(sessionId, tabInfo, info));\n        if (sameTabs.length > 0) {\n            return this._utils[sameTabs[0].infoId];\n        }\n\n        // if nothing else\n        return this.getMainTabUtils(sessionId);\n    }\n\n    exactUrlMatch(first, second, allUrls) {\n        const exactUrlMatch = allUrls\n            .filter(url => url === second.url);\n\n        if ((first.url === second.url || first.currentUrl === second.url || (first.currentUrl && (first.currentUrl === second.currentUrl))) && (exactUrlMatch.length === 1)) {\n            return true;\n        }\n        return false;\n    }\n\n    singleExactMatchForParts(first, second, allUrls, combinePartsFunction) {\n        const { urlUtils } = getSessionPlayer();\n        const firstUrlParts = urlUtils.urlBreaker(first.url || first.currentUrl);\n        const secondUrlParts = urlUtils.urlBreaker(second.url || second.currentUrl);\n        const firstPartsCombined = combinePartsFunction(firstUrlParts);\n        const secondPartsCombined = combinePartsFunction(secondUrlParts);\n        const allDomainAndPathMatches = allUrls.map(url => urlUtils.urlBreaker(url))\n            .map(urlParts => combinePartsFunction(urlParts))\n            .filter(combinedParts => combinedParts === firstPartsCombined);\n        if ((firstPartsCombined === secondPartsCombined) && (allDomainAndPathMatches.length === 1)) {\n            return true;\n        }\n        return false;\n    }\n\n    isSameTab(sessionId, first, second) {\n        const { tabMatcher } = getSessionPlayer();\n        if (tabMatcher) {\n            const infos = this.getAllTabInfos(sessionId);\n            const allTabInfos = Object.keys(infos).map(tabId => infos[tabId]);\n            return tabMatcher.isSameTab(allTabInfos, first, second);\n        }\n        // flow:\n        // both main => exact match => exact match for domain and path => exact match for domain path and hash\n        // => order (legacy data)\n        if (first.isMain && second.isMain) {\n            return true;\n        }\n\n        if (first.openerStepId && second.openerStepId && first.openerStepId === second.openerStepId) {\n            return true;\n        }\n\n        const infos = this.getAllTabInfos(sessionId);\n        const allTopFrameUrls = Object.keys(infos)\n            .map(tabId => infos[tabId].url);\n\n        if (this.exactUrlMatch(first, second, allTopFrameUrls)) {\n            return true;\n        }\n\n        const combineDomainAndPath = urlParts => (`${urlParts.domain}/${urlParts.path.join('/')}`);\n        if (this.singleExactMatchForParts(first, second, allTopFrameUrls, combineDomainAndPath)) {\n            return true;\n        }\n\n        const combineDomainPathAndHash = urlParts => (`${urlParts.domain}/${urlParts.path.join('/')}#${urlParts.hash}`);\n        if (this.singleExactMatchForParts(first, second, allTopFrameUrls, combineDomainPathAndHash)) {\n            return true;\n        }\n\n        if (first.order === second.order) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getMainTabInfo(sessionId) {\n        const infos = this.getAllTabInfos(sessionId);\n        return Object.keys(infos)\n            .map(id => infos[id])\n            .find(tabInfo => tabInfo.isMain);\n    }\n\n    getMainTabUtils(sessionId) {\n        const mainTabInfo = this.getMainTabInfo(sessionId);\n        if (!mainTabInfo) {\n            return {};\n        }\n        return this.getTabUtils(sessionId, mainTabInfo);\n    }\n\n    removeTabInfo(sessionId, tabId) {\n        const infos = this.getAllTabInfos(sessionId);\n        const info = infos[tabId];\n        delete this.sessionTabs[sessionId].tabInfos[tabId];\n        delete this._utils[info.infoId];\n        this.sessionTabs[sessionId].tabCount--;\n    }\n\n    getMainTabId(sessionId) {\n        const infos = this.getAllTabInfos(sessionId);\n        return Object.keys(infos).find(id => infos[id].isMain);\n    }\n\n    isMainTabExists(sessionId) {\n        const mainTabId = this.getMainTabId(sessionId);\n        if (!mainTabId) {\n            return Promise.resolve(false);\n        }\n        return Promise.resolve(true);\n    }\n\n    clearAllTabs(sessionId) {\n        const infos = this.getAllTabInfos(sessionId);\n\n        this.sessionTabs[sessionId].tabCount = 0;\n        Object.keys(infos)\n            .forEach(tabId => this.removeTabInfo(sessionId, tabId));\n    }\n\n    clearNonMainTabs(sessionId) {\n        const infos = this.getAllTabInfos(sessionId);\n        Object.keys(infos)\n            .filter(tabId => !infos[tabId].isMain)\n            .forEach(tabId => this.removeTabInfo(sessionId, tabId));\n\n        this.sessionTabs[sessionId].tabCount = 1;\n    }\n\n    switchTab(tabId, sessionId, { forceSwitch = false } = {}) {\n        const tabCount = this.sessionTabs[sessionId] ? this.sessionTabs[sessionId].tabCount : 1;\n        // looking at session tabs here and tabCount only works if we already \"know\" all the tabs, so we\n        // opt out of it in hybrid steps and other cases.\n        if ((typeof tabCount === 'number' && tabCount > 1) || forceSwitch) {\n            return this.driver.switchTab(tabId);\n        }\n        return Promise.resolve();\n    }\n\n    getTabDetails(tabId, sessionId, options = {}) {\n        return this.switchTab(tabId, sessionId, options)\n            .then(() => {\n                if (options.skipLoadInfo) { // the tab title and url are not interesting yet\n                    return { title: '', url: '' };\n                }\n                let mainTabPromise = Promise.resolve('unknown');\n                if (options.checkForMainTab) {\n                    mainTabPromise = this.driver.executeJS('return window.__isMainTestimTab').then(r => r.value);\n                }\n\n                return Promise.all([this.driver.getTitle(), this.driver.getUrl(), mainTabPromise]).then(\n                    ([title, url, isMainTab]) => ({ title, url, isMainTab }),\n                    err => {\n                        logger.error('failed to get url or title', { err });\n                        return {\n                            title: '',\n                            url: '',\n                        };\n                    },\n                );\n            })\n            .catch(err => {\n                logger.error('failed to switch to tab', { tabId, err });\n            });\n    }\n\n    async getUnregisteredTabId(sessionId) {\n        const ids = await this.driver.getTabIds();\n        return ids.find(tabId => !this.getAllTabIds(sessionId).includes(tabId));\n    }\n\n    async waitForTabToOpen(sessionId) {\n        const newId = await this.getUnregisteredTabId(sessionId);\n        if (newId) {\n            return newId;\n        }\n        await utils.delay(500);\n        return await this.waitForTabToOpen(sessionId);\n    }\n\n    async tryToAddTab(sessionId, openerStepId) {\n        if (this.pendingTabs[sessionId]) {\n            // don't mess with the main flow\n            return;\n        }\n        const newId = await this.getUnregisteredTabId(sessionId);\n        if (!newId) {\n            return;\n        }\n        await this.addNewTab(sessionId, newId);\n        await this.addFrameHandler(newId);\n        this.sessionTabs[sessionId].currentTab = null;\n    }\n\n    addNewPopup(id, openerStepId) {\n        const tabInfos = this.getAllTabInfos(id);\n        const stepWasAdded = Object.keys(tabInfos).find(tabId => tabInfos[tabId].openerStepId === openerStepId);\n        if (stepWasAdded) {\n            return Promise.resolve();\n        }\n        if (this.pendingTabs[id]) {\n            logger.info(`overriding opener step id from ${this.pendingTabs[id]} to ${openerStepId}`);\n            this.pendingTabs[id] = openerStepId;\n            return Promise.resolve();\n        }\n        this.pendingTabs[id] = openerStepId;\n        return this.waitForTabToOpen(id)\n            .then(newTabId => this.addNewTab(id, newTabId, this.pendingTabs[id])\n                .then(() => this.addFrameHandler(newTabId))\n                .then(() => delete this.pendingTabs[id])\n                .then(() => (this.sessionTabs[id].currentTab = null)));\n    }\n\n    waitToPendingTabs(id, openerStepId) {\n        const retryInterval = 500;\n        let timeToWait = 3000;\n        const that = this;\n\n        if (!openerStepId) {\n            return Promise.resolve();\n        }\n\n        return new Promise(resolve => {\n            function checkPendingTabs() {\n                if (that.pendingTabs[id] === openerStepId) {\n                    if (timeToWait - retryInterval > 0) {\n                        timeToWait -= retryInterval;\n                        setTimeout(checkPendingTabs, retryInterval);\n                    } else {\n                        resolve();\n                    }\n                } else {\n                    resolve();\n                }\n            }\n\n            checkPendingTabs();\n        });\n    }\n\n    isMainTabIncognito() {\n        return Promise.resolve(false);\n    }\n\n    isInvalidStepVersion(step) {\n        const isOldVersion = semver.lt(step._version || step.version, '1.2.0');\n        const hasParams = !!step.parameterValues;\n        const hasBadLocateParams = hasParams &&\n            step.parameterValues\n                .some(param => param.type === 'locate' && !param.frameLocators);\n\n        return isOldVersion && (!hasParams || hasBadLocateParams);\n    }\n\n    getTabIdByTabInfo(sessionId, step) {\n        const { tabMatcher, commonConstants } = getSessionPlayer();\n        if (this.isInvalidStepVersion(step)) {\n            return Promise.reject({\n                success: false,\n                shouldRetry: false,\n                errorType: commonConstants.stepResult.INVALID_TEST_VERSION,\n            });\n        }\n        if (step.useCurrentTab?.()) {\n            return this.driver.getCurrentTabId().then(tabId => {\n                if (tabId) return tabId;\n                const mainTabId = this.getMainTabId(sessionId);\n                if (mainTabId) return mainTabId;\n                throw new Error('Current tab not found');\n            });\n        }\n        const openerStepId = step.tabInfo?.openerStepId;\n        return this.waitToPendingTabs(sessionId, openerStepId)\n            .then(() => {\n                let tabId;\n                if (tabMatcher) {\n                    const allTabInfos = this.getAllTabIds(sessionId)\n                        .map((_tabId) => Object.assign({}, this.getTabInfo(sessionId, _tabId), { tabId: _tabId }))\n                        .filter((tabInfo) => !tabInfo.isClosed);\n                    tabId = tabMatcher.matchTabs(step, allTabInfos);\n                } else {\n                    // old session player (clickim) version - remove once enough time passed\n                    const stepTabInfo = step.tabInfo;\n                    if (!stepTabInfo) {\n                        tabId = this.getMainTabId(sessionId);\n                    } else {\n                        tabId = this.getAllTabIds(sessionId).find(_tabId => {\n                            const tabInfo = this.getTabInfo(sessionId, _tabId);\n                            return this.isSameTab(sessionId, tabInfo, stepTabInfo);\n                        });\n                    }\n                }\n\n                if (!tabId) {\n                    return this.tryToAddTab(sessionId, openerStepId)\n                        .then(() => { throw new Error('No tab ID found'); });\n                }\n                if (this.sessionTabs[sessionId].currentTab === tabId) {\n                    return tabId;\n                }\n                return this.switchTab(tabId, sessionId)\n                    .then(() => {\n                        this.sessionTabs[sessionId].currentTab = tabId;\n                        return tabId;\n                    })\n                    .catch(err => {\n                        const windowClosedErrors = ['no such window', 'no window found', 'the window could not be found'];\n                        if (err.message && windowClosedErrors.some(errorString => err.message.toLowerCase().includes(errorString))) {\n                            this.sessionTabs[sessionId].tabCount--;\n                            this.sessionTabs[sessionId].tabInfos[tabId].isClosed = true;\n                            return this.getTabIdByTabInfo(sessionId, step);\n                        }\n                        throw err;\n                    });\n            });\n    }\n}\n", "/* eslint-disable @typescript-eslint/no-useless-constructor, @typescript-eslint/no-empty-function */\n\n// Legacy code not supported in selenium mode\nclass PortSelector {\n    constructor() { }\n    select() {\n        // eslint-disable-next-line no-console\n        console.log('\\n\\t\\t\\tinternal error - cant use port selector in selenium!!!!\\n');\n        // eslint-disable-next-line prefer-promise-reject-errors\n        return Promise.reject({ reason: 'cant use port selector in selenium!' });\n    }\n    prepare() {}\n    handleLegacyDataCaching() {}\n}\n\nexport const portSelector = new PortSelector();\n\n", "import { CookieUtils } from './cookieUtils';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\n\nexport class StepActionUtils {\n    /** @param {import('../webdriver').WebDriver} driver */\n    constructor(driver, cookieUtils) {\n        this.driver = driver;\n        this._abortedSteps = [];\n        this.cookieUtils = cookieUtils || new CookieUtils(this.driver);\n    }\n\n    /** @private */\n    get sessionPlayerInit() {\n        return getSessionPlayer();\n    }\n\n    getTimeStamp() {\n        return Date.now();\n    }\n\n    getTestimId(element) {\n        if (!element) {\n            return undefined;\n        }\n        const { locatorBuilderUtils } = this.sessionPlayerInit;\n        const testimIDFieldName = locatorBuilderUtils.TESTIM_ID_FIELD_NAME;\n        return locatorBuilderUtils.isEmptyResult(element) ? locatorBuilderUtils.EMPTY_RESULT_ID : element.getAttribute(testimIDFieldName);\n    }\n\n    resetAbort() {\n        this._abortedSteps = [];\n    }\n\n    abort(result) {\n        this._abortedSteps.push(result);\n    }\n\n    get abortedSteps() {\n        return this._abortedSteps;\n    }\n\n    restoreNativeAlerts() {}\n\n    executeOverloadNativeAlertsInFrame() {}\n\n    getClickOffset(clickOffset, rect) {\n        const { utils } = this.sessionPlayerInit;\n        if (clickOffset && utils.isWithinBounds(0, rect.width, clickOffset.x) && utils.isWithinBounds(0, rect.height, clickOffset.y)) {\n            return {\n                xOffset: clickOffset.x,\n                yOffset: clickOffset.y,\n            };\n        }\n        return {\n            xOffset: rect.width / 2,\n            yOffset: rect.height / 2,\n        };\n    }\n\n    executeInAut(context, code) {\n        return this.driver.executeJS(code).then(r => r.value);\n    }\n\n    extractTargetText(target) {\n        return this.driver.getTargetText(target);\n    }\n\n    extractText(locatedElement) {\n        return this.driver.getElementTextJS(locatedElement);\n    }\n\n    /** @type {import('clickim/src/background/stepActions/stepActionUtils').StepActionUtils['markDynamicParent']} */\n    async markDynamicParent(target, id, frameHandler) {\n        return this.driver.markDynamicParent(target, id, frameHandler);\n    }\n\n    getCookie(name) {\n        return this.cookieUtils.get({ name }).then(cookie => (cookie ? [cookie] : []));\n    }\n    setCookie(cookieObject, frameHandler) {\n        return this.cookieUtils.set(cookieObject).then(cookie => [cookie]);\n    }\n\n    getNextDynamicParent(frameHandler, dynamicParentOptions) {\n        const code = `return ${this.sessionPlayerInit.codeSnippets.getNextDynamicParent(dynamicParentOptions)}`;\n        return this.driver.executeJS(code).then(res => res.value);\n    }\n}\n", "// @ts-check\n\nimport { getLogger } from '../../commons/logger';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\n\nconst logger = getLogger('frame-locator');\nconst SELENIUM_ELEMENT_KEY = 'ELEMENT';\nconst SELENIUM_GUID_KEY = 'element-6066-11e4-a52e-4f735466cecf';\n\nconst _getGuidFromSeleniumElement = (seleniumElement) => {\n    if (!seleniumElement) {\n        return null;\n    }\n\n    return seleniumElement[SELENIUM_ELEMENT_KEY] || seleniumElement[SELENIUM_GUID_KEY];\n};\n\n/** @typedef {import('clickim/src/background/frameLocator').FrameLocator} FrameLocator */\n/** @typedef {import(\"clickim/src/locators/dynamicParentUtils\").FrameHandler} FrameHandler */\n/** @typedef {import(\"clickim/src/background/playbackContext\").PlaybackContext} PlaybackContext */\n/** @typedef {import(\"clickim/src/background/frameTree\").FrameTree} FrameTree */\n/** @typedef {import(\"clickim/src/common/models/locateStep\").LocateStep} LocateStep */\n/** @typedef {import(\"clickim/src/common/models/step\").Step} Step */\n/** @typedef {FrameLocator['findFrame']} findFrameFn */\n/** @typedef {ConstructorParameters<typeof import('clickim/src/background/frameLocator').FrameLocator>} ClickimFrameLocatorCtorArgs */\n\n/** @param {import('../webdriver').WebDriver} driver*/\nexport function frameLocatorFactory(driver) {\n    class FrameLocator {\n        /** @type {(...args: ClickimFrameLocatorCtorArgs) => this}} */\n        constructor(frameManager, locateElementPlayer) {\n            this.frameManager = frameManager;\n            this.locateElementPlayer = locateElementPlayer;\n            /** @type {Record<string, string>} */\n            this._cache = {};\n        }\n\n        cacheResults(seleniumGuid, resultsUrl) {\n            this._cache[seleniumGuid] = resultsUrl;\n        }\n\n        getResultsFromCache(seleniumGuid) {\n            return this._cache[seleniumGuid];\n        }\n\n        cacheFrameLocateResults(frameHandler) {\n            if (frameHandler?.seleniumFrameElement && frameHandler.frameLocateResultUrl) {\n                const guid = _getGuidFromSeleniumElement(frameHandler.seleniumFrameElement);\n                if (guid) {\n                    this.cacheResults(guid, frameHandler.frameLocateResultUrl);\n                }\n            }\n        }\n\n        /**\n         * @param {FrameTree} frameTree\n         * @param {string | number} testimFrameId\n         * @returns {Promise<FrameHandler>}\n        */\n        async foundFrameCallback(result, frameTree, testimFrameId) {\n            const { frameOffset, locatedElement } = result;\n            const { locatorBuilderUtils } = getSessionPlayer();\n            if (locatorBuilderUtils.isEmptyResult(locatedElement)) {\n                const errorMsg = 'got empty result in frame result, not rejected from locate element player';\n                logger.error(errorMsg);\n                throw new Error(errorMsg);\n            }\n            const el = await driver.switchToLocatedFrame(locatedElement);\n            const guid = _getGuidFromSeleniumElement(el.value);\n            const frameLocateResultUrl = this.getResultsFromCache(guid);\n\n            return {\n                frameId: -1,\n                frameOffset,\n                tabInfo: frameTree.tabInfo,\n                tabId: frameTree.tabId,\n                testimFrameId,\n                testimFullFrameId: `${this.currentFrameHandler.testimFullFrameId}-${testimFrameId}`,\n                // @ts-ignore\n                seleniumFrameElement: el.value,\n                frameLocateResultUrl,\n            };\n        }\n\n        /**\n         * @param {LocateStep & { targetId: NonNullable<LocateStep['targetId']>}} frameLocator\n         * @param {number} frameDepth\n         * @param {FrameHandler & { frameOffset: NonNullable<FrameHandler['frameOffset']> }} currentFrame\n         * @param {PlaybackContext} context\n         * @param {FrameTree} frameTree\n         * @param {Step} stepData\n         */\n        locate(frameLocator, frameDepth, currentFrame, context, frameTree, stepData) {\n            // eslint-disable-next-line new-cap\n            const locateElementPlayer = new this.locateElementPlayer(context);\n            frameLocator.targetId = `frameLocator_${frameDepth}`;\n            return locateElementPlayer.locate(frameLocator, currentFrame, frameLocator.targetId)\n                .then(result => {\n                    result.isVisible = true; // frame visibility check is done on the target element\n                    return locateElementPlayer.handleLocateResult(result, stepData, frameLocator)\n                        .catch(() => { throw new Error(); }); // silence [object object] errors;\n                })\n                .then(result => {\n                    const { locatedElement } = context.data[frameLocator.targetId];\n                    return driver.getElementLocationWithPadding(locatedElement)\n                        .then(location => {\n                            const value = location.value || { top: 0, left: 0 };\n                            result.frameOffset = {\n                                top: currentFrame.frameOffset.top + value.top,\n                                left: currentFrame.frameOffset.left + value.left,\n                            };\n                            return result;\n                        });\n                })\n                .then(result => {\n                    if (locateElementPlayer.addFrameDataToContext) {\n                        locateElementPlayer.addFrameDataToContext(result.targetId, result.locateResult);\n                    }\n                    return this.foundFrameCallback(result, frameTree, frameLocator.testimFrameId);\n                })\n                .then(frameHandler => {\n                    this.currentFrameHandler = frameHandler;\n                    return frameHandler;\n                });\n        }\n\n        /** @type {findFrameFn} */\n        async findFrame(stepData, frameLocators, context, frameTree) {\n            const allowNoFrameSwitch = featureFlagsService.flags.enableFrameSwitchOptimization.isEnabled();\n            const chronologicalResults = context.playback.resultsHandler.resultsByChronologicOrder;\n            const lastResult = chronologicalResults.at(-1);\n            const allowedRetries = 1;\n            const moreThanAllowedRetries = Boolean(lastResult) && lastResult.stepId === stepData.id && lastResult.results.length > allowedRetries;\n            if (allowNoFrameSwitch && !moreThanAllowedRetries && this.currentFrameHandler) {\n                const currentFramePos = frameLocators.findIndex(x => x.testimFrameId === this.currentFrameHandler.testimFrameId);\n                if (currentFramePos > -1) {\n                    const shorterPath = frameLocators.slice(currentFramePos + 1);\n                    let frameIndex = 0;\n                    // Changes to the deepest frame\n                    for (const frameLocator of shorterPath) {\n                        frameIndex++;\n                        this.currentFrameHandler = await this.locate(frameLocator, frameIndex, this.currentFrameHandler, context, frameTree, stepData);\n                    }\n                    return this.currentFrameHandler;\n                }\n            }\n\n            const topFrameHandler = await frameTree.getTopFrameHandler();\n            topFrameHandler.frameOffset = { top: 0, left: 0 };\n            const switchToTop = (allowNoFrameSwitch && this.currentFrameHandler === topFrameHandler) ?\n                this.currentFrameHandler :\n                driver.switchToTopFrame();\n            await switchToTop;\n            this.cacheFrameLocateResults(this.currentFrameHandler);\n            this.currentFrameHandler = topFrameHandler;\n            let frameIndex = 0;\n            let currentFrame = topFrameHandler;\n            for (const frameLocator of frameLocators) {\n                frameIndex++;\n                currentFrame = await this.locate(frameLocator, frameIndex, currentFrame, context, frameTree, stepData);\n            }\n            return currentFrame;\n        }\n    }\n\n    return FrameLocator;\n}\n", "import { DISABLE_DEBUGGER_INFINITE_TIMEOUT } from './config';\n\nexport const isDebuggerConnected = () => {\n    try {\n        if (DISABLE_DEBUGGER_INFINITE_TIMEOUT) {\n            return false;\n        }\n        const inspector = require('inspector') as typeof import('inspector');\n        //https://github.com/GoogleChrome/puppeteer/blob/14fb3e38db7c97fc3ea76c65e6f219b0ddb3b54f/utils/testrunner/TestRunner.js#L279\n        if (inspector.url()) {\n            return true;\n        }\n    } catch (e) {\n        /* empty */\n    }\n    return false;\n};\n", "import * as utils from '../../utils';\nimport * as testimCustomToken from '../testimCustomToken';\nimport WebSocket from 'ws';\nimport { EventEmitter } from 'events';\nimport { getLogger } from '../logger';\nimport { WEBSOCKET_HOST } from '../config';\n\nconst logger = getLogger('socket-ng-service');\nconst WAIT_BETWEEN_RECONNECT_MS = 5000;\n\nclass SocketService extends EventEmitter {\n    onConnect?: VoidFunction;\n    clientId = utils.guid();\n    ws: WebSocket | null = null;\n    filterMap: { [key: string]: { query: object; id: string; type: string[]; fullDocument: boolean } } = {};\n    // @ts-expect-error We are incorrectly overriding the EventEmitter base class\n    override listeners: { [listenerName: string]: Array<(data: any) => void> } = {};\n\n    onReconnect(projectId: string) {\n        logger.info('test result websocket re-connect');\n        setTimeout(() => this.connect(projectId), WAIT_BETWEEN_RECONNECT_MS);\n    }\n\n    formatUrl(url: string) {\n        if (url.startsWith('http://')) {\n            return url.replace('http://', 'ws://');\n        }\n\n        if (url.startsWith('https://')) {\n            return url.replace('https://', 'wss://');\n        }\n\n        return url;\n    }\n\n    parseEvent(event: Buffer) {\n        try {\n            // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n            return JSON.parse(event);\n        } catch (err) {\n            logger.error('failed to parse or trigger event', { err });\n        }\n        return undefined;\n    }\n\n    connect(projectId: string) {\n        const wsBaseUrl = this.formatUrl(WEBSOCKET_HOST);\n        return testimCustomToken.getCustomTokenV3()\n            .then(token => new Promise<void>((resolve) => {\n                const options = {\n                    ...(global.proxyUri && { agent: new global.ProxyAgent!(global.proxyUri) }),\n                };\n                this.ws = new WebSocket(`${wsBaseUrl}?projectId=${projectId}&clientId=${this.clientId}&token=${token}`, options);\n\n                this.ws.on('open', () => {\n                    logger.info('websocket opened');\n                    this.reSendAllExistingFilters();\n                    this.onConnect?.();\n                    return resolve();\n                });\n\n                this.ws.on('close', (event) => {\n                    logger.info('websocket closed', { event });\n                    if (!this.ws || this.ws.readyState === WebSocket.CLOSED) {\n                        this.onReconnect(projectId);\n                    }\n                });\n\n                this.ws.on('error', (event) => {\n                    logger.info('websocket error', { event });\n                });\n\n                this.ws.on('message', (event) => {\n                    const evObject = this.parseEvent(event as Buffer);\n                    if (evObject?.type) {\n                        this.emit(evObject.type, evObject.data);\n                    }\n                });\n            }));\n    }\n\n    // this is private because our sockets are supposed to be read-only to\n    // external consumers and writes need to happen through the REST API\n    // this is important since recovery of messages is the case of reconnects is\n    // done in the code calling sendMessage and not in sendMessage itself\n    sendMessage(msg: any) {\n        if (!this.ws) {\n            logger.warn('tried to send error when websocket was disconnected');\n            return;\n        }\n        try {\n            this.ws.send(JSON.stringify(msg));\n        } catch (err) {\n            logger.error('failed to stringify message for sending', { err });\n        }\n    }\n\n    listenOnce<T = any>(eventName: string, eventMatcher: (data: T) => boolean, listener: (data: T) => void) {\n        const onEvent = (data: T) => {\n            if (eventMatcher(data)) {\n                listener(data);\n                this.removeListener(eventName, onEvent);\n            }\n        };\n\n        this.on(eventName, onEvent);\n    }\n\n    listenTo<T = any>(key: string, eventName: string | string[], eventMatcher: (data: T) => boolean, listener: (data: T) => void) {\n        //TODO - Consider doing key:value event name subscriptions here, routing inside the .on('message' into an event name based on the key and removing the listeners array.\n        function fireIfSameMatchEventMatcher(data: T) {\n            if (eventMatcher(data)) {\n                listener(data);\n            }\n        }\n\n        const eventNameArray = Array.isArray(eventName) ? eventName : [eventName];\n        eventNameArray.forEach(name => {\n            this.listeners[`${key}:${name}`] ||= [];\n            const _listener = fireIfSameMatchEventMatcher.bind(this);\n            this.listeners[`${key}:${name}`].push(_listener);\n            this.on(name, _listener);\n        });\n    }\n\n    reSendAllExistingFilters() {\n        Object.keys(this.filterMap).forEach(key => {\n            const filter = this.filterMap[key];\n            this.sendMessage({ type: 'add-filter', filter });\n        });\n    }\n\n    addFilter<T extends { id: string } = any>(key: string, query: object, type: string[], returnFullDocument = false) {\n        return new Promise<T>(resolve => {\n            const filterId = utils.guid();\n            const filter = { query, id: filterId, type, fullDocument: returnFullDocument };\n            this.listenOnce('add-filter:done', data => data.id === filterId, resolve as (data: T) => void);\n            this.sendMessage({ type: 'add-filter', filter });\n            this.filterMap[key] = filter;\n        });\n    }\n\n    removeListeners(key: string, typeArray: string[]) {\n        if (Object.keys(this.listeners).length === 0) {\n            return;\n        }\n        typeArray.forEach(name => {\n            const listeners = this.listeners[`${key}:${name}`];\n            if (listeners) {\n                delete this.listeners[`${key}:${name}`];\n                listeners.forEach(listener => this.removeListener(name, listener));\n            }\n        });\n    }\n\n    removeFilter(key: string, type: string | string[]) {\n        const filter = this.filterMap[key];\n        if (!filter) {\n            return;\n        }\n\n        const typeArray = Array.isArray(type) ? type : [type];\n        this.removeListeners(key, typeArray);\n        delete this.filterMap[key];\n        this.sendMessage({ type: 'remove-filter', filter });\n    }\n}\n\nexport const socketService = new SocketService();\n", "import pRetry from 'p-retry';\nimport * as io from 'socket.io-client';\nimport * as config from '../config';\nimport * as utils from '../../utils';\nimport { getLogger } from '../logger';\n\nconst MAX_SOCKET_RECONNECT_ATTEMPT = 50;\nconst MAX_RECONNECT_ATTEMPT_BEFORE_SWITCH = 10;\nconst EMIT_PROMISE_TIMEOUT = 5000;\nconst POLLING_TRANSPORT_TIMEOUT_MS = 10 * 1000;\n\nconst logger = getLogger('base socket service');\n\nexport class BaseSocketService {\n    attempts = 0;\n    rooms: { [testResultId: string]: string | undefined } = {};\n    emitPromiseQueue: undefined | Promise<void> = undefined;\n    emitJoinRoom?(resultId: string, testId?: string): void;\n    url?: string;\n    _socket?: io.Socket;\n    isAllowedWS?: boolean;\n    prevErr?: any;\n    onConnect?(): void;\n\n    joinToMultipleResults() {\n        const testResultIds = Object.keys(this.rooms);\n        logger.info('re-join all existing rooms', { testResultIds });\n        testResultIds.forEach(resultId => {\n            const testId = this.rooms[resultId];\n            this.emitJoinRoom?.(resultId, testId);\n        });\n    }\n\n    joinRoom(resultId: string, testId?: string) {\n        this.rooms[resultId] = testId;\n    }\n\n    leaveRoom(resultId: string) {\n        delete this.rooms[resultId];\n    }\n\n    addSocketHandlers() {\n        const socketError = (method: string, err: any) => {\n            let transport = 'websocket';\n            try {\n                transport = this._socket!.io.engine.transport.name;\n            } catch (e) {\n                /* empty */\n            }\n            logger.error(`Error in SocketService websocket _${method}_ socket ${this._socket!.id} ` +\n            `is ${this.url} over ${transport}. Reconnect attempts ${this.attempts}. Error is: ${err?.message}`);\n        };\n\n        this._socket!.on('reconnect_attempt', (attempt) => {\n            socketError('reconnect_attempt', { message: 'reconnect attempt', attempt });\n            this.attempts++;\n            if (this.attempts === MAX_RECONNECT_ATTEMPT_BEFORE_SWITCH && !this.isAllowedWS) {\n                this._socket!.io.opts.transports = ['polling'];\n                this._socket!.io.opts.upgrade = false;\n            }\n            if (this.attempts >= MAX_SOCKET_RECONNECT_ATTEMPT) {\n                throw new Error('Can\\'t connect to Testim Servers.\\n' +\n                    `Action required: Please allow opening a websockets connection to ${config.SERVICES_HOST} in your firewall/proxy`);\n            }\n        });\n\n        this._socket!.on('connect_error', (err) => {\n            socketError('connect_error', err);\n        });\n\n        this._socket!.on('connect_timeout', (err) => {\n            socketError('connect_timeout', err);\n        });\n\n        this._socket!.on('error', err => {\n            socketError('error', err);\n        });\n\n        this._socket!.on('reconnect_error', err => {\n            if (this.prevErr && this.prevErr.type === err.type) {\n                return;\n            }\n            this.prevErr = err;\n            socketError('reconnect_error', err);\n        });\n\n        this._socket!.on('reconnect', () => {\n            logger.info('reconnect to socket and re-join to rooms');\n            this.joinToMultipleResults();\n        });\n\n        this._socket!.on('connect', () => {\n            this.attempts = 0;\n            if (this.isAllowedWS === undefined) {\n                this.isAllowedWS = this._socket!.io.engine.transport && this._socket!.io.engine.transport.name === 'websocket';\n            }\n            this.onConnect?.();\n        });\n    }\n\n    initNewSocket(projectId: string, ns: string) {\n        const opts = {\n            query: { projectId },\n            requestTimeout: POLLING_TRANSPORT_TIMEOUT_MS,\n            transports: ['websocket'],\n            upgrade: false,\n            forceNew: true,\n            rejectUnauthorized: process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0',\n            ...(global.caFileContent && { ca: global.caFileContent as string }),\n            ...(global.proxyUri && { agent: new global.ProxyAgent!(global.proxyUri) as any }),\n        };\n\n        return new Promise<void>(resolve => {\n            this.url = `${config.SERVICES_HOST}/${ns}`;\n            this._socket = io.connect(this.url, opts);\n            this.addSocketHandlers();\n            this._socket.on('connect', resolve);\n            this._socket.open();\n        });\n    }\n\n    init(projectId: string, ns: string) {\n        const opts = {\n            query: { projectId },\n            requestTimeout: POLLING_TRANSPORT_TIMEOUT_MS,\n            transports: ['websocket'],\n            upgrade: false,\n            rejectUnauthorized: process.env.NODE_TLS_REJECT_UNAUTHORIZED !== '0',\n            ...(global.caFileContent && { ca: global.caFileContent as string }),\n            ...(global.proxyUri && { agent: new global.ProxyAgent!(global.proxyUri) as any }),\n        };\n\n        this.url = `${config.SERVICES_HOST}/${ns}`;\n        this._socket = io.connect(this.url, opts);\n        this.addSocketHandlers();\n    }\n\n    emitPromise(eventName: string, eventData: any) {\n        const errorneousEvents: { [eventName: string]: any } = {};\n\n        const emitAndWait = () => new Promise<void>((resolve, reject) => {\n            this._socket!.emit(eventName, eventData, (data?: { success?: boolean }) => {\n                if (data?.success) {\n                    return resolve();\n                }\n                errorneousEvents[eventName] = eventData;\n\n                return reject(new Error('bad ack'));\n            });\n        });\n\n        this.emitPromiseQueue = (this.emitPromiseQueue || Promise.resolve())\n            .then(() => pRetry(() => utils.promiseTimeout(emitAndWait(), EMIT_PROMISE_TIMEOUT), { retries: 200, minTimeout: 3000, factor: 1 }))\n            .finally(() => {\n                if (Object.keys(errorneousEvents).length > 0) {\n                    logger.error('Bad acknowledge from socket emit', { errorneousEvents });\n                }\n            });\n\n        return this.emitPromiseQueue;\n    }\n}\n", "import { BaseSocketService } from './baseSocketServiceSocketIO';\n\nclass TestResultServiceSocketIO extends BaseSocketService {\n    listerers: { [resultId: string]: (data: any) => void } = {};\n\n    init(projectId: string) {\n        super.init(projectId, 'testResult');\n        this.listerers = {};\n    }\n\n    listenToTestResult(resultId: string, testId: string, onTestResultStatus: (testResult: any) => void) {\n        if (this.listerers[resultId]) {\n            this._socket!.off('testResult:updated', this.listerers[resultId]);\n            delete this.listerers[resultId];\n        }\n\n        this.listerers[resultId] = data => {\n            if (data.resultId === resultId && data.testId === testId) {\n                onTestResultStatus(data.testResult);\n            }\n        };\n\n        this._socket!.on('testResult:updated', this.listerers[resultId]);\n    }\n\n    override emitJoinRoom(resultId: string, testId: string) {\n        return this.emitPromise('testResult:join', {\n            resultId,\n            testId,\n        });\n    }\n\n    async joinToTestResult(resultId: string, testId: string) {\n        if (this.rooms[resultId]) {\n            return;\n        }\n        this.joinRoom(resultId, testId);\n        await this.emitJoinRoom(resultId, testId);\n    }\n\n    emitLeaveRoom(resultId: string, testId: string) {\n        return this.emitPromise('testResult:leave', {\n            resultId,\n            testId,\n        });\n    }\n\n    leaveTestResult(resultId: string, testId: string) {\n        if (!this.listerers[resultId]) {\n            return Promise.resolve();\n        }\n\n        this.leaveRoom(resultId);\n        this._socket!.off('testResult:updated', this.listerers[resultId]);\n        delete this.listerers[resultId];\n        return this.emitLeaveRoom(resultId, testId);\n    }\n\n    getSocket() {\n        return this._socket;\n    }\n}\n\nexport const testResultServiceSocketIO = new TestResultServiceSocketIO();\n", "import { EventEmitter } from 'events';\nimport { socketService } from './socketService';\nimport { socketEventTypes } from '../constants';\nimport { featureFlagsService } from '../featureFlagsService';\nimport { testResultServiceSocketIO } from './testResultServiceSocketIO';\n\nclass TestResultService extends EventEmitter {\n    init(projectId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.onConnect = () => this.emit('socket-connected');\n            return;\n        }\n        testResultServiceSocketIO.init(projectId);\n        testResultServiceSocketIO.onConnect = () => this.emit('socket-connected');\n    }\n\n    joinToTestResult(resultId: string, testId: string) {\n        //TODO - Consider unifying the joinToTestResult and listenToTestResult flows\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return socketService.addFilter(`${resultId}:testResult`, { resultId, testId }, [\n                socketEventTypes.TEST_RESULT_UPDATED,\n                socketEventTypes.TEST_RESULT_CREATED,\n            ]);\n        }\n        return testResultServiceSocketIO.joinToTestResult(resultId, testId);\n    }\n\n    async leaveTestResult(resultId: string, testId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.removeFilter(`${resultId}:testResult`, [socketEventTypes.TEST_RESULT_UPDATED, socketEventTypes.TEST_RESULT_CREATED]);\n            return;\n        }\n\n        await testResultServiceSocketIO.leaveTestResult(resultId, testId);\n    }\n\n    listenToTestResult(resultId: string, testId: string, onTestResultStatus: (testResult: any) => void) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.listenTo(\n                `${resultId}:testResult`,\n                [socketEventTypes.TEST_RESULT_UPDATED, socketEventTypes.TEST_RESULT_CREATED],\n                (data: any) => data.resultId === resultId && data.testId === testId,\n                (data: any) => onTestResultStatus(data),\n            );\n            return;\n        }\n\n        testResultServiceSocketIO.listenToTestResult(resultId, testId, onTestResultStatus);\n    }\n\n    getSocket() {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return undefined;\n        }\n        return testResultServiceSocketIO.getSocket();\n    }\n}\n\nexport const testResultService = new TestResultService();\n", "import { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\n\n/** @typedef {typeof import('clickim/src/background/stepActions/stepAction').StepAction} ClickimStepActionCtor */\n/** @typedef {ConstructorParameters<ClickimStepActionCtor>} ClickimStepActionCtorParams */\n/** @typedef {InstanceType<ClickimStepActionCtor>} ClickimStepAction */\n\nexport class StepAction {\n    /** @type {(...args: ClickimStepActionCtorParams) => this} */\n    constructor(\n        step,\n        context,\n        frameHandler,\n        exportsGlobal = {},\n        stepActionUtils = undefined,\n        locateElementPlayer = undefined,\n        exportsTest = {},\n    ) {\n        this.step = step;\n        this.context = context;\n        this.frameHandler = frameHandler;\n        this.frameId = 0;\n        /** @type {import('../utils/stepActionUtils').StepActionUtils} */\n        this.stepActionUtils = stepActionUtils;\n        this.locateElementPlayer = locateElementPlayer;\n        this.exportsGlobal = exportsGlobal;\n        this.exportsTest = exportsTest;\n    }\n\n    get driver() {\n        return this.stepActionUtils.driver;\n    }\n\n    /** @protected */\n    get sessionPlayerInit() {\n        return getSessionPlayer();\n    }\n\n    async performAction() {\n        throw new Error('not implemented');\n    }\n\n    getTarget() {\n        const targetId = this.step.targetId || 'targetId';\n        return this.context.data[targetId];\n    }\n\n    /** @type {ClickimStepAction['execute']} */\n    async execute(stepActionFactory, step) {\n        try {\n            const res = await this.performAction(stepActionFactory, step);\n            return { success: true, ...res };\n        } catch (err) {\n            const errorMsg = err?.message || err?.seleniumStack?.message;\n            const displayMsg = err?.displayMessage;\n            return {\n                success: false,\n                reason: errorMsg,\n                exception: err,\n                errorType: this.sessionPlayerInit.commonConstants.stepResult.ACTION_EXCEPTION,\n                resultInfo: {\n                    exception: `selenium exception: ${errorMsg}`,\n                    // clickim -> playbackStepResultHandler.js -> FAILURE_REASON_MAPPING -> ACTION_EXCEPTION\n                    // expects resultInfo.error or resultInfo.reason\n                    error: displayMsg || errorMsg,\n                },\n            };\n        }\n    }\n}\n", "// @ts-check\nimport { JSDOM, VirtualConsole } from 'jsdom';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\n\n\nconst logger = getLogger('locate-step-action');\nconst DEFAULT_VISIBILITY_RESULT = { opacity: 1, clientRects: {} };\n\n/**\n * @param {import('../webdriver').WebDriver} driver\n*/\nfunction createUtils(driver) {\n    return {\n        getFrameIdByTestimFrameId() { },\n\n        async setElementResultDataOnContext(target) {\n            const seleniumResponse = await driver.getElement(target.locatedElement);\n            target.seleniumElement = seleniumResponse.value;\n        },\n\n        getElementRectangle(target) {\n            return driver.getElementRect(target);\n        },\n\n        getOffsets(frameHandler) {\n            return Promise.resolve([frameHandler.frameOffset || {}]);\n        },\n\n        /** @type {typeof import('clickim/src/background/stepActions/locateStepAction').LocateStepAction['htmlStringToDom']} */\n        htmlStringToDom(htmlString, url, nonBodyElements, bodyTagName, setDomTimeout = true) {\n            const virtualConsole = new VirtualConsole();\n            const jsdom = new JSDOM(htmlString, {\n                virtualConsole,\n            });\n\n            const { window } = jsdom;\n            if (setDomTimeout) {\n                // memory leak fix.\n                // this used to be nexttick, but it was too soon.\n\n                setTimeout(() => {\n                    window.close();\n                }, 1000 * 60);\n            }\n            return Object.assign(window.document, { TESTIM_URL: url });\n        },\n\n        shouldUseNativeVisibilityCheck(locateStep, driver, visibilityUtils, positionUtils) {\n            if (locateStep.opacity === 0) {\n                return false;\n            }\n            if (locateStep.isShadowed) {\n                return false;\n            }\n            if ((visibilityUtils === undefined) || (positionUtils === undefined)) {\n                return true;\n            }\n            if (featureFlagsService.flags.useClickimVisibilityChecks.isEnabled()) {\n                return false;\n            }\n            if (driver.isSafari()) {\n                return featureFlagsService.flags.useSafariWebdriverVisibilityChecks.isEnabled();\n            }\n            return true;\n        },\n\n        /** @type {typeof import('clickim/src/background/stepActions/locateStepAction').LocateStepAction['isVisible']} */\n        async isVisible(target, targetElement, rect, locateStep, frameHandler, allOffsets, dom) {\n            const { locatorBuilderUtils, codeSnippets, visibilityUtils, positionUtils } = getSessionPlayer();\n            const useNativeVisibilityCheck = this.shouldUseNativeVisibilityCheck(locateStep, driver, visibilityUtils, positionUtils);\n            if (useNativeVisibilityCheck) {\n                return driver.isVisible(target.seleniumElement);\n            }\n\n            if (!target.seleniumElement) {\n                return { visible: false, invisibleReason: 'element not found' };\n            }\n\n            // this is here for the side effects.\n            try {\n                await driver.isVisible(target.seleniumElement);\n            } catch {\n                /* ignored */\n            }\n            if (!targetElement || locatorBuilderUtils.isEmptyResult(targetElement)) {\n                return { visible: false, invisibleReason: 'element not found' };\n            }\n            const middlePosition = positionUtils.calculateElementMiddlePoint(rect);\n            const points = [middlePosition, positionUtils.calculateClickPoint(locateStep.clickOffset, rect)].filter(Boolean);\n            const code = codeSnippets.getVisibilityCode.getCompoundVisibilityInfoCode(target.locatedElement, points, false, locateStep);\n            let response;\n            try {\n                response = await driver.execute(`return ${code}`);\n            } catch (err) {\n                logger.error('failed to execute getVisibilityCode', { err });\n                throw err;\n            }\n            const { value } = response || {};\n            const elementVisibilityInfo = value.elementVisibilityInfo || DEFAULT_VISIBILITY_RESULT;\n            const [middleElementFromPoint, clickElementFromPoint] = value.elementsFromPointResults || [null, null];\n            return visibilityUtils.checkElementVisibility(elementVisibilityInfo, locateStep, clickElementFromPoint, middleElementFromPoint, dom, targetElement);\n        },\n\n        scrollToElement(frameHandler, locatedElement) {\n            const { codeSnippets } = getSessionPlayer();\n            const code = codeSnippets.scrollToElement;\n            return driver.execute(code(locatedElement));\n        },\n    };\n}\n\nexport class LocateStepAction extends StepAction {\n    execute() {\n        return this.driver.getHTML(this.step);\n    }\n\n    static getUtils(driver) {\n        return Object.assign(createUtils(driver), { useLocatedElement: true });\n    }\n\n    static getFrameIdByTestimFrameId(...args) {\n        logger.warn('Unplanned access to getFrameIdByTestimFrameId()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static setElementResultDataOnContext(...args) {\n        logger.warn('Unplanned access to setElementResultDataOnContext()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static getElementRectangle(...args) {\n        logger.warn('Unplanned access to getElementRectangle()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static getOffsets(...args) {\n        logger.warn('Unplanned access to getOffsets()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static htmlStringToDom(...args) {\n        logger.warn('Unplanned access to htmlStringToDom()');\n        throw new Error('Use .getUtils() instead');\n    }\n\n    static isVisible(...args) {\n        logger.warn('Unplanned access to isVisible()');\n        throw new Error('Use .getUtils() instead');\n    }\n}\n", "/* globals getLocatedElement, elementScrollTo */\nexport const scroll = function (elementToScrollOn, elementToScrollTo, isScrollToElement, isDynamicScroll, expectedX, expectedY, shouldScrollLeft, shouldScrollTop) {\n    function doScroll(expectedPosition, element) {\n        if (!element) {\n            return { success: false };\n        }\n\n        elementScrollTo(element, expectedPosition.x, expectedPosition.y);\n\n        const actualX = element.scrollLeft;\n        const actualY = element.scrollTop;\n\n        const success = (Math.abs(actualY - expectedPosition.y) < 1) && (Math.abs(actualX - expectedPosition.x) < 1);\n        return { success, actualX, actualY };\n    }\n\n    function getExpectedPosition(parentElement, locatedElement, isScrollToElement, expectedX, expectedY, shouldScrollLeft, shouldScrollTop) {\n        if (!isScrollToElement) {\n            return { x: expectedX, y: expectedY };\n        }\n\n        const target = getLocatedElement(locatedElement);\n\n        if (isDynamicScroll && !target) {\n            return { x: parentElement.scrollWidth, y: parentElement.scrollHeight };\n        }\n\n        if (!target) {\n            throw new Error('could not find target element');\n        }\n\n        const targetRect = target.getBoundingClientRect();\n\n\n        let yScroll = 0;\n        let xScroll = 0;\n        const MAX_HEIGHT = Math.max(window.innerHeight - (targetRect.height + 10), 0);\n        const MAX_WIDTH = Math.max(window.innerWidth - (targetRect.width + 10), 0);\n\n        yScroll = shouldScrollTop ?\n            parentElement.scrollTop + targetRect.top - Math.min(expectedY, MAX_HEIGHT) :\n            parentElement.scrollTop;\n\n        xScroll = shouldScrollLeft ?\n            parentElement.scrollLeft + targetRect.left - Math.min(expectedX, MAX_WIDTH) :\n            parentElement.scrollLeft;\n\n        return { x: Math.round(xScroll), y: Math.round(yScroll) };\n    }\n\n    const isDocument = !elementToScrollOn;\n    elementToScrollOn = !isDocument ? getLocatedElement(elementToScrollOn) : (document.scrollingElement || document.documentElement);\n\n    if (!elementToScrollOn) {\n        throw new Error('could not find target to scroll on');\n    }\n    const positionBeforeScroll = { top: elementToScrollOn.scrollTop, left: elementToScrollOn.scrollLeft };\n    let expectedPosition = getExpectedPosition(elementToScrollOn, elementToScrollTo, isScrollToElement, expectedX, expectedY, shouldScrollLeft, shouldScrollTop);\n\n    let result = doScroll(expectedPosition, elementToScrollOn);\n\n    if (isDocument && (!document.scrollingElement) && (!result.success) && (positionBeforeScroll.top === elementToScrollOn.scrollTop) && (positionBeforeScroll.left === elementToScrollOn.scrollLeft)) {\n        elementToScrollOn = document.body;\n        expectedPosition = getExpectedPosition(elementToScrollOn, elementToScrollTo, isScrollToElement, expectedX, expectedY, shouldScrollLeft, shouldScrollTop);\n        result = doScroll(expectedPosition, elementToScrollOn);\n    }\n\n    let actualXString = result.actualX;\n    let actualYString = result.actualY;\n    const actualScrollToElement = getLocatedElement(elementToScrollTo);\n\n    if (isScrollToElement && isDynamicScroll && !actualScrollToElement) {\n        return { success: false, expectedPosition };\n    }\n\n    if (isScrollToElement) {\n        if (!actualScrollToElement) {\n            throw new Error('could not find target to scroll to');\n        }\n        const rect = actualScrollToElement.getBoundingClientRect();\n        actualXString = rect.left;\n        actualYString = rect.top;\n    }\n    return { success: result.success, actualX: actualXString, actualY: actualYString };\n};\n", "import { scroll } from './scripts/scroll';\nimport { StepAction } from './stepAction';\n\nexport class ScrollStepAction extends StepAction {\n    getFailureString(step, expectedX, expectedY, actualX, actualY) {\n        if (!step.isScrollToElement) {\n            return `Scrolling limit reached. Expected:(y: ${expectedY}, x: ${expectedX}); Actual:(y:${actualY}, x: ${actualX})`;\n        }\n        let failureMessage = 'Scrolling limit reached';\n        if (step.shouldScrollTop) {\n            failureMessage += `. Expected top margin: ${expectedY}, actual: ${actualY}`;\n        }\n        if (step.shouldScrollLeft) {\n            failureMessage += `. Expected left margin: ${expectedX}, actual: ${actualX}`;\n        }\n        return failureMessage;\n    }\n\n    async scroll(elementToScrollTo, step, elementToScrollOn) {\n        const { codeSnippets, commonConstants: { stepResult } } = this.sessionPlayerInit;\n        const expectedY = Math.round(Number(step.isScrollToElement ? step.marginTop : step.y));\n        const expectedX = Math.round(Number(step.isScrollToElement ? step.marginLeft : step.x));\n\n        // in Firefox setting scrollTop and scrollLeft propeties simultaneously takes only the lates,\n        const elementScrollTo = this.driver.isFirefox() ? function (element, x, y) {\n            element.scrollTo(x, y);\n        } : function (element, x, y) {\n            element.scrollTop = y;\n            element.scrollLeft = x;\n        };\n        const scrollCode = `\n            var getLocatedElement = ${codeSnippets.getLocatedElementCode};\n            var elementScrollTo = ${elementScrollTo.toString()};\n            var scroll = ${scroll.toString()};\n            return scroll.apply(null, arguments)\n        `;\n\n        try {\n            const res = await this.driver.executeJSWithArray(scrollCode, [\n                elementToScrollOn,\n                elementToScrollTo,\n                Boolean(step.isScrollToElement),\n                Boolean(step.isDynamicScroll),\n                expectedX,\n                expectedY,\n                step.shouldScrollLeft,\n                step.shouldScrollTop,\n            ]);\n            if (!res?.value) {\n                return {\n                    errorType: stepResult.SCROLL_ACTION_FAILURE,\n                    success: false,\n                };\n            }\n\n            const { success, actualX, actualY } = res.value;\n\n            if (success) {\n                return { success: true };\n            }\n\n            return {\n                errorType: stepResult.SCROLL_ACTION_FAILURE,\n                success: false,\n                resultInfo: { error: this.getFailureString(step, expectedX, expectedY, actualX, actualY) },\n            };\n        } catch (error) {\n            return {\n                errorType: stepResult.SCROLL_ACTION_FAILURE,\n                success: false,\n            };\n        }\n    }\n\n    scrollOnDocument(step, elementToScrollTo) {\n        return this.scroll(elementToScrollTo, step);\n    }\n\n    scrollOnElement(step, elementToScrollTo) {\n        return this.scroll(elementToScrollTo, step, this.getTarget().locatedElement);\n    }\n\n    execute() {\n        const context = this.context;\n        const step = this.step;\n        const elementToScrollTo = step.isScrollToElement ? context.data.scrollToElement.locatedElement : null;\n\n        return step.element.isDocument ?\n            this.scrollOnDocument(step, elementToScrollTo) :\n            this.scrollOnElement(step, elementToScrollTo);\n    }\n}\n", "/* global getLocatedElement */\nexport const html5dndAction = function (eventData) {\n    const data = {};\n    function convertType(type) {\n        if (!type?.toLowerCase) {\n            return type;\n        }\n        type = type.toLowerCase();\n        if (type === 'text') {\n            return 'text/plain';\n        }\n        if (type === 'url') {\n            return 'text/uri-list';\n        }\n        return type;\n    }\n    const dataTransfer = {\n        data: {\n        },\n        setData(type, val) {\n            data[convertType(type)] = val;\n        },\n        getData(type) {\n            return data[convertType(type)];\n        },\n    };\n    const fromElement = getLocatedElement(eventData.fromLocatedElement);\n    const toElement = getLocatedElement(eventData.toLocatedElement);\n\n    if (!fromElement) {\n        throw new Error('from element not found');\n    }\n\n    if (!toElement) {\n        throw new Error('to element not found');\n    }\n\n    const dispatchEvent = function (element, type) {\n        const event = document.createEvent('CustomEvent');\n        event.initCustomEvent(type, true, true, null);\n        event.dataTransfer = dataTransfer;\n        if (element.dispatchEvent) {\n            element.dispatchEvent(event);\n        } else if (element.fireEvent) {\n            element.fireEvent(`on${type}`, event);\n        }\n    };\n    dispatchEvent(fromElement, 'dragstart');\n    dispatchEvent(toElement, 'drop');\n    dispatchEvent(fromElement, 'dragend');\n};\n", "/* globals getLocatedElement, dispatchFocus */\nexport const doClick = (eventData, done) => {\n    const eventConstructorSupported = typeof Event === 'function';\n\n    window.__unloadNavigator = resolve;\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    function handleReactSelectFocusQuirk(context, event) {\n        function focusReactSelect(element) {\n            function getReactSelectRoot(_element) {\n                // eslint-disable-next-line prefer-spread\n                return getParents(_element).find((el) => Array.apply(null, el.classList || []).includes('Select-control'));\n            }\n\n            function getReactSelectInput(_element) {\n                const root = getReactSelectRoot(_element);\n                return root ? root.querySelector('INPUT') : null;\n            }\n\n            const reactSelectInput = getReactSelectInput(element);\n            if (reactSelectInput) {\n                reactSelectInput.focus();\n            }\n        }\n\n        const isReactSelectElement = context.quirks?.isReactSelect;\n        if (event.type === 'mousedown' && isReactSelectElement) {\n            focusReactSelect(context.element);\n        }\n    }\n\n    function handleCKEditorQuirk(context, event) {\n        const isCKEditorFrame = context.quirks?.isCKEditorFrame;\n        if (event.type === 'click' && isCKEditorFrame) {\n            document.body.focus();\n        }\n    }\n\n    function getParents(el) {\n        return el ? [el].concat(getParents(el.parentNode)) : [];\n    }\n\n    function resolve(result) {\n        const status = {\n            status: 'done',\n            result,\n            success: true,\n        };\n        if (context.isNonTextableElemnet) {\n            status.reason = 'Set text on non input element';\n        }\n\n        done(status);\n    }\n\n    function reject(result) {\n        result = result || {};\n        const status = {\n            status: 'failed',\n            result,\n            success: false,\n        };\n\n        done(status);\n    }\n\n    function dispatchMouseOver(element) {\n        const event = eventConstructorSupported ? new Event('mouseover', { composed: true }) : document.createEvent('Events');\n        event.initEvent('mouseover', true, true);\n        element.dispatchEvent(event);\n    }\n\n    function dispatchMouseMove(element) {\n        const modifiers = {};\n        const rect = element.getBoundingClientRect();\n        const clientX = rect.left + (rect.width / 2);\n        const clientY = rect.top + (rect.height / 2);\n        const button = 0;\n        const eventType = 'mousemove';\n        const event = createMouseEvent(eventType, modifiers, clientX, clientY, button);\n        element.dispatchEvent(event);\n    }\n\n    function getEventPosition(userEvent, element) {\n        function isWithinBounds(start, end, point) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {};\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getEventDictionary(modifiers, clientX, clientY) {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: Boolean(modifiers.ctrl),\n            altKey: Boolean(modifiers.alt),\n            shiftKey: Boolean(modifiers.shift),\n            metaKey: Boolean(modifiers.meta),\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        };\n    }\n\n    function createPointerEvent(eventType, modifiers, clientX, clientY) {\n        if (!window.PointerEvent) {\n            return undefined;\n        }\n        const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n        eventProperties.pointerType = 'mouse';\n        eventProperties.isPrimary = true;\n        return new window.PointerEvent(eventType, eventProperties);\n    }\n\n    function createMouseEvent(eventType, modifiers, clientX, clientY, button) {\n        const event = eventConstructorSupported ? new MouseEvent('click', { composed: true }) : document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true,\n            true,\n            document.defaultView,\n            1,\n            0,\n            0,\n            clientX,\n            clientY,\n            Boolean(modifiers.ctrl),\n            Boolean(modifiers.alt),\n            Boolean(modifiers.shift),\n            Boolean(modifiers.meta),\n            button,\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    }\n\n    function getMouseEvent(userEvent, context) {\n        const pointerEvents = ['pointerup', 'pointerdown', 'pointermove'];\n        const modifiers = context.modifiers || {};\n        const pos = getEventPosition(userEvent, context.element);\n        const button = context.button || 0;\n        const eventType = userEvent.event;\n        if (pointerEvents.includes(eventType)) {\n            return createPointerEvent(eventType, modifiers, pos.x, pos.y);\n        }\n        return createMouseEvent(eventType, modifiers, pos.x, pos.y, button);\n    }\n\n    function findEffectiveActiveElement() {\n        let activeElement = document.activeElement;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    }\n\n    function executeSynchronousEventSequence(context) {\n        context.events\n            .map((userEvent) => {\n                try {\n                    return getMouseEvent(userEvent, context);\n                } catch (e) {\n                    // pointer events not supported :shrug:\n                    return undefined;\n                }\n            })\n            .filter(Boolean)\n            .forEach((event) => {\n                context.element.dispatchEvent(event);\n                handleReactSelectFocusQuirk(context, event);\n                handleCKEditorQuirk(context, event);\n            });\n\n        if (window.__unloadNavigator) {\n            window.removeEventListener('unload', window.__unloadNavigator);\n        }\n    }\n\n    const element = eventData.isRoot ? document.documentElement : getLocatedElement(eventData.locatedElement);\n    // eslint-disable-next-line no-var\n    var context = {\n        element,\n        events: eventData.events,\n        quirks: eventData.quirks,\n        modifiers: eventData.modifiers,\n        button: eventData.button,\n    };\n\n    if (!context.element) {\n        reject('element not found');\n        return;\n    }\n\n    dispatchMouseOver(context.element);\n    dispatchMouseMove(context.element);\n    try {\n        executeSynchronousEventSequence(context);\n        const oldActiveElement = findEffectiveActiveElement();\n        const quirks = context.quirks;\n        const isReactSelectElement = quirks?.isReactSelect;\n        const isCKEditorFrame = quirks?.isCKEditorFrame;\n        if (!isReactSelectElement && !isCKEditorFrame) {\n            dispatchFocus(eventData.elementToFocusLocatedElement, oldActiveElement);\n        }\n        resolve();\n    } catch (e) {\n        reject(e.toString());\n    }\n};\n", "export const doDragPath = function (eventData, done) {\n    const eventConstructorSupported = typeof Event === 'function';\n    const pointerEventConstructorSupported = typeof PointerEvent === 'function';\n    const MAX_EVENT_TIMEOUT = 40; //max msec between events\n\n    window.__unloadNavigator = resolve;\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    function resolve(result) {\n        const status = {\n            status: 'done',\n            result,\n            success: true,\n        };\n        done(status);\n    }\n\n    function reject(result) {\n        result = result || {};\n        const status = {\n            status: 'failed',\n            result,\n            success: false,\n        };\n\n        done(status);\n    }\n\n    function dispatchMouseOver(element) {\n        const event = eventConstructorSupported ? new Event('mouseover', { composed: true }) : document.createEvent('Events');\n        event.initEvent('mouseover', true, true);\n\n        element.dispatchEvent(event);\n    }\n\n    function dispatchMouseMove(element) {\n        const modifiers = {};\n        const rect = element.getBoundingClientRect();\n        const clientX = rect.left + (rect.width / 2);\n        const clientY = rect.top + (rect.height / 2);\n        const button = 0;\n        const eventType = 'mousemove';\n        const event = createMouseEvent(eventType, modifiers, clientX, clientY, button);\n\n        element.dispatchEvent(event);\n    }\n\n    function getEventPosition(userEvent, element) {\n        function isWithinBounds(start, end, point) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {};\n        if (context.isDrag) {\n            return { x: pointerPosition.originX || 0, y: pointerPosition.originY || 0 };\n        }\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getEventDictionary(modifiers, clientX, clientY) {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: Boolean(modifiers.ctrl),\n            altKey: Boolean(modifiers.alt),\n            shiftKey: Boolean(modifiers.shift),\n            metaKey: Boolean(modifiers.meta),\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        };\n    }\n\n    function createPointerEvent(eventType, modifiers, clientX, clientY, button) {\n        if (pointerEventConstructorSupported) {\n            const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n            eventProperties.pointerType = 'mouse';\n            eventProperties.isPrimary = true;\n            return new window.PointerEvent(eventType, eventProperties);\n        }\n        const event = document.createEvent('PointerEvent');\n        event.initPointerEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement,\n            0, /* offsetYArg */\n            0, /* offsetXArg */\n            0, /* widthArg */\n            0, /* heightArg */\n            0, /* pressure */\n            0, /* rotation */\n            0, /* tiltX */\n            0, /* tiltY */\n            0, /* pointerIdArg */\n            'mouse', /* pointerType */\n            0, /* hwTimestampArg */\n            true, /* isPrimary */\n        );\n\n        return event;\n    }\n\n    function createMouseEvent(eventType, modifiers, clientX, clientY, button) {\n        const event = eventConstructorSupported ? new MouseEvent('click', { composed: true }) : document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    }\n\n    function getMouseEvent(userEvent, context) {\n        const pointerEvents = ['pointerup', 'pointerdown', 'pointermove'];\n        const modifiers = context.modifiers || {};\n        const pos = getEventPosition(userEvent, context.element);\n        const button = context.button || 0;\n        const eventType = userEvent.event;\n        if (pointerEvents.includes(eventType)) {\n            return createPointerEvent(eventType, modifiers, pos.x, pos.y, button);\n        }\n        return createMouseEvent(eventType, modifiers, pos.x, pos.y, button);\n    }\n\n    function shouldSkipEvent(currentEvent, context) {\n        function isClickInDragAndDrop() {\n            return currentEvent.event === 'click' &&\n                context.isDrag &&\n                !context.allEventsOnSameElement;\n        }\n        return isClickInDragAndDrop();\n    }\n\n    function executeAsyncNextEventRecursive(index, context, done) {\n        try {\n            const event = getMouseEvent(context.events[index], context);\n            if (!shouldSkipEvent(event, context)) {\n                context.element.dispatchEvent(event);\n            }\n        } catch (ignore) { /* ignored */ }\n\n        if (index + 1 === context.events.length) {\n            done();\n        } else {\n            const delay = Math.min(context.events[index + 1].timeStamp - context.events[index].timeStamp, MAX_EVENT_TIMEOUT);\n            setTimeout(() => {\n                executeAsyncNextEventRecursive(index + 1, context, done);\n            }, delay);\n        }\n    }\n\n    function executeAsyncEventSequence(context, done) {\n        executeAsyncNextEventRecursive(0, context, () => {\n            if (window.__unloadNavigator) {\n                window.removeEventListener('unload', window.__unloadNavigator);\n            }\n            done();\n        });\n    }\n\n    // eslint-disable-next-line no-undef\n    const element = eventData.isRoot ? document.documentElement : getLocatedElement(eventData.locatedElement);\n\n    const context = {\n        eventIndex: 0,\n        element,\n        events: eventData.events,\n        eventType: eventData.eventType,\n        eventData: eventData.eventData,\n        stepId: eventData.id,\n        testResultId: eventData.testResultId,\n        quirks: eventData.quirks,\n        isDoubleClick: eventData.isDoubleClick,\n        isDrag: eventData.isDrag,\n        useRecordedMousedown: eventData.useRecordedMousedown,\n        trackActiveElement: eventData.trackActiveElement,\n        allEventsOnSameElement: eventData.allEventsOnSameElement,\n    };\n\n    if (!context.element) {\n        reject('element not found');\n        return;\n    }\n\n    dispatchMouseOver(context.element);\n    dispatchMouseMove(context.element);\n\n    executeAsyncEventSequence(context, () => {\n        resolve();\n    });\n};\n", "/* global getLocatedElement */\nexport const html5dndAction = function (eventData, done) {\n    const mouseEventConstructorSupported = typeof MouseEvent === 'function';\n    const dragEventConstructorSupported = typeof DragEvent === 'function';\n    const pointerEventConstructorSupported = typeof PointerEvent === 'function';\n    const data = {};\n\n    window.__unloadNavigator = resolve;\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    function resolve(result) {\n        const status = {\n            status: 'done',\n            result,\n            success: true,\n        };\n        done(status);\n    }\n\n    function reject(result) {\n        result = result || {};\n        const status = {\n            status: 'failed',\n            result,\n            success: false,\n            keep: true,\n        };\n\n        done(status);\n    }\n\n    function convertType(type) {\n        if (!type?.toLowerCase) {\n            return type;\n        }\n        type = type.toLowerCase();\n        if (type === 'text') {\n            return 'text/plain';\n        }\n        if (type === 'url') {\n            return 'text/uri-list';\n        }\n        return type;\n    }\n\n    function createDataTransfer() {\n        try {\n            return new DataTransfer();\n        } catch (err) {\n            return {\n                data: {},\n                setData(type, val) {\n                    data[convertType(type)] = val;\n                },\n                getData(type) {\n                    return data[convertType(type)];\n                },\n            };\n        }\n    }\n\n    const dragFromElementEvents = ['drag', 'dragstart', 'dragend'];\n    const pointerEvents = ['pointerup', 'pointerdown', 'pointermove'];\n    const dragEvents = dragFromElementEvents.concat(['drop', 'dragenter', 'dragover']);\n\n    function findClosestDraggable(element) {\n        // drag events are always fired on the closest element with draggable=true\n        // rather than on the target mouse element - so when dispatching a drag\n        // event we need to fire the correct target\n        let current = element;\n        while (current && current !== document.documentElement) {\n            if (current.draggable) {\n                return current;\n            }\n            current = current.parentElement;\n        }\n        return null;\n    }\n\n    function getElement(event, context, currentEvent) {\n        const element = context.element;\n        const dispatchDragEventsOnClosestDraggable = currentEvent.dispatchDragEventsOnClosestDraggable;\n        if (dragFromElementEvents.includes(event.type) && dispatchDragEventsOnClosestDraggable) {\n            if (!element && context.lastDraggedElement) {\n                // fallback for elements being removed from DOM, but parent draggable still being there\n                return context.lastDraggedElement;\n            }\n\n            const draggable = findClosestDraggable(element);\n            if (draggable) {\n                context.lastDraggedElement = draggable;\n                return draggable;\n            }\n        }\n        return element;\n    }\n\n    function getEventPosition(userEvent, isDrag, element) {\n        function isWithinBounds(start, end, point) {\n            return (point > start) && (point < end);\n        }\n\n        const pointerPosition = userEvent.pointerPosition || {};\n        // Technically should always be true here.\n        if (isDrag) {\n            return { x: pointerPosition.originX || 0, y: pointerPosition.originY || 0 };\n        }\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getMouseEvent(userEvent, eventData, context) {\n        const modifiers = eventData?.modifiers || {};\n        const pos = getEventPosition(userEvent, context.isDrag, context.element);\n        const button = eventData?.button || 0;\n        const eventType = userEvent.event;\n        if (pointerEvents.includes(eventType)) {\n            return createPointerEvent(eventType, modifiers, pos.x, pos.y, button);\n        }\n        if (dragEvents.includes(eventType)) {\n            return createDragEvent(eventType, modifiers, pos.x, pos.y, button);\n        }\n        return createMouseEvent(eventType, modifiers, pos.x, pos.y, button);\n    }\n\n    function getEventDictionary(modifiers, clientX, clientY) {\n        return {\n            screenX: 0,\n            screenY: 0,\n            clientX,\n            clientY,\n            ctrlKey: Boolean(modifiers.ctrl),\n            altKey: Boolean(modifiers.alt),\n            shiftKey: Boolean(modifiers.shift),\n            metaKey: Boolean(modifiers.meta),\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n        };\n    }\n\n    function createPointerEvent(eventType, modifiers, clientX, clientY, button) {\n        if (pointerEventConstructorSupported) {\n            const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n            eventProperties.pointerType = 'mouse';\n            eventProperties.isPrimary = true;\n            return new window.PointerEvent(eventType, eventProperties);\n        }\n        const event = document.createEvent('PointerEvent');\n        event.initPointerEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement,\n            0, /* offsetYArg */\n            0, /* offsetXArg */\n            0, /* widthArg */\n            0, /* heightArg */\n            0, /* pressure */\n            0, /* rotation */\n            0, /* tiltX */\n            0, /* tiltY */\n            0, /* pointerIdArg */\n            'mouse', /* pointerType */\n            0, /* hwTimestampArg */\n            true, /* isPrimary */\n        );\n        return event;\n    }\n\n    function createMouseEvent(eventType, modifiers, clientX, clientY, button) {\n        const event = mouseEventConstructorSupported ? new MouseEvent('click', { composed: true }) : document.createEvent('MouseEvents');\n        event.initMouseEvent(\n            eventType,\n            true, /* bubbles */\n            true, /* cancelable */\n            document.defaultView, /* view */\n            1, /* detail */\n            0, /* screenX */\n            0, /* screenY */\n            clientX, /* clientX */\n            clientY, /* clientY */\n            Boolean(modifiers.ctrl), /* ctrl */\n            Boolean(modifiers.alt), /* alt */\n            Boolean(modifiers.shift), /* shift */\n            Boolean(modifiers.meta), /* meta */\n            button, /* button */\n            document.body ? document.body.parentNode : document.documentElement);\n        return event;\n    }\n\n    function createDragEvent(eventType, modifiers, clientX, clientY) {\n        if (eventType === 'dragstart') {\n            if (!window.TSTA) {\n                window.TSTA = {};\n            }\n            window.TSTA.dataTransfer = createDataTransfer();\n        }\n\n        if (!dragEventConstructorSupported) {\n            const event = document.createEvent('CustomEvent');\n            event.initCustomEvent(eventType, true, true, null);\n            event.dataTransfer = window.TSTA.dataTransfer;\n            return event;\n        }\n\n        const eventProperties = getEventDictionary(modifiers, clientX, clientY);\n        const event = new window.DragEvent(eventType, eventProperties);\n        Object.defineProperties(event, {\n            dataTransfer: { get() { return window.TSTA.dataTransfer; } },\n        });\n        return event;\n    }\n\n    function executeAsyncEvent(event, context, currentEvent) {\n        const element = getElement(event, context, currentEvent);\n        if (element) {\n            element.dispatchEvent(event);\n        }\n    }\n\n    function shouldSkipEvent(currentEvent, context) {\n        function isClickInDragAndDrop() {\n            return currentEvent.event === 'click' &&\n                context.isDrag &&\n                !context.allEventsOnSameElement;\n        }\n        return isClickInDragAndDrop();\n    }\n\n    function nextAsyncEvent(context, currentEvent, nextEvent) {\n        if (nextEvent) {\n            const delay = Math.min(nextEvent.timeStamp - currentEvent.timeStamp, 40);\n            setTimeout(() => {\n                executeAsyncNext(context);\n            }, delay);\n        } else {\n            if (window.__unloadNavigator) {\n                window.removeEventListener('unload', window.__unloadNavigator);\n            }\n            resolve();\n        }\n    }\n\n    function executeAsyncNext(context) {\n        let event;\n        const currentEvent = context.events[context.eventIndex];\n        // eslint-disable-next-line no-param-reassign\n        const nextEvent = context.events[++context.eventIndex];\n        try {\n            context.element = getLocatedElement(currentEvent.locatedElement);\n            event = getMouseEvent(currentEvent, eventData, context);\n        } catch (err) {\n            return reject(`exception in get event in drag step:${err.message}`);\n        }\n\n        if (shouldSkipEvent(currentEvent, context)) {\n            return nextAsyncEvent(context, currentEvent, nextEvent);\n        }\n\n        if (event) {\n            try {\n                executeAsyncEvent(event, context, currentEvent);\n            } catch (err) {\n                return reject(`exception in executeEvent in drag step:${err.message}`);\n            }\n        } else {\n            return reject(`cannot execute event ${currentEvent.event}`);\n        }\n        nextAsyncEvent(context, currentEvent, nextEvent);\n        return undefined;\n    }\n\n    const context = {\n        eventIndex: 0,\n        allEventsOnSameElement: eventData.allEventsOnSameElement,\n        events: eventData.events,\n        eventType: eventData.eventType,\n        eventData: eventData.eventData,\n        stepId: eventData.id,\n        testResultId: eventData.testResultId,\n        isDrag: eventData.isDrag,\n        useRecordedMousedown: eventData.useRecordedMousedown,\n        trackActiveElement: eventData.trackActiveElement,\n    };\n\n    setTimeout(() => {\n        try {\n            executeAsyncNext(context);\n        } catch (err) {\n            reject(err);\n        }\n    }, 0);\n};\n", "// @ts-check\nimport * as _ from 'lodash';\nimport { StepAction } from './stepAction';\nimport { dispatchFocus } from './scripts/focusElement';\nimport { html5dndAction } from './scripts/html5dragAction';\nimport { doClick as doClickScript } from './scripts/doClick';\nimport { doDragPath as doDragPathScript } from './scripts/doDragPath';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\nimport { html5dndAction as html5dndActionV2 } from './scripts/html5dragActionV2';\n\nexport class MouseStepAction extends StepAction {\n    getDnDRectsAndOffsets(target, destTarget, clickOffset, toClickOffset) {\n        const fromOffsets = this.stepActionUtils.getClickOffset(clickOffset, target.rectWithoutFrameOffset);\n        const toOffsets = this.stepActionUtils.getClickOffset(toClickOffset, destTarget.rectWithoutFrameOffset);\n        return {\n            fromRect: target.rectWithoutFrameOffset,\n            fromX: fromOffsets.xOffset,\n            fromY: fromOffsets.yOffset,\n            toRect: destTarget.rectWithoutFrameOffset,\n            toX: toOffsets.xOffset,\n            toY: toOffsets.yOffset,\n        };\n    }\n\n    async clickJs() {\n        const step = this.step;\n        const context = this.context;\n        const target = context.data[step.targetId || 'targetId'];\n        const timeout = context.data.timeToPlayStep + 3000;\n        const events = step.events;\n\n        if (!events?.length) {\n            return undefined;\n        }\n\n        const eventMessage = {\n            isRoot: target.isRoot,\n            locatedElement: target.locatedElement,\n            events,\n            quirks: step.quirks,\n            modifiers: step.modifiers,\n            button: step.button,\n        };\n\n        const doClickCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus.toString()};\n            var doClick = ${doClickScript.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return doClick.call(null, eventData, done);\n        `;\n\n\n        try {\n            const result = await this.driver.executeCodeAsync(doClickCode, timeout, eventMessage);\n            if (result.value?.success) {\n                return { success: true };\n            }\n            return { success: false };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n\n    isWithinBounds(start, end, point) {\n        return (point > start) && (point < end);\n    }\n\n    getEventSequenceOffset() {\n        const initialPosition = this.step.events[0]?.pointerPosition;\n        if (!initialPosition) {\n            return { xOffset: 0, yOffset: 0 };\n        }\n\n        const target = this.context.data[this.step.targetId || 'targetId'];\n        const targetElementRect = target.rectWithoutFrameOffset;\n        const isXWithinBounds = this.isWithinBounds(targetElementRect.left, targetElementRect.left + targetElementRect.width, initialPosition.originX);\n        const isYWithinBounds = this.isWithinBounds(targetElementRect.top, targetElementRect.top + targetElementRect.height, initialPosition.originY);\n        const xOffset = isXWithinBounds ? 0 : targetElementRect.left + targetElementRect.width / 2 - initialPosition.originX;\n        const yOffset = isYWithinBounds ? 0 : targetElementRect.top + targetElementRect.height / 2 - initialPosition.originY;\n        return { xOffset, yOffset };\n    }\n\n    addOffsetToEvents(offsetFromElement) {\n        this.step.events.forEach(event => {\n            if (event?.pointerPosition) {\n                event.pointerPosition.originX += offsetFromElement.xOffset;\n                event.pointerPosition.originY += offsetFromElement.yOffset;\n            }\n        });\n    }\n\n    generateEventOfType(baseEvent, type) {\n        const cloneEvent = _.cloneDeep(baseEvent);\n        cloneEvent.event = type;\n        return cloneEvent;\n    }\n\n    fixAbsoluteDragEventSequence() {\n        const downEvent = this.step.events.find(event => ['mousedown', 'pointerdown'].includes(event.event));\n        if (downEvent) {\n            const mousedownEventIndex = this.step.events.indexOf(downEvent);\n            this.step.events.splice(mousedownEventIndex, 0, this.generateEventOfType(downEvent, 'mouseover'));\n        }\n\n        const { recordPointerMoveEvents = false } = this.context.project.defaults || {};\n        const mouseUpEvent = this.step.events.find(event => event.event === 'mouseup') || (recordPointerMoveEvents && this.step.events.find(event => event.event === 'pointerup'));\n        const lastMouseMoveEventIndex =\n            _.findLastIndex(this.step.events, event => event.event === 'mousemove') ||\n            (recordPointerMoveEvents && _.findLastIndex(this.step.events, event => event.event === 'pointermove'));\n        if (mouseUpEvent && lastMouseMoveEventIndex > 0 && !this.step.allEventsOnSameElement) {\n            this.step.events.splice(lastMouseMoveEventIndex + 1, 0, this.generateEventOfType(mouseUpEvent, 'mouseover'));\n        }\n\n        if (this.step.isHTML5Drag && !this.step.toElement) {\n            this.step.events = this.addDragendIfNeeded(this.step.events);\n        }\n\n        this.addOffsetToEvents(this.getEventSequenceOffset());\n    }\n\n    async dragPathJs() {\n        const step = this.step;\n        const context = this.context;\n        const target = context.data[step.targetId || 'targetId'];\n        const timeout = context.data.timeToPlayStep + 3000;\n\n        if (!this.step.events?.length) {\n            return undefined;\n        }\n\n        this.fixAbsoluteDragEventSequence();\n\n        const events = step.events;\n\n        const eventMessage = {\n            isRoot: target.isRoot,\n            locatedElement: target.locatedElement,\n            events,\n            quirks: step.quirks,\n            modifiers: step.modifiers,\n            button: step.button,\n            isDrag: true,\n            allEventsOnSameElement: step.allEventsOnSameElement,\n        };\n\n        const doDragPathCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus.toString()};\n            var doDragPath = ${doDragPathScript.toString()};\n            return doDragPath.apply(null, arguments);\n        `;\n\n        try {\n            const result = await this.driver.executeCodeAsync(doDragPathCode, timeout, eventMessage);\n            if (result.value?.success) {\n                return { success: true };\n            }\n            return { success: false };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n\n    chooseAndRunAction() {\n        const target = this.getTarget();\n        const { locatedElement, seleniumElement, rectWithoutFrameOffset, rect } = target;\n        const { xOffset, yOffset } = this.stepActionUtils.getClickOffset(this.step.element.clickOffset, rectWithoutFrameOffset);\n\n        // used for fallback native click\n        const offsets = {\n            frameOffset: {\n                x: rect.left - rectWithoutFrameOffset.left,\n                y: rect.top - rectWithoutFrameOffset.top,\n            },\n            rect: rectWithoutFrameOffset,\n            clickOffset: { x: xOffset, y: yOffset },\n        };\n        // will skip left click and double click on Edge.\n        const skipFileInputClick =\n            featureFlagsService.flags.skipFileInputClicks.isEnabled() &&\n            target.tagName === 'INPUT' &&\n            (target.elementSymbol.includes('type=\"file\"') ||\n                target.elementSymbol.includes('type=\\'file\\'') ||\n                target.elementSymbol.includes('type=file'));\n\n        if (skipFileInputClick) {\n            return Promise.resolve({\n                keep: true,\n                success: 'skipped',\n                reason: 'Clicking on input type=file is disabled',\n            });\n        }\n\n        if (this.step.isDoubleClick) {\n            const eventData = {\n                elementToFocusLocatedElement: target.elementToFocusLocatedElement,\n                locatedElement,\n                events: this.step.events,\n                timeout: this.context.data.timeToPlayStep + 3000,\n            };\n            return this.driver.doubleClick(seleniumElement, eventData, offsets);\n        }\n        if (this.step.isDrag) {\n            if (this.step.toElement) {\n                const destTarget = this.context.data.toElement;\n                if (this.step.isHTML5Drag) {\n                    if (featureFlagsService.flags.usePortedHtml5DragDrop.isEnabled()) {\n                        const events = this.generateHTML5DragEventSequence();\n                        const timeout = this.context.data.timeToPlayStep + 3000;\n                        const contextTarget = this.context.data[this.step.targetId || 'targetId'];\n                        const eventMessage = {\n                            transactionId: `${this.context.testResultId}:${this.step.id}`,\n                            id: this.step.id,\n                            testResultId: this.context.testResultId,\n                            eventType: this.step.type,\n                            events,\n                            eventData: {\n                                modifiers: this.step.modifiers,\n                                button: this.step.button,\n                            },\n                            quirks: this.step.quirks,\n                            isDrag: this.step.isDrag,\n                            useRecordedMousedown: this.step.useRecordedMousedown,\n                            allEventsOnSameElement: this.step.allEventsOnSameElement,\n                            elementToFocusLocatedElement: contextTarget.elementToFocusLocatedElement,\n                            trackActiveElement: this.step.trackActiveElement,\n                            locatedElement: contextTarget.locatedElement,\n                            isRoot: contextTarget.isRoot,\n                        };\n                        const html5DNDCode = `\n                        var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n                        var dnd = ${html5dndActionV2.toString()};\n                        var eventData = arguments[0];\n                        var done = arguments[1];\n                        return dnd.call(null, eventData, done);\n                    `;\n                        return this.driver.executeCodeAsync(html5DNDCode, timeout, eventMessage);\n                    }\n\n                    const html5DNDCode = `\n                        var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n                        var dnd = ${html5dndAction.toString()};\n                        var eventData = arguments[0];\n                        return dnd.call(null, eventData);\n                    `;\n\n                    const eventMessage = { fromLocatedElement: locatedElement, toLocatedElement: destTarget.locatedElement };\n                    return this.driver.executeJS(html5DNDCode, eventMessage);\n                }\n\n                const rectsAndOffsets = this.getDnDRectsAndOffsets(target, destTarget, this.step.element.clickOffset, this.step.toElement.clickOffset);\n                return this.driver.dragAndDrop(seleniumElement, destTarget.seleniumElement, rectsAndOffsets);\n            }\n            return this.dragPathJs();\n\n            // This is the old way, which uses selenium action (AKA \"native\" drag).\n            // return this.driver.drag(seleniumElement, rectWithoutFrameOffset, xOffset, yOffset, this.step.events);\n        }\n        const useRightClickJS = this.driver.isSafari() && this.step.button === 2;\n        const forceNativeEvent = this.driver.isSafari() && target.tagName === 'SELECT';\n\n        if (this.driver.isSafari() && forceNativeEvent) {\n            // NOTE:\n            // We want to skip click on SELECT elements because of a safari driver bug\n            // that not allowing to set the selected option after this click.\n            return Promise.resolve({\n                keep: true, success: 'skipped', forceTreatAsWarning: true, reason: 'Safari does not support clicking on select elements',\n            });\n        }\n        if (!forceNativeEvent && (!this.step.nativeEvents || useRightClickJS)) {\n            return this.clickJs();\n        }\n        if (this.step.button === 2) {\n            return this.driver.rightClick(seleniumElement, offsets);\n        }\n        return this.driver.leftClick(seleniumElement, offsets);\n    }\n\n    async performAction() {\n        let res = await this.chooseAndRunAction();\n        if (!res.status && res.value && res.value.keep) {\n            res = res.value;\n        }\n        if (res.keep) {\n            delete res.keep;\n            return res;\n        }\n        return undefined;\n    }\n\n    addDragendIfNeeded(events) {\n        if (events.some(event => event.event === 'dragend')) {\n            return events;\n        }\n        const dragendDefaultEvent = {\n            event: 'dragend',\n            eventInfo: {\n                detail: 0,\n            },\n            pointerPosition: this.getToElementPosition(),\n        };\n        return events.concat(dragendDefaultEvent);\n    }\n\n    getToElementPosition() {\n        if (!(this.context.data?.toElement?.rect)) {\n            return undefined;\n        }\n        const { rect } = this.context.data.toElement;\n        return {\n            originX: rect.left + (rect.width / 2),\n            originY: rect.top + (rect.height / 2),\n        };\n    }\n\n    addDragOverBeforeDragEnd(events) {\n        const dropOrEndEventIndex = events.findIndex(e => ['dragend', 'drop'].includes(e.event));\n        const oneBeforeLastEvent = events[dropOrEndEventIndex - 1];\n        if (!oneBeforeLastEvent || (oneBeforeLastEvent.event !== 'dragover')) {\n            const dragenterDefaultEvent = {\n                event: 'dragover',\n                eventInfo: {\n                    detail: 0,\n                },\n                pointerPosition: this.getToElementPosition(),\n                fireOnTarget: true,\n            };\n            events.splice(dropOrEndEventIndex, 0, dragenterDefaultEvent);\n        } else {\n            oneBeforeLastEvent.fireOnTarget = true;\n        }\n        return events;\n    }\n\n    fixEventSequence(events) {\n        const withDragEnd = this.addDragendIfNeeded(events);\n        return this.addDragOverBeforeDragEnd(withDragEnd);\n    }\n\n    addElementLocatedElementToDragEvents(events, fromElementLocatedElement, toElementLocatedElement) {\n        const isOnToElement = e => e.fireOnTarget || ['drop', 'dragenter'].includes(e.event);\n        events.forEach(event => (event.locatedElement = isOnToElement(event) ? toElementLocatedElement : fromElementLocatedElement));\n        return events;\n    }\n\n    generateHTML5DragEventSequence() {\n        const fromElement = this.context.data.targetId;\n        const toElement = this.context.data.toElement;\n        let events = this.step.events.filter(event => event.event !== 'mousemove' && event.event !== 'pointermove');\n        events = this.fixEventSequence(events);\n        events = this.addElementLocatedElementToDragEvents(events, fromElement.locatedElement, toElement.locatedElement);\n        if (this.step.dispatchDragEventsOnClosestDraggable) {\n            events.forEach(event => (event.dispatchDragEventsOnClosestDraggable = true));\n        }\n        return events;\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class TextValidationStepAction extends StepAction {\n    async performAction(stepActionFactory) {\n        const { step, context, frameHandler, sessionPlayerInit: { paramEvaluator, utils, commonConstants } } = this;\n        const target = this.getTarget();\n\n        try {\n            const text = await this.stepActionUtils.extractTargetText(target);\n            let actual;\n            let expected;\n            if (paramEvaluator) {\n                const evaluation = paramEvaluator.computeExpression(\n                    step.expression2,\n                    context,\n                    this.exportsGlobal,\n                    this.exportsTest,\n                );\n                actual = text;\n                expected = evaluation.evaluatedText;\n            } else {\n                const res = await stepActionFactory.executeStep(\n                    step.expression2,\n                    context,\n                    frameHandler,\n                    this.exportsGlobal,\n                    this.locateElementPlayer,\n                    this.exportsTest,\n                );\n                actual = text;\n                expected = res.evaluatedText;\n            }\n            try {\n                const compareResult = utils.compareOrMatch(expected, actual);\n                if (compareResult) {\n                    return { success: true };\n                }\n                return {\n                    success: false,\n                    errorType: commonConstants.stepResult.TEXT_COMPARE_FAILURE,\n                    resultInfo: { expected: String(expected), actual },\n                };\n            } catch (err) {\n                return {\n                    success: false,\n                    errorType: commonConstants.stepResult.TEXT_COMPARE_FAILURE,\n                    resultInfo: { expected: expected.toString(), actual },\n                };\n            }\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n                shouldRetry: true,\n            };\n        }\n    }\n}\n", "import * as _ from 'lodash';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\n\nconst logger = getLogger('evaluate-expression-step-action');\n\nexport class EvaluateExpressionStepAction extends StepAction {\n    async execute() {\n        const step = this.step;\n        const context = this.context;\n        const exportsGlobal = this.exportsGlobal;\n        const exportsTest = this.exportsTest;\n\n        try {\n            logger.info('runner running incoming params evaluation');\n            let incomingParams = context.incomingParams || {};\n            if (_.isEmpty(incomingParams)) {\n                incomingParams = this.sessionPlayerInit.stepParamBuilder.getStepInputs(step, context, exportsGlobal, exportsTest);\n            }\n\n            const params = ['context', ...incomingParams.as.functionParameters];\n            const args = [context, ...incomingParams.as.functionArguments];\n            const expressionToEvaluate = step.subType === 'text' ? `'${step.expression.replace(/'/g, \"\\\\\\'\")}'` : step.expression;\n            const code = `return ${expressionToEvaluate}`.replace(/\\n/g, '\\\\n');\n            const textEvaluateFunction = Function.apply(Function, params.concat([code]));\n            const evaluatedText = textEvaluateFunction.apply(null, args);\n\n            context.data[step.targetName] = evaluatedText;\n            context.data[step.targetId] = evaluatedText;\n            if (context.internalParams) {\n                context.internalParams.add(step.targetId);\n            }\n\n            const result = {\n                success: true,\n                evaluatedText,\n                data: context.data,\n            };\n\n            return result;\n        } catch (e) {\n            const { stepResult } = this.sessionPlayerInit.commonConstants;\n            // TODO: Fix throwing non-error\n            // eslint-disable-next-line no-throw-literal\n            throw { errorType: stepResult.EVALUATE_EXPRESSION_EXCEPTION, resultInfo: { exception: e.toString() }, success: false };\n        }\n    }\n}\n", "/* globals getLocatedElement, dispatchFocus */\nexport const setText = function (eventData, done) {\n    const eventConstructorSupported = typeof Event === 'function';\n    const element = eventData.isRoot ? document.documentElement : getLocatedElement(eventData.locatedElement);\n    const context = {\n        eventIndex: 0,\n        element,\n        events: eventData.events,\n        eventType: eventData.eventType,\n        quirks: eventData.quirks,\n    };\n\n    if (!element) {\n        throw new Error('element not found');\n    }\n\n    window.__unloadNavigator = function () {\n        resolve();\n    };\n\n    window.addEventListener('unload', window.__unloadNavigator);\n\n    const keyboardEventNames = ['keydown', 'keyup', 'keypress'];\n    const MAX_KEYBOARD_EVENT_TIMEOUT = 15; //max msec between keyboard events\n\n    function getTextInputEventObject(userEvent) {\n        try {\n            if (!eventConstructorSupported) {\n                return undefined;\n            }\n\n            const event = new CustomEvent('textInput', {\n                bubbles: true,\n                cancelable: true,\n            });\n            if (userEvent.eventData) {\n                event.data = userEvent.eventData.data;\n            }\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function initTextInputEvent(userEvent) {\n        try {\n            const event = document.createEvent('TextEvent');\n            event.data = userEvent.eventData.data;\n            const method = 1; // keyboard\n            const locale = userEvent.eventData.locale || 'en-US';\n            event.initTextEvent('textInput', true, true, window, userEvent.eventData.data, method, locale);\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function getTextInputEvent(userEvent) {\n        return getTextInputEventObject(userEvent) || initTextInputEvent();\n    }\n\n    function createKeyboardEventObject(eventType, eventData, modifiers) {\n        try {\n            return new KeyboardEvent(eventType, {\n                bubbles: true,\n                cancelable: true,\n                location: eventData.location || 0,\n                key: eventData.key || '',\n                ctrlKey: Boolean(modifiers.ctrl),\n                shiftKey: Boolean(modifiers.shift),\n                altKey: Boolean(modifiers.alt),\n                metaKey: Boolean(modifiers.meta),\n            });\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function initKeyboardEvent(eventType, eventData, modifiers) {\n        try {\n            const event = document.createEvent('KeyboardEvent');\n\n            event.initKeyEvent(\n                eventType, // typeArg,\n                true, // canBubbleArg,\n                true, // cancelableArg,\n                null, // viewArg,  Specifies UIEvent.view. This value may be null.\n                Boolean(modifiers.ctrl),\n                Boolean(modifiers.alt),\n                Boolean(modifiers.shift),\n                Boolean(modifiers.meta),\n                eventData.key || '',\n                0, // charCodeArg\n            );\n\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function createKeyboardEvents(eventType, eventData, modifiers) {\n        try {\n            const event = document.createEvent('Events');\n            event.initEvent(eventType, true, true);\n            event.altKey = Boolean(modifiers.alt);\n            event.ctrlKey = Boolean(modifiers.ctrl);\n            event.metaKey = Boolean(modifiers.meta);\n            event.shiftKey = Boolean(modifiers.shift);\n            event.keyCode = eventData.key || '';\n            return event;\n        } catch (err) { /* ignored */ }\n        return undefined;\n    }\n\n    function createKeyboardEvent(eventType, eventData, modifiers) {\n        return createKeyboardEventObject(eventType, eventData, modifiers) ||\n            initKeyboardEvent(eventType, eventData, modifiers) ||\n            createKeyboardEvents(eventType, eventData, modifiers);\n    }\n\n    function getKeyboardEvent(userEvent) {\n        // some apps override Array.indexOf to return undefined if element not found (like Arkia)\n        const index = keyboardEventNames.indexOf(userEvent.event);\n        if ((typeof index !== 'number') || (index < 0)) {\n            return null;\n        }\n\n        const eventData = userEvent.eventData;\n        const modifiers = eventData.modifiers || {};\n\n        const event = createKeyboardEvent(userEvent.event, eventData, modifiers);\n\n        // workaround for chromium bugs which make keycode etc readonly\n        Object.defineProperties(event, {\n            keyCode: {\n                enumerable: true,\n                get() {\n                    return this._keyCode_;\n                },\n            },\n            charCode: {\n                enumerable: true,\n                get() {\n                    return this._charCode_;\n                },\n            },\n            which: {\n                enumerable: true,\n                get() {\n                    return this._keyCode_;\n                },\n            },\n        });\n        event._keyCode_ = eventData.keyCode;\n        event._charCode_ = eventData.charCode || 0;\n        return event;\n    }\n\n    function getEvent(userEvent) {\n        return userEvent.event === 'textInput' ?\n            getTextInputEvent(userEvent) :\n            getKeyboardEvent(userEvent);\n    }\n\n    function shouldSkipEvent(currentEvent, context) {\n        const isTextInputAuth0Form = function () {\n            return currentEvent.event === 'textInput' && !context.quirks?.isAuth0Form;\n        };\n        return isTextInputAuth0Form();\n    }\n\n    function getTextEventTimeout(currentEvent, nextEvent) {\n        return ((currentEvent.event === 'keyup') && (nextEvent.event === 'keydown')) ?\n            MAX_KEYBOARD_EVENT_TIMEOUT :\n            0;\n    }\n\n    function getTimeBetweenFiringEvents(context, currentEvent, nextEvent) {\n        const maxTimeout = getTextEventTimeout(currentEvent, nextEvent);\n        return Math.min(nextEvent.timeStamp - currentEvent.timeStamp, maxTimeout);\n    }\n\n    function handleReactFormFocus(element) {\n        // solution taken partially from https://github.com/vitalyq/react-trigger-change\n        const descriptor = Object.getOwnPropertyDescriptor(element, 'value');\n        if (!descriptor) {\n            return;\n        }\n        const initialValue = element.value;\n        element.value = `${initialValue}#`;\n        if (descriptor.configurable) {\n            delete element.value;\n        }\n        element.value = initialValue;\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('input', true, false);\n        element.dispatchEvent(event);\n        Object.defineProperty(element, 'value', descriptor);\n    }\n\n    function handleChangeEventIfNeeded(context) {\n        if (!context.isInput) {\n            return;\n        }\n        try {\n            handleReactFormFocus(context.element);\n            if (eventConstructorSupported) {\n                context.element.dispatchEvent(new Event('change'));\n            } else {\n                const event = document.createEvent('HTMLEvents');\n                event.initEvent('change', false, true);\n                context.element.dispatchEvent(event);\n            }\n        } catch (e) { /* ignored */ }\n    }\n\n    function nextAsyncEvent(context, currentEvent, nextEvent) {\n        if (nextEvent) {\n            setTimeout(() => {\n                executeAsyncNext(context);\n            }, getTimeBetweenFiringEvents(context, currentEvent, nextEvent));\n        } else {\n            if (window.__unloadNavigator) {\n                window.removeEventListener('unload', window.__unloadNavigator);\n            }\n            handleChangeEventIfNeeded(context);\n            resolve();\n        }\n    }\n\n    function shouldDispatchOnParentElement(eventType, context) {\n        return (eventType === 'change' || eventType === 'blur') && context.element.tagName === 'OPTION';\n    }\n\n    function getElement(event, context, currentEvent) {\n        if (shouldDispatchOnParentElement(event.type, context)) {\n            return context.element.parentElement;\n        } if (currentEvent.locatedElement) {\n            return getLocatedElement(currentEvent.locatedElement);\n        }\n        return context.element;\n    }\n\n    function findTextNode(element, offsetData) {\n        let child = element.firstChild;\n        let innerChild;\n        while (child) {\n            if (child.nodeType === 3) {\n                if (offsetData.offset-- <= 0) {\n                    return child;\n                }\n            } else if (child.nodeType === 1) {\n                innerChild = findTextNode(child, offsetData);\n                if (innerChild) {\n                    return innerChild;\n                }\n            }\n            child = child.nextSibling;\n        }\n        return null;\n    }\n\n    function setSelection(element, selection) {\n        if (!element || !selection) {\n            return;\n        }\n        // eslint-disable-next-line no-restricted-globals\n        if (!isNaN(selection.start)) {\n            element.selectionStart = selection.start;\n            element.selectionEnd = selection.end;\n        // eslint-disable-next-line no-restricted-globals\n        } else if (!isNaN(selection.nodeOffset)) {\n            let startNode;\n            if (element.firstChild) {\n                startNode = findTextNode(element, { offset: selection.nodeOffset });\n            } else {\n                startNode = element;\n            }\n            if (startNode) {\n                const sel = window.getSelection();\n                const range = document.createRange();\n\n                try { // until we get our act together regarding contenteditable, this may throw when the numbers in the recorded data don't match the current text\n                    sel.removeAllRanges();\n                    range.setStart(startNode, selection.textOffset);\n                    range.setEnd(startNode, selection.textOffset);\n                    sel.addRange(range);\n                } catch (ignore) { /* ignored */ }\n            }\n        }\n    }\n\n    function executeAsyncEvent(event, context, currentEvent) {\n        if (context.isFocusable && context.isSelectable(event) && event.type !== 'submit') {\n            try {\n                setSelection(context.element, currentEvent.eventData.selection);\n            } catch (ignore) { /* ignored */ }\n        }\n        const element = getElement(event, context, currentEvent);\n        if (!element) {\n            throw new Error('could not find element');\n        }\n        if (event.type === 'submit' && element.action) {\n            element.submit();\n        } else {\n            element.dispatchEvent(event);\n        }\n    }\n\n    function executeAsyncNext(context) {\n        let event;\n        const currentEvent = context.events[context.eventIndex];\n        const nextEvent = context.events[++context.eventIndex];\n        try {\n            event = getEvent(currentEvent);\n        } catch (err) {\n            return reject(`exception in get event in text step:${err.message}`);\n        }\n\n        if (shouldSkipEvent(currentEvent, context)) {\n            return nextAsyncEvent(context, currentEvent, nextEvent);\n        } if (event) {\n            try {\n                executeAsyncEvent(event, context, currentEvent);\n            } catch (err) {\n                return reject(`exception in executeEvent in text step:${err.message}`);\n            }\n        } else if (context.noEventExecuter) {\n            context.noEventExecuter(context, currentEvent);\n        } else {\n            return reject(`cannot execute event ${currentEvent.event}`);\n        }\n        nextAsyncEvent(context, currentEvent, nextEvent);\n        return undefined;\n    }\n\n    function isFocusableInput(target) {\n        const tagName = target.tagName;\n        return (tagName === 'INPUT' || tagName === 'TEXTAREA');\n    }\n\n    function isContentEditable(target) {\n        return target.getAttribute ?\n            Boolean(target.getAttribute('contenteditable') === 'true') :\n            false;\n    }\n\n    function executeSetValue(context, userEvent) {\n        if (context.isInput) {\n            context.element.value = userEvent.eventData.text;\n            const inputEvent = document.createEvent('Event');\n            inputEvent.initEvent('input', true, false);\n            context.element.dispatchEvent(inputEvent);\n        } else if (context.isContentEditable) {\n            context.element.innerHTML = userEvent.eventData.text;\n        }\n    }\n\n    function findEffectiveActiveElement() {\n        let activeElement = document.activeElement;\n        while (activeElement.shadowRoot?.activeElement) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        return activeElement;\n    }\n\n    function resolve(result) {\n        const status = {\n            status: 'done',\n            result,\n            success: true,\n        };\n        if (context.isNonTextableElemnet) {\n            status.reason = 'Set text on non input element';\n        }\n\n        done(status);\n    }\n\n    function reject(result) {\n        result = result || {};\n        const status = {\n            status: 'failed',\n            result,\n            success: false,\n        };\n        if (context.isNonTextableElemnet) {\n            status.reason = 'Set text on non input element';\n        }\n\n        done(status);\n    }\n\n    try {\n        context.isInput = isFocusableInput(context.element);\n        context.isContentEditable = isContentEditable(context.element);\n        if (!context.isInput && !context.isContentEditable) {\n            context.isNonTextableElemnet = true;\n        }\n        context.isFocusable = context.isInput || context.isContentEditable;\n        context.isSelectable = function (event) {\n            return event.type !== 'keyup';\n        };\n        context.noEventExecuter = executeSetValue;\n    } catch (err) {\n        reject(`exception in set text step:${err.message}`);\n        return;\n    }\n\n    const oldActiveElement = findEffectiveActiveElement();\n    dispatchFocus(eventData.elementToFocusLocatedElement, oldActiveElement);\n    executeAsyncNext(context);\n};\n", "import { StepAction } from './stepAction';\nimport { dispatchFocus } from './scripts/focusElement';\nimport { extractElementId, delay } from '../../utils';\nimport { setText as setTextScript } from './scripts/setText';\n\nexport class TextStepAction extends StepAction {\n    async setValueNative() {\n        const context = this.context;\n        const target = this.getTarget();\n        if (!this.step.delayBetweenChars) {\n            return this.driver.setValue(target.seleniumElement, context.stepText);\n        }\n\n        await this.driver.elementIdClear(extractElementId(target.seleniumElement));\n        return await this.setTextDelayed();\n    }\n\n    async setValueJS() {\n        const step = this.step;\n        const context = this.context;\n        const target = context.data[step.targetId || 'targetId'];\n        const timeout = context.data.timeToPlayStep + 3000;\n        const events = step.events;\n\n        const { setTextDraftJs } = this.sessionPlayerInit.codeSnippets;\n        if (target.isDraftEditor && setTextDraftJs) {\n            return this.driver.executeJS(setTextDraftJs(target.locatedElement, context.stepText));\n        }\n\n        if (!events?.length) {\n            return undefined;\n        }\n\n        const eventMessage = {\n            eventType: step.type,\n            events,\n            quirks: step.quirks,\n            locatedElement: target.locatedElement,\n            isRoot: target.isRoot,\n            elementToFocusLocatedElement: target.elementToFocusLocatedElement,\n        };\n\n        const setTextCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var dispatchFocus = ${dispatchFocus};\n            var setText = ${setTextScript.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return setText.call(null, eventData, done);\n        `;\n\n        const result = await this.driver.executeCodeAsync(setTextCode, timeout, eventMessage);\n        return { success: Boolean(result.value?.success) };\n    }\n\n    async setTextDelayed() {\n        const letters = this.context.stepText;\n        const target = this.getTarget();\n        for (let i = 0; i < letters.length; i++) {\n            await this.driver.elementIdValue(extractElementId(target.seleniumElement), letters[i]);\n            // don't delay on last step.\n            if (i < letters.length - 1) {\n                await delay(this.step.delayBetweenChars);\n            }\n        }\n    }\n\n    async setValueAppendNative() {\n        const keys = [];\n        const context = this.context;\n        const target = this.getTarget();\n\n        if (target?.seleniumElement) {\n            if (!this.step.delayBetweenChars) {\n                keys.push(Array.from(context.stepText));\n                return this.driver.elementIdValue(extractElementId(target.seleniumElement), keys);\n            }\n\n            return this.setTextDelayed();\n        }\n        throw new Error('missing selenium element');\n    }\n\n    async performAction() {\n        const target = this.getTarget();\n        const forceJsEvent = this.driver.isSafari() &&\n            target.locatedElement && target.locatedElement.shadowPath &&\n            Array.isArray(target.locatedElement.shadowPath) && target.locatedElement.shadowPath.length > 1;\n\n        if (this.step.appendText) {\n            if (this.step.nativeEvents) {\n                return this.setValueAppendNative();\n            }\n            const { stepResult } = this.sessionPlayerInit.commonConstants;\n            return {\n                success: false,\n                errorType: stepResult.TEXT_ACTION_FAILURE,\n                resultInfo: { error: \"'Append Text' is only supported in Native Mode\" },\n            };\n        }\n        if (this.step.nativeEvents && !forceJsEvent) {\n            return this.setValueNative();\n        }\n        return this.setValueJS();\n    }\n}\n", "/* global getLocatedElement */\nexport const runCode = function (eventData, preCompiledCode) {\n    function appendToStorage(name, data) {\n        const sessionItem = `data-testim-${name}`;\n\n        const nativeFuncErrMsg = 'Native sessionStorage is not available';\n        function isNativeFunction(fn) {\n            if (!fn?.toString) {\n                return false;\n            }\n            return fn.toString().includes('[native code]');\n        }\n        try {\n            if (![window.sessionStorage.setItem, window.sessionStorage.getItem].every(isNativeFunction)) {\n                throw new Error(nativeFuncErrMsg);\n            }\n            const oldData = JSON.parse(window.sessionStorage.getItem(sessionItem) || '{}');\n            const newData = Object.assign({}, oldData, data);\n            window.sessionStorage.setItem(sessionItem, JSON.stringify(newData));\n        } catch (err) {\n            // any variation QuotaExceededError from browsers\n            const isQuotaExceededError = err.message.toLowerCase().includes('quota');\n            const isNativeFunctionError = err.message === nativeFuncErrMsg;\n\n            if (\n                err.message.includes('sessionStorage') || // Chrome + Firefox\n                err.message.includes('The operation is insecure') || // Safari\n                isQuotaExceededError ||\n                isNativeFunctionError\n            ) {\n                let storage = document.head.querySelector('#testim-storage-backup');\n                if (!storage) {\n                    storage = document.createElement('meta');\n                    storage.id = 'testim-storage-backup';\n                    document.head.append(storage);\n                }\n                const oldData = JSON.parse(storage.getAttribute(sessionItem) || '{}');\n                const newData = Object.assign({}, oldData, data);\n                storage.setAttribute(sessionItem, JSON.stringify(newData));\n                if (isQuotaExceededError || isNativeFunctionError) {\n                    try {\n                        window.sessionStorage.removeItem(sessionItem);\n                    } catch (e) {\n                        // Prevents future retries from looking in sessionStorage with old data\n                    }\n                    (window.TSTA = window.TSTA || {}).useFallbackStorage = true;\n                }\n                return;\n            }\n            throw err;\n        }\n    }\n\n    function getExecutionArguments(eventData) {\n        // New code with stepParamsBuilder\n        if (eventData.function) {\n            return eventData.function.args\n                .map((arg) => (arg?.locatedElement ? getLocatedElement(arg.locatedElement) : arg));\n        }\n\n        // Old code\n        return eventData.directParams\n            .map((p) => (p.selector ? document.querySelector(p.selector) : p.value))\n            .concat(eventData.otherParams);\n    }\n\n    function constructWithArguments(constructor, args) {\n        function F() {\n            return constructor.apply(this, args);\n        }\n\n        F.prototype = constructor.prototype;\n        return new F();\n    }\n\n    const exportedData = {};\n    const exportedTestData = {};\n    const exportedGlobalData = {};\n\n    const functionParams = eventData.functionParams;\n    const transactionId = eventData.transactionId;\n\n    try {\n        const args = getExecutionArguments(eventData);\n\n        args.push(exportedData, exportedTestData, exportedGlobalData);\n\n        const params = eventData.function?.params || functionParams;\n\n        const functionToRun = preCompiledCode || constructWithArguments(Function, params);\n        const result = functionToRun.apply(null, args);\n\n        if (typeof Promise !== 'undefined' && result instanceof Promise) {\n            appendToStorage(transactionId, { type: 'promise' });\n            result.then((res) => {\n                appendToStorage(transactionId, {\n                    status: 'done',\n                    success: true,\n                    result: {\n                        resultValue: res,\n                        exports: exportedData,\n                        exportsTest: exportedTestData,\n                        exportsGlobal: exportedGlobalData,\n                    },\n                });\n            }, (res) => {\n                appendToStorage(transactionId, {\n                    status: 'failed',\n                    success: false,\n                    result: {\n                        resultValue: res.toString(),\n                        exports: exportedData,\n                        exportsTest: exportedTestData,\n                        exportsGlobal: exportedGlobalData,\n                    },\n                });\n            });\n        } else {\n            appendToStorage(transactionId, {\n                status: 'done',\n                success: true,\n                result: {\n                    resultValue: result,\n                    exports: exportedData,\n                    exportsTest: exportedTestData,\n                    exportsGlobal: exportedGlobalData,\n                },\n            });\n        }\n    } catch (e) {\n        appendToStorage(transactionId, {\n            status: 'failed',\n            success: false,\n            result: {\n                resultValue: e.toString(),\n                exports: exportedData,\n                exportsTest: exportedTestData,\n                exportsGlobal: exportedGlobalData,\n            },\n        });\n    }\n};\n", "import * as _ from 'lodash';\nimport * as utils from '../../utils';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { runCode as runCodeScript } from './scripts/runCode';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\n\nconst logger = getLogger('base-js-step-action');\n\n\nexport class BaseJsStepAction extends StepAction {\n    isExceedingMaxResultSize(data, context) {\n        try {\n            const shouldEnforceMaxSize = context.project.defaults.enforceMaximumJsResultSize;\n            const maximumJsResultSize = featureFlagsService.flags.maximumJsResultSize.getValue();\n            const dataSizeExceeded = JSON.stringify(data).length > maximumJsResultSize;\n            if (!shouldEnforceMaxSize) {\n                if (dataSizeExceeded) {\n                    logger.warn(`js result size exceeded ${maximumJsResultSize}, stepId: ${this.step.id}`);\n                }\n                return false;\n            }\n            return dataSizeExceeded;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    executeGetStatus(transactionId) {\n        return this.driver.executeJS(_transactionId => {\n            /* eslint-disable no-undef */\n            const sessionItem = `data-testim-${_transactionId}`;\n            try {\n                return window.sessionStorage.getItem(sessionItem);\n            } catch (err) {\n                if (\n                    err.message.includes('sessionStorage') || // Chrome + Firefox\n                    err.message.includes('The operation is insecure') // Safari\n                ) {\n                    const storage = document.head.querySelector('#testim-storage-backup');\n                    if (!storage) {\n                        return '{}';\n                    }\n                    return storage.getAttribute(sessionItem);\n                }\n                throw err;\n            }\n            /* eslint-enable no-undef */\n        }, transactionId);\n    }\n\n    constructJSFunParams(eventData) {\n        const incomingParams = eventData.incomingParams;\n\n        const params = [\n            'context', ...incomingParams.as.functionParameters,\n            'exports', 'exportsTest', 'exportsGlobal',\n        ];\n\n        const args = [eventData.context, ...incomingParams.as.functionArguments];\n\n        params.push(eventData.code);\n        args.forEach(arg => {\n            if (_.isObject(arg)) {\n                utils.removePropertyFromObject(arg, 'seleniumElement', _.isEqual);\n            }\n        });\n        return {\n            function: {\n                params,\n                args,\n            },\n            transactionId: eventData.transactionId,\n            browser: eventData.browser,\n            browserMajor: eventData.browserMajor,\n        };\n    }\n\n\n    checkStatus(transactionId) {\n        const that = this;\n        const retryInterval = that.context.config.retryTimeout;\n        let timeToPlayStep = that.context.data.timeToPlayStep - retryInterval;\n        async function checkScriptStatus() {\n            let selRes;\n            try {\n                selRes = await that.executeGetStatus(transactionId);\n            } catch (err) {\n                logger.warn('failed to get js status', { err });\n                selRes = { value: { status: 'exception' } };\n            }\n            let res;\n            try {\n                res = JSON.parse(selRes ? selRes.value : '{}');\n            } catch (e) {\n                logger.warn('non object value', { selRes });\n                res = { status: 'exception' };\n            }\n            const abortReason = that.stepActionUtils.abortedSteps.find(abortedStep => abortedStep.id === that.step.id);\n            if (abortReason) {\n                return abortReason;\n            }\n            if (!res) {\n                return { success: true };\n            }\n            if (res.status && res.status === 'done') {\n                return res;\n            }\n            if (res.status && res.status === 'failed') {\n                return { success: false, shouldRetry: true, result: res.result };\n            }\n            if (timeToPlayStep - retryInterval <= 0) {\n                return Object.assign(res, { success: false, shouldRetry: true });\n            }\n            timeToPlayStep -= retryInterval;\n            await utils.delay(retryInterval);\n            return checkScriptStatus();\n        }\n\n        return checkScriptStatus();\n    }\n\n    executeInAut(eventMessage) {\n        const useExperimentalPreCompilation = featureFlagsService.flags.experimentalPreCodeCompilation.isEnabled();\n        const experimentalAsyncCustomCode = featureFlagsService.flags.experimentalAsyncCustomCode.isEnabled();\n        const rawParams = this.constructJSFunParams(eventMessage);\n        const hasLocateParams = rawParams.function.args.some(x => Boolean(x?.locatedElement));\n        let funcToRunString = 'undefined';\n        if (useExperimentalPreCompilation) {\n            const paramNames = rawParams.function.params.slice(0, -1);\n            funcToRunString = experimentalAsyncCustomCode ? `async function(${paramNames.join(',')}) {\n                ${eventMessage.code}\n            };` : `function(${paramNames.join(',')}) {\n                ${eventMessage.code}\n            };`;\n            // remove code from call.\n            rawParams.function.params.pop();\n        }\n\n        const { codeSnippets } = this.sessionPlayerInit;\n\n        const runCode = `\n            ${hasLocateParams ? `var getLocatedElement = ${codeSnippets.getLocatedElementCode};` : ';'}\n            var runCode = ${runCodeScript.toString()};\n            var eventData = arguments[0];\n            var funcToRun = ${funcToRunString};\n            return runCode.call(null, eventData, funcToRun);\n        `;\n        if (!useExperimentalPreCompilation) {\n            return this.driver.executeJS(runCode, rawParams);\n        }\n\n        return this.driver.executeJS(runCode, rawParams).catch(err => this.handleExecutionError(err));\n    }\n\n    codeExecDone(resp) {\n        const { stepResult: constants } = this.sessionPlayerInit.commonConstants;\n        const { context } = this;\n        const {\n            result = {}, tstConsoleLogs, nodeVersion, navigateToDifferentDomain,\n        } = resp;\n        if (result.exports) {\n            context.data.exports = result.exports;\n        }\n\n        const resultObj = {\n            nodeVersion,\n            tstConsoleLogs,\n            data: context.data,\n        };\n\n        if (this.isFailedResult(result.resultValue)) {\n            Object.assign(resultObj, {\n                success: false,\n                errorType: constants.JS_ASSERTION_FAILED,\n            });\n        } else if (this.isExceedingMaxResultSize({ result, tstConsoleLogs }, context)) {\n            Object.assign(resultObj, {\n                success: false,\n                errorType: constants.JS_RESULT_MAX_SIZE_EXCEEDED,\n            });\n        } else {\n            Object.assign(resultObj, {\n                success: true,\n                exportsTest: result.exportsTest,\n                exportsGlobal: result.exportsGlobal,\n            });\n            if (navigateToDifferentDomain) {\n                resultObj.navigateToDifferentDomain = navigateToDifferentDomain;\n            }\n        }\n        return Promise.resolve(resultObj);\n    }\n\n    codeExecFailed(resp) {\n        const { stepResult: constants } = this.sessionPlayerInit.commonConstants;\n        const { context } = this;\n        if (resp.type === 'promise') {\n            return Promise.resolve({\n                data: context.data,\n                success: false,\n                shouldRetry: true,\n                isPendingPromise: true,\n                errorType: constants.JS_ASSERTION_FAILED,\n            });\n        }\n        if (resp.reason === 'stopped') {\n            return Promise.resolve(Object.assign({}, resp, { errorType: constants.STOPPED }));\n        }\n        const { result = {}, tstConsoleLogs } = resp;\n        const message = {\n            tstConsoleLogs,\n            data: context.data,\n            exportsGlobal: result.exportsGlobal,\n            exportsTest: result.exportsTest,\n            success: false,\n            errorType: constants.UNWRAPPED_AUT_REJECT,\n            resultInfo: { error: result.resultValue },\n        };\n        return Promise.resolve(message);\n    }\n\n    checkCodeResponse(resp) {\n        return resp?.success ? this.codeExecDone(resp) : this.codeExecFailed(resp);\n    }\n\n    async performAction() {\n        const step = this.step;\n        const context = this.context;\n\n        this.startTimestamp = Date.now();\n\n        const eventMessage = {\n            transactionId: `${context.testResultId}:${step.id}`,\n            id: step.id,\n            eventType: step.type,\n            code: step.code,\n            incomingParams: context.incomingParams,\n            exportsGlobal: this.exportsGlobal,\n            exportsTest: this.exportsTest,\n            context: {\n                config: context.config,\n                data: context.data,\n            },\n            testResultId: context.testResultId,\n        };\n\n        const browserAndOS = await this.driver.getBrowserAndOS();\n        Object.assign(eventMessage, { browser: browserAndOS.browser, browserMajor: browserAndOS.browserMajor });\n\n        if (!this.context.isPendingPromise) {\n            await this.executeInAut(eventMessage);\n        }\n\n        const resp = await this.checkStatus(eventMessage.transactionId);\n        return await this.checkCodeResponse(resp);\n    }\n\n    handleExecutionError(err) {\n        const canExtractError = err?.seleniumStack && err.seleniumStack.type === 'JavaScriptError' &&\n            err.seleniumStack.orgStatusMessage;\n\n        if (canExtractError) {\n            const endOfMessage = err.seleniumStack.orgStatusMessage.indexOf('\\nBuild info');\n            const reason = err.seleniumStack.orgStatusMessage.slice(0, endOfMessage === -1 ? undefined : endOfMessage);\n            throw new Error(reason);\n        }\n\n        throw err;\n    }\n}\n", "import { BaseJsStepAction } from './baseJsStepAction';\n\nexport class JsCodeStepAction extends BaseJsStepAction {\n    isFailedResult(resultValue) {\n        return resultValue === false;\n    }\n}\n", "import { BaseJsStepAction } from './baseJsStepAction';\n\nexport class JsConditionStepAction extends BaseJsStepAction {\n    isFailedResult(resultValue) {\n        return !resultValue;\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { extractElementId } from '../../utils';\n\nconst keyMap = {\n    8: '\\uE008', // (Backspace)\n    9: '\\uE004', // (tab)\n    13: '\\uE007', // (enter)\n    27: '\\uE00C', // (esc)\n    33:\t'\\uE00E', // (page up)\n    34: '\\uE00F', // (page down)\n    35: '\\uE010', // (end)\n    36: '\\uE011', // (home)\n    45:\t'\\uE016', // (insert)\n    112: '\\uE031', // (f1)\n    113: '\\uE032', // (f2)\n    114: '\\uE033', // (f3)\n    115: '\\uE034', // (f4)\n    116: '\\uE035', // (f5)\n    117: '\\uE036', // (f6)\n    118: '\\uE037', // (f7)\n    119: '\\uE038', // (f8)\n    120: '\\uE039', // (f9)\n    121: '\\uE03A', // (f10)\n    122: '\\uE03B', // (f11)\n    123: '\\uE03C', // (f12)\n};\n\nexport class SpecialKeyStepAction extends StepAction {\n    setWithValueApi(keys) {\n        const target = this.getTarget();\n        if (target?.seleniumElement) {\n            return this.driver.elementIdValue(extractElementId(target.seleniumElement), keys);\n        }\n        return Promise.reject(new Error('missing selenium element'));\n    }\n\n    performAction() {\n        const keys = [];\n        const keyCode = this.step.events[0].eventData.keyCode;\n\n        if (keyCode >= 32 && keyCode <= 127) {\n            keys.push(String.fromCharCode(keyCode));\n        } else {\n            keys.push(keyMap[keyCode]);\n        }\n        return this.setWithValueApi(keys);\n    }\n}\n", "/* eslint-disable no-restricted-syntax */ // This code only runs in Safari, not in IE.\nexport function selectOption(locatedElement, dispatchEventOnSelectElement) {\n    function closest(el, selectors) {\n        const originalMatches = Element.prototype.matches;\n        /* eslint-disable-next-line no-proto, no-undef */ // Some customers override the native Element prototype, so we need to create a new one if they messed it up.\n        const matches = originalMatches && isNativeFunction(originalMatches) ? originalMatches : document.createElement(el.tagName).__proto__.matches;\n        do {\n            if (matches.call(el, selectors)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    }\n\n    try {\n        /* eslint-disable-next-line no-undef */ // This code depends on pre-injecting this function as well.\n        const optionEl = getLocatedElement(locatedElement);\n        if (!optionEl) {\n            return { success: false, status: 'failed', result: 'option element not found' };\n        }\n\n        const selectEl = closest(optionEl, 'select');\n        if (!selectEl) {\n            return { success: false, status: 'failed', result: 'select element not found' };\n        }\n        selectEl.focus();\n        if (optionEl.selected) {\n            return { success: true, status: 'done' };\n        }\n        optionEl.selected = true;\n\n        const events = [\n            'input',\n            'change',\n        ];\n        events.map((userEvent) => {\n            const event = document.createEvent('HTMLEvents');\n            event.initEvent(userEvent, true, false);\n            return event;\n        }).forEach((event) => {\n            if (dispatchEventOnSelectElement) {\n                selectEl.dispatchEvent(event);\n                return;\n            }\n            optionEl.dispatchEvent(event);\n        });\n\n        return { success: true, status: 'done' };\n    } catch (err) {\n        return { success: false, status: 'failed', result: err.toString() };\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { selectOption } from './scripts/selectOption';\nimport { extractElementId } from '../../utils';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\n\nexport class SelectOptionStepAction extends StepAction {\n    async performAction() {\n        const target = this.context.data[this.step.targetId || 'targetId'];\n        const { seleniumElement, locatedElement } = target;\n\n        const browserAndOS = await this.driver.getBrowserAndOS();\n\n        const browserMajor = browserAndOS.browserMajor;\n        const isSafari = this.driver.isSafari();\n        const isShadowed = Boolean(this.step.element?.isShadowed);\n\n        // TODO: Remove the special handling for safari < 12 after we upgrade our grid to safari 13.\n        // force use js code when element is shadow dom\n        if (!isSafari || (isSafari && browserMajor >= 13 && !isShadowed)) {\n            try {\n                const res = await this.driver.elementIdClick(extractElementId(seleniumElement));\n                return res;\n            } catch (err) {\n                // If customer overrides the native Element prototype, this click will fail for this reason. in such a case, fallback to use js code.\n                if (!err.message.includes('Cannot check the displayedness of a non-Element argument')) {\n                    throw err;\n                }\n            }\n        }\n\n        const safariSelectOptionDispatchEventOnSelectElement = featureFlagsService.flags.safariSelectOptionDispatchEventOnSelectElement.isEnabled();\n        const selectOptionCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var isNativeFunction = ${this.sessionPlayerInit.utils.isNativeFunction.toString()};\n            var selectOption = ${selectOption.toString()};\n            return selectOption.apply(null, arguments);\n        `;\n\n        const result = await this.driver.executeJSWithArray(selectOptionCode, [locatedElement, safariSelectOptionDispatchEventOnSelectElement]);\n        if (result.value?.success) {\n            return { success: true };\n        }\n        return { success: false };\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class SubmitStepAction extends StepAction {\n    async performAction() {\n        await this.driver.submitForm(this.getTarget().seleniumElement);\n    }\n}\n", "import { StepAction } from './stepAction';\n\nconst toDOMRect = (height, width, x, y) => ({\n    x,\n    y,\n    width,\n    height,\n    get top() { return this.y; },\n    get left() { return this.x; },\n    get right() { return this.x + this.width; },\n    get bottom() { return this.y + this.height; },\n    toJSON() { },\n});\n\nexport class HoverStepAction extends StepAction {\n    getRect() {\n        return this.driver.isFirefox() ?\n            this.getTarget().rectWithoutFrameOffset :\n            this.getTarget().rect;\n    }\n\n    async performAction() {\n        const target = this.getTarget();\n        const { seleniumElement, rectWithoutFrameOffset, rect } = target;\n\n        const { width, height } = rect;\n\n        let clickOffsetX = width / 2;\n        let clickOffsetY = height / 2;\n\n        const offset = this.step.element.clickOffset;\n        if (offset && this.step.shouldAccountForMouseOffsetInHover) {\n            const { x, y } = offset;\n\n            if (this.sessionPlayerInit.utils.isWithinTargetRect(toDOMRect(height, width, 0, 0), x, y)) {\n                clickOffsetX = x;\n                clickOffsetY = y;\n            }\n        }\n\n        const offsets = {\n            frameOffset: {\n                x: rect.left - rectWithoutFrameOffset.left,\n                y: rect.top - rectWithoutFrameOffset.top,\n            },\n            rect: rectWithoutFrameOffset,\n            clickOffset: { x: Math.floor(clickOffsetX), y: Math.floor(clickOffsetY) },\n        };\n\n        await this.driver.hover(seleniumElement, offsets);\n        return { success: true };\n    }\n}\n", "/* global getLocatedElement */\nexport const wheel = function (eventData, done) {\n    const MAX_WHEEL_EVENT_TIMEOUT = 200;\n\n    function getEventPosition(userEvent, element) {\n        function isWithinBounds(start, end, point) {\n            return (point > start) && (point < end);\n        }\n        const pointerPosition = userEvent.pointerPosition || {};\n        const rect = element.getBoundingClientRect();\n        const clientX = pointerPosition.originX && isWithinBounds(rect.left, rect.left + rect.width, pointerPosition.originX) ? pointerPosition.originX : rect.left + (rect.width / 2);\n        const clientY = pointerPosition.originY && isWithinBounds(rect.top, rect.top + rect.height, pointerPosition.originY) ? pointerPosition.originY : rect.top + (rect.height / 2);\n        return { x: clientX, y: clientY };\n    }\n\n    function getWheelEvent(userEvent, eventData, element) {\n        const pos = getEventPosition(userEvent, element);\n        const modifiers = eventData?.modifiers || {};\n        const dict = {\n            deltaX: userEvent.deltaX,\n            deltaY: userEvent.deltaY,\n            deltaZ: userEvent.deltaZ,\n            deltaMode: userEvent.deltaMode,\n            clientX: pos.x,\n            clientY: pos.y,\n            bubbles: true,\n            cancelable: true,\n            ctrl: Boolean(modifiers.ctrl),\n            alt: Boolean(modifiers.alt),\n            shift: Boolean(modifiers.shift),\n            meta: Boolean(modifiers.meta),\n        };\n        return new WheelEvent('wheel', dict);\n    }\n\n    function executeEvents(events, element) {\n        if (events.length === 0) {\n            done({ state: 'success' });\n            return;\n        }\n        if (!element) {\n            throw new Error('element not found');\n        }\n\n        const event = events.shift();\n        const currentEvent = getWheelEvent(event, eventData.eventData, element);\n        const timeout = events[0] ? Math.min(events[0].timeStamp - event.timeStamp, MAX_WHEEL_EVENT_TIMEOUT) : MAX_WHEEL_EVENT_TIMEOUT;\n        element.dispatchEvent(currentEvent);\n        setTimeout(() => {\n            executeEvents(events, element);\n        }, timeout);\n    }\n\n    const element = getLocatedElement(eventData.locatedElement);\n    executeEvents(eventData.events, element);\n};\n", "import { StepAction } from './stepAction';\nimport { wheel as wheelScript } from './scripts/wheel';\n\nexport class WheelStepAction extends StepAction {\n    async performAction() {\n        const step = this.step;\n        const context = this.context;\n        const events = step.events;\n\n        if (!events?.length) {\n            return undefined;\n        }\n\n        const eventMessage = {\n            events,\n            eventData: {\n                modifiers: step.modifiers,\n                button: step.button,\n            },\n            locatedElement: this.getTarget().locatedElement,\n        };\n\n        const timeout = context.data.timeToPlayStep + 3000;\n\n        const wheelCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var wheel = ${wheelScript.toString()};\n            var eventData = arguments[0];\n            var done = arguments[1];\n            return wheel.call(null, eventData, done);\n        `;\n\n        const result = await this.driver.executeCodeAsync(wheelCode, timeout, eventMessage);\n        return { success: result.value?.state === 'success' };\n    }\n}\n", "/* global getLocatedElement, createDropEvent */\nexport const downloadFileAndFireDropEvent = function (locatedElement, fileUrls) {\n    // eslint-disable-next-line no-undef\n    const element = getLocatedElement(locatedElement);\n\n    if (!element) {\n        throw new Error('element not found');\n    }\n\n    function simpleBarrier() {\n        let callbackIndex = -1;\n        let doneCallbacks = 0;\n        const results = [];\n        const instance = {\n            waitOn() {\n                const curIndex = ++callbackIndex;\n                return function (result) {\n                    if (curIndex in results) {\n                        return;\n                    }\n                    results[curIndex] = result;\n                    doneCallbacks++;\n                    if (fileUrls.length === doneCallbacks) {\n                        instance.endWithCallback(results);\n                    }\n                };\n            },\n            endWith(fn) { instance.endWithCallback = fn; },\n        };\n        return instance;\n    }\n\n    function getBlob(url, name, cb) {\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.responseType = 'blob';\n        xhr.onload = function () {\n            if (this.status >= 200 && this.status < 300) {\n                cb({ blob: xhr.response, name });\n            } else {\n                throw new Error('Failed to load blob response code is not between 200 - 300');\n            }\n        };\n        xhr.onerror = function () {\n            throw new Error('Failed to load blob');\n        };\n        xhr.send();\n    }\n\n    const barrier = simpleBarrier();\n    fileUrls.forEach((fileUrl) => {\n        getBlob(fileUrl.url, fileUrl.name, barrier.waitOn());\n    });\n    barrier.endWith((blobs) => {\n        const event = createDropEvent(blobs);\n        element.dispatchEvent(event);\n    });\n};\n", "import { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { downloadFileAndFireDropEvent } from './scripts/dropEvent';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\n\nconst logger = getLogger('drop-file-step-action');\n\nexport class DropFileStepAction extends StepAction {\n    async performAction() {\n        const { codeSnippets, utils } = this.sessionPlayerInit;\n        const target = this.context.data[this.step.targetId || 'targetId'];\n        const overrideAzureStorageUrl = featureFlagsService.flags.overrideAzureStorageUrl.isEnabled();\n        const fileUrls = await utils.addTokenToFileUrl(\n            this.context.project.id,\n            this.step.fileUrls,\n            this.stepActionUtils.testimServicesApi,\n            overrideAzureStorageUrl,\n            logger,\n        );\n\n        const dropFileCode = `\n        var getLocatedElement = ${codeSnippets.getLocatedElementCode};\n        var createDropEvent = ${codeSnippets.createDropEvent.toString()};\n        var downloadFileAndFireDropEvent = ${downloadFileAndFireDropEvent.toString()};\n        return downloadFileAndFireDropEvent.apply(null, arguments)\n    `;\n\n        return await this.driver.executeJSWithArray(dropFileCode, [target.locatedElement, fileUrls]);\n    }\n}\n", "import * as os from 'os';\nimport * as httpRequest from './commons/httpRequest';\nimport { promises as fsPromises } from 'fs';\nimport { promiseMap } from './utils';\nimport { getLogger } from './commons/logger';\nimport type { FileUrl } from 'clickim/src/common/models/step';\n\nconst logger = getLogger('input-file-utils');\n\nexport function getVisibleElementScript(positionAndSize = {\n    width: '2px', height: '2px', left: '0px', top: '400px',\n}) {\n    const zIndex = 100000000;\n    const opacity = 1;\n    return `function getVisibleElement(locatedElement) {\n        var input = getLocatedElement(locatedElement);\n        if(input) {\n            function parents(element, _elements) {\n                _elements = _elements || [];\n                _elements.push(element);\n                if(element.parentNode && element.tagName !== 'BODY') {\n                    return parents(element.parentNode, _elements);\n                }\n                return _elements;\n            }\n\n            function forceStyle(el, name, value) {\n                el.style.setProperty(name, value, 'important');\n            }\n\n            Array.apply(null, parents(input)).forEach(function(el) {\n                let element = el;\n                if (element instanceof DocumentFragment) {\n                    element = element.host\n                }\n\n                var displayMode = window.getComputedStyle(element).display;\n                if(displayMode === \"none\") {\n                    forceStyle(element, 'display', 'block');\n                }\n            })\n\n            forceStyle(input, 'visibility', 'visible');\n            forceStyle(input, 'width', '${positionAndSize.width}');\n            forceStyle(input, 'max-width', '${positionAndSize.width}');\n            forceStyle(input, 'height', '${positionAndSize.height}');\n            forceStyle(input, 'max-height', '${positionAndSize.height}');\n            forceStyle(input, 'z-index', ${zIndex});\n            forceStyle(input, 'opacity', ${opacity});\n            forceStyle(input, 'top', '${positionAndSize.top}');\n            forceStyle(input, 'left', '${positionAndSize.left}');\n            forceStyle(input, 'position', 'fixed');\n            forceStyle(input, 'pointer-events', 'all');\n            input.removeAttribute(\"disabled\");\n            input.focus();\n        }\n    }`;\n}\n\nasync function downloadFile(fileUrl: string, fileName: string) {\n    let body = null;\n    try {\n        const res = await httpRequest.download(fileUrl);\n        body = res.body;\n    } catch (err) {\n        logger.error('failed to download input-file content',\n            { err: { message: err.message, stack: err.stack, status: err.status } });\n        if (err.response) {\n            // try to emulate what we essentially do in clickim\n            body = err.response.body;\n        } else {\n            // we have a circular object\n            if (err.cause) {\n                throw new Error(err.message);\n            }\n            throw err;\n        }\n    }\n\n    const localFileLocation = `${os.tmpdir()}/${fileName}`;\n    await fsPromises.writeFile(localFileLocation, body);\n    return localFileLocation;\n}\n\nfunction downloadFiles(fileUrls: FileUrl[]) {\n    return promiseMap(fileUrls, file => downloadFile(file.url, file.name));\n}\n\nfunction uploadFileToGrid(localFileLocation: string, uploadFileFn: (fileLocation: string) => Promise<undefined | { value: string }>) {\n    return uploadFileFn(localFileLocation);\n}\n\nexport async function downloadFilesAndUploadToGrid(fileUrls: FileUrl[], uploadFileFn: (fileLocation: string) => Promise<undefined | { value: string }>) {\n    const filesOnDisk = await downloadFiles(fileUrls);\n    const gridLocalFiles = await promiseMap(filesOnDisk, localFileLocation => uploadFileToGrid(localFileLocation, uploadFileFn));\n    return Array.isArray(gridLocalFiles) && gridLocalFiles.map(gridLocalFile => gridLocalFile?.value);\n}\n", "import * as inputFileUtils from '../../inputFileUtils';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { extractElementId, download } from '../../utils';\nimport { featureFlagsService } from '../../commons/featureFlagsService';\n\nconst logger = getLogger('input-file-step-action');\n\nexport class InputFileStepAction extends StepAction {\n    uploadFile(localFileLocation) {\n        return this.driver.uploadFile(localFileLocation);\n    }\n\n    forceInputToBeVisible(target, visibleScriptOptions) {\n        logger.info('workaround - stepaction - move element to visible position');\n\n        const getVisibleElementCode = `\n            var getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n            var getVisibleElement = ${inputFileUtils.getVisibleElementScript(visibleScriptOptions)};\n            return getVisibleElement.apply(null, arguments);\n        `;\n\n        return this.driver.executeJS(getVisibleElementCode, target.locatedElement);\n    }\n\n    async safariPreUploadActions(target) {\n        const options = {\n            width: '150px',\n            height: '150px',\n            left: '10px',\n            top: '10px',\n        };\n        try {\n            return await this.forceInputToBeVisible(target, options);\n        } catch (err) {\n            logger.error('failed to set input file in Safari recovery', { err });\n            throw err;\n        }\n    }\n\n    async uploadFilesAndForceVisibility(gridLocalFiles, target) {\n        try {\n            if (this.driver.isSafari()) {\n                await this.safariPreUploadActions(target);\n            }\n            await this.uploadFiles(gridLocalFiles, target);\n        } catch (err) {\n            const edgeErrorEditableMessage = 'The element is not editable';\n            const edgeErrorFocusableMessage = 'The element is not focusable';\n            const safariErrorVisibleMessage = 'An element command could not be completed because the element is not visible on the page.';\n            const elementNotInteractable = 'element not interactable';\n            const elementNotPointerOrKeyboardInteractable = 'element is not pointer- or keyboard interactable';\n            const invalidStateMsg = 'invalid element state: Element is not currently interactable and may not be manipulated';\n            const mustBeVisibleMsg = 'Element must not be hidden, disabled or read-only';\n            const notReachableByKeyboard = 'is not reachable by keyboard';\n            /** @type {string} */\n            const errorMsg = err ? err.message : '';\n            // Workaround move element if element is not visible or disabled\n            if (\n                errorMsg === invalidStateMsg ||\n                errorMsg.startsWith(mustBeVisibleMsg) ||\n                errorMsg.startsWith(edgeErrorEditableMessage) ||\n                errorMsg.startsWith(edgeErrorFocusableMessage) ||\n                errorMsg.startsWith(safariErrorVisibleMessage) ||\n                errorMsg.includes(notReachableByKeyboard) ||\n                errorMsg.includes(elementNotInteractable) ||\n                errorMsg.includes(elementNotPointerOrKeyboardInteractable)\n            ) {\n                await this.forceInputToBeVisible(target);\n                await this.uploadFiles(gridLocalFiles, target);\n                return;\n            }\n\n            logger.error('failed to set input file', { err });\n            throw err;\n        }\n    }\n\n    async uploadFiles(gridLocalFiles, target) {\n        for (const file of gridLocalFiles) {\n            await this.driver.elementIdValue(extractElementId(target.seleniumElement), file);\n        }\n    }\n\n    async performAction() {\n        const target = this.context.data[this.step.targetId || 'targetId'];\n        const overrideAzureStorageUrl = featureFlagsService.flags.overrideAzureStorageUrl.isEnabled();\n        const useJsInputCodeInSafari = featureFlagsService.flags.useJsInputCodeInSafari.isEnabled();\n        const useJsInputCodeInFirefox = featureFlagsService.flags.useJsInputCodeInFirefox.isEnabled();\n        const downloadToBase64 = featureFlagsService.flags.downloadToBase64.isEnabled();\n\n        let fileUrls = await this.sessionPlayerInit.utils.addTokenToFileUrl(this.context.project.id, this.step.fileUrls, this.stepActionUtils.testimServicesApi, overrideAzureStorageUrl, logger);\n\n\n        const isSafariJsInputCode = this.driver.isSafari() && (useJsInputCodeInSafari || fileUrls.length > 1);\n        const isFirefoxJsInputCode = this.driver.isFirefox() && (useJsInputCodeInFirefox || fileUrls.length > 1);\n\n        if (downloadToBase64) {\n            fileUrls = await Promise.all(fileUrls.map(async ({ name, url }) => {\n                const res = await download(url);\n                return { name, url: `data:${res.type};base64,${Buffer.from(res.body).toString('base64')}` };\n            }));\n        }\n        if (isSafariJsInputCode || isFirefoxJsInputCode) {\n            await this.driver.executeJSWithArray(`\n                const getLocatedElement = ${this.sessionPlayerInit.codeSnippets.getLocatedElementCode};\n                const downloadAndUploadFile = ${downloadAndUpload()};\n                return downloadAndUploadFile.apply(null, arguments);`, [target.locatedElement, fileUrls]);\n            return;\n        }\n\n        const gridLocalFiles = await inputFileUtils.downloadFilesAndUploadToGrid(fileUrls, this.uploadFile.bind(this));\n        await this.uploadFilesAndForceVisibility(gridLocalFiles, target);\n    }\n}\n\nfunction downloadAndUpload() {\n    return `async function downloadAndUpload(locatedElement, fileUrls) {\n        const fileIsNative = typeof window.File === 'function' && (window.File.toString().indexOf('native code') > -1);\n        const File = fileIsNative ? window.File : (function obtainSafeGlobals() {\n            const attachTo  = document.body || document.documentElement;\n            if (attachTo) {\n                let tempIFrame;\n                try {\n                    tempIFrame = document.createElement('iframe');\n                    tempIFrame.style.setProperty('display', 'none');\n                    tempIFrame.style.setProperty('pointer-events', 'none');\n                    attachTo.appendChild(tempIFrame);\n                    const { File } = tempIFrame.contentWindow;\n                    return File;\n                } finally {\n                    if (tempIFrame) {\n                        tempIFrame.parentElement.remove(frame);\n                    }\n                }\n            } else {\n                return window.File;\n            }\n        })();\n        const element = getLocatedElement(locatedElement);\n        if(!element) {\n            throw new Error('element not found');\n        }\n\n        function getFileBlob(url) {\n            return new Promise((resolve, reject) => {\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.responseType = 'blob';\n\n                xhr.onload = function() {\n                    if (this.status === 200) {\n                        resolve(this.response);\n                    } else {\n                        reject(new Error('Could not load file, failure status:' + this.status));\n                    }\n                }\n                xhr.onerror = function(e) {\n                    reject(new Error(\"Error \" + e.target.status + \" occurred while loading the file.\"));\n                };\n                xhr.send();\n            });\n\n        }\n\n        const fileList = await Promise.all(fileUrls.map(async ({ url, name }) => {\n            let blob;\n            try {\n                const res = await fetch(url)\n                blob = await res.blob();\n            } catch (err) {\n                blob = await getFileBlob(url); // Sometimes the fetch fails, try using XHR as fallback\n            }\n            return new File([blob], name, { type: blob.type });\n        }));\n\n        const dt = new DataTransfer();\n        for (const file of fileList) {\n            dt.items.add(file);\n        }\n        element.files = dt.files;\n\n        let changeWasFired = false;\n        const changeFiredHandler = (e) => {\n            changeWasFired = true;\n        };\n\n        element.addEventListener(\"change\", changeFiredHandler, true);\n        await Promise.resolve(); // wait microtick\n        element.dispatchEvent(new Event(\"input\", { bubbles: true }));\n        if (!changeWasFired) {\n            element.dispatchEvent(new Event(\"change\", { bubbles: true }));\n        }\n        element.removeEventListener(\"change\", changeFiredHandler, true);\n    }`;\n}\n", "import { URL } from 'url';\nimport { StepAction } from './stepAction';\n\nexport class NavigationStepAction extends StepAction {\n    async updateBaseUrl(location) {\n        const orgUrl = new URL(location);\n        const baseLocation = new URL(this.context.recordedBaseUrl);\n        const newBaseLocation = new URL(this.context.baseUrl);\n        if (orgUrl.host === baseLocation.host && baseLocation.host !== newBaseLocation.host) {\n            orgUrl.host = newBaseLocation.host;\n        }\n        return orgUrl.href;\n    }\n\n    async performAction() {\n        const url = this.context.data.testimNavigationStepDestination || this.context.data.url;\n        // Opens a new tab and switches to new tab\n        if (this.step.openInNewTab) {\n            await this.driver.client.newWindow(url);\n            return;\n        }\n        const updatedUrl = await this.updateBaseUrl(url);\n        await this.driver.url(updatedUrl);\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { delay } from '../../utils';\n\nexport class SleepStepAction extends StepAction {\n    async performAction() {\n        await delay(this.step.durationMS);\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class RefreshStepAction extends StepAction {\n    async execute() {\n        try {\n            await this.driver.reloadTab();\n            return { success: true };\n        } catch (error) {\n            return { success: false, reason: error.message };\n        }\n    }\n}\n", "// @ts-check\nimport { StepAction } from './stepAction';\n\nexport class ApiStepAction extends StepAction {\n    async runApiInAut(eventData) {\n        eventData.withCredentials = true;\n        const timeout = this.context.data.timeToPlayStep + 3000;\n        const { apiCall } = this.sessionPlayerInit;\n        try {\n            const autRes = await this.driver.executeCodeAsync(apiCall, timeout, eventData);\n            const resp = autRes?.value;\n            return resp || {};\n        } catch (err) {\n            if (err?.message?.includes('Javascript execution context no longer exists')) {\n                throw new Error(\n                    'The page refreshed or changed while executing this step. Please consider unchecking \"Send via web page\" if this is expected.');\n            }\n            throw err;\n        }\n    }\n\n    runApiInBg(eventData) {\n        const { apiCall } = this.sessionPlayerInit;\n        return new Promise(resolve => { apiCall(eventData, resolve); });\n    }\n\n    async performAction() {\n        const { commonConstants } = this.sessionPlayerInit;\n        /** @type {import('clickim/src/common/models/apiStep').ApiStep} */\n        const step = this.step;\n        const context = this.context;\n\n        const eventData = {\n            id: step.id,\n            url: context.apiUrl,\n            method: step.method,\n            headers: context.apiHeaders,\n            body: context.apiBody,\n            timeout: context.data.maxTotalStepTime,\n            omitCookies: step.omitCookies,\n            formData: step.formData,\n            fileUrls: context.fileUrls,\n        };\n\n        let resp;\n        if (step.sendViaWebApp) {\n            resp = await this.runApiInAut(eventData);\n        } else {\n            resp = await this.runApiInBg(eventData);\n        }\n        const result = resp.result || {};\n        const resultInfo = {\n            method: step.method,\n            status: result.status,\n            url: step.url,\n        };\n        if (resp.success) {\n            if (result.status === 0) {\n                return {\n                    result,\n                    resultInfo,\n                    shouldRetry: false,\n                    success: false,\n                    reason: 'Connection problem',\n                    errorType: commonConstants.stepResult.API_REQUEST_NETWORK_ERROR,\n                };\n            }\n            return {\n                result,\n                resultInfo,\n                shouldRetry: false,\n                success: true,\n            };\n        }\n        return {\n            result,\n            resultInfo,\n            shouldRetry: false,\n            success: false,\n            reason: result.error || commonConstants.error.REQUEST_TIMED_OUT,\n            errorType: result.error ? commonConstants.stepResult.API_FAILURE : commonConstants.stepResult.API_REQUEST_NETWORK_ERROR,\n        };\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class ExtractTextStepAction extends StepAction {\n    async performAction() {\n        const paramName = this.step.extractTextParamName;\n\n        const extractedText = await this.stepActionUtils.extractTargetText(this.getTarget());\n        this.context.data.exports = this.context.data.exports || {};\n        this.context.data.exports[paramName] = extractedText;\n        return {\n            success: true,\n            data: this.context.data,\n        };\n    }\n}\n", "import { StepAction } from './stepAction';\nimport { execute } from '../../stepPlayers/hybridStepPlayback';\n\nexport class TdkHybridStepAction extends StepAction {\n    async performAction() {\n        return await execute(\n            this.step,\n            this.context,\n            this.driver,\n            this.stepActionUtils.testimServicesApi.authenticationManager.getLoggedUserInfo(),\n            this.frameHandler.frameManager,\n        );\n    }\n}\n", "import * as _ from 'lodash';\nimport { makeSDK } from '@applitools/eyes-sdk-core';\nimport { W3C_ELEMENT_ID } from '../constants';\nimport { dependencies } from '../../../package.json';\nimport { getSessionPlayer } from '../../commons/getSessionPlayerRequire';\n/**\n * @typedef {import('@applitools/types').SpecDriver} SpecDriver\n * @typedef {import('@applitools/types').Core} Core\n */\n\nconst LEGACY_ELEMENT_ID = 'ELEMENT';\n\nfunction extractElementId(element) {\n    if (_.has(element, 'elementId')) {\n        return element.elementId;\n    }\n    if (_.has(element, W3C_ELEMENT_ID)) {\n        return element[W3C_ELEMENT_ID];\n    }\n    if (_.has(element, LEGACY_ELEMENT_ID)) {\n        return element[LEGACY_ELEMENT_ID];\n    }\n    return undefined;\n}\n\n/**\n * Applitools Spec Driver for webdriverIO 4.\n * @see https://github.com/applitools/eyes.sdk.javascript1/blob/master/packages/eyes-webdriverio-4/src/spec-driver.ts\n * @implements {SpecDriver}\n */\nclass EyesSpec {\n    // #region UTILITY\n    isDriver(driver) {\n        return Boolean(driver?.getPrototype && driver.desiredCapabilities && driver.requestHandler);\n    }\n\n    isElement(element) {\n        if (!element) {\n            return false;\n        }\n        const elementToCheck = element.value || element;\n        return Boolean(elementToCheck[W3C_ELEMENT_ID] || elementToCheck[LEGACY_ELEMENT_ID]);\n    }\n\n    isSelector(selector) {\n        return typeof selector === 'string';\n    }\n\n    transformDriver(driver) {\n        return new Proxy(driver, {\n            get: (target, key) => {\n                if (key === 'then') {\n                    return undefined;\n                }\n                return Reflect.get(target, key);\n            },\n        });\n    }\n\n    transformElement(element) {\n        const elementId = extractElementId(element.value || element);\n        return { [W3C_ELEMENT_ID]: elementId, [LEGACY_ELEMENT_ID]: elementId };\n    }\n\n    transformSelector(selector) {\n        if (!_.has(selector, 'selector')) {\n            return selector;\n        }\n        if (!_.has(selector, 'type')) {\n            return selector.selector;\n        }\n        if (selector.type === 'css') {\n            return `css selector:${selector.selector}`;\n        }\n        return `${selector.type}:${selector.selector}`;\n    }\n\n    extractSelector(element) {\n        return _.has(element, 'selector') ? element.selector : undefined;\n    }\n\n    isStaleElementError(error, selector) {\n        if (!error) {\n            return false;\n        }\n        const errOrResult = error.originalError || error;\n        return errOrResult instanceof Error ?\n            errOrResult.seleniumStack && errOrResult.seleniumStack.type === 'StaleElementReference' :\n            errOrResult.value && errOrResult.selector && errOrResult.selector === selector;\n    }\n\n    isEqualElements(_browser, element1, element2) {\n        if (!element1 || !element2) {\n            return false;\n        }\n        const elementId1 = extractElementId(element1);\n        const elementId2 = extractElementId(element2);\n        return elementId1 === elementId2;\n    }\n    // #endregion\n\n    // #region COMMANDS\n    async executeScript(driver, script, arg) {\n        const { value } = await driver.execute(script, arg);\n        return value;\n    }\n\n    async mainContext(driver) {\n        await driver.frame(null);\n        return driver;\n    }\n\n    async parentContext(driver) {\n        await driver.frameParent();\n        return driver;\n    }\n\n    async childContext(driver, element) {\n        await driver.frame(element);\n        return driver;\n    }\n\n    async findElement(driver, selector, parent) {\n        const { value } = parent ? await driver.elementIdElement(extractElementId(parent), selector) : await driver.element(selector);\n        return value;\n    }\n\n    async findElements(driver, selector, parent) {\n        const { value } = parent ? await driver.elementIdElements(extractElementId(parent), selector) : await driver.elements(selector);\n        return value;\n    }\n\n    async getWindowSize(driver) {\n        const { value: size } = await driver.windowHandleSize();\n        return { width: size.width, height: size.height };\n    }\n\n    async setWindowSize(driver, size) {\n        await driver.windowHandlePosition({ x: 0, y: 0 });\n        await driver.windowHandleSize(size);\n    }\n\n    async getDriverInfo(driver) {\n        const desiredCapabilities = driver.desiredCapabilities;\n\n        return {\n            sessionId: driver.requestHandler.sessionID || driver.sessionId,\n            isMobile: driver.isMobile,\n            isNative: driver.isMobile && !desiredCapabilities.browserName,\n            deviceName: desiredCapabilities.deviceName,\n            platformName: desiredCapabilities.platformName || desiredCapabilities.platform,\n            platformVersion: desiredCapabilities.platformVersion,\n            browserName: desiredCapabilities.browserName ?? desiredCapabilities.name,\n            browserVersion: desiredCapabilities.browserVersion ?? desiredCapabilities.version,\n            pixelRatio: desiredCapabilities.pixelRatio,\n        };\n    }\n\n    async getTitle(driver) {\n        return driver.getTitle();\n    }\n\n    async getUrl(driver) {\n        return driver.getUrl();\n    }\n\n    async visit(driver, url) {\n        await driver.url(url);\n    }\n\n    async takeScreenshot(driver) {\n        return driver.saveScreenshot();\n    }\n\n    async click(driver, element) {\n        if (this.isSelector(element)) {\n            element = await this.findElement(driver, element);\n        }\n        await driver.elementIdClick(extractElementId(element));\n    }\n\n    async hover(driver, element, offset) {\n        if (this.isSelector(element)) {\n            element = await this.findElement(driver, element);\n        }\n        await driver.moveTo(extractElementId(element), offset?.x, offset?.y);\n    }\n\n    async type(driver, element, keys) {\n        if (this.isSelector(element)) {\n            element = await this.findElement(driver, element);\n        } else {\n            driver.elementIdValue(extractElementId(element), keys);\n        }\n    }\n\n    async scrollIntoView(driver, element, align = false) {\n        if (this.isSelector(element)) {\n            element = await this.findElement(driver, element);\n        }\n        await driver.execute('arguments[0].scrollIntoView(arguments[1])', element, align);\n    }\n\n    async waitUntilDisplayed(driver, selector, timeout) {\n        await driver.waitForVisible(selector, timeout);\n    }\n    // #endregion\n}\n\nclass EyeSdkService {\n    constructor() {\n        const { EyeSdkBuilder } = getSessionPlayer();\n        const sdkVersion = dependencies['@applitools/eyes-sdk-core'] || 'N/A';\n\n        /** @type {Core} */\n        this.sdk = makeSDK({\n            name: 'Testim.io',\n            version: `4.0.0/eyes-sdk-core/${sdkVersion}`,\n            spec: new EyesSpec(),\n        });\n        /** @type {typeof EyeSdkBuilder['handleApplitoolsSdkResult']} */\n        this.handleApplitoolsSdkResult = EyeSdkBuilder.handleApplitoolsSdkResult;\n    }\n    async getManager(useVisualGrid, concurrency, batchId, applitoolsIntegrationData) {\n        const { EyeSdkBuilder } = getSessionPlayer();\n        const manager = await this.sdk.makeManager({ type: useVisualGrid ? 'vg' : 'classic', concurrency });\n        EyeSdkBuilder.rememberCreatedBatch(batchId, applitoolsIntegrationData);\n        return manager;\n    }\n}\n\nexport const eyeSdkService = new EyeSdkService();\n", "import * as _ from 'lodash';\nimport { StepAction } from './stepAction';\nimport { getLogger } from '../../commons/logger';\nimport { eyeSdkService } from '../utils/eyeSdkService';\n\nconst logger = getLogger('pixel-validation-step-action');\n\nexport class PixelValidationStepAction extends StepAction {\n    async performAction() {\n        const { shouldUseVisualGrid, applitoolsSdkConfig: config, applitoolsSdkLogger, testResultId } = this.context;\n        this.runContext = this.context.getRunContext(undefined);\n        const finalParams = this.runContext.incomingParams?.final || {};\n        const batchId = config.batch?.id || testResultId;\n        const eyeManager = await eyeSdkService.getManager(shouldUseVisualGrid, this.context.config.applitoolsConcurrency || 5, batchId, this.runContext.applitoolsIntegrationData);\n        const targetElementData = this.getTarget() || {};\n        let result;\n        try {\n            const openedEye = await eyeManager.openEyes({ driver: this.driver.client, config, logger: applitoolsSdkLogger });\n            const region = (this.step.action === 'element' && targetElementData.seleniumElement) || undefined;\n            const settings = { region, fully: this.step.action === 'stitched' };\n            if (_.isPlainObject(finalParams.applitoolsStepSettings)) {\n                Object.assign(settings, finalParams.applitoolsStepSettings);\n                logger.info('Applitools SDK step executed with applitoolsStepSettings parameter', { applitoolsStepSettings: finalParams.applitoolsStepSettings });\n            }\n            await openedEye.check({ settings });\n            const eyesResults = await openedEye.close();\n\n            result = { isApplitoolsSdkResult: true, success: true, eyesResults };\n        } catch (err) {\n            logger.error('Applitools SDK step failed', { err, info: err.info });\n            result = { isApplitoolsSdkResult: true, success: false, err };\n        }\n        return await eyeSdkService.handleApplitoolsSdkResult(this.context, result, this.step);\n    }\n}\n", "import * as utils from '../../utils';\nimport * as service from '../../agent/routers/cliJsCode/service';\nimport { BaseJsStepAction } from './baseJsStepAction';\n\nexport class BaseCliJsStepAction extends BaseJsStepAction {\n    async executeCliCode() {\n        const { step, context } = this;\n        const isMobile = this.stepActionUtils.driver.isMobile;\n        const hasCliAction = context.company?.activePlan?.premiumFeatures?.cliAction;\n\n        if (!hasCliAction && !isMobile) {\n            return {\n                success: 'skipped',\n                reason: 'CLI action is not enabled in your current plan',\n            };\n        }\n\n        const { code, id } = step;\n        const { incomingParams, testResultId, retryIndex, stepResultId } = context;\n        const contextData = {\n            config: context.config,\n            data: context.data,\n        };\n        const runTimeout = context.data.timeToPlayStep;\n        const data = await service.runCodeWithPackages(code, id, incomingParams, contextData, testResultId, retryIndex, stepResultId, runTimeout);\n        return await this.checkCodeResponse(data);\n    }\n\n    async performAction() {\n        try {\n            return await this.executeCliCode();\n        } catch (err) {\n            const { stepResult } = this.sessionPlayerInit.commonConstants;\n            if (err instanceof utils.TimeoutError) {\n                return {\n                    success: false,\n                    errorType: stepResult.ACTION_TIMEOUT,\n                };\n            }\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n}\n", "import { BaseCliJsStepAction } from './baseCliJsStepAction';\n\nexport class CliJsStepAction extends BaseCliJsStepAction {\n    isFailedResult(resultValue) {\n        return resultValue === false;\n    }\n}\n", "import { BaseCliJsStepAction } from './baseCliJsStepAction';\n\nexport class CliConditionStepAction extends BaseCliJsStepAction {\n    isFailedResult(resultValue) {\n        return !resultValue;\n    }\n}\n", "import * as utils from '../../utils';\nimport * as service from '../../agent/routers/cliJsCode/service';\nimport { StepAction } from './stepAction';\nimport { NpmPackageError } from '../../errors';\n\nexport class NodePackageStepAction extends StepAction {\n    async performAction() {\n        const { context } = this;\n        const { stepId, packageData, resultId, retryIndex, stepResultId, timeToPlayBeforeExec } = context;\n\n        try {\n            const data = await service.installPackage(\n                stepId,\n                resultId,\n                retryIndex,\n                packageData,\n                stepResultId,\n                timeToPlayBeforeExec,\n            );\n            return ({ data, success: true });\n        } catch (err) {\n            if (err instanceof NpmPackageError) {\n                return {\n                    success: false,\n                    code: 'invalid-node-package',\n                    message: err.message,\n                };\n            }\n            if (err instanceof utils.TimeoutError) {\n                return {\n                    success: false,\n                    code: 'timeout',\n                };\n            }\n            return {\n                success: false,\n                reason: err.message,\n                exception: err,\n            };\n        }\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class ExtensionOnlyStepAction extends StepAction {\n    async performAction() {\n        return {\n            success: 'skipped',\n            reason: 'This step can run only on Chrome',\n        };\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class SfdcStepAction extends StepAction {\n    async performAction() {\n        const { sfdc } = this.sessionPlayerInit;\n        const page = sfdc.sfdcNewSePage(this.driver, this.context.sfdcLogHandler || ((level, message) => this.context.playback.sfdcAddLog(level, message)));\n        page.log.info(`BEGIN STEP '${this.step.getStepPreview?.()}'`);\n        try {\n            const actions = this.context.sfdcTestActions;\n            if (actions === undefined) {\n                throw new Error('No test actions were compiled');\n            }\n            const warnings = await sfdc.sfdcExecute(page, actions, this.context);\n            return { success: true, reason: warnings };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.reason || err.message,\n                exception: err,\n                shouldRetry: false, // TODO - check this.  Our (bFormat) steps are probably not retryable?\n            };\n        } finally {\n            page.releaseObjects();\n        }\n    }\n}\n", "import { StepAction } from './stepAction';\n\nexport class SfdcRecordedStepAction extends StepAction {\n    async performAction() {\n        const { sfdc } = this.sessionPlayerInit;\n        const page = sfdc.sfdcNewSePage(this.driver, this.context.sfdcLogHandler || ((level, message) => this.context.playback.sfdcAddLog(level, message)));\n        page.log.info(`BEGIN STEP '${this.step.getStepPreview?.()}'`);\n        try {\n            const warnings = await sfdc.sfdcExecuteRecordedStep(page, this.step.recordedData, this.context);\n            return { success: true, reason: warnings };\n        } catch (err) {\n            return {\n                success: false,\n                reason: err.reason || err.message,\n                exception: err,\n                shouldRetry: false, // TODO - check this.  Our (bFormat) steps are probably not retryable?\n            };\n        } finally {\n            page.releaseObjects();\n        }\n    }\n}\n", "// @ts-check\nimport { LocateStepAction } from './locateStepAction';\nimport { ScrollStepAction } from './scrollStepAction';\nimport { MouseStepAction } from './mouseStepAction';\nimport { TextValidationStepAction } from './textValidationStepAction';\nimport { EvaluateExpressionStepAction } from './evaluateExpressionStepAction';\nimport { TextStepAction } from './textStepAction';\nimport { JsCodeStepAction } from './jsCodeStepAction';\nimport { JsConditionStepAction } from './jsConditionStepAction';\nimport { SpecialKeyStepAction } from './specialKeyStepAction';\nimport { SelectOptionStepAction } from './selectOptionStepAction';\nimport { SubmitStepAction } from './submitStepAction';\nimport { HoverStepAction } from './hoverStepAction';\nimport { WheelStepAction } from './wheelStepAction';\nimport { DropFileStepAction } from './dropFileStepAction';\nimport { InputFileStepAction } from './inputFileStepAction';\nimport { NavigationStepAction } from './navigationStepAction';\nimport { SleepStepAction } from './sleepStepAction';\nimport { RefreshStepAction } from './RefreshStepAction';\nimport { ApiStepAction } from './apiStepAction';\nimport { ExtractTextStepAction } from './extractTextStepAction';\nimport { TdkHybridStepAction } from './tdkHybridStepAction';\nimport { PixelValidationStepAction } from './pixelValidationStepAction';\nimport { CliJsStepAction } from './cliJsStepAction';\nimport { CliConditionStepAction } from './cliConditionStepAction';\nimport { NodePackageStepAction } from './nodePackageStepAction';\nimport { ExtensionOnlyStepAction } from './extensionOnlyStepAction';\nimport { SfdcStepAction } from './sfdcStepAction';\nimport { SfdcRecordedStepAction } from './sfdcRecordedStepAction';\n/** @typedef {import('clickim/src/background/stepActions/stepActionFactory').StepActionFactory} StepActionFactory */\n\n\n/** @param {typeof STEP_ACTION_MAPPING} stepActionByType @param {StepActionFactory} stepActionFactory */\nfunction register(stepActionByType, stepActionFactory) {\n    Object.keys(stepActionByType).forEach(type => {\n        stepActionFactory.registerStepAction(type, stepActionByType[type]);\n    });\n}\n\nconst STEP_ACTION_MAPPING = {\n    locate: LocateStepAction,\n    scroll: ScrollStepAction,\n    mouse: MouseStepAction,\n    submit: SubmitStepAction,\n    text: TextStepAction,\n    'special-key': SpecialKeyStepAction,\n    'user-code': JsCodeStepAction,\n    'validation-code-step': JsCodeStepAction,\n    'wait-for-code-step': JsCodeStepAction,\n    'action-code-step': JsCodeStepAction,\n    'condition-step': JsConditionStepAction,\n    'skip-code-step': JsConditionStepAction,\n    'element-code-step': JsConditionStepAction,\n    'evaluate-expression': EvaluateExpressionStepAction,\n    'text-validation': TextValidationStepAction,\n    'wait-for-text-validation': TextValidationStepAction,\n    'select-option': SelectOptionStepAction,\n    'drop-file': DropFileStepAction,\n    'input-file': InputFileStepAction,\n    hover: HoverStepAction,\n    navigation: NavigationStepAction,\n    wheel: WheelStepAction,\n    sleep: SleepStepAction,\n    refresh: RefreshStepAction,\n    'api-validation': ApiStepAction,\n    'api-action': ApiStepAction,\n    'api-code-step': JsCodeStepAction,\n    'extract-text': ExtractTextStepAction,\n    'simple-ui-verification': PixelValidationStepAction,\n    'wait-for-simple-ui-verification': PixelValidationStepAction,\n\n    'cli-validation-download-file': ExtensionOnlyStepAction,\n    'cli-wait-for-download-file': ExtensionOnlyStepAction,\n    'network-validation-step': ExtensionOnlyStepAction,\n\n    'cli-validation-code-step': CliJsStepAction,\n    'cli-wait-for-code-step': CliJsStepAction,\n    'cli-action-code-step': CliJsStepAction,\n    'cli-api-code-step': CliJsStepAction,\n\n    'cli-condition-step': CliConditionStepAction,\n    'node-package': NodePackageStepAction,\n\n    'email-code-step': JsCodeStepAction,\n    'cli-email-code-step': CliJsStepAction,\n    'tdk-hybrid': TdkHybridStepAction,\n\n    'sfdc-recorded-step': SfdcRecordedStepAction,\n    'sfdc-step-login': SfdcStepAction,\n    'sfdc-step-loginas': SfdcStepAction,\n    'sfdc-step-logout': SfdcStepAction,\n    'sfdc-step-sobjectcreate': SfdcStepAction,\n    'sfdc-step-sobjectdelete': SfdcStepAction,\n    'sfdc-step-findrecord': SfdcStepAction,\n    'sfdc-step-quickaction': SfdcStepAction,\n    'sfdc-step-sobjectedit': SfdcStepAction,\n    'sfdc-step-sobjectvalidate': SfdcStepAction,\n    'sfdc-step-launchapp': SfdcStepAction,\n    'sfdc-step-closeconsoletabs': SfdcStepAction,\n    'sfdc-step-relatedlistaction': SfdcStepAction,\n};\n\n/**\n * @param {import('../webdriver').WebDriver} driver\n * @param {StepActionFactory} stepActionFactory\n*/\nexport function stepActionRegistrar(driver, stepActionFactory) {\n    register(STEP_ACTION_MAPPING, stepActionFactory);\n    if (stepActionFactory.registerLocateStepActionUtils) {\n        stepActionFactory.registerLocateStepActionUtils(LocateStepAction.getUtils(driver));\n    }\n}\n", "// Only for extension mode\nclass WindowCreationListener {\n    on() {}\n}\n\nexport const windowCreationListener = new WindowCreationListener();\n", "import * as _ from 'lodash';\n\nconst COMMUNICATION_BUFFER_TIME = 1000;\nconst UI_VERIFICATION_STEPS = ['simple-ui-verification', 'wait-for-simple-ui-verification'];\nconst FULL_TIMEOUT_STEP_TYPES = [\n    ...UI_VERIFICATION_STEPS,\n    'custom-validation',\n    'sfdc-recorded-step',\n    'sfdc-step-login',\n    'sfdc-step-loginas',\n    'sfdc-step-logout',\n    'sfdc-step-sobjectcreate',\n    'sfdc-step-sobjectdelete',\n    'sfdc-step-findrecord',\n    'sfdc-step-quickaction',\n    'sfdc-step-sobjectvalidate',\n    'sfdc-step-launchapp',\n    'sfdc-step-closeconsoletabs',\n    'sfdc-step-sobjectedit',\n    'sfdc-step-relatedlistaction',\n];\n\nexport class PlaybackTimeoutCalculator {\n    constructor(isDebuggerConnected) {\n        this.resetStepVariables();\n        this.resetRetryVariables();\n        this.isDebuggerConnected = isDebuggerConnected;\n    }\n\n    resetStepVariables(totalStepTime, currentRetryTimes) {\n        this.currentRetryTimes = currentRetryTimes || [];\n        this.totalStepTime = totalStepTime || 0;\n        this.totalStepTimesReport = [];\n        this.currentRetryTimesReport = {};\n        const now = Date.now();\n        this.currentRetryStart = now;\n        this.lastUpdateTime = now;\n    }\n\n    resetRetryVariables() {\n        const now = Date.now();\n        this.currentRetryStart = now;\n        this.lastUpdateTime = now;\n        this.totalStepTimesReport.push(this.currentRetryTimesReport);\n        this.currentRetryTimesReport = {};\n    }\n\n    initStepRun(stepPlayback) {\n        const getRetryTimeoutSuggestions = (totalStepTime) => {\n            const timeToPlayStep = this.getTotalStepTimeLeftToPlay(stepPlayback, totalStepTime);\n            const MINIMAL_RETRY_TIME = 5000;\n            if (timeToPlayStep <= MINIMAL_RETRY_TIME) {\n                return [MINIMAL_RETRY_TIME];\n            }\n            return [Math.max(MINIMAL_RETRY_TIME, timeToPlayStep / 3)];\n        };\n        stepPlayback.setStartTimestamp();\n        const totalStepTime = this.getTotalStepRunTime(stepPlayback);\n        const currentRetryTimes = FULL_TIMEOUT_STEP_TYPES.includes(stepPlayback.stepType) ? [totalStepTime] : getRetryTimeoutSuggestions(totalStepTime);\n        this.resetStepVariables(totalStepTime, currentRetryTimes);\n        stepPlayback.context.data.maxTotalStepTime = totalStepTime;\n    }\n\n    getStepTimes() {\n        this.totalStepTimesReport.push(this.currentRetryTimesReport);\n        return _.cloneDeep(this.totalStepTimesReport);\n    }\n\n    initRetryTime() {\n        this.resetRetryVariables();\n    }\n\n    getTotalStepRunTime(stepPlayback) {\n        const HALF_HOUR_IN_MS = 30 * 60 * 1000;\n        let fallbackTimeout = stepPlayback.context.config.stepTimeout;\n        if (UI_VERIFICATION_STEPS.includes(stepPlayback.stepType)) {\n            fallbackTimeout = stepPlayback.context.config.applitoolsStepTimeout || HALF_HOUR_IN_MS;\n        }\n        if (stepPlayback.step.type.startsWith('sfdc-')) {\n            fallbackTimeout = stepPlayback.step.defaultTimeout;\n        }\n        return (stepPlayback.step.useStepTimeout && stepPlayback.step.stepTimeout) ? stepPlayback.step.stepTimeout : fallbackTimeout;\n    }\n    getTotalStepTimeLeftToPlay(stepPlayback, totalStepTime = this.totalStepTime) {\n        const playTimeSoFar = Date.now() - stepPlayback.startTimestamp;\n        return totalStepTime - playTimeSoFar;\n    }\n    getCurrentRetryTime(stepPlayback) {\n        return (stepPlayback.retryIndex < this.currentRetryTimes.length) ?\n            this.currentRetryTimes[stepPlayback.retryIndex] :\n            this.getTotalStepTimeLeftToPlay(stepPlayback);\n    }\n    getTotalCurrentRetryTimeLeft(stepPlayback) {\n        const totalRetryTime = Date.now() - this.currentRetryStart;\n        return this.getCurrentRetryTime(stepPlayback) - totalRetryTime + COMMUNICATION_BUFFER_TIME;\n    }\n    getTabTimeout(stepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n    getDynamicParentTimeout(stepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n    getFrameTimeout(stepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n    getLocateTimeout(stepPlayback) {\n        return this.getTotalCurrentRetryTimeLeft(stepPlayback);\n    }\n\n    calcAndroidScrollTimeout(stepPlayback) {\n        const buffer = 5000;\n        let timePerEvent = 2000; // absolute scroll - 2 seconds per event + buffer\n\n        if (stepPlayback.step.isScrollToElement) {\n            // scroll to element, 4 secs per event to account for locate flow in each event\n            timePerEvent = 4000;\n        }\n\n        return (stepPlayback.step.events.length * timePerEvent) + buffer;\n    }\n\n    getActionTimeout(stepPlayback) {\n        if (this.isDebuggerConnected) {\n            return 6e5;\n        }\n        const SLEEP_ERROR_MARGIN_MS = 5000;\n        const actionType = stepPlayback.step.type;\n        const MIN_ACTION_PLAYBACK_TIME = 30000;\n\n        let actionTime;\n        if (actionType === 'sleep') {\n            actionTime = stepPlayback.step.durationMS + SLEEP_ERROR_MARGIN_MS;\n        } else if (actionType === 'android-scroll') {\n            actionTime = Math.max(this.calcAndroidScrollTimeout(stepPlayback), MIN_ACTION_PLAYBACK_TIME);\n        } else {\n            actionTime = Math.max(this.getTotalStepTimeLeftToPlay(stepPlayback), MIN_ACTION_PLAYBACK_TIME);\n        }\n        return actionTime;\n    }\n\n    setStepPhaseTime(phase) {\n        const now = Date.now();\n        const totalTime = now - this.lastUpdateTime;\n        this.lastUpdateTime = now;\n        this.currentRetryTimesReport[phase] = totalTime;\n    }\n\n    reportGetTabTime() {\n        this.setStepPhaseTime('tab');\n    }\n\n    reportGetFrameTime() {\n        this.setStepPhaseTime('frame');\n    }\n\n    reportCalcConditionTime() {\n        this.setStepPhaseTime('condition');\n    }\n\n    reportPreLocateActionsTime() {\n        this.setStepPhaseTime('pre-locate');\n    }\n\n    reportFindElementsTime() {\n        this.setStepPhaseTime('locate');\n    }\n\n    reportStepActionTime() {\n        this.setStepPhaseTime('action');\n    }\n}\n", "import * as utils from '../utils';\nimport { WebDriver } from './webdriver';\nimport { CookieUtils } from './utils/cookieUtils';\nimport { TabService } from './services/tabService';\nimport { portSelector } from './services/portSelector';\nimport { StepActionUtils } from './utils/stepActionUtils';\nimport { frameLocatorFactory } from './services/frameLocator';\nimport { isDebuggerConnected } from '../commons/detectDebugger';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { testResultService } from '../commons/socket/testResultService';\nimport { stepActionRegistrar } from './stepActions/stepActionRegistrar';\nimport { windowCreationListener } from './services/windowCreationListener';\nimport { PlaybackTimeoutCalculator } from './services/playbackTimeoutCalculator';\n\n\nexport class SeleniumTestPlayer {\n    //eslint-disable-next-line default-param-last\n    constructor(id, userParamsData, shouldMonitorPerformance, automationMode = 'code', driver = new WebDriver(), testRetryCount, previousTestResultId) {\n        const { sessionPlayer: Player, commonConstants, stepActionFactory: StepActionFactory } = getSessionPlayer();\n        this.driver = driver;\n        this.id = id;\n\n        const stepActionUtils = new StepActionUtils(this.driver);\n        this.stepActionFactory = new StepActionFactory(stepActionUtils);\n        stepActionRegistrar(this.driver, this.stepActionFactory);\n\n        this.tabService = this.driver.tabService || new TabService(this.driver);\n        // expose the tabService on the driver so future sessions reusing the driver\n        // know the tabs (for example - a TDK Hybrid step)\n        this.driver.tabService = this.tabService;\n        this.windowCreationListener = windowCreationListener;\n        this.playbackTimeoutCalculator = new PlaybackTimeoutCalculator(isDebuggerConnected());\n\n        this.tabService.createSesion(id);\n\n        const FrameLocator = frameLocatorFactory(this.driver);\n\n        this.sessionPlayer = new Player(\n            id,\n            this.tabService,\n            new CookieUtils(this.driver),\n            windowCreationListener,\n            FrameLocator,\n            portSelector,\n            null,\n            null /* Not in use, placeholder for the order of arguments */,\n            stepActionUtils,\n            this.stepActionFactory,\n            this.playbackTimeoutCalculator,\n            testResultService.getSocket(),\n            automationMode,\n        );\n\n        if (this.sessionPlayer.setShouldMonitorPerformance) {\n            this.sessionPlayer.setShouldMonitorPerformance(shouldMonitorPerformance);\n        }\n\n        this.tabService.setAddFrameHandlerCallBack(this.sessionPlayer.addPlaybackFrameHandler.bind(this.sessionPlayer));\n\n        this.sessionPlayer.playbackManager.isRemoteSession = true;\n        this.sessionPlayer.playbackManager.isLocalRun = false;\n        this.sessionPlayer.playbackManager.testRetryCount = testRetryCount;\n        this.sessionPlayer.playbackManager.previousTestResultId = previousTestResultId;\n\n        this.sessionPlayer.playbackManager.userParamsData = userParamsData || {};\n\n        this.onStepCompleted = this.onStepCompleted.bind(this);\n\n        this.sessionPlayer.playbackManager.on(commonConstants.playback.RESULT, this.onStepCompleted);\n    }\n\n    onStepCompleted(result, testId, resultId, step) {\n        if (step?.isTabOpener) {\n            this.tabService.addNewPopup(this.id, step.id)\n                .catch(() => { });\n        }\n    }\n\n    onDone() {\n        const { commonConstants } = getSessionPlayer();\n        const END_DRIVER_TIMEOUT = 1000 * 60 * 2;\n        return utils.promiseTimeout(this.driver.end(), END_DRIVER_TIMEOUT)\n            .catch(error => {\n                if (error instanceof utils.TimeoutError) {\n                    return this.driver.forceEnd().catch(() => null);\n                }\n                return undefined;\n            })\n            .then(() => {\n                this.sessionPlayer.playbackManager.off(commonConstants.playback.RESULT, this.onStepCompleted);\n                this.sessionPlayer = null;\n                this.tabService = null;\n                this.stepActionFactory = null;\n                this.driver = null;\n            });\n    }\n\n    clearSessionTabs() {\n        this.tabService.clearAllTabs(this.id);\n    }\n\n    /**\n     * @param {string=} openerStepId\n     * @param {object} options\n     */\n    async addTab(openerStepId, options = { loadInfo: true }) {\n        const ids = await this.driver.getTabIds();\n        const lastId = ids.at(-1);\n        await this.tabService.addNewTab(this.id, lastId, openerStepId, options);\n        return this.sessionPlayer.addPlaybackFrameHandler(lastId, undefined, { emptyPage: true });\n    }\n\n    async addAllTabs(openerStepId, options = { loadInfo: true, checkForMainTab: true, takeScreenshots: true }, blackList = []) {\n        const ids = await this.driver.getTabIds();\n        // the ids are reversed so we search first in the last tab opened - otherwise it starts looking from the testim editor and not the AUT\n\n        const PROHIBITED_URLS = ['app.testim.io'].concat(blackList);\n        for (const id of ids.reverse()) {\n            await this.tabService.addNewTab(this.id, id, openerStepId, { ...options, forceSwitch: true });\n            const tabInfo = this.tabService.getTabInfo(this.id, id);\n            if (PROHIBITED_URLS.some(bad => tabInfo.url.includes(bad))) {\n                await this.tabService.removeTabInfo(this.id, id);\n                continue;\n            }\n            await this.sessionPlayer.addPlaybackFrameHandler(id, undefined, { emptyPage: true });\n        }\n        if (this.tabService.tabCount(this.id) === 1) {\n            // if we only have one tab because we removed the editor tab - we have to switchTab to one of the other tabs, otherwise\n            // tabService will assume it's on a good context but it's not.\n            const tabInfo = this.tabService.getMainTabInfo(this.id);\n            const tabUtils = this.tabService.getTabUtils(this.id, tabInfo);\n            await this.tabService.switchTab(tabUtils.tabId, this.id, { forceSwitch: true });\n        }\n        // deal with checkForMainTab failing due to the page refreshing or JavaScript not responding or a similar issue\n        this.tabService.fixMissingMainTab(this.id);\n    }\n\n    getSessionId() {\n        return this.driver.getSessionId();\n    }\n}\n", "import * as _ from 'lodash';\nimport * as path from 'path';\nimport * as utils from '../utils';\nimport MemoryFS from 'memory-fs';\nimport { ArgError, AbortError } from '../errors';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport type { RunnerOptions } from '../runOptions';\nimport type { Compiler, Configuration, DevtoolModuleFilenameTemplateInfo, Stats } from 'webpack';\n\n// compiler instance we can reuse between calls\nconst state = {\n    compiler: null as Compiler | null,\n    webpackConfig: null as Configuration | null,\n};\n\nexport interface TDKTest {\n    code: string;\n    baseUrl: string;\n    name: string;\n    testConfig: {};\n    testConfigId: null;\n    testId: string;\n    resultId: string;\n    isTestsContainer: boolean;\n}\nexport interface TDKSuite { tests: [TDKTest[]]; runName: string }\n\nasync function buildCodeTestsGuarded(\n    files: string[],\n    webpackConfig?: Configuration,\n    runnerOptionsToMaybeCopyToTestEnvironment?: Partial<RunnerOptions>,\n    fileSystem?: MemoryFS,\n    optionalAbortSignal?: AbortSignal,\n): Promise<TDKSuite> {\n    try {\n        return await _buildCodeTests(files, webpackConfig, runnerOptionsToMaybeCopyToTestEnvironment, fileSystem, optionalAbortSignal);\n    } catch (e) {\n        if (e?.code === 'ENOENT') {\n            // this is a webpack config error - it means webpack didn't pick up on a file change and didn't generate the correct bundle according to the guid hash\n            state.compiler = null;\n            state.webpackConfig = null;\n            if (fileSystem) {\n                fileSystem.data = {}; // reset the memory filesystem in case we left a mess there in the previous invocation\n            }\n            return await _buildCodeTests(files, webpackConfig, runnerOptionsToMaybeCopyToTestEnvironment, fileSystem, optionalAbortSignal);\n        }\n        throw e;\n    }\n}\nexport const buildCodeTests = buildCodeTestsGuarded;\n\nasync function _buildCodeTests(\n    files: string[],\n    webpackConfig: Configuration = { mode: 'development' },\n    runnerOptionsToMaybeCopyToTestEnvironment: Partial<RunnerOptions> | undefined = undefined,\n    fileSystem: MemoryFS | undefined = undefined,\n    optionalAbortSignal: AbortSignal | undefined = undefined,\n): Promise<TDKSuite> {\n    const webpack = await lazyRequire('webpack') as typeof import('webpack');\n\n    const webpackConfigBeforeOurChanges = _.cloneDeep(webpackConfig);\n\n    webpackConfig.externals = { // define testim as an external\n        testim: '__testim',\n        // 'chai': '__chai'\n    };\n    webpackConfig.devtool ||= 'inline-source-map';\n\n    webpackConfig.plugins ||= [];\n\n    webpackConfig.plugins.push(new webpack.DefinePlugin(getEnvironmentVariables(runnerOptionsToMaybeCopyToTestEnvironment)), new webpack.DefinePlugin({\n        'process.argv': JSON.stringify(process.argv),\n    }));\n    files = files.map(f => path.resolve(f));\n\n    const fileHashes = files.map(() => utils.guid(30));\n\n    webpackConfig.optimization = { minimize: false };\n\n    const majorNodeVersion = Number(process.versions.node.split('.')[0]);\n    if (majorNodeVersion >= 17) {\n        // TODO ugly hack to be removed once using Webpack 5 - https://stackoverflow.com/a/73465262 + https://github.com/webpack/webpack/issues/14532\n        const crypto = require('crypto') as typeof import('crypto');\n        const originalCryptoCreateHash = crypto.createHash;\n        crypto.createHash = (algorithm, options) => originalCryptoCreateHash(algorithm === 'md4' ? 'sha256' : algorithm, options);\n    }\n\n    webpackConfig.entry = Object.fromEntries(_.zip(files, fileHashes).map(([filename, hash]) => [hash, filename]));\n    webpackConfig.output = Object.assign({\n        devtoolModuleFilenameTemplate: (info: DevtoolModuleFilenameTemplateInfo) => `file:///${info.absoluteResourcePath}`,\n        filename: '[name].bundle.js',\n    }, webpackConfig.output);\n\n\n    let compiler: Compiler | undefined | null;\n    // if we are passed a filesystem, assume reuse between calls and turn on watch mode\n    if (fileSystem) {\n        // were we passed a filesystem before to compile the same thing?\n        if (_.isEqual(state.webpackConfig, webpackConfigBeforeOurChanges) && state.compiler) {\n            // we already have a compiler up and running\n            compiler = state.compiler;\n        } else {\n            state.webpackConfig = webpackConfigBeforeOurChanges;\n            state.compiler = webpack(webpackConfig);\n            compiler = state.compiler;\n        }\n    } else {\n        compiler = webpack(webpackConfig); // no caching\n    }\n\n    const mfs = fileSystem || new MemoryFS();\n    compiler.outputFileSystem = mfs; // no need to write compiled tests to disk\n\n    // This can only reject\n    const abortSignalPromise = utils.promiseFromCallback<AbortError, undefined>(cb => {\n        optionalAbortSignal?.addEventListener('abort', () => {\n            cb(new AbortError(), undefined);\n        });\n    });\n\n    // run compiler:\n    try {\n        const stats = await Promise.race([utils.promiseFromCallback<Error, Stats>(cb => compiler!.run(cb)), abortSignalPromise]);\n        if (stats?.hasErrors()) {\n            throw new Error(stats?.toJson().errors.toString());\n        }\n    } catch (e) {\n        const cantFindFile = e.message.match(/Entry module not found: Error: Can't resolve '(.*)'/);\n        if (cantFindFile && cantFindFile.length === 2) {\n            if (webpackConfig.output && webpackConfig.output.library === 'tdk') {\n                throw new ArgError(`Could not open dev-kit functions file in ${cantFindFile[1]}`);\n            }\n            throw new ArgError(`Can't find test files in: '${cantFindFile[1]}'`);\n        }\n\n        throw new ArgError(`Compilation Webpack Error in tests: ${e.message}`);\n    }\n\n    const fileResults = files.map<{ code: string; name: string }>((file, i) => ({ code: mfs.readFileSync(path.resolve('./dist', `${fileHashes[i]}.bundle.js`)), name: file })); // read all files\n\n    const suite: TDKSuite = {\n        tests: [fileResults.map(({ code, name }) => ({\n            code: code.toString(),\n            baseUrl: '', // not supported at the moment\n            name: path.resolve(name),\n            testConfig: {},\n            testConfigId: null,\n            testId: utils.guid(),\n            resultId: utils.guid(),\n            isTestsContainer: true,\n        }))],\n        runName: `Testim Dev Kit Run ${new Date().toLocaleString()}`,\n    };\n    return suite;\n}\n\n// copied mostly from facebook/create-react-app/blob/8b7b819b4b9e6ba457e011e92e33266690e26957/packages/react-scripts/config/env.js\nfunction getEnvironmentVariables(runnerOptionsToMaybeCopyToTestEnvironment: Partial<RunnerOptions> | undefined) {\n    const fromEnvironment = _.fromPairs(\n        Object.keys(process.env)\n            .filter(key => /^TDK_/i.test(key) || key === 'BASE_URL')\n            .map(key => [key, process.env[key]]),\n    );\n\n    const fromConfig = {\n        BASE_URL: runnerOptionsToMaybeCopyToTestEnvironment?.baseUrl,\n    };\n\n    return {\n        'process.env': stringifyValues({ ...fromConfig, ...fromEnvironment }),\n    };\n}\nfunction stringifyValues(object: object) {\n    return Object.fromEntries(Object.entries(object).map(([key, value]) => [key, JSON.stringify(value)]));\n}\n", "import * as _ from 'lodash';\nimport * as path from 'path';\nimport { promises as fsPromises } from 'fs';\nimport { AbortError } from '../../../errors';\nimport { buildCodeTests } from '../../../runners/buildCodeTests';\n\nexport const findTestFolder = _.memoize(async (fromFolder) => {\n    const files = await fsPromises.readdir(fromFolder);\n    // this is either invoked by running the Testim CLI from inside the tests folder or from inside the `init` folder\n    // so deal with the case we're inside tests.\n    const isInProjectFolder = files.includes('tests') && (await fsPromises.stat(path.join(fromFolder, 'tests'))).isDirectory();\n    if (isInProjectFolder) {\n        return path.join(fromFolder, 'tests');\n    }\n    return fromFolder;\n});\n\nexport async function getLocalLocators() {\n    const folder = await findTestFolder(process.cwd());\n    const locatorsFilePath = path.join(folder, 'locators', 'locators.js');\n    function parseLocators(buffer) {\n        // remove require calls to not read all the locators into memory when evaluating\n        const codeWithoutRequires = buffer.toString().replace('module.exports =', 'return').replace(/require/g, '(x => /locator\\.(.*)\\.json/.exec(x)[1])');\n        return new Function(codeWithoutRequires)();\n    }\n    const locators = await fsPromises.readFile(locatorsFilePath).then(parseLocators, () => ({}));\n    return Object.fromEntries(Object.keys(locators).map(id => {\n        const escapedId = id.replace(/\"/g, '\\\\\"');\n        return [escapedId, locators[id]];\n    }));\n}\n\nexport async function findTests(folder = process.cwd()) {\n    const testFolder = await findTestFolder(folder);\n    const filesWithStat = await fsPromises.readdir(testFolder, { withFileTypes: true });\n\n    // things we know are not tests but end in js\n    const excluded = ['webpack.config.js', 'tsconfig.js', '.DS_Store', 'functions.js'];\n    const excludedFileTypes = ['.html', '.json'];\n    return filesWithStat\n        .filter(x =>\n            !excluded.includes(x.name) &&\n            !excludedFileTypes.some(type => x.name.endsWith(type)) &&\n            x.isFile() &&\n            !x.name.startsWith('.'),\n        )\n        .map(x => x.name);\n}\n\n/**\n * @param {Record<string, object | Promise<object>>} propsObject\n * @returns {Promise<Record<string, object>>}\n * */\nasync function promiseFromProps(propsObject) {\n    const entries = Object.entries(propsObject);\n    const values = entries.map(([, value]) => value);\n    const resolvedValues = await Promise.all(values);\n    for (let i = 0; i < resolvedValues.length; i++) {\n        entries[i][1] = resolvedValues[i];\n    }\n    return Object.fromEntries(entries);\n}\n\nexport async function getLocalLocatorContents(locators, full = false, originFolder = process.cwd()) {\n    const props = {};\n    if (full) {\n        const folder = await findTestFolder(originFolder);\n        for (const key of Object.values(locators)) {\n            props[key] = fsPromises.readFile(path.join(folder, 'locators', `locator.${key}.json`)).then(JSON.parse);\n        }\n    }\n    try {\n        const contents = await promiseFromProps(props);\n        return contents;\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        return {};\n    }\n}\n\nexport async function saveTest({\n    body, name, locators, language = 'javascript',\n}) {\n    const folder = await findTestFolder(process.cwd());\n    const locatorsFilePath = path.join(folder, 'locators', 'locators.js');\n    let filename = path.join(folder, name);\n    if (!filename.startsWith(folder)) {\n        throw new Error('A test name must be a valid file name and inside the tests directory');\n    }\n    if (language === 'javascript') {\n        if (filename.endsWith('.js') && !filename.endsWith('.test.js')) {\n            filename = `${filename.substr(0, filename.length - 3)}.test.js`;\n        } else if (!filename.endsWith('.test.js')) {\n            filename += '.test.js';\n        }\n    } else if (filename.endsWith('.ts') && !filename.endsWith('.test.ts')) {\n        filename = `${filename.substr(0, filename.length - 3)}.test.ts`;\n    } else if (!filename.endsWith('.test.ts')) {\n        filename = `${filename}.test.ts`;\n    }\n    if (filename.endsWith('locators/locators.js')) {\n        throw new Error('Cannot override locators file from the internet as it is evaluated by the runner');\n    }\n    await fsPromises.writeFile(filename, body);\n    await fsPromises.mkdir(path.join(folder, 'locators')).catch(() => {});\n    for (const { id, body: _body } of locators) {\n        await fsPromises.writeFile(path.join(folder, 'locators', `locator.${id}.json`), JSON.stringify(_body));\n    }\n    const locatorMap = Object.fromEntries(locators.map(({ name: _name, id }) => [_name, id]));\n    const localLocatorMap = await getLocalLocators();\n    Object.assign(localLocatorMap, locatorMap);\n    await writeLocators(locatorsFilePath, localLocatorMap);\n}\n\nasync function writeLocators(locatorsFilePath, locatorMap) {\n    let content = 'module.exports = {\\n';\n    for (const [key, value] of Object.entries(locatorMap)) {\n        content += `  \"${key}\": require('./locator.${value}.json'),\\n`;\n    }\n    content += '};';\n    await fsPromises.writeFile(locatorsFilePath, content);\n}\n\nexport async function saveLocators(locators, { mergeIntoExisting } = { mergeIntoExisting: false }) {\n    const folder = await findTestFolder(process.cwd());\n    const locatorsFilePath = path.join(folder, 'locators', 'locators.js');\n    await fsPromises.mkdir(path.join(folder, 'locators')).catch(() => {});\n\n    for (const { name, id, elementLocator } of locators) {\n        await fsPromises.writeFile(path.join(folder, 'locators', `locator.${id}.json`), JSON.stringify({ name, id, elementLocator }));\n    }\n    const locatorMap = Object.fromEntries(locators.map(({ name, id }) => [name, id]));\n    if (mergeIntoExisting) {\n        const localLocatorMap = await getLocalLocators();\n        Object.assign(locatorMap, localLocatorMap);\n    }\n\n    await writeLocators(locatorsFilePath, locatorMap);\n}\n\nexport async function compileFunctionsLibrary({ fileSystem, bypassWebpack } = {}, optionalAbortSignal = undefined) {\n    const folder = await findTestFolder(process.cwd());\n    if (optionalAbortSignal?.aborted) {\n        throw new AbortError();\n    }\n\n    const functionsFile = path.join(folder, 'functions.js');\n    if (bypassWebpack?.testim) {\n        const Module = require('module');\n        // attempt to require without webpack compile - useful for puppeteer/selenium hybrid\n        const originalRequire = Module.prototype.require;\n        Module.prototype.require = function requireThatOverridesTestimTDK(id) {\n            if (id === 'testim') {\n                return bypassWebpack.testim;\n            }\n            // eslint-disable-next-line prefer-rest-params\n            return originalRequire.apply(this, arguments);\n        };\n        try {\n            // delete references to the old __testim from previous invocations\n            delete require.cache[require.resolve(functionsFile)];\n            const functions = require(functionsFile); // eslint-disable-line import/no-dynamic-require\n            // asynchronous require not supported - is this fine?\n            return functions;\n        } finally {\n            Module.prototype.require = originalRequire;\n        }\n    }\n    const functionsAsAWebpackModule = await buildCodeTests([functionsFile], {\n        output: {\n            libraryTarget: 'umd',\n            library: 'tdk',\n            globalObject: 'globalThis',\n        },\n        cache: {\n            type: 'memory',\n        },\n        mode: 'development', // better debugging\n    }, {}, fileSystem, optionalAbortSignal);\n    // we always compile a single suite and a single file here\n    return functionsAsAWebpackModule.tests[0][0].code;\n}\n", "'use strict';\n\nexport async function getArgumentsFromContext(\n    step,\n    context,\n    locatorStrategy,\n) {\n    const argsInCorrectOrder = fixArgsOrdering(step.parameterNames.map(p => p.displayName), context.incomingParams.as);\n\n    return await Promise.all(argsInCorrectOrder.map(arg => {\n        if (typeof arg === 'object' && arg.locatedElement) {\n            return locatorStrategy(arg);\n        }\n        return arg;\n    }));\n}\n\nfunction fixArgsOrdering(parametersInOrder, incomingParamsAs) {\n    const finalList = [];\n\n    for (const p of parametersInOrder) {\n        // this is expected to always find index\n        const index = incomingParamsAs.functionParameters.indexOf(p);\n        finalList.push(incomingParamsAs.functionArguments[index]);\n    }\n\n    return finalList;\n}\n", "'use strict';\n\nconst { AbortError } = require('../errors');\nconst { lazyRequire } = require('../commons/lazyRequire');\nconst { getArgumentsFromContext } = require('../codim/hybrid-utils');\n\nexport const execute = executeSeleniumFunction;\nasync function executeSeleniumFunction(player, hybridFunction, step, context, source, abortSignal) {\n    /** @type {(() => void) | undefined} */\n    let onAbort;\n\n    // with selenium - we don't have any instrumentation - so we just run the code.\n    try {\n        // selenium hybrid test\n        /** @type {import('selenium-webdriver')} */\n        const { WebDriver } = await lazyRequire('selenium-webdriver');\n\n        if (abortSignal.aborted) {\n            throw new AbortError();\n        }\n\n        // eslint-disable-next-line import/no-unresolved\n        const { Executor, HttpClient } = require('selenium-webdriver/http');\n\n        const webdriverOptions = player.driver.client.requestHandler.defaultOptions;\n        const startPath = player.driver.client.requestHandler.startPath;\n        const seleniumServerUrl = `${webdriverOptions.protocol}://${webdriverOptions.hostname}:${webdriverOptions.port}`;\n        const seleniumUrl = seleniumServerUrl + startPath; // we do not add startPath since selenium-webdriver adds /wd/hub on its own + startPath;\n        const client = new HttpClient(seleniumUrl);\n        const webDriver = new WebDriver(player.getSessionId(), new Executor(client));\n\n        // find main tab\n        await fixSeleniumMainTab(webDriver, player.driver);\n\n        const getLocator = arg => webDriver.findElement({ css: arg.selector });\n\n        const args = await getArgumentsFromContext(step, context, getLocator);\n        const fn = hybridFunction.bind(null, webDriver, ...args);\n\n        onAbort = function () {\n            // We don't have real way to abort user code, So we kill the http client of the WebDriver\n            client.send = async function send() {\n                throw new AbortError();\n            };\n        };\n        abortSignal.addEventListener('abort', onAbort);\n\n        await fn();\n        return { success: true };\n    } catch (e) {\n        if (abortSignal.aborted) {\n            return { success: false, shouldRetry: false, reason: 'aborted' };\n        }\n\n        return {\n            success: false,\n            shouldRetry: false,\n            reason: (e?.message || e),\n            extraInfo: e?.constructor?.name,\n        };\n    } finally {\n        if (onAbort) {\n            abortSignal.removeEventListener('abort', onAbort);\n        }\n    }\n}\n\nasync function fixSeleniumMainTab(webDriver, driver) {\n    if (!driver.cdpUrl) {\n        // remote run\n        return;\n    }\n    {\n        const contexts = await webDriver.getAllWindowHandles();\n        for (const context of contexts) {\n            await webDriver.switchTo().window(context);\n            const isMainTab = await webDriver.executeScript('return window.__isMainTestimTab');\n            if (isMainTab) {\n                break;\n            }\n        }\n    }\n}\n", "import { AbortError } from '../errors';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport { getArgumentsFromContext } from '../codim/hybrid-utils';\n\nexport const execute = executePuppeteerFunction;\nasync function executePuppeteerFunction(player, hybridFunction, step, context, source, abortSignal) {\n    /** @type {(() => void) | undefined} */\n    let onAbort;\n\n    try {\n        /** @type {typeof import('puppeteer')} */\n        const puppeteer = await lazyRequire('puppeteer');\n\n        if (abortSignal.aborted) {\n            throw new AbortError();\n        }\n\n        const browser = await puppeteer.connect({\n            browserWSEndpoint: player.driver.cdpUrl,\n            defaultViewport: null, // disable puppeteer resize\n            product: 'chrome', //\n        });\n\n        if (abortSignal.aborted) {\n            browser.disconnect();\n            throw new AbortError();\n        }\n\n        onAbort = function () {\n            // this will make puppeteer action to fail\n            browser.disconnect();\n        };\n\n        abortSignal.addEventListener('abort', onAbort);\n\n        const pages = await browser.pages();\n        let foundMainPage;\n\n        for (const page of pages) {\n            // eslint-disable-next-line no-loop-func, no-undef\n            if (await page.evaluate(() => window.__isMainTestimTab)) {\n                foundMainPage = page;\n                break;\n            }\n        }\n\n        const page = foundMainPage || pages.at(-1);\n        const getLocator = arg => page.$(arg.selector);\n\n        const args = await getArgumentsFromContext(step, context, getLocator);\n        const fn = hybridFunction.bind(null, page, ...args);\n\n\n        await fn();\n        return { success: true };\n    } catch (e) {\n        if (abortSignal.aborted) {\n            return { success: false, shouldRetry: false, reason: 'aborted' };\n        }\n\n        return {\n            success: false,\n            shouldRetry: false,\n            reason: (e?.message || e),\n            extraInfo: e?.constructor?.name,\n        };\n    } finally {\n        abortSignal.removeEventListener('abort', onAbort);\n    }\n}\n", "import { AbortError } from '../errors';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport { getArgumentsFromContext } from '../codim/hybrid-utils';\n\nexport const execute = executePlaywrightFunction;\nasync function executePlaywrightFunction(player, hybridFunction, step, testimContext, source, abortSignal) {\n    /** @type {(() => void) | undefined} */\n    let onAbort;\n\n    try {\n        const playwright = await lazyRequire('playwright');\n\n        if (abortSignal.aborted) {\n            throw new AbortError();\n        }\n\n        const browser = await playwright.chromium.connect({\n            wsEndpoint: player.driver.cdpUrl,\n        });\n\n        if (abortSignal.aborted) {\n            browser.disconnect();\n            throw new AbortError();\n        }\n\n        onAbort = function () {\n            // this will make any future browser action to fail\n            browser.disconnect();\n        };\n        abortSignal.addEventListener('abort', onAbort);\n\n        //TODO(Benji) https://github.com/microsoft/playwright/issues/1985\n\n        const playwrightContext = await browser.newContext({ viewport: null });\n        const pages = await playwrightContext.pages();\n        const page = pages.at(-1);\n        const getLocator = arg => page.$(arg.selector);\n        const args = await getArgumentsFromContext(step, testimContext, getLocator);\n        const fn = hybridFunction.bind(null, page, ...args);\n\n        await fn();\n        return { success: true };\n    } catch (e) {\n        if (abortSignal.aborted) {\n            return { success: false, shouldRetry: false, reason: 'aborted' };\n        }\n\n        return {\n            success: false,\n            reason: (e?.message || e),\n            extraInfo: e?.constructor?.name,\n        };\n    } finally {\n        if (onAbort) {\n            abortSignal.removeEventListener('abort', onAbort);\n        }\n    }\n}\n", "import * as _ from 'lodash';\nimport * as perfLogger from '../commons/performance-logger';\nimport { guid } from '../utils';\nimport { AbortError } from '../errors';\nimport { getArgumentsFromContext } from '../codim/hybrid-utils';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\n\nexport const execute = executeTdkFunction;\nasync function executeTdkFunction(player, hybridFunction, context, loginData, frameManager, step, source, abortSignal) {\n    function onAbort() {\n        player.sessionPlayer.stopPlaying();\n    }\n\n    abortSignal.addEventListener('abort', onAbort);\n\n    function getLocator(arg) {\n        if (step.parameterValues) { // tdk is all grown up and can run real locators\n            const locateStep = step.parameterValues.find(param => param.type === 'locate' && param.id === arg.locatorId);\n            return { elementLocator: locateStep.elementLocator, id: locateStep.id, name: 'Hybrid Step Locator' };\n        }\n        if (!arg.locatedElement.shadowPath) {\n            return arg; // wat\n        }\n        // fallback to selector, this should never happen in practice except when there was\n        // no locator to begin with (like if we expose reverse-hybrid to TDK)\n        return arg.locatedElement.shadowPath[0];\n    }\n    const args = await getArgumentsFromContext(step, context, getLocator);\n    const fn = hybridFunction.bind(null, ...args);\n\n    // assign same framemanager\n    const testId = guid();\n    const executionId = guid(); // we don't use the same execution ID to not associate the run with the suite and trigger bugs in features like \"rerun by failed run id\"\n    const resultId = context.testResultId; // this isn't the TDK result id - it's the _parent_ result ID tdk nests under.\n    const baseUrl = context.config.baseUrl;\n    const userData = _.cloneDeep(context); // the context contains everything needed as userData except login data\n    userData.loginData = loginData;\n    const sessionPlayerInit = getSessionPlayer();\n    const version = sessionPlayerInit.manifestVersion || 'runner';\n    const isLocalRun = false;\n    const overrideTestConfigId = null;\n    const branch = 'master'; // With TDK - branches are meaningless\n    const testName = `Execute TDK Function '${step.functionName}'`;\n    const ignoreNavigation = true;\n\n\n    const codeTest = {\n        fn,\n        bypassSetup: true, // don't setup and resize according to the TestConfig when starting\n        isBeforeOrAfterTest: true, // not a full test - don't perform \"must contain assertions\" validation\n        name: testName,\n        sourceCode: fn.toString(),\n        sourceName: fn.name,\n        testId,\n        resultId: guid(), // we don't want to reuse the resultId of the parent for the child - we need a new resultId\n    };\n    const onlyLocalReporting = typeof hybridFunction.results === 'boolean' && !hybridFunction.results;\n    try {\n        perfLogger.log('tdkHybridStepPlayback before addAllTabs');\n        if (frameManager) { // we have a frameManager we can reuse\n            player.sessionPlayer.playbackAutUtils.frameManager = frameManager;\n            player.sessionPlayer.frameManager = frameManager;\n        } else {\n            // otherwise, we have to tell the session player about them tabs\n            //TODO(benji) call getEditorUrl?\n            await player.addAllTabs(null, { loadInfo: true, checkForMainTab: true, takeScreenshots: !onlyLocalReporting }, [player.driver.initialUrl]);\n        }\n        player.sessionPlayer.playbackManager.dontAssociateChildResult = true; // don't associate child result to this test result.\n        player.sessionPlayer.playbackManager.onlyLocalReporting = onlyLocalReporting;\n        perfLogger.log('tdkHybridStepPlayback before playTestByCode');\n        const testResult = await new Promise((resolve, reject) => {\n            if (source === 'agent') {\n                resolveOnTestResultAndNotAssetsUploaded(player, resolve);\n            }\n            function _onAbort() {\n                reject(new AbortError());\n                abortSignal.removeEventListener('abort', _onAbort);\n            }\n\n            abortSignal.addEventListener('abort', _onAbort);\n\n            player.sessionPlayer.playTestByCode(\n                testId, executionId, resultId, baseUrl, userData, version, resolve, isLocalRun, overrideTestConfigId, branch, [codeTest], testName, ignoreNavigation,\n            ).catch(reject);\n        });\n        perfLogger.log('tdkHybridStepPlayback after playTestByCode');\n        // testResult.status?\n        return { success: testResult.success, shouldRetry: false, resultInfo: { testId, executionId, resultId: codeTest.resultId } };\n    } catch (e) {\n        return { success: false, error: e, shouldRetry: false };\n    } finally {\n        abortSignal.removeEventListener('abort', onAbort);\n    }\n}\n\nfunction resolveOnTestResultAndNotAssetsUploaded(player, resolve) {\n    const { commonConstants } = getSessionPlayer();\n    player.sessionPlayer.playbackManager.on(commonConstants.playback.START, ({ testResult }) => {\n        let runnerStatus = testResult.runnerStatus;\n        Object.defineProperty(testResult, 'runnerStatus', {\n            get() { return runnerStatus; },\n            set(value) {\n                runnerStatus = value;\n                if (value === 'FINISHED') {\n                    // resolve as soon as the runner is finished, before assets are uploaded\n                    resolve(testResult);\n                }\n            },\n        });\n    });\n}\n", "import MemoryFS from 'memory-fs';\nimport * as perfLogger from '../commons/performance-logger';\nimport { AbortController } from 'abort-controller';\nimport { getLogger } from '../commons/logger';\nimport { sessionType } from '../commons/constants';\n\nconst mfs = new MemoryFS();\nconst logger = getLogger('hybrid-step-playback');\n\n/**\n * @type {Map<string, import('abort-controller')>}\n */\nconst runningStepsAbortControllersRegistry = new Map();\n\n// TODO(Benji) cache compile between runs with webpack cache plugin or runnerFileCache\n/** @type {import('clickim/src/background/session/code-session-player').CodeSessionPlayer['proxy'] | undefined} */\nlet stepsProxy;\n\nexport const run = (driver, remoteStep, projectData, userData) => {\n    const { step, context } = remoteStep.data;\n    return execute(step, context, driver, userData.loginData);\n    // (step, context, driver, loginData, frameManager)\n};\n\n// this function is exported as a \"make sense API\", `run` above is the remote run signature for polymorphic dispatch\nexport async function execute(step, context, driver, loginData, frameManager, source = 'cli') {\n    const abortController = new AbortController();\n    const { signal: abortSignal } = abortController;\n\n    runningStepsAbortControllersRegistry.set(context.stepResultId, abortController);\n\n    try {\n        perfLogger.log('before seleniumTestPlayer require');\n        const { SeleniumTestPlayer } = require('../player/seleniumTestPlayer');\n        const { compileFunctionsLibrary } = require('../agent/routers/codim/service');\n\n        const { functionName } = step;\n        const userParamsData = {}; // no tdk access\n        //TODO (benji) read function parameters and arguments from context.incomingParams.as\n        const shouldMonitorPerformance = false;\n        const player = new SeleniumTestPlayer(\n            context.id, // has to be on the same session ID to reuse the same tabs from tabService\n            userParamsData,\n            shouldMonitorPerformance,\n            sessionType.CODEFUL,\n            driver,\n        );\n\n        stepsProxy = player.sessionPlayer.codeSessionPlayer.proxy;\n        // reuse the same memory filesystem between runs for cache\n\n        const bypassWebpack = step.bypassWebpack ? { testim: stepsProxy.wrappedSteps() } : false;\n\n        perfLogger.log('before compileFunctionsLibrary', { bypassWebpack: Boolean(step.bypassWebpack) });\n        let code;\n        try {\n            code = await compileFunctionsLibrary({ fileSystem: mfs, bypassWebpack }, abortSignal);\n        } catch (e) {\n            return { success: false, shouldRetry: false, reason: `Unable to compile functions library. ${e.message}`, extraInfo: e.stack };\n        }\n\n        if (typeof globalThis === 'undefined') { // fix for Node 8 and Node 10\n            global.globalThis = process;\n        }\n        let hybridFunction;\n        if (!bypassWebpack) {\n            global.globalThis.__testim = stepsProxy.wrappedSteps();\n            // this evaluates the code while exposing __testim. We manually expose the proxy here since\n            // our test-extractor code assumes it's extracting tests and this just needs to \"eval\" the whole file\n            (0, eval)(code); // eslint-disable-line no-eval\n            hybridFunction = globalThis.tdk[functionName];\n        } else {\n            hybridFunction = code[functionName];\n        }\n\n        perfLogger.log('after hybridFunction obtain and eval');\n        if (!hybridFunction) {\n            return {\n                success: false,\n                shouldRetry: false,\n                reason: `Could not find function '${functionName}' locally. Please make sure you have a functions.js file with a '${functionName}' function defined`,\n                extraInfo: Object.keys(globalThis.tdk), // log available functions to make debugging easier\n            };\n        }\n\n        if (hybridFunction.type === 'selenium') {\n            const seleniumPlayback = require('./seleniumHybridStepPlayback').execute;\n            return await seleniumPlayback(player, hybridFunction, step, context, source, abortSignal);\n        }\n        if (hybridFunction.type === 'puppeteer') {\n            if (!player.driver.cdpUrl) {\n                return { success: false, shouldRetry: false, reason: 'running puppeteer code requires the remote debugging protocol to be open. Please contact Testim support.' };\n            }\n            perfLogger.log('before puppeteerPlayback');\n            const puppeteerPlayback = require('./puppeteerHybridStepPlayback').execute;\n            try {\n                return await puppeteerPlayback(player, hybridFunction, step, context, source, abortSignal);\n            } finally {\n                perfLogger.log('after puppeteerPlayback');\n            }\n        }\n\n        if (hybridFunction.type === 'playwright') {\n            if (!player.driver.cdpUrl) {\n                return { success: false, shouldRetry: false, reason: 'running playwright code requires the remote debugging protocol to be open. Please contact Testim support.' };\n            }\n            const playwrightPlayback = require('./playwrightHybridStepPlayback').execute;\n            return await playwrightPlayback(player, hybridFunction, step, context, source, abortSignal);\n        }\n\n        if (hybridFunction.type === 'tdk' || !hybridFunction.type) {\n            const tdkPlayback = require('./tdkHybridStepPlayback').execute;\n            perfLogger.log('before tdkPlayback');\n            try {\n                return await tdkPlayback(player, hybridFunction, context, loginData, frameManager, step, source, abortSignal);\n            } finally {\n                perfLogger.log('after tdkPlayback');\n            }\n        }\n\n        return { success: false, shouldRetry: false, reason: `unknown hybrid format ${hybridFunction.type}` };\n    } catch (err) {\n        logger.info('error running hybrid step', { err });\n        return undefined;\n    } finally {\n        runningStepsAbortControllersRegistry.delete(context.stepResultId);\n    }\n}\n\nexport function abort(stepResultId) {\n    const abortController = runningStepsAbortControllersRegistry.get(stepResultId);\n\n    if (abortController) {\n        abortController.abort();\n    } else {\n        throw new Error('No such stepResultId');\n    }\n}\n", "import * as utils from '../utils';\nimport * as service from '../agent/routers/cliJsCode/service';\nimport { NpmPackageError } from '../errors';\n\nexport const run = async (browser, step) => {\n    const { stepId, testResultId, retryIndex, stepResultId, packageData, timeout } = step.data;\n    try {\n        const data = await service.installPackage(stepId, testResultId, retryIndex, packageData, stepResultId, timeout);\n        return { data, success: true };\n    } catch (err) {\n        if (err instanceof NpmPackageError) {\n            return {\n                success: false,\n                code: 'invalid-node-package',\n                message: err.message,\n            };\n        }\n        if (err instanceof utils.TimeoutError) {\n            return {\n                success: false,\n                code: 'timeout',\n            };\n        }\n        throw err;\n    }\n};\n", "import * as cliJsStepPlayback from './cliJsStepPlayback';\nimport * as hybridStepPlayback from './hybridStepPlayback';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport * as nodePackageStepPlayback from './nodePackageStepPlayback';\nimport { getLogger } from '../commons/logger';\n\nconst logger = getLogger('step-playback');\n\nconst playbacks = {\n    'cli-validation-code-step': cliJsStepPlayback,\n    'cli-wait-for-code-step': cliJsStepPlayback,\n    'cli-action-code-step': cliJsStepPlayback,\n    'cli-api-code-step': cliJsStepPlayback,\n    'cli-condition-step': cliJsStepPlayback,\n    'cli-download-code-step': cliJsStepPlayback,\n    'node-package': nodePackageStepPlayback,\n    'tdk-hybrid': hybridStepPlayback,\n};\n\nasync function saveRemoteStep(projectId, resultId, stepId, remoteStepData) {\n    try {\n        return await testimServicesApi.saveRemoteStep(projectId, resultId, stepId, remoteStepData);\n    } catch (e) {\n        logger.error('failed to report remote step state', { projectId, resultId, stepId });\n        return undefined;\n    }\n}\n\nasync function onCompleted(projectId, resultId, stepId, runResult, sessionId) {\n    logger.info('finished to run remote step', { stepId, sessionId });\n    const remoteStepData = {\n        status: 'completed',\n        success: true,\n        failureReason: null,\n        data: runResult,\n    };\n\n    return await saveRemoteStep(projectId, resultId, stepId, remoteStepData);\n}\n\nasync function onFailed(projectId, resultId, stepId, failureReason, sessionId) {\n    logger.info('failed to run remote step', { stepId, sessionId, failureReason });\n    const remoteStepData = {\n        status: 'completed',\n        success: false,\n        failureReason,\n    };\n\n    return await saveRemoteStep(projectId, resultId, stepId, remoteStepData);\n}\n\nexport async function executeStep(options, driver, step, resultId) {\n    if (!step?.type || step.status === 'completed') {\n        return undefined;\n    }\n\n    const { project: projectId, projectData, userData } = options;\n    const stepType = step.type;\n    const sessionId = driver.getSessionId();\n    const stepId = step.id;\n    logger.info('start play remote step', { stepType, stepId, sessionId });\n\n    const playback = playbacks[stepType];\n    if (!playback) {\n        return await onFailed(projectId, resultId, stepId, `Failed to find step type ${stepType}`, sessionId);\n    }\n\n    try {\n        const runResult = await playback.run(driver, step, projectData, userData);\n        return await onCompleted(projectId, resultId, stepId, runResult, sessionId);\n    } catch (err) {\n        return await onFailed(projectId, resultId, stepId, err.message, sessionId);\n    }\n}\n", "import { BaseSocketService } from './baseSocketServiceSocketIO';\n\nclass RemoteStepServiceSocketIO extends BaseSocketService {\n    listerers: { [resultId: string]: (data: any) => void } = {};\n\n    override init(projectId: string) {\n        super.init(projectId, 'remoteStep');\n        this.listerers = {};\n    }\n\n    override emitJoinRoom(resultId: string) {\n        return this.emitPromise('remoteStep:join', { resultId });\n    }\n\n    emitLeaveRoom(resultId: string) {\n        return this.emitPromise('remoteStep:leave', { resultId });\n    }\n\n    async joinToRemoteStep(resultId: string) {\n        if (this.rooms[resultId]) {\n            return;\n        }\n        this.joinRoom(resultId);\n        await this.emitJoinRoom(resultId);\n    }\n\n    listenToRemoteStep(resultId: string, onRemoteStep: (data: any) => void) {\n        if (this.listerers[resultId]) {\n            this._socket!.off('remoteStep:saved', this.listerers[resultId]);\n            delete this.listerers[resultId];\n        }\n\n        this.listerers[resultId] = data => {\n            if (data.resultId === resultId && data.remoteStep && data.remoteStep.status === 'pending') {\n                onRemoteStep(data.remoteStep);\n            }\n        };\n        this._socket!.on('remoteStep:saved', this.listerers[resultId]);\n    }\n\n    async unlistenToRemoteStep(resultId: string) {\n        if (!this.listerers[resultId]) {\n            return;\n        }\n\n        this.leaveRoom(resultId);\n        this._socket!.off('remoteStep:saved', this.listerers[resultId]);\n        delete this.listerers[resultId];\n        await this.emitLeaveRoom(resultId);\n    }\n}\n\nexport const remoteStepServiceSocketIO = new RemoteStepServiceSocketIO();\n", "import { socketService } from './socketService';\nimport { socketEventTypes } from '../constants';\nimport { featureFlagsService } from '../featureFlagsService';\n\nconst { REMOTE_STEP_SAVED } = socketEventTypes;\n\nlet remoteStepServiceSocketIO: typeof import('./remoteStepServiceSocketIO')['remoteStepServiceSocketIO']; // required lazily since it takes 150ms to load\n\nclass RemoteStepService {\n    async init(projectId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return;\n        }\n        remoteStepServiceSocketIO = (await import('./remoteStepServiceSocketIO')).remoteStepServiceSocketIO;\n        remoteStepServiceSocketIO.init(projectId);\n    }\n\n    joinToRemoteStep(resultId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return socketService.addFilter(`${resultId}:remoteStep`, { resultId }, [REMOTE_STEP_SAVED]);\n        }\n        return remoteStepServiceSocketIO.joinToRemoteStep(resultId);\n    }\n\n    listenToRemoteStep(resultId: string, onRemoteStep: (step: any) => void) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.listenTo(\n                `${resultId}:remoteStep`,\n                [REMOTE_STEP_SAVED],\n                (data: any) => data.resultId === resultId && data.remoteStep && data.remoteStep.status === 'pending',\n                (data: any) => onRemoteStep(data.remoteStep),\n            );\n            return;\n        }\n        remoteStepServiceSocketIO.listenToRemoteStep(resultId, onRemoteStep);\n    }\n\n    unlistenToRemoteStep(resultId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.removeFilter(`${resultId}:remoteStep`, [REMOTE_STEP_SAVED]);\n            return Promise.resolve();\n        }\n        return remoteStepServiceSocketIO.unlistenToRemoteStep(resultId);\n    }\n}\n\nexport const remoteStepService = new RemoteStepService();\n", "import * as _ from 'lodash';\nimport * as utils from './utils';\nimport * as config from './commons/config';\nimport * as perf from './commons/performance-logger';\nimport * as analytics from './commons/testimAnalytics';\nimport * as testimCustomToken from './commons/testimCustomToken';\nimport * as testimServicesApi from './commons/testimServicesApi';\nimport * as remoteStepPlayback from './stepPlayers/remoteStepPlayback';\nimport pRetry from 'p-retry';\nimport { URL } from 'url';\nimport { getLogger } from './commons/logger';\nimport { preloadTests } from './commons/preloadTests';\nimport { SeleniumPerfStats } from './commons/SeleniumPerfStats';\nimport { timeoutMessages, CLI_MODE, MOBILE_APP_SOURCE } from './commons/constants';\nimport { remoteStepService } from './commons/socket/remoteStepService';\nimport { testResultService } from './commons/socket/testResultService';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport type { RunnerOptions } from './runOptions';\nimport type { CDPTestRunner } from './cdpTestRunner';\nimport type { TestRunStatus } from './testRunStatus';\nimport type { TDKTest } from './runners/buildCodeTests';\nimport type { ExecutionList } from './runners/TestPlanRunner';\nimport type { AndroidApp } from 'clickim/src/background/mobile/types';\nimport type { RawMobileAppVersion } from 'services/src/commons/mongo/models/mobileAppVersion';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\nconst logger = getLogger('test-run-handler');\nconst RETRIES_ON_TIMEOUT = 3;\nconst MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE = 20 * 1000; // max size, in characters, of stringified run data sent over URL params. Chosen arbitrarily, this value should be changed according to data.\nconst canSendRunDataOverUrl = (runData: object) => JSON.stringify(runData).length < MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE;\ntype TestResult = utils.AwaitedReturnType<typeof testimServicesApi.getTestResults>;\n\nexport class TestRunHandler {\n    public readonly seleniumPerfStats = new SeleniumPerfStats();\n    public _totalRetryCount = 1;\n    private clearBrowser: true | undefined;\n    private _sessionId: string | undefined;\n    private _originalTestResultId: string | undefined;\n    private _previousTestResultId: string | undefined;\n    private _wasCompletedOnStartedCheck: TestResult | undefined;\n    private _retryCount = 1;\n    private _timeoutRetryCount = 1;\n    private clearTestResultFinished: Promise<{ success: boolean } | undefined> = Promise.resolve(undefined);\n    private _baseUrl;\n    private _testResultId;\n    private readonly _testStatus;\n    private readonly _testId;\n    private readonly _nativeApp;\n    private readonly _maxRetryCount;\n    private readonly _remoteRunId;\n    private readonly _runConfig;\n    private readonly _testName: string | undefined;\n    private readonly _code: string | undefined;\n    private readonly _overrideTestConfigId: string | undefined;\n\n    constructor(\n        private readonly _executionId: string,\n        private readonly _executionName: string,\n        test: ExecutionList[number],\n        private readonly _options: RunnerOptions,\n        private readonly _branch: string,\n        private readonly _testRunStatus: TestRunStatus,\n    ) {\n        this._testStatus = (test as TestWithCustomTestDataAndRunConfig).testStatus;\n        this._testId = test.testId;\n        this._testName = (test as TestWithCustomTestDataAndRunConfig).name;\n        this._testResultId = test.resultId;\n        this._code = (test as TDKTest).code;\n        this._baseUrl = _options.baseUrl || (test as TestWithCustomTestDataAndRunConfig).baseUrl || (test as TestWithCustomTestDataAndRunConfig).testConfig.baseUrl;\n        this._nativeApp = (test as TestWithCustomTestDataAndRunConfig).nativeApp;\n        this._overrideTestConfigId = (test as any).overrideTestConfig?.id;\n        this._maxRetryCount = _options.retries;\n        this._remoteRunId = _options.remoteRunId;\n\n        const shouldUpdateConfig = !(test as any).runConfig?.isMobileWeb && _options.browser;\n        this._runConfig = shouldUpdateConfig ? utils.getRunConfigByBrowserName(_options.browser!, _options.saucelabs, _options.browserstack) : (test as TestWithCustomTestDataAndRunConfig).runConfig;\n    }\n\n    public async waitForExecutionStartedFinished() {\n        await this._testRunStatus.waitForExecutionStartedFinished();\n        return await this.clearTestResultFinished;\n    }\n\n    public get testStatus() {\n        return this._testStatus;\n    }\n\n    public get runMode() {\n        return this._options.mode;\n    }\n\n    public get automationMode() {\n        return this._code ? 'codeful' : 'codeless';\n    }\n\n    public get code() {\n        return this._code;\n    }\n\n    public get runConfig() {\n        return this._runConfig;\n    }\n\n    public get testResultId() {\n        return this._testResultId;\n    }\n\n    public get baseUrl() {\n        return this._baseUrl;\n    }\n\n    public set baseUrl(baseUrl) {\n        this._baseUrl = baseUrl;\n    }\n\n    public get executionId() {\n        return this._executionId;\n    }\n\n    public get executionName() {\n        return this._executionName;\n    }\n\n    public get androidActivityWait() {\n        const appData = this._nativeApp && 'appMetadata' in this._nativeApp ? this._nativeApp.appMetadata : this._nativeApp as AndroidApp;\n        if (appData?.activity?.includes((appData as RawMobileAppVersion['appMetadata'])!.id)) {\n            return `${(appData as RawMobileAppVersion['appMetadata'])!.id}.*`;\n        }\n        const { activity } = appData as AndroidApp;\n        const lastValue = activity.split('.').pop()!;\n        return activity.replace(lastValue, '*');\n    }\n\n    public get isFFAllowAppFromDeviceEnabled() {\n        return featureFlagsService.flags.allowAppFromDeviceRuns.isEnabled();\n    }\n\n    public get isAppFromDevice() {\n        return utils.isAppFromDevice(this._nativeApp);\n    }\n\n    public get isAppForIosVirtualDevice() {\n        return utils.isAppForVirtualIosDevice(this._nativeApp);\n    }\n\n    public get getAppSource() {\n        if (!this._nativeApp) {\n            return undefined;\n        }\n        return this.isAppFromDevice ? MOBILE_APP_SOURCE.FROM_DEVICE : MOBILE_APP_SOURCE.FROM_LIBRARY;\n    }\n\n    public get nativeAppLink() {\n        let link = null;\n        if (this._nativeApp && 'filePath' in this._nativeApp) {\n            link = `${config.SERVICES_HOST}/storage${this._nativeApp.filePath}?access_token=${this._options.authData!.token}`;\n        }\n        return link;\n    }\n\n    public async getNativeAppData() {\n        const { appId, baseUrl } = this._options;\n        if (baseUrl && !this._nativeApp && !appId) {\n            const url = baseUrl || this.baseUrl;\n            if (!url) {\n                return null;\n            }\n            const [packageName, activity] = url.split(':');\n            return {\n                packageName,\n                activity,\n            };\n        }\n        if (this._nativeApp && !appId) {\n            if ('appMetadata' in this._nativeApp) {\n                return this._nativeApp.appMetadata;\n            }\n            return this._nativeApp;\n        }\n        return null;\n    }\n\n    public get branch() {\n        return this._branch;\n    }\n\n    public get sfdcCredential() {\n        return this._options.sfdcCredential;\n    }\n\n    public get remoteRunId() {\n        return this._remoteRunId;\n    }\n\n    public get overrideTestConfigId() {\n        return this._overrideTestConfigId;\n    }\n\n    public markClearBrowser() {\n        this.clearBrowser = true;\n    }\n\n    private async getRunRequestParams() {\n        const customTokenV3 = await testimCustomToken.getCustomTokenV3();\n        const runRequestParams = {\n            tokenV3: customTokenV3,\n            refreshToken: testimCustomToken.getRefreshToken(),\n            projectId: this._options.project,\n            executionId: this._executionId,\n            executionName: this._executionName,\n            testId: this._testId,\n            resultId: this._testResultId,\n            baseUrl: this._baseUrl,\n            branch: this._branch,\n            servicesUrl: config.EXTENSION_SERVICES_HOST,\n            remoteRunId: this.remoteRunId,\n            previousTestResultId: this.previousTestResultId,\n            testRetryCount: this.retryCount,\n            ...(this.code && { isCodeMode: true, testName: this.testName }),\n            ...(this._options.shouldMonitorPerformance && { shouldMonitorPerformance: true }),\n            ...(this._options.company && {\n                companyId: this._options.company.companyId,\n                onprem: this._options.company.onprem,\n                storageBaseUrl: this._options.company.storageBaseUrl,\n                storageType: this._options.company.storageType,\n                planType: this._options.company.planType,\n                isPOC: this._options.company.isPOC,\n                isStartUp: this._options.company.isStartUp,\n            }),\n            ...(this._options.collectCodeCoverage && { codeCoverageUrlFilter: this._options.codeCoverageUrlFilter || `${this.baseUrl}*` }),\n            ...(this._options.disableMockNetwork && { disableMockNetwork: this._options.disableMockNetwork }),\n            ...(this._options.lightweightMode && { lightweightMode: this._options.lightweightMode }),\n            ...(this.clearBrowser && { clearBrowser: true }),\n            ...(this._options.localRCASaver && { localRCASaver: this._options.localRCASaver }),\n            ...(this.sfdcCredential && { sfdcCredential: this.sfdcCredential }),\n        };\n\n        if (this._options.disableMockNetwork) {\n            analytics.trackWithCIUser('user-disable-mock');\n        }\n\n        if (runRequestParams.lightweightMode && this._options.lightweightMode?.general) {\n            Object.assign(runRequestParams, { company: this._options.company });\n            const runData = this.runData;\n            const isRunDataSentInUrl = canSendRunDataOverUrl(runData);\n            Object.assign(runRequestParams.lightweightMode, { isRunDataSentInUrl });\n            const stringifiedLength = JSON.stringify(runData).length;\n            const testId = this.testId;\n            if (isRunDataSentInUrl) {\n                Object.assign(runRequestParams, { runData });\n\n                logger.info(`Run data sent as URL param, test id: ${testId} run data length: ${stringifiedLength}`);\n            } else {\n                logger.warn(`Run data is too big to be sent as a URL param. Test id: ${testId}, run data size: ${stringifiedLength} (limit: ${MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE} characters)`);\n            }\n            Object.assign(runRequestParams, { isLocalRun: Boolean(this._options.useLocalChromeDriver || this._options.useChromeLauncher) });\n        }\n\n        if (this._options.lightweightMode?.preloadTests && this._options.useChromeLauncher) {\n            const preloadedTests = await preloadTests(this._options);\n            Object.assign(runRequestParams, { preloadedTest: preloadedTests[runRequestParams.testId] });\n        }\n\n        return runRequestParams;\n    }\n\n    public async getRunTestUrl() {\n        const runRequestParams = await this.getRunRequestParams();\n        const url = `https://run.testim.io/?params=${encodeURIComponent(JSON.stringify(runRequestParams))}`;\n        logger.info(`Test (${this.testId}) run URL length: ${url.length}`);\n        return url;\n    }\n\n    public set sessionId(sessionId) {\n        this._sessionId = sessionId;\n    }\n\n    public get sessionId() {\n        return this._sessionId;\n    }\n\n    public get testId() {\n        return this._testId;\n    }\n\n    public get testName() {\n        return this._testName;\n    }\n\n    public get runParams() {\n        return this._options.runParams?.[this._testResultId] || {};\n    }\n\n    public get runData() {\n        return {\n            userParamsData: this.runParams,\n            overrideTestConfigId: this._overrideTestConfigId || null,\n        };\n    }\n\n    public async clearTestResult() {\n        const runData = {\n            ...this.runData,\n            ...(this.runMode === CLI_MODE.EXTENSION && { code: this.code }),\n            ...(this._options.mockNetworkRules && { mockNetworkRules: this._options.mockNetworkRules }),\n        };\n        const mustClearPreviousStepResults = (this._timeoutRetryCount > 1 || this._retryCount > 1);\n\n        if (this._options.lightweightMode?.disableResults && !mustClearPreviousStepResults && canSendRunDataOverUrl(runData)) {\n            return undefined;\n        }\n\n        const uploadRunDataArtifactAndFallbackToEmptyString = async () => {\n            try {\n                return await testimServicesApi.uploadRunDataArtifact(this._options.project, this._testId, this._testResultId, runData);\n            } catch (err) {\n                logger.error('failed to upload run data artifact (runner)', { err });\n                return '';\n            }\n        };\n        const clearTestResultFinished = async () => {\n            const runDataUrl = await uploadRunDataArtifactAndFallbackToEmptyString();\n            // make sure the execution is created by now\n            await this._testRunStatus.waitForExecutionStartedFinished();\n            // we probably can save this backend call by initializing the execution\n            return testimServicesApi.clearTestResult(this._options.project, this._testResultId, this._testId, {\n                name: this._testName,\n                resultId: this._testResultId,\n                status: 'pending',\n                retryCount: this._retryCount,\n                runDataUrl, // links the run data url to the test.\n                runData: runDataUrl ? undefined : runData, // put runData in mongo if we fail to upload to S3.\n                testRetryKey: this.retryKey,\n            });\n        };\n        this.clearTestResultFinished = clearTestResultFinished();\n        return this.clearTestResultFinished;\n    }\n\n    public hasMoreRetries() {\n        return this._retryCount < this._maxRetryCount!;\n    }\n\n    public get retryKey(): `${number}:${number}` {\n        return `${this._retryCount}:${this._timeoutRetryCount}`;\n    }\n\n    public startNewRetry() {\n        this._retryCount++;\n        this._timeoutRetryCount = 1;\n        return this.onRetry();\n    }\n\n    public async runTestUsingCDP(cdpTestRunner: CDPTestRunner) {\n        perf.log('runTestUsingCDP');\n        const { targetInfos } = await cdpTestRunner.cdpCommand<{ targetInfos: { type: string; title: string; targetId: string }[] }>('Target.getTargets') || { targetInfos: [] };\n        const { targetId: extensionTargetId } = targetInfos.find(target => target.type === 'background_page' && target.title === 'Testim Editor') || {};\n        const { targetId: AUTTargetId } = targetInfos.find(target => target.type === 'page') || {};\n        if (!extensionTargetId) {\n            throw new Error('testim extension not found');\n        }\n        if (!AUTTargetId) {\n            throw new Error('AUT target not found');\n        }\n\n        try {\n            perf.log('before Target.attachToTarget');\n            const [extensionSession, runRequestParams] = await Promise.all([\n                cdpTestRunner.cdpCommand<{ sessionId: string } | undefined>('Target.attachToTarget', { targetId: extensionTargetId, flatten: true }),\n                this.getRunRequestParams(),\n            ]);\n            const { sessionId: extensionSessionId } = extensionSession || {};\n            perf.log('before Runtime.evaluate');\n\n            interface EvalResponse { result: { value?: any; subtype?: string; description?: string } }\n            await pRetry(async () => {\n                const { result } = await cdpTestRunner.cdpCommand<EvalResponse>('Runtime.evaluate', { expression: 'typeof runTestimTest !== \\'undefined\\'', returnByValue: true }, extensionSessionId);\n                if (!result.value) {\n                    throw new Error('runTestimTest not available on global scope');\n                }\n            }, { retries: 100, minTimeout: 30, factor: 1 });\n\n            perf.log('after wait for runTestimTest function');\n            const { result } = await cdpTestRunner.cdpCommand<EvalResponse>(\n                'Runtime.evaluate',\n                { expression: `runTestimTest(${JSON.stringify(runRequestParams)})`, awaitPromise: true, returnByValue: true },\n                extensionSessionId,\n            );\n            if (result.subtype === 'error') {\n                throw new Error(result.description);\n            }\n            perf.log('after Runtime.evaluate');\n            return result.value as TestResult | undefined;\n        } catch (err) {\n            logger.error('error running test using CDP', { err });\n            throw new Error('Error running test using CDP');\n        }\n    }\n\n    private isRetryKeyMismatch(testResult: { testRetryKey?: string }) {\n        return testResult.testRetryKey && (testResult.testRetryKey !== this.retryKey);\n    }\n\n    public validateRunConfig() {\n        const { baseUrl, runConfig: { browserValue } } = this;\n\n        if (baseUrl && browserValue === 'safari') {\n            let parsedUrl;\n            try {\n                parsedUrl = new URL(baseUrl);\n            } catch (err) {\n                // ignore invalid URLs (missing http:// or https:// prefix)\n                return;\n            }\n            const { username, password } = parsedUrl;\n\n            if (username || password) {\n                throw new Error('Basic authentication in URL is not supported in Safari');\n            }\n        }\n    }\n\n    public onStarted(startTimeout: number) {\n        return new Promise<TestResult>(resolve => {\n            // We can't leave the test result as it may remove other listeners as well\n            // We need to implement an .off(resultId, listener) method\n            let reportedStart = false;\n            const resolveResult = (testResult: TestResult) => {\n                if (reportedStart) {\n                    return;\n                }\n                if (this.isRetryKeyMismatch(testResult)) {\n                    logger.warn(`ignoring result update for on started due to retry key mismatch, got ${testResult.testRetryKey}, current is ${this.retryKey}`, {\n                        resultId: this.testResultId,\n                        testId: this.testId,\n                    });\n                    return;\n                }\n                if (['running', 'completed'].includes(testResult.status!)) {\n                    testResult.resultId = this.testResultId;\n                    if (testResult.status === 'completed') {\n                        logger.info('setting _wasCompletedOnStartedCheck to true', {\n                            testResult,\n                            resultId: this.testResultId,\n                            testId: this.testId,\n                            testRetryKey: this.retryKey,\n                        });\n                        this._wasCompletedOnStartedCheck = testResult;\n                    }\n                    reportedStart = true;\n                    resolve(testResult);\n                }\n            };\n            if (this._options.disableSockets) {\n                const timeLimit = Date.now() + startTimeout;\n                const checkIfDone = async () => {\n                    if (Date.now() > timeLimit) {\n                        return;\n                    }\n                    const { testId, testResultId, branch, _options: { project: projectId } } = this;\n\n                    try {\n                        const restResult = await testimServicesApi.getTestResults(testId, testResultId, projectId, branch);\n                        resolveResult(restResult);\n                        if (!reportedStart) {\n                            setTimeout(checkIfDone, 3000);\n                        }\n                    } catch (err) {\n                        logger.error('failed to check if done', { err });\n                        setTimeout(checkIfDone, 3000);\n                    }\n                };\n                setTimeout(checkIfDone, 3000);\n            } else {\n                testResultService.listenToTestResult(this._testResultId, this._testId, resolveResult);\n            }\n        });\n    }\n\n    public async checkViaRestAPIIfTestStarted() {\n        const { testId, testResultId, _options: { project: projectId }, branch } = this;\n        try {\n            const testResult = await testimServicesApi.getTestResults(testId, testResultId, projectId, branch);\n            const expectedStatuses = ['running', 'completed'];\n            if (expectedStatuses.includes(testResult.status!)) {\n                logger.info(`get status: ${testResult.status} after not get test started status`, { testId, testResultId, branch });\n                return testResult;\n            }\n            logger.error(`test not start test status: ${testResult.status} (expected [${expectedStatuses.join(', ')}])`, { testId, testResultId, branch });\n            throw new Error(timeoutMessages.TEST_START_TIMEOUT_MSG);\n        } catch (err) {\n            logger.error('failed to get test result after test start timeout', { err, testId, testResultId, branch });\n            throw new Error(timeoutMessages.TEST_START_TIMEOUT_MSG);\n        }\n    }\n\n    public async onCompletedCleanup() {\n        if (this._options.disableSockets) {\n            return undefined;\n        }\n        return await testResultService.leaveTestResult(this._testResultId, this._testId);\n    }\n\n    public async onCompleted() {\n        let onConnected: _.DebouncedFunc<() => Promise<boolean>> | undefined;\n        try {\n            const res = await new Promise<TestResult>(resolve => {\n                if (this._wasCompletedOnStartedCheck && !this.isRetryKeyMismatch(this._wasCompletedOnStartedCheck)) {\n                    logger.info('test was already completed in on started check', {\n                        resultId: this.testResultId,\n                        testId: this.testId,\n                    });\n                    resolve(this._wasCompletedOnStartedCheck);\n                    return;\n                }\n\n                if (!this._options.disableSockets) {\n                    testResultService.listenToTestResult(this._testResultId, this._testId, (testResult: TestResult) => {\n                        if (this.isRetryKeyMismatch(testResult)) {\n                            logger.warn(`ignoring result update for on completed due to retry key mismatch, got ${testResult.testRetryKey}, current is ${this.retryKey}`, {\n                                resultId: this.testResultId,\n                                testId: this.testId,\n                            });\n                            return;\n                        }\n                        if (testResult.status === 'completed') {\n                            testResult.resultId = this._testResultId;\n                            resolve(testResult);\n                        }\n                    });\n                }\n                const debounceDelay = this._options.disableSockets ? 0 : Math.floor(10000 + (Math.random() * 5000));\n                const maxWait = this._options.disableSockets ? 0 : Math.floor(60000 + (Math.random() * 15000));\n                onConnected = _.debounce(async () => {\n                    try {\n                        const testResult = await testimServicesApi.getTestResults(this._testId, this._testResultId, this._options.project, this.branch);\n                        if (this.isRetryKeyMismatch(testResult)) {\n                            logger.warn(`ignoring result update for on completed (in reconnect) due to retry key mismatch, got ${testResult.testRetryKey}, current is ${this.retryKey}`, {\n                                resultId: this.testResultId,\n                                testId: this.testId,\n                            });\n                            return false;\n                        }\n                        if (testResult?.status === 'completed') {\n                            logger.info('Socket reconnected - Test complete', { testId: this._testId, resultId: this._testResultId, projectId: this._options.project });\n                            testResult.resultId = this._testResultId;\n                            resolve(testResult);\n                            return true;\n                        }\n                        return false;\n                    } catch (err) {\n                        logger.warn('Error while trying to check status on socket connect', err);\n                        return false;\n                    }\n                }, debounceDelay, { maxWait });\n                if (!this._options.disableSockets) {\n                    testResultService.on('socket-connected', onConnected);\n                } else {\n                    const waitForTestEnd = () => {\n                        setTimeout(async () => {\n                            try {\n                                const { isComplete } = await testimServicesApi.isTestResultCompleted(this._testResultId, this._options.project, this.retryKey);\n                                if (isComplete) {\n                                    const isDone = await onConnected!();\n                                    if (!isDone) {\n                                        logger.warn('onConnected returned false even though isComplete was true');\n                                        waitForTestEnd();\n                                    }\n                                } else {\n                                    waitForTestEnd();\n                                }\n                            } catch (err) {\n                                logger.error('failed to check is complete', { err });\n                                waitForTestEnd();\n                            }\n                        }, 3000);\n                    };\n                    waitForTestEnd();\n                }\n            });\n            await this.onCompletedCleanup();\n            return res;\n        } finally {\n            if (onConnected && !this._options.disableSockets) {\n                testResultService.off('socket-connected', onConnected);\n            }\n        }\n    }\n\n    public listenToRemoteStep(browser: import('./player/webdriver').WebDriver | import('./player/chromeLauncherTestPlayer').LauncherDriverType) {\n        remoteStepService.listenToRemoteStep(this.testResultId, (step: unknown) => {\n            remoteStepPlayback.executeStep(this._options, browser, step, this.testResultId);\n        });\n    }\n\n    public hasMoreTimeoutRetries() {\n        const maxRetryCount = this._options.disableTimeoutRetry ? 1 : RETRIES_ON_TIMEOUT;\n        return this._timeoutRetryCount < maxRetryCount;\n    }\n\n    public startNewTimeoutRetry() {\n        this._timeoutRetryCount++;\n        return this.onRetry();\n    }\n\n    public get retryCount() {\n        return this._retryCount;\n    }\n\n    public get previousTestResultId() {\n        return this._previousTestResultId;\n    }\n\n    private isAllowReportTestResultRetries() {\n        return Boolean(this._options.company?.activePlan?.premiumFeatures?.allowReportTestResultRetries);\n    }\n\n    private async onRetry() {\n        this._previousTestResultId = this.testResultId;\n\n        if (!this.isAllowReportTestResultRetries()) {\n            return;\n        }\n\n        this._totalRetryCount++;\n        this._originalTestResultId ||= this._previousTestResultId;\n        this._testResultId = utils.guid();\n\n        if (this._options.lightweightMode?.onlyTestIdsNoSuite) {\n            return;\n        }\n\n        await this._testRunStatus.addRetryTestResult({\n            retryCount: this._totalRetryCount,\n            executionId: this._executionId,\n            projectId: this._options.project,\n            newResultId: this._testResultId,\n            originalTestResultId: this._originalTestResultId,\n            previousTestResultId: this._previousTestResultId,\n        });\n    }\n}\n", "import { TestRunHandler } from './testRunHandler';\nimport type { RunnerOptions } from './runOptions';\nimport type { TestRunStatus } from './testRunStatus';\n\nexport class ExecutionQueue {\n    private _waitingTests: TestRunHandler[];\n\n    constructor(executionId: string, executionName: string, testList: any[], options: RunnerOptions, branchToUse: string, testStatus: TestRunStatus) {\n        this._waitingTests = testList.map(testInfo => new TestRunHandler(executionId, executionName, testInfo, options, branchToUse, testStatus));\n    }\n\n    public stop() {\n        this._waitingTests = [];\n    }\n\n    public getNext() {\n        const nextTestRunHandler = this._waitingTests.shift();\n        if (nextTestRunHandler) {\n            return nextTestRunHandler;\n        }\n        return undefined;\n    }\n\n    public hasMoreTests() {\n        return Boolean(this._waitingTests.length);\n    }\n}\n", "import * as gridService from '../services/gridService';\nimport { getLogger } from '../commons/logger';\nimport type { Player } from './BaseWorker';\n\nconst logger = getLogger('worker-utils');\n\nconst releaseGridSlot = async (workerId: number, releaseSlotOnTestFinished: boolean, projectId: string) => {\n    if (!releaseSlotOnTestFinished) {\n        return;\n    }\n    await gridService.releaseGridSlot(workerId, projectId);\n};\n\nexport const releasePlayer = async (workerId: number, releaseSlotOnTestFinished: boolean, projectId: string, player?: Player) => {\n    logger.info('releasing player', { hasPlayer: Boolean(player) });\n    try {\n        await player?.onDone();\n    } finally {\n        await releaseGridSlot(workerId, releaseSlotOnTestFinished, projectId);\n    }\n};\n", "import ms from 'ms';\nimport moment from 'moment';\nimport pRetry from 'p-retry';\nimport * as utils from '../utils';\nimport * as perf from '../commons/performance-logger';\nimport * as gridService from '../services/gridService';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport { getLogger } from '../commons/logger';\nimport { releasePlayer } from './workerUtils';\nimport { reporter } from '../reports/reporter';\nimport { LambdatestService } from '../services/lambdatestService';\nimport { featureFlagsService } from '../commons/featureFlagsService';\nimport { remoteStepService } from '../commons/socket/remoteStepService';\nimport { testResultService } from '../commons/socket/testResultService';\nimport { isNetworkHealthy, didNetworkConnectivityTestFail } from '../commons/httpRequest';\nimport {\n    timeoutMessages, testRunStatus, stepResult, runnerTestStatus, CLI_MODE,\n} from '../commons/constants';\nimport {\n    SeleniumError,\n    StopRunOnError,\n    GridError,\n    GetBrowserError,\n    NotImplementedError,\n    PageNotAvailableError,\n    GridConcurrencyError,\n} from '../errors';\nimport type { RunnerOptions } from '../runOptions';\nimport type { TestRunStatus } from '../testRunStatus';\nimport type { ExecutionQueue } from '../executionQueue';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { IgnoredTestResult } from '../runners/ParallelWorkerManager';\n\nconst logger = getLogger('base-worker');\n\nconst { GET_BROWSER_TIMEOUT_MSG, TEST_START_TIMEOUT_MSG, TEST_COMPLETE_TIMEOUT_MSG } = timeoutMessages;\n// @ts-expect-error ironically, UNKNOWN_ERROR is unknown as it doesn't exist (in runner). need to check if it is safe to fix this to the expected value.\nconst { SETUP_TIMEOUT, NETWORK_ERROR, GRID_ERROR, BROWSER_CLOSED, SELENIUM_ERROR, UNKNOWN_ERROR } = stepResult;\n\nconst DELAY_BETWEEN_TESTS = ms('1s');\nlet ordinal = 1;\n\nfunction buildFailureResult(testId: string, testName: string, resultId: string, reason: string) {\n    return {\n        testId,\n        reason,\n        name: testName,\n        resultId,\n        success: false,\n    };\n}\n\nexport type Player =\n    | import('../player/appiumTestPlayer').AppiumTestPlayer\n    | import('../player/seleniumTestPlayer').SeleniumTestPlayer\n    | import('../player/extensionTestPlayer').ExtensionTestPlayer\n    | import('../player/chromeLauncherTestPlayer').ChromeLauncherTestPlayer;\n\nexport abstract class BaseWorker<T extends Player> {\n    protected readonly id = BaseWorker.getWorkerId();\n    protected readonly lambdatestService = new LambdatestService();\n    protected readonly isCodeMode: boolean;\n    protected readonly testRunTimeout: number;\n    protected readonly userData: RunnerOptions['userData'];\n    protected readonly baseUrl: string | undefined;\n    protected testId?: string;\n    protected branch?: string;\n    protected testName?: string;\n    protected testResultId?: string;\n    protected overrideTestConfigId?: string;\n    protected testRunConfig?: TestRunHandler['runConfig'];\n    // TODO: seems unused\n    private readonly isRegressionBaselineRun: boolean | undefined;\n\n    constructor(\n        protected readonly executionQueue: ExecutionQueue,\n        protected readonly options: RunnerOptions,\n        private readonly customExtensionLocalLocation: string | undefined,\n        protected readonly executionId: string,\n        protected readonly onTestStarted: (workerId: number, testId: string, resultId: string, isRerun: boolean | undefined, testRetryKey: `${number}:${number}`, appSource?: string) => Promise<any>,\n        private readonly onTestCompleted: (workerId: number, testId: string, testResult: any, sessionId: string, shouldRerun: boolean | undefined, appSource?: string) => Promise<void>,\n        private readonly onGridSlot: TestRunStatus['onGridSlot'],\n        private readonly onTestIgnored: (workerId: number, testResult: IgnoredTestResult) => void,\n        protected readonly releaseSlotOnTestFinished = true,\n    ) {\n        this.isCodeMode = options.files && options.files.length > 0;\n        this.baseUrl = options.baseUrl;\n        this.testRunTimeout = options.timeout;\n        this.isRegressionBaselineRun = options.isRegressionBaselineRun;\n        this.userData = options.userData;\n    }\n\n    private static getWorkerId() {\n        return ordinal++;\n    }\n\n    private async getGridSlot(browser: string, testRunHandler: TestRunHandler) {\n        const slot = await gridService.getGridSlot(browser, testRunHandler.executionId, this.options, this.id);\n        this.onGridSlot(testRunHandler.testResultId, slot);\n        return slot;\n    }\n\n    private async getSlotOnce(testRunHandler: TestRunHandler) {\n        const { browserValue } = this.testRunConfig as { browserValue: string };\n        reporter.onGetSlot(this.id, browserValue || 'chrome');\n        const gridInfo = await this.getGridSlot(browserValue, testRunHandler);\n        return gridInfo;\n    }\n\n    /** @abstract */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    protected initPlayer(testRunHandler: TestRunHandler): T {\n        throw new NotImplementedError(true);\n    }\n\n    /** @abstract */\n    protected async getBrowserOnce(\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        testRunHandler: TestRunHandler,\n        customExtensionLocalLocation: string | undefined,\n        player: T,\n        gridInfo: Awaited<ReturnType<BaseWorker<T>['getSlotOnce']>>,\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n    ): Promise<any> {\n        throw new NotImplementedError(true);\n    }\n\n    protected async runTestOnce(testRunHandler: TestRunHandler, player: T): Promise<any> {\n        testRunHandler.sessionId = player.getSessionId();\n        logger.info('Test run started', {\n            testId: testRunHandler.testId,\n            resultId: testRunHandler.testResultId,\n            seleniumSession: player.getSessionId(),\n        });\n\n        return await testRunHandler.clearTestResult();\n    }\n\n    protected handleQuarantine(testRunHandler: TestRunHandler) {\n        if (!utils.isQuarantineAndNotRemoteRun({ testStatus: testRunHandler.testStatus }, this.options)) {\n            return undefined;\n        }\n        const testResult = {\n            name: testRunHandler.testName!,\n            testId: testRunHandler.testId,\n            resultId: testRunHandler.testResultId,\n            runnerStatus: runnerTestStatus.SKIPPED,\n            testStatus: testRunHandler.testStatus as 'quarantine',\n        };\n        this.onTestIgnored(this.id, testResult);\n        return testResult;\n    }\n\n    protected handleMobileTest(testRunHandler: TestRunHandler) {\n        const isAppFromDevice = !testRunHandler.isFFAllowAppFromDeviceEnabled && testRunHandler.isAppFromDevice;\n        const isAppForIosVirtualDevice = testRunHandler.isAppForIosVirtualDevice;\n        if (isAppFromDevice || isAppForIosVirtualDevice) {\n            const testResult = {\n                name: testRunHandler.testName,\n                testId: testRunHandler.testId,\n                resultId: testRunHandler.testResultId,\n                runnerStatus: runnerTestStatus.SKIPPED,\n                testStatus: testRunHandler.testStatus,\n                mobile: {\n                    isAppFromDevice,\n                    isAppForIosVirtualDevice,\n                },\n            };\n            this.onTestIgnored(this.id, testResult);\n            return testResult;\n        }\n        return undefined;\n    }\n\n    private setSessionTimeout() {\n        if (this.options.mode === CLI_MODE.APPIUM) {\n            return Math.max(ms('180s'), this.options.getSessionTimeout);\n        }\n        return Math.max(this.lambdatestService.getSessionTimeout || 0, this.options.getSessionTimeout);\n    }\n\n    protected async getTestPlayer(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined) {\n        const projectId = this.userData?.projectId;\n        let testPlayer;\n\n        try {\n            perf.log('before getSlotOnce retries');\n            let failedGetSlotAttempts = 0;\n\n            let gridInfo = await pRetry(async () => {\n                const startTime = Date.now();\n                try {\n                    return await utils.promiseTimeout(this.getSlotOnce(testRunHandler), this.options.getBrowserTimeout, timeoutMessages.GET_BROWSER_TIMEOUT_MSG);\n                } catch (error) {\n                    const logDetails = { testId: this.testId, testResultId: this.testResultId, executionId: this.executionId };\n                    if (error instanceof GridConcurrencyError) {\n                        logger.info('could not get grid slot due to concurrency issue', logDetails);\n                    } else {\n                        logger.error('error getting grid slot', { error, ...logDetails });\n                    }\n                    failedGetSlotAttempts++;\n                    await utils.delay(this.options.getBrowserTimeout - (Date.now() - startTime));\n                    throw error;\n                }\n            }, { retries: this.options.getBrowserRetries - 1, minTimeout: 0, factor: 1 });\n            perf.log('after getSlotOnce retries');\n\n            perf.log('before getBrowserOnce retries');\n            const getBrowserRetriesNumber = this.options.getBrowserRetries - failedGetSlotAttempts;\n            if (!getBrowserRetriesNumber) {\n                throw new Error('No free browser slots in desired grid');\n            }\n            let failedGetBrowserAttempts = 0;\n            testPlayer = await pRetry(async () => {\n                const startTime = Date.now();\n                const player = this.initPlayer(testRunHandler);\n                try {\n                    gridInfo = await gridService.handleHybridOrVendorIfNeeded(\n                        this.options, gridInfo, this.testRunConfig, this.lambdatestService, { maxRetries: getBrowserRetriesNumber, currentRetry: failedGetBrowserAttempts + 1 },\n                    );\n                    this.options.gridData!.provider = gridInfo.provider;\n                    this.options.gridData!.host = gridInfo.host;\n                    this.options.gridData!.failedGetBrowserAttempts = failedGetBrowserAttempts;\n                    const getSessionTimeout = this.setSessionTimeout();\n                    perf.log('before getBrowserOnce');\n                    const getBrowserRes = await utils.promiseTimeout(\n                        this.getBrowserOnce(testRunHandler, customExtensionLocalLocation, player, gridInfo),\n                        getSessionTimeout,\n                        timeoutMessages.GET_BROWSER_TIMEOUT_MSG,\n                    );\n                    perf.log('after getBrowserOnce');\n                    reporter.onGetBrowserSuccess(this.id, projectId!);\n                    return player || getBrowserRes;\n                } catch (error) {\n                    const grid = { provider: gridInfo.provider, host: gridInfo.host, failedGetBrowserAttempts, id: this.options.gridData!.gridId, type: gridInfo.type };\n                    const instanceType = this.options.mode === CLI_MODE.APPIUM ? 'device' : 'browser';\n                    logger.error(`error getting ${instanceType} from grid`, { error, testId: this.testId, testResultId: this.testResultId, executionId: this.executionId, grid });\n                    reporter.onGetBrowserFailure(this.id, projectId!, ++failedGetBrowserAttempts);\n                    player.onDone();\n\n                    if (!(error instanceof PageNotAvailableError)) {\n                        await utils.delay(this.options.getBrowserTimeout - (Date.now() - startTime));\n                    }\n                    throw error;\n                }\n            }, { retries: getBrowserRetriesNumber - 1, minTimeout: 0, factor: 1 });\n            perf.log('after getBrowserOnce retries');\n        } catch (err) {\n            await releasePlayer(this.id, this.releaseSlotOnTestFinished, projectId!, testPlayer);\n            if (err instanceof PageNotAvailableError) {\n                throw err;\n            }\n            if (err instanceof GridError) {\n                throw new GetBrowserError(err as any, GRID_ERROR);\n            }\n            throw new GetBrowserError(err, SELENIUM_ERROR);\n        }\n\n        return testPlayer;\n    }\n\n    protected async runTest(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, shouldRerun: boolean | undefined) {\n        perf.log('inside runTest');\n        const projectId = this.userData?.projectId;\n        const quarantineResult = this.handleQuarantine(testRunHandler);\n        if (quarantineResult) {\n            return quarantineResult;\n        }\n\n        const mobileTestResult = utils.isMobileProject(this.options) && this.handleMobileTest(testRunHandler);\n        if (mobileTestResult) {\n            return mobileTestResult;\n        }\n\n        perf.log('before runTest onTestStarted');\n        const appSource = testRunHandler.getAppSource;\n        const test = await this.onTestStarted(this.id, testRunHandler.testId, testRunHandler.testResultId, shouldRerun, testRunHandler.retryKey, appSource);\n        testRunHandler.baseUrl = test.config.baseUrl;\n\n        const testPlayer = await this.getTestPlayer(testRunHandler, customExtensionLocalLocation);\n        try {\n            return await this.runTestOnce(testRunHandler, testPlayer);\n        } finally {\n            await releasePlayer(this.id, this.releaseSlotOnTestFinished, projectId!, testPlayer);\n        }\n    }\n\n    protected async runTestCleanup(): Promise<void> {\n        return undefined;\n    }\n\n    protected async onQueueCompleted(): Promise<void> {\n        return undefined;\n    }\n\n    public run() {\n        const runNextTest = () => process.nextTick(() => this.run());\n        interface RunCompletionData { testId?: string; reason?: string; name?: string; resultId?: string; success?: boolean; testStatus?: string; testRetryKey?: string }\n        const onRunComplete = async (testResult: RunCompletionData, testRunHandler: TestRunHandler, err?: Error) => {\n            if (utils.isQuarantineAndNotRemoteRun(testResult, this.options) ||\n                (!testRunHandler.isFFAllowAppFromDeviceEnabled && testRunHandler.isAppFromDevice) ||\n                testRunHandler.isAppForIosVirtualDevice) {\n                return runNextTest();\n            }\n            const sessionId = testRunHandler.sessionId!;\n\n            const isTimeoutError = (timeoutMsg: string) => err?.message.includes(timeoutMsg);\n            const isIgnoreErrors = err && (err instanceof GetBrowserError);\n            const isTimeoutErrors = err && (isTimeoutError(TEST_START_TIMEOUT_MSG) || isTimeoutError(TEST_COMPLETE_TIMEOUT_MSG));\n\n            const shouldRerun =\n                !testResult.success &&\n                (\n                    (testRunHandler.hasMoreRetries() && !isIgnoreErrors && !isTimeoutErrors) ||\n                    (isTimeoutErrors && testRunHandler.hasMoreTimeoutRetries())\n                );\n\n            try {\n                const testRetryKey = testRunHandler.retryKey;\n                testResult.testRetryKey = testRetryKey;\n                const appSource = testRunHandler.getAppSource;\n                await this.onTestCompleted(this.id, this.testId!, testResult, sessionId, shouldRerun, appSource);\n                if (this.executionQueue.hasMoreTests() && !this.options.lightweightMode?.general) {\n                    await utils.delay(DELAY_BETWEEN_TESTS);\n                }\n                await this.runTestCleanup();\n                if (shouldRerun) {\n                    if (isTimeoutErrors) {\n                        await testRunHandler.startNewTimeoutRetry();\n                    } else {\n                        await testRunHandler.startNewRetry();\n                    }\n                    logger.info(`retry test id: ${this.testId} name: ${this.testName} again`, {\n                        testId: this.testId,\n                        testName: this.testName,\n                        isTimeoutErrors,\n                        testRetryKey,\n                        totalRetries: testRunHandler._totalRetryCount,\n                    });\n                    this.testResultId = testRunHandler.testResultId;\n                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                    return await runTestAndCalcResult(testRunHandler, shouldRerun);\n                }\n                return await runNextTest();\n            } catch (error) {\n                if (error instanceof StopRunOnError) {\n                    return undefined;\n                }\n                logger.error('failed to process test result', { error });\n                runNextTest();\n                return undefined;\n            }\n        };\n        const getNetworkErrorMessage = () => 'Due to network connectivity issues, Testim CLI has been unable to connect to the grid.\\n' +\n                                             `Please make sure the CLI has stable access to the internet. ${didNetworkConnectivityTestFail() ? '(Internal: network connectivity test failed)' : ''}`;\n\n        const buildError = (err: Error, wasNetworkHealthy: boolean) => {\n            const instanceType = this.options.mode === CLI_MODE.APPIUM ? 'device' : 'browser';\n            if (!wasNetworkHealthy && featureFlagsService.flags.errorMessageOnBadNetwork.isEnabled()) {\n                return {\n                    errorType: NETWORK_ERROR,\n                    reason: getNetworkErrorMessage(),\n                };\n            }\n\n            const msg = err instanceof Error ? err.message : err;\n            if (msg.includes(GET_BROWSER_TIMEOUT_MSG)) {\n                return { errorType: SETUP_TIMEOUT, reason: `Test couldn't get ${instanceType}` };\n            }\n            if (msg.includes(TEST_START_TIMEOUT_MSG)) {\n                return { errorType: SETUP_TIMEOUT, reason: \"Test couldn't be started\" };\n            }\n            if (msg.includes(TEST_COMPLETE_TIMEOUT_MSG)) {\n                if (!this.testRunTimeout) {\n                    return { errorType: SETUP_TIMEOUT, reason: 'Test timeout reached: test is too long' };\n                }\n                const duration = moment.duration(this.testRunTimeout, 'milliseconds');\n                const minutesCount = Math.floor(duration.asMinutes());\n                const secondsCount = duration.seconds();\n                const minutesTimeoutStr = minutesCount > 0 ? ` ${minutesCount} min` : '';\n                const secondsTimoutStr = secondsCount > 0 ? ` ${secondsCount} sec` : '';\n                return { errorType: SETUP_TIMEOUT, reason: `Test timeout reached (timeout:${minutesTimeoutStr}${secondsTimoutStr}): test is too long` };\n            }\n\n            if (err instanceof GetBrowserError && err.type) {\n                if (err.type === GRID_ERROR) {\n                    return { errorType: GRID_ERROR, reason: `Test couldn't get ${instanceType} from grid - ${err.message}` };\n                }\n                if (err.type === SELENIUM_ERROR) {\n                    return { errorType: SELENIUM_ERROR, reason: `Failed to create new session - ${err.message}` };\n                }\n            }\n\n            if ('type' in err && err.type === BROWSER_CLOSED) {\n                return { errorType: SELENIUM_ERROR, reason: 'Session terminated, it is possible that the cli could not connect to the grid to send keep-alive requests for a prolonged period' };\n            }\n            if ('failure' in err && err.failure instanceof SeleniumError) {\n                return { errorType: SELENIUM_ERROR, reason: `Test couldn't get ${instanceType} from grid - ${err.failure.message}` };\n            }\n            if (/SeleniumError: connect ECONNREFUSED/.test(err.message) || /Couldn't connect to selenium server/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: 'Failed to connect to the grid, please check if the grid is accessible from your network' };\n            }\n            if (/terminated due to FORWARDING_TO_NODE_FAILED/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: 'Session terminated, it is likely that the grid is out of memory or not responding, please try to rerun the test' };\n            }\n            if (/terminated due to PROXY_REREGISTRATION/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: 'Session terminated, it is likely that the grid is not responding, please try to rerun the test' };\n            }\n            if (/forwarding the new session cannot find : Capabilities/.test(err.message)) {\n                return { errorType: SELENIUM_ERROR, reason: `Session could not be created, please check that the ${instanceType} you requested is supported in your plan` };\n            }\n            return { errorType: UNKNOWN_ERROR, reason: msg };\n        };\n\n        const onRunError = async (err: Error, testRunHandler: TestRunHandler) => {\n            const wasNetworkHealthy = await isNetworkHealthy();\n            if (!wasNetworkHealthy && featureFlagsService.flags.warnOnBadNetwork.isEnabled()) {\n                // intentional, we want to log to stderr:\n                // eslint-disable-next-line no-console\n                console.warn(getNetworkErrorMessage());\n            }\n            logger.warn('error on run', { err });\n\n            const projectId = this.userData?.projectId;\n            const { errorType, reason } = buildError(err, wasNetworkHealthy);\n            testimServicesApi.updateTestResult(projectId!, this.testResultId!, this.testId!, {\n                status: testRunStatus.COMPLETED,\n                success: false,\n                reason,\n                errorType,\n                testRetryKey: testRunHandler.retryKey,\n                setupStepResult: { status: testRunStatus.COMPLETED, success: false, reason, errorType },\n            }, testRunHandler.remoteRunId);\n            await onRunComplete(buildFailureResult(this.testId!, this.testName!, this.testResultId!, reason), testRunHandler, err);\n        };\n\n        const recoverTestResults = async (runError: Error, testRunHandler: TestRunHandler) => {\n            const testId = this.testId;\n            const resultId = this.testResultId;\n            const projectId = this.userData?.projectId;\n            const branch = this.branch;\n            if (!testId || !resultId || !projectId || !branch) {\n                // Not enough data to call the API\n                logger.warn('Test failed. Not enough data to recover results via API', { err: runError });\n                return onRunError(runError, testRunHandler);\n            }\n\n            try {\n                const testResult = await testimServicesApi.getTestResults(testId, resultId, projectId, branch);\n                logger.warn('Test failed. Got results via API', { err: runError, testResult });\n                if (testResult && testResult.status === testRunStatus.COMPLETED) {\n                    return await onRunComplete(testResult, testRunHandler);\n                }\n                throw runError;\n            } catch (err) {\n                if (err !== runError) {\n                    logger.error('Failed to fetch test results from server', {\n                        testId,\n                        resultId,\n                        projectId,\n                        branch,\n                        err,\n                    });\n                }\n                return onRunError(runError, testRunHandler);\n            }\n        };\n\n        const disableResults = this.options.disableSockets || (this.options.lightweightMode?.disableResults && (this.options.useChromeLauncher || this.options.mode !== 'extension'));\n        const disableRemoteStep = this.options.disableSockets || (this.options.lightweightMode?.disableRemoteStep);\n\n        const runTestAndCalcResult = async (testRunHandler: TestRunHandler, shouldRerun?: boolean): Promise<any> => {\n            try {\n                await Promise.all([\n                    !disableRemoteStep && remoteStepService.joinToRemoteStep(this.testResultId!),\n                    !disableResults && testResultService.joinToTestResult(this.testResultId!, this.testId!),\n                ]);\n                testRunHandler.validateRunConfig();\n                const testResult = await this.runTest(testRunHandler, this.customExtensionLocalLocation, shouldRerun);\n                const result = await onRunComplete(testResult, testRunHandler);\n                perf.log('After onRunComplete');\n                return result;\n            } catch (runError) {\n                return recoverTestResults(runError, testRunHandler);\n            } finally {\n                if (!disableRemoteStep) {\n                    remoteStepService.unlistenToRemoteStep(this.testResultId!);\n                }\n            }\n        };\n\n        const testRunHandler = this.executionQueue.getNext();\n\n        if (!testRunHandler) { // no more tests to run\n            return this.onQueueCompleted();\n        }\n        this.testId = testRunHandler.testId;\n        this.testName = testRunHandler.testName;\n        this.testResultId = testRunHandler.testResultId;\n        this.overrideTestConfigId = testRunHandler.overrideTestConfigId;\n        this.testRunConfig = testRunHandler.runConfig;\n        this.branch = testRunHandler.branch;\n\n        return runTestAndCalcResult(testRunHandler);\n    }\n}\n", "import * as utils from '../utils';\nimport * as perf from '../commons/performance-logger';\nimport { BaseWorker } from './BaseWorker';\nimport { getLogger } from '../commons/logger';\nimport { reporter } from '../reports/reporter';\nimport { PageNotAvailableError } from '../errors';\nimport { preloadTests } from '../commons/preloadTests';\nimport { timeoutMessages } from '../commons/constants';\nimport { WindowUtils } from '../player/utils/windowUtils';\nimport { SeleniumTestPlayer } from '../player/seleniumTestPlayer';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { PlaybackEvent } from 'clickim/src/background/IPlaybackManager';\n\nconst logger = getLogger('worker-selenium');\n\n// this navigation timeout is handled from outside the worker, so don't pass a small timeout to navigate\nconst NO_NAVIGATION_TIME_LIMIT = 1e9;\n\nexport class WorkerSelenium extends BaseWorker<SeleniumTestPlayer> {\n    private windowUtils?: WindowUtils;\n\n    override initPlayer(testRunHandler: TestRunHandler) {\n        return new SeleniumTestPlayer(\n            this.id,\n            testRunHandler.runParams,\n            this.options.shouldMonitorPerformance,\n            testRunHandler.automationMode,\n            undefined,\n            testRunHandler.retryCount,\n            testRunHandler.previousTestResultId,\n        );\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, seleniumTestPlayer: SeleniumTestPlayer, gridInfo: any) {\n        perf.log('in WorkerSelenium getBrowserOnce');\n        reporter.onGetSession(this.id, this.testName, testRunHandler.runMode);\n        const { driver } = seleniumTestPlayer;\n\n        this.windowUtils = new WindowUtils(this.id, driver);\n        seleniumTestPlayer.clearSessionTabs();\n\n        const { browserValue } = this.testRunConfig as { browserValue: string };\n        const baseUrl = testRunHandler.baseUrl;\n\n        try {\n            const fastInit = this.options.useLocalChromeDriver;\n            await driver.init(\n                this.options,\n                this.testName,\n                this.testRunConfig,\n                gridInfo,\n                customExtensionLocalLocation,\n                this.executionId,\n                this.testResultId,\n                testRunHandler.seleniumPerfStats,\n                fastInit,\n                this.lambdatestService,\n            );\n            perf.log('in WorkerSelenium after driver.init');\n            await seleniumTestPlayer.addTab(undefined, { skipLoadInfo: fastInit });\n            perf.log('in WorkerSelenium after addTab');\n            if (!fastInit) {\n                await this.windowUtils.navigate(baseUrl, NO_NAVIGATION_TIME_LIMIT);\n            }\n            await this.windowUtils.validatePageIsAvailable();\n            perf.log('in WorkerSelenium after navigate');\n        } catch (err) {\n            const firefoxPageNotAvailable = err.message && (err.message.startsWith('Malformed URL') || err.message.includes('Reached error page: about:neterror')) &&\n                browserValue === 'firefox';\n\n            const invalidURL = (err.message && err.message === 'invalid argument');\n\n            if (err instanceof PageNotAvailableError || firefoxPageNotAvailable || invalidURL) {\n                throw new PageNotAvailableError(`Page '${baseUrl}' is not available`);\n            }\n\n            logger.error('failed to navigate to page', { err });\n            throw err;\n        }\n    }\n\n    override async runTestOnce(testRunHandler: TestRunHandler, seleniumTestPlayer: SeleniumTestPlayer) {\n        const sessionPlayerInit = getSessionPlayer();\n        const { driver, sessionPlayer } = seleniumTestPlayer;\n\n        const version = sessionPlayerInit.manifestVersion || 'runner';\n\n        reporter.onWaitToTestComplete(this.id, this.isCodeMode);\n\n        setupCliPerformanceMonitoring(sessionPlayer);\n\n        sessionPlayer.playbackManager.executionId = testRunHandler.executionId;\n        sessionPlayer.playbackManager.executionName = testRunHandler.executionName;\n\n        sessionPlayer.setLightweightMode(this.options.lightweightMode);\n        if (testRunHandler.sfdcCredential) {\n            sessionPlayer.setSfdcCredential(testRunHandler.sfdcCredential);\n        }\n        if (sessionPlayerInit.localAssetService) {\n            sessionPlayerInit.localAssetService.initialize({ serverUrl: this.options.localRCASaver });\n        }\n\n        let preloadedTest: any = null;\n        if (this.options.lightweightMode?.preloadTests) {\n            const preloadedTests = await preloadTests(this.options);\n            preloadedTest = preloadedTests[this.testId!];\n        }\n\n        const runSeleniumTest = async () => {\n            if (testRunHandler.automationMode === 'codeful') {\n                // Testim Development Kit test;\n                if (!sessionPlayer.callOrderScheduler) { // old session player\n                    await testRunHandler.waitForExecutionStartedFinished();\n                } else {\n                    sessionPlayer.callOrderScheduler.schedule(\n                        () => testRunHandler.waitForExecutionStartedFinished(),\n                        // this key is shared by clickim and this ensures that we do wait for the execution to be created before we do this.\n                        { key: `test-result:${this.userData!.projectId}:${this.testResultId}` },\n                    );\n                }\n                perf.log('right before playTestByCode');\n                // TODO: Fix promise constructor anti-pattern\n                const playTestByCodePromise = new Promise((resolve, reject) => {\n                    sessionPlayer.playTestByCode(\n                        this.testId!,\n                        this.executionId,\n                        this.testResultId!,\n                        this.baseUrl as any,\n                        this.userData as any,\n                        version,\n                        resolve,\n                        false,\n                        this.overrideTestConfigId as any,\n                        this.branch!,\n                        testRunHandler.code,\n                        testRunHandler.testName,\n                    ).catch(reject);\n                });\n                return utils\n                    .promiseTimeout(\n                        playTestByCodePromise.then((testResult) => {\n                            perf.log('right after playTestByCode');\n                            return testResult;\n                        }),\n                        this.testRunTimeout,\n                        timeoutMessages.TEST_COMPLETE_TIMEOUT_MSG,\n                    )\n                    .catch(err => {\n                        if (err instanceof utils.TimeoutError) {\n                            sessionPlayer.stopPlayingOnTestTimeout?.();\n                        }\n                        throw err;\n                    })\n                    .then((testResult: any) => {\n                        testResult.resultId = this.testResultId;\n                        return testResult;\n                    });\n            }\n            const INCOGNITO = false;\n\n            return utils.promiseTimeout(\n                // TODO: Fix promise constructor anti-pattern\n                new Promise((resolve, reject) => {\n                    sessionPlayer.playByTestId(\n                        this.testId!,\n                        this.executionId,\n                        this.testResultId!,\n                        this.baseUrl,\n                        this.userData,\n                        version,\n                        resolve,\n                        false,\n                        this.overrideTestConfigId!,\n                        this.branch!,\n                        INCOGNITO,\n                        testRunHandler.remoteRunId!,\n                        undefined!,\n                        undefined,\n                        preloadedTest,\n                    ).catch(reject);\n                }),\n                this.testRunTimeout,\n                timeoutMessages.TEST_COMPLETE_TIMEOUT_MSG,\n            )\n                .catch((err) => {\n                    if (err instanceof utils.TimeoutError) {\n                        sessionPlayer.stopPlayingOnTestTimeout?.();\n                    }\n                    throw err;\n                })\n                .then(async (testResult: any) => {\n                    if (sessionPlayerInit.localAssetService) {\n                        await sessionPlayerInit.localAssetService.drain();\n                    }\n                    testResult.stepsResults = null;\n                    testResult.resultId = this.testResultId!;\n                    if (!driver.isAlive()) {\n                        logger.warn(`possible grid unresponsive for test ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                        testResult.gridIssues = 'could not validate grid is alive';\n                    }\n                    const maxKeepAliveGap = driver.maxKeepAliveGap();\n                    const MAX_KEEP_ALIVE_GAP = 30000;\n                    if (maxKeepAliveGap >= MAX_KEEP_ALIVE_GAP) {\n                        logger.warn(`possible browser keep alive issue ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                        testResult.keepAliveIssue = maxKeepAliveGap;\n                    }\n                    const resultWithStats = { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                    if (this.lambdatestService.isLambdatestRun()) {\n                        await driver.executeJS(`lambda-status=${!resultWithStats.success ? 'failed' : 'passed'}`).catch(() => { /* ignore */ });\n                    }\n                    return resultWithStats;\n                });\n        };\n\n        driver.start();\n\n        perf.log('right before super.runTestOnce in workerSelenium');\n        try {\n            await super.runTestOnce(testRunHandler, seleniumTestPlayer);\n            perf.log('right after super.runTestOnce in workerSelenium');\n            const testResult = await runSeleniumTest();\n            perf.log('right after runSeleniumTest');\n            return testResult;\n        } catch (err) {\n            logger.error('failed to run test once', { err });\n            throw err;\n        }\n    }\n}\nfunction setupCliPerformanceMonitoring(sessionPlayer: SeleniumTestPlayer['sessionPlayer']) {\n    const { playback } = getSessionPlayer().commonConstants;\n    function monitorEvent(event: PlaybackEvent) {\n        sessionPlayer.playbackManager.on(event, () => {\n            perf.log(`Got event ${event}`);\n        });\n    }\n    (Object.values(playback) as PlaybackEvent[]).forEach(monitorEvent);\n}\n", "/**\n * @typedef {{\n *     attachDebugger(): Promise<any>,\n *     detachDebugger(): Promise<any>,\n *     onDebuggerDetached(): {},\n *     tabId: string,\n *     domUtils: { getDOM(): Promise<any> },\n *     windowUtils: import('../utils/windowUtils').WindowUtils,\n *     imageCaptureUtils: import('../utils/imageCaptureUtils').ImageCaptureUtils\n * }} TabUtil\n * */\n/**\n * @typedef {{\n *     infoId: any;\n *     url: any;\n *     title: any;\n *     favIconUrl: any;\n *     order: any;\n *     from: any;\n *     isMain: any;\n *     openerStepId: any;\n * }} TabInfo\n */\n\nexport class TabService {\n    /** @param {import('../webdriver').WebDriver} driver */\n    constructor(driver) {\n        this.driver = driver;\n        /** @type {Record<string, TabUtil>} */\n        this._utils = {};\n        /** @type {Record<string, { tabCount: number; tabInfos: Record<string, TabInfo> }>} */\n        this.sessionTabs = {};\n        /** @type {Record<string, string>} */\n        this.pendingTabs = {};\n        /** @type {Record<string, Set<any>>} */\n        this.addedTabs = {};\n    }\n\n    on() {}\n\n    tabCount(sessionId) {\n    }\n\n    getAllOpenTabIds(sessionId) {\n    }\n\n    /**\n     * Get last tab info for pixel validation\n     *\n     * @returns last tab info\n     */\n    getActiveTabInfo(sessionId) {\n    }\n\n    getAllTabIds(sessionId) {\n    }\n\n    isSessionTab(sessionId, tabId) {\n    }\n\n    createSesion(sessionId) {\n    }\n\n    setAddFrameHandlerCallBack(addFrameHandlerCb) {\n    }\n\n    getAllTabInfoStrings(sessionId) {\n    }\n\n    getAllTabInfos(sessionId) {\n    }\n\n    addNewTab(sessionId, tabId, openerStepId, options = {}) {\n    }\n\n    addOpenerStepId(sessionId, tabId, openerStepId) {\n    }\n    addOpenerStep(sessionId, tabId, openerStep) {\n    }\n\n    fixMissingMainTab(sessionId) {\n    }\n\n    buildTabInfo(sessionId, tabId, order, openerStepId, options = {}) {\n    }\n\n    addTab(sessionId, id, order, openerStepId, options = {}) {\n    }\n\n    getTabUtilsByTabIdAndSessionId(sessionId, tabId) {\n    }\n\n    getTabUtilsByTabId(tabId) {\n    }\n\n    getTabInfo(sessionId, id) {\n    }\n\n    getTabUtils(sessionId, tabInfo) {\n    }\n\n    exactUrlMatch(first, second, allUrls) {\n    }\n\n    singleExactMatchForParts(first, second, allUrls, combinePartsFunction) {\n    }\n\n    isSameTab(sessionId, first, second) {\n    }\n\n    getMainTabInfo(sessionId) {\n    }\n\n    getMainTabUtils(sessionId) {\n        return {};\n    }\n\n    removeTabInfo(sessionId, tabId) {\n    }\n\n    getMainTabId(sessionId) {\n    }\n\n    isMainTabExists(sessionId) {\n    }\n\n    clearAllTabs(sessionId) {\n    }\n\n    clearNonMainTabs(sessionId) {\n    }\n\n    switchTab(tabId, sessionId, { forceSwitch } = { forceSwitch: false }) {\n    }\n\n    getTabDetails(tabId, sessionId, options = {}) {\n    }\n\n    getUnregisteredTabId(sessionId) {\n    }\n\n    waitForTabToOpen(sessionId) {\n    }\n\n    tryToAddTab(sessionId, openerStepId) {\n\n    }\n\n    addNewPopup(id, openerStepId) {\n    }\n\n    waitToPendingTabs(id, openerStepId) {\n    }\n\n    isMainTabIncognito() {\n    }\n\n    isInvalidStepVersion(step) {\n    }\n\n    getTabIdByTabInfo(sessionId, step) {\n    }\n}\n", "import { getLogger } from '../../commons/logger';\n\nconst logger = getLogger('mobile-frame-locator-mock');\n\n/** @param {import('../webdriver').WebDriver} driver*/\nexport function frameLocatorFactory(driver) {\n    class FrameLocator {\n        /** @type {(...args: ConstructorParameters<typeof import('clickim/src/background/frameLocator').FrameLocator>) => this} */\n        constructor(frameManager, locateElementPlayer) {\n            this.frameManager = frameManager;\n            this.locateElementPlayer = locateElementPlayer;\n        }\n\n        foundFrameCallback(result, frameTree, testimFrameId) {\n            logger.info('foundFrameCallback-mock invoked');\n            return {};\n        }\n\n\n        locate(frameLocator, frameDepth, currentFrame, context, frameTree, stepData) {\n            logger.info('locate-mock invoked');\n            return {};\n        }\n\n        findFrame(stepData, frameLocators, context, frameTree) {\n            logger.info('findFrame-mock invoked');\n            return {};\n        }\n    }\n\n    return FrameLocator;\n}\n", "import * as webdriverio from 'webdriverio';\nimport { TabService } from './services/tabServiceMock';\nimport { portSelector } from './services/portSelector';\nimport { getLogger } from '../commons/logger';\nimport { StepActionUtils } from './utils/stepActionUtils';\nimport { isDebuggerConnected } from '../commons/detectDebugger';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport { testResultService } from '../commons/socket/testResultService';\nimport { stepActionRegistrar } from './stepActions/stepActionRegistrar';\nimport { frameLocatorFactory } from './services/mobileFrameLocatorMock';\nimport { windowCreationListener } from './services/windowCreationListener';\nimport { PlaybackTimeoutCalculator } from './services/playbackTimeoutCalculator';\n\nconst logger = getLogger('appium-test-player');\n\n\nexport class AppiumTestPlayer {\n    //eslint-disable-next-line default-param-last\n    constructor(id, userParamsData, shouldMonitorPerformance, automationMode = 'code', driver = webdriverio, testRetryCount, previousTestResultId) {\n        const { sessionPlayer: Player, commonConstants, stepActionFactory: StepActionFactory, MobileLocateElementPlayer } = getSessionPlayer();\n        this.driver = driver;\n        this.id = id;\n\n        const stepActionUtils = new StepActionUtils(this.driver);\n        this.stepActionFactory = new StepActionFactory(stepActionUtils);\n        stepActionRegistrar(this.driver, this.stepActionFactory);\n\n        this.tabService = new TabService(this.driver);\n        this.windowCreationListener = windowCreationListener;\n        this.playbackTimeoutCalculator = new PlaybackTimeoutCalculator(isDebuggerConnected());\n\n        this.tabService.createSesion(id);\n\n        const FrameLocator = frameLocatorFactory(this.driver);\n\n        this.sessionPlayer = new Player(\n            id,\n            this.tabService,\n            null,\n            null,\n            FrameLocator,\n            portSelector,\n            MobileLocateElementPlayer,\n            null /* Not in use, placeholder for the order of arguments */,\n            stepActionUtils,\n            this.stepActionFactory,\n            this.playbackTimeoutCalculator,\n            testResultService.getSocket(),\n            automationMode,\n        );\n\n        if (this.sessionPlayer.setShouldMonitorPerformance) {\n            this.sessionPlayer.setShouldMonitorPerformance(shouldMonitorPerformance);\n        }\n        this.sessionPlayer.playbackManager.isRemoteSession = true;\n        this.sessionPlayer.playbackManager.isLocalRun = false;\n        this.sessionPlayer.playbackManager.testRetryCount = testRetryCount;\n        this.sessionPlayer.playbackManager.previousTestResultId = previousTestResultId;\n\n        this.sessionPlayer.playbackManager.userParamsData = userParamsData || {};\n        this.onStepCompleted = this.onStepCompleted.bind(this);\n\n        this.sessionPlayer.playbackManager.on(commonConstants.playback.RESULT, this.onStepCompleted);\n    }\n\n    onStepCompleted(result, testId, resultId, step) {\n        //do nothing for now ...\n    }\n\n\n    async onDone() {\n        try {\n            await this.driver.activeSession.deleteSession();\n        } catch (error) {\n            logger.error('error while deleting appium session', { error });\n        } finally {\n            const { commonConstants } = getSessionPlayer();\n            this.sessionPlayer.playbackManager.off(commonConstants.playback.RESULT);\n            this.sessionPlayer = null;\n            this.tabService = null;\n            this.stepActionFactory = null;\n            this.driver = null;\n        }\n    }\n\n    getSessionId() {\n        return this.driver.activeSession.sessionId;\n    }\n}\n", "import * as jsdom from 'jsdom';\nimport * as config from '../commons/config';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport * as desiredCapabilitiesBuilder from '../commons/testimDesiredCapabilitiesBuilder';\nimport { BaseWorker } from './BaseWorker';\nimport { getLogger } from '../commons/logger';\nimport { reporter } from '../reports/reporter';\nimport { AppiumTestPlayer } from '../player/appiumTestPlayer';\nimport { getSessionPlayer } from '../commons/getSessionPlayerRequire';\nimport type * as webdriverio from 'webdriverio';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { AppiumCapabilities } from '@wdio/types/build/Capabilities';\nimport type { TestResult } from 'clickim/src/common/models/TestResult';\n\nconst logger = getLogger('worker-appium');\n\nexport class WorkerAppium extends BaseWorker<AppiumTestPlayer> {\n    override initPlayer(testRunHandler: TestRunHandler) {\n        return new AppiumTestPlayer(\n            this.id,\n            testRunHandler.runParams,\n            this.options.shouldMonitorPerformance,\n            testRunHandler.automationMode,\n            undefined,\n            testRunHandler.retryCount,\n            testRunHandler.previousTestResultId,\n        );\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, appiumTestPlayer: AppiumTestPlayer, gridInfo: any) {\n        reporter.onGetSession(this.id, this.testName, testRunHandler.runMode);\n        const { driver } = appiumTestPlayer;\n        const projectType = this.options.projectData!.type;\n        const nativeApp = await testRunHandler.getNativeAppData();\n        const androidActivityWait = projectType === 'android' ? testRunHandler.androidActivityWait : null;\n        let appPath = testRunHandler.nativeAppLink;\n        if (this.options.appId) {\n            const { project: projectId, appId } = this.options;\n            const mobileApp = await testimServicesApi.getAppDetails({ appId, projectId });\n            if (!mobileApp) {\n                logger.error('mobile app not found', { appId, projectId });\n                throw new Error('mobile app not found');\n            }\n            appPath = `${config.SERVICES_HOST}/storage${mobileApp.filePath}?access_token=${this.options.authData!.token}`;\n        }\n        try {\n            const capabilities = desiredCapabilitiesBuilder.buildAppiumOptions({\n                projectType,\n                gridInfo,\n                testRunConfig: this.testRunConfig,\n                nativeApp,\n                options: this.options,\n                appPath,\n                androidActivityWait,\n            });\n\n            const activeSession = await driver.remote(capabilities);\n            Object.assign(driver, { activeSession });\n            await this.updateDeviceInfo(testRunHandler, activeSession);\n            logger.info(`init new appium session testName: ${this.testName}`, { sessionId: activeSession.sessionId, testResultId: this.testResultId, nativeApp });\n        } catch (err) {\n            //TODO:  catch app status validation\n            logger.error('failed to start application', { err });\n            throw err;\n        }\n    }\n\n    private getServerAddressFromGrid() {\n        const { host, port, accessToken } = this.options.gridData!;\n        return `https://${host}:${port}/v0/${accessToken}/wd/hub`;\n    }\n\n    async updateDeviceInfo(testRunHandler: TestRunHandler, activeSession: WebdriverIO.Browser) {\n        const { executionId, testId, testResultId } = testRunHandler;\n        const { project: projectId, projectData: { type: projectType } = {}, company: { companyId = '' } = {}, gridData: { gridId = '' } = {} } = this.options;\n\n        const selectedDeviceArr = await testimServicesApi.getMobileDevicesFromGrid({\n            projectId, projectType: projectType!, companyId, gridId, selectors: `device_id:${(activeSession.capabilities as any).udid}`,\n        });\n        const deviceName = selectedDeviceArr?.[0]?.name;\n\n        const device = {\n            name: deviceName,\n            model: (activeSession.capabilities as any).deviceModel,\n            osVersion: (activeSession.capabilities as any).platformVersion,\n            udid: (activeSession.capabilities as any).udid,\n            osType: (activeSession.capabilities as any).platformName,\n            scaleFactor: (activeSession.capabilities as any).pixelRatio,\n            virtual: false,\n        };\n        await testimServicesApi.updateTestStatus(\n            projectId,\n            executionId,\n            testId,\n            testResultId,\n            'RUNNING',\n            { device },\n        );\n    }\n\n    getDirectAddressConnection(activeSessionCapabilities: AppiumCapabilities) {\n        const { directConnectProtocol: protocol, directConnectHost: host, directConnectPort: port, directConnectPath: path } = activeSessionCapabilities;\n        if (protocol && host && port && path) {\n            return `${protocol}://${host}:${port}${path}`;\n        }\n        return undefined;\n    }\n\n    async runTestOnce(testRunHandler: TestRunHandler, appiumTestPlayer: AppiumTestPlayer) {\n        const sessionPlayerInit = getSessionPlayer();\n        const { sessionPlayer } = appiumTestPlayer;\n        const driver = appiumTestPlayer.driver as typeof webdriverio & { activeSession: WebdriverIO.Browser };\n        const version = sessionPlayerInit.manifestVersion || 'runner';\n\n        reporter.onWaitToTestComplete(this.id, this.isCodeMode);\n\n        sessionPlayer.playbackManager.executionId = testRunHandler.executionId;\n        sessionPlayer.playbackManager.executionName = testRunHandler.executionName;\n\n        const serverAddress = this.getDirectAddressConnection(driver.activeSession.capabilities as AppiumCapabilities) || this.getServerAddressFromGrid();\n        const DOMParser = new jsdom.JSDOM('').window.DOMParser;\n        sessionPlayer.playbackManager.appiumApi = new sessionPlayerInit.AppiumApi(serverAddress, driver.activeSession.sessionId, DOMParser);\n        if (sessionPlayerInit.localAssetService) {\n            sessionPlayerInit.localAssetService.initialize({ serverUrl: this.options.localRCASaver });\n        }\n        const runAppiumTest = async () => {\n            try {\n                const INCOGNITO = false;\n                const testResult = await new Promise<TestResult>((resolve, reject) =>\n                    // eslint-disable-next-line no-promise-executor-return\n                    sessionPlayer.playByTestId(\n                        this.testId!,\n                        this.executionId,\n                        this.testResultId!,\n                        this.baseUrl,\n                        this.userData,\n                        version,\n                        resolve,\n                        false,\n                        this.overrideTestConfigId!,\n                        this.branch!,\n                        INCOGNITO,\n                        testRunHandler.remoteRunId!,\n                        undefined!,\n                        undefined,\n                        undefined,\n                    ).catch(reject),\n                );\n                if (sessionPlayerInit.localAssetService) {\n                    await sessionPlayerInit.localAssetService.drain();\n                }\n                testResult.stepsResults = null as any;\n                testResult.resultId = this.testResultId!;\n                const resultWithStats = { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                return resultWithStats;\n            } catch (err) {\n                //TODO: add test timeout and handle Timeout Error TBD\n                // if (err instanceof TimeoutError && sessionPlayer.stopPlayingOnTestTimeout) {\n                //     sessionPlayer.stopPlayingOnTestTimeout();\n                // }\n                logger.error('error while running appium tests', { err });\n                throw err;\n            }\n        };\n        try {\n            await super.runTestOnce(testRunHandler, appiumTestPlayer);\n            return await runAppiumTest.call(this);\n        } catch (err) {\n            logger.error('failed to run test once', { err });\n            throw err;\n        }\n    }\n}\n", "import * as utils from '../utils';\nimport { WebDriver } from './webdriver';\nimport { TimeoutError } from '../errors';\n\nexport class ExtensionTestPlayer {\n    constructor(id) {\n        this.driver = new WebDriver();\n        this.id = id;\n    }\n\n    async onDone() {\n        const END_DRIVER_TIMEOUT = 1000 * 60 * 2;\n        try {\n            await utils.promiseTimeout(this.driver.end(), END_DRIVER_TIMEOUT);\n        } catch (error) {\n            if (error instanceof TimeoutError) {\n                await this.driver.forceEnd().catch(() => {});\n            }\n        }\n        this.driver = null;\n    }\n\n    getSessionId() {\n        return this.driver.getSessionId();\n    }\n}\n", "import WebSocket from 'ws';\nimport { promiseFromCallback } from './utils';\n\nexport class CDPTestRunner {\n    private _lastWsId: number | undefined;\n    private _cdpWs: Promise<WebSocket> | null = null;\n    private _cdpUrl: string | null = null;\n    private _cdpCallbacks = new Map<number, { resolve(value: any): void; reject(e: Error): void }>();\n\n    async initSession(cdpUrl: string, timeout = 500) {\n        await this.stopSession();\n        this._cdpUrl = cdpUrl;\n        await this.initCDPWebsocket(timeout);\n    }\n\n    async initCDPWebsocket(timeout = 500) {\n        if (this._cdpWs) {\n            return this._cdpWs;\n        }\n        const websocket = new WebSocket(this._cdpUrl!, { timeout });\n\n        const openPromise = promiseFromCallback((cb) => {\n            websocket.once('open', cb);\n        });\n\n        const errorPromise = promiseFromCallback((cb) => {\n            websocket.once('error', cb);\n        }).catch(() => {\n            websocket.close();\n            websocket.removeAllListeners();\n        });\n\n        websocket.on('message', (message) => this.onCDPMessage(message));\n\n        this._cdpWs = Promise.race([openPromise, errorPromise]).then(() => websocket);\n        return this._cdpWs;\n    }\n\n    onCDPMessage(message: WebSocket.RawData) {\n        // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n        const object = JSON.parse(message);\n        const callback = this._cdpCallbacks.get(object.id);\n        if (!callback) {\n            return;\n        }\n        this._cdpCallbacks.delete(object.id);\n        if (object.error) {\n            callback.reject(new Error(object.error));\n        } else if (object.result.exceptionDetails?.exception) {\n            callback.reject(new Error(object.result.exceptionDetails.exception.description));\n        } else {\n            callback.resolve(object.result);\n        }\n    }\n\n    async stopSession() {\n        const websocket = this._cdpWs;\n        this._cdpUrl = null;\n        this._cdpWs = null;\n        this._cdpCallbacks.clear();\n        if (websocket) {\n            try {\n                return (await websocket).close();\n            } catch (e) {\n                return undefined;\n            }\n        }\n        return undefined;\n    }\n\n    async cdpCommand<T = any>(method: string, params?: object, sessionId?: string) {\n        const websocket = await this.initCDPWebsocket();\n        this._lastWsId ||= 0;\n        const id = this._lastWsId++;\n        const result = new Promise<T>((resolve, reject) => {\n            this._cdpCallbacks.set(id, { resolve, reject });\n        });\n        const msg = { method, params, id };\n        if (sessionId) {\n            Object.assign(msg, { sessionId });\n        }\n        websocket.send(JSON.stringify(msg));\n        return result;\n    }\n}\n", "import * as utils from '../utils';\nimport * as launcher from 'chrome-launcher';\nimport * as desiredCapabilitiesBuilder from '../commons/testimDesiredCapabilitiesBuilder';\nimport { CDPTestRunner } from '../cdpTestRunner';\nimport { registerExitHook } from '../processHandler';\n\n/** @typedef {LauncherDriver} LauncherDriverType */\nclass LauncherDriver {\n    constructor(sessionId) {\n        this.sessionId = sessionId;\n        this.cdpTestRunner = new CDPTestRunner();\n    }\n\n    async init(browserOptions, testName, testRunConfig, gridInfo, customExtensionLocalLocation, executionId, testResultId) {\n        const capabilities = desiredCapabilitiesBuilder.buildSeleniumOptions(browserOptions, testName, testRunConfig, gridInfo, customExtensionLocalLocation, executionId, testResultId);\n        const chromeFlags = [\n            ...capabilities.desiredCapabilities.chromeOptions.args,\n            ...launcher.Launcher.defaultFlags().filter(flag => flag !== '--disable-extensions'),\n        ];\n        this.chrome = await launcher.launch({ chromeFlags, startingUrl: undefined, ignoreDefaultFlags: true });\n        this.chrome.process.once('exit', () => { this._isAlive = false; });\n        this.chrome.process.once('close', () => { this._isAlive = false; });\n        this._isAlive = true;\n        const webSocketDebuggerUrl = await utils.getCdpAddressForHost(`localhost:${this.chrome.port}`);\n        await this.cdpTestRunner.initSession(webSocketDebuggerUrl);\n\n        registerExitHook(() => this.chrome.kill());\n    }\n\n    isAlive() {\n        return this._isAlive;\n    }\n\n    start() {\n    }\n\n    async stop() {\n        await this.cdpTestRunner.stopSession();\n        if (this.chrome) {\n            await this.chrome.kill();\n        }\n        this._isAlive = false;\n    }\n\n    getSessionId() {\n        return this.sessionId;\n    }\n}\n\nexport class ChromeLauncherTestPlayer {\n    constructor(id) {\n        this.sessionId = utils.guid();\n        this.driver = new LauncherDriver(this.sessionId);\n        this.id = id;\n    }\n\n    async onDone() {\n        return this.driver.stop();\n    }\n\n    getSessionId() {\n        return this.sessionId;\n    }\n}\n", "import * as perf from '../commons/performance-logger';\nimport { TimeoutError } from '../errors';\nimport { BaseWorker } from './BaseWorker';\nimport { promiseTimeout } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { reporter } from '../reports/reporter';\nimport { timeoutMessages, stepResult } from '../commons/constants';\nimport { ExtensionTestPlayer } from '../player/extensionTestPlayer';\nimport { ChromeLauncherTestPlayer } from '../player/chromeLauncherTestPlayer';\nimport type { TestRunHandler } from '../testRunHandler';\n\nconst logger = getLogger('worker-ext');\n\nexport type ExtensionPlayer = ChromeLauncherTestPlayer | ExtensionTestPlayer;\n\nexport class WorkerExtension extends BaseWorker<ExtensionPlayer> {\n    override initPlayer() {\n        if (this.options.useChromeLauncher) {\n            return new ChromeLauncherTestPlayer(this.id);\n        }\n        return new ExtensionTestPlayer(this.id);\n    }\n\n    protected async _getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, player: ExtensionPlayer, gridInfo: any) {\n        const { driver } = player;\n        try {\n            return await driver.init(\n                this.options,\n                this.testName!,\n                this.testRunConfig!,\n                gridInfo,\n                customExtensionLocalLocation,\n                this.executionId,\n                this.testResultId!,\n                testRunHandler.seleniumPerfStats,\n                this.options.lightweightMode?.general,\n                this.lambdatestService,\n            );\n        } catch (err) {\n            logger.error('failed to get browser', {\n                err,\n                gridInfo,\n                testId: testRunHandler.testId,\n                resultId: testRunHandler.testResultId,\n            });\n            throw err;\n        }\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, player: ExtensionPlayer, gridInfo: any) {\n        reporter.onGetSession(this.id, this.testName, testRunHandler.runMode);\n        return this._getBrowserOnce(testRunHandler, customExtensionLocalLocation, player, gridInfo);\n    }\n\n    protected isUsingChromeLauncher(player: ExtensionPlayer): player is ChromeLauncherTestPlayer {\n        return Boolean(this.options.useChromeLauncher);\n    }\n\n    override async runTestOnce(testRunHandler: TestRunHandler, player: ExtensionPlayer) {\n        // const { driver } = player;\n        const { testResultId, executionId, testId } = this;\n        perf.log('WorkerExtension runTestOnce');\n\n        const runViaCdpOrFallbackToAPI = async (driver: ChromeLauncherTestPlayer['driver']) => {\n            const testTimeout = this.options.timeoutWasGiven ? Math.max(10000, this.options.timeout) : this.options.testStartTimeout;\n            try {\n                return await promiseTimeout(testRunHandler.runTestUsingCDP(driver.cdpTestRunner), testTimeout, timeoutMessages.TEST_START_TIMEOUT_MSG);\n            } catch (err) {\n                if (!(err instanceof TimeoutError)) {\n                    throw err;\n                }\n                logger.warn('timeout while running test using CDP. Running checkViaRestAPIIfTestStarted', { testResultId });\n                return await testRunHandler.checkViaRestAPIIfTestStarted();\n            }\n        };\n        interface StartStatusDetails { driverUrlFinished: boolean; testRunHandlerOnStartedHadFinished: boolean }\n        const navigateChromeSessionToRunTestim = async (driver: ExtensionTestPlayer['driver'], url: string, startStatusDetails: StartStatusDetails) => {\n            try {\n                const res = await driver.url(url);\n                startStatusDetails.driverUrlFinished = true;\n                return res;\n            } catch (err) {\n                logger.error('error from driver.url', { err, testResultId, executionId, testId, url, urlLength: url.length });\n                throw err;\n            }\n        };\n        const updateRunHandlerThatTestStartedAndChangeStatusDetails = async (startStatusDetails: StartStatusDetails) => {\n            const res = await testRunHandler.onStarted(this.options.testStartTimeout);\n            startStatusDetails.testRunHandlerOnStartedHadFinished = true;\n            return res;\n        };\n\n        const runExtTest = async () => {\n            perf.log('WorkerExtension runExtTest');\n            const disableRemoteStep = this.options.lightweightMode?.disableRemoteStep || this.options.disableSockets;\n            if (!disableRemoteStep) {\n                testRunHandler.listenToRemoteStep(player.driver);\n            }\n            if (this.isUsingChromeLauncher(player)) {\n                reporter.onWaitToTestStart(this.id);\n                reporter.onWaitToTestComplete(this.id, this.isCodeMode);\n                try {\n                    const testResult = await runViaCdpOrFallbackToAPI(player.driver);\n                    return { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                } catch (err) {\n                    logger.warn('failed to run test via CDP', { err });\n                    throw err;\n                }\n            }\n            const { driver } = player;\n            const startStatusDetails = { driverUrlFinished: false, testRunHandlerOnStartedHadFinished: false }; //for logging / debugging purposes\n\n            try {\n                const url = await testRunHandler.getRunTestUrl();\n                reporter.onWaitToTestStart(this.id);\n                try {\n                    await promiseTimeout(Promise.all([\n                        navigateChromeSessionToRunTestim(player.driver, url, startStatusDetails),\n                        updateRunHandlerThatTestStartedAndChangeStatusDetails(startStatusDetails),\n                    ]), this.options.testStartTimeout, timeoutMessages.TEST_START_TIMEOUT_MSG);\n                } catch (err) {\n                    if (!(err instanceof TimeoutError)) {\n                        throw err;\n                    }\n                    logger.warn('timeout occurred (see log\\'s payload). Running checkViaRestAPIIfTestStarted', { testResultId, executionId, testId, ...startStatusDetails });\n                    await testRunHandler.checkViaRestAPIIfTestStarted();\n                }\n\n                reporter.onWaitToTestComplete(this.id, this.isCodeMode);\n                const onBrowserClosed = (err: any) => {\n                    testRunHandler.onCompletedCleanup();\n                    logger.warn('on browser closed error detected', { err, testResultId, executionId, testId });\n                    driver.unregisterToClosedBrowser(onBrowserClosed);\n                    err.type = stepResult.BROWSER_CLOSED;\n                    throw err;\n                };\n                driver.registerToClosedBrowser(onBrowserClosed);\n                try {\n                    const testResult = await promiseTimeout(testRunHandler.onCompleted(), this.testRunTimeout, timeoutMessages.TEST_COMPLETE_TIMEOUT_MSG);\n                    driver.unregisterToClosedBrowser(onBrowserClosed);\n                    if (this.lambdatestService.isLambdatestRun()) {\n                        await driver.executeJS(`lambda-status=${!testResult.success ? 'failed' : 'passed'}`).catch(() => { /* ignore */ });\n                    }\n                    if (!driver.isAlive()) {\n                        logger.warn(`possible grid unresponsive for test ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                        testResult.gridIssues = 'could not validate grid is alive';\n                    }\n                    const maxKeepAliveGap = driver.maxKeepAliveGap();\n                    const MAX_KEEP_ALIVE_GAP = 30000;\n                    if (maxKeepAliveGap >= MAX_KEEP_ALIVE_GAP) {\n                        logger.warn(`possible browser keep alive issue ${this.testId}, result ${this.testResultId} (execution: ${this.executionId})`);\n                        testResult.keepAliveIssue = maxKeepAliveGap as any as string;\n                    }\n                    return { ...testResult, ...testRunHandler.seleniumPerfStats.getStats() };\n                } catch (err) {\n                    logger.warn('timeout wait until test completed', { err, testResultId, executionId, testId });\n                    // complete time out\n                    throw new Error(err);\n                } finally {\n                    driver.unregisterToClosedBrowser(onBrowserClosed);\n                }\n            } catch (err) {\n                logger.warn('failed to start url', { err });\n                throw new Error(err);\n            }\n        };\n\n        player.driver.start();\n\n        try {\n            await super.runTestOnce(testRunHandler, player);\n            perf.log('WorkerExtension super.runTestOnce');\n            return await runExtTest();\n        } catch (err) {\n            logger.error('failed to run test', {\n                err,\n                testId: testRunHandler.testId,\n                resultId: testRunHandler.testResultId,\n            });\n            throw err;\n        }\n    }\n}\n", "import * as perf from '../commons/performance-logger';\nimport { delay } from '../utils';\nimport { getLogger } from '../commons/logger';\nimport { releasePlayer } from './workerUtils';\nimport { reporter } from '../reports/reporter';\nimport { WorkerExtension } from './WorkerExtension';\nimport type { TestRunHandler } from '../testRunHandler';\nimport type { ExtensionPlayer } from './WorkerExtension';\n\nconst logger = getLogger('base-worker');\nconst DELAY_BETWEEN_TESTS = 500;\n\nexport class WorkerExtensionSingleBrowser extends WorkerExtension {\n    private testPlayer: ExtensionPlayer | null | undefined;\n\n    async _releasePlayer() {\n        if (!this.testPlayer) {\n            return;\n        }\n        const { projectId } = this.userData || {};\n        await releasePlayer(this.id, this.releaseSlotOnTestFinished, projectId!, this.testPlayer);\n        this.testPlayer = null;\n    }\n\n    override onQueueCompleted() {\n        return this._releasePlayer();\n    }\n\n    override async getBrowserOnce(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, player: ExtensionPlayer, gridInfo: any) {\n        reporter.onGetSession(this.id, `worker ${this.id}`, testRunHandler.runMode);\n        return this._getBrowserOnce(testRunHandler, customExtensionLocalLocation, player, gridInfo);\n    }\n\n    override async getTestPlayer(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined) {\n        if (this.testPlayer && !this.testPlayer.driver.isAlive()) {\n            logger.warn('WorkerExtensionSingleBrowser is releasing a dead player', { workerId: this.id });\n            await this._releasePlayer();\n        }\n        if (!this.testPlayer) {\n            this.testPlayer = await super.getTestPlayer(testRunHandler, customExtensionLocalLocation);\n        }\n        return this.testPlayer;\n    }\n\n    override async runTest(testRunHandler: TestRunHandler, customExtensionLocalLocation: string | undefined, shouldRerun: boolean | undefined) {\n        const quarantineResult = this.handleQuarantine(testRunHandler);\n        if (quarantineResult) {\n            return quarantineResult;\n        }\n\n        perf.log('before runTest onTestStarted single browser');\n        const test = await this.onTestStarted(this.id, testRunHandler.testId, testRunHandler.testResultId, shouldRerun, testRunHandler.retryKey);\n        testRunHandler.baseUrl = test.config.baseUrl;\n        const testPlayer = await this.getTestPlayer(testRunHandler, customExtensionLocalLocation);\n\n        testRunHandler.markClearBrowser();\n        return await this.runTestOnce(testRunHandler, testPlayer);\n    }\n\n    override async runTestCleanup() {\n        if (!this.executionQueue.hasMoreTests()) {\n            await this.onQueueCompleted();\n            return;\n        }\n        if (this.options.lightweightMode?.general) {\n            await delay(DELAY_BETWEEN_TESTS);\n        }\n    }\n}\n", "import '../player/webdriver'; // preload\nimport * as utils from '../utils';\nimport * as config from '../commons/config';\nimport * as perf from '../commons/performance-logger';\nimport * as analyticsService from '../services/analyticsService';\nimport * as testimCustomToken from '../commons/testimCustomToken';\nimport { labFeaturesService } from '../services/labFeaturesService';\nimport { StopRunOnError } from '../errors';\nimport { getLogger } from '../commons/logger';\nimport { CLI_MODE } from '../commons/constants';\nimport { ExecutionQueue } from '../executionQueue';\nimport type { RunnerOptions } from '../runOptions';\nimport type { ExecutionList } from './TestPlanRunner';\nimport type { TestRunStatus } from '../testRunStatus';\nimport type { SerializedGrid } from '../services/gridService';\n\nconst logger = getLogger('parallel-worker-manager');\n\ntype RemoveFirst<T extends unknown[]> = T extends [unknown, ...infer R] ? R : T;\nexport interface TestResultUpdates {\n    show?: true;\n    seleniumStats?: any;\n    gridIssues?: any;\n    keepAliveIssue?: any;\n    gridHost?: string;\n    gridName?: string;\n    gridType?: string;\n    gridProvider?: string;\n}\n\n\nexport interface IgnoredTestResult {\n    name?: string;\n    testId: string;\n    resultId: string;\n    runnerStatus: 'SKIPPED';\n    testStatus?: string;\n    mobile?: { [key in 'isAppFromDevice' | 'isAppForIosVirtualDevice']?: boolean };\n }\nexport class ParallelWorkerManager {\n    constructor(private readonly customExtensionLocalLocation?: string) {}\n\n    getWorkerType(mode: typeof CLI_MODE[keyof typeof CLI_MODE]) {\n        switch (mode) {\n            case CLI_MODE.SELENIUM:\n                return require('../workers/WorkerSelenium').WorkerSelenium as typeof import('../workers/WorkerSelenium').WorkerSelenium;\n            case CLI_MODE.APPIUM:\n                return require('../workers/WorkerAppium').WorkerAppium as typeof import('../workers/WorkerAppium').WorkerAppium;\n            default:\n                if (labFeaturesService.isFeatureAvailableForProject('useSameBrowserForMultiTests')) {\n                    return require('../workers/WorkerExtensionSingleBrowser').WorkerExtensionSingleBrowser as typeof import('../workers/WorkerExtensionSingleBrowser').WorkerExtensionSingleBrowser;\n                }\n                return require('../workers/WorkerExtension').WorkerExtension as typeof import('../workers/WorkerExtension').WorkerExtension;\n        }\n    }\n\n    createWorkers(count: number, queue: ExecutionQueue, mode: typeof CLI_MODE[keyof typeof CLI_MODE], ...args: RemoveFirst<ConstructorParameters<typeof import('../workers/BaseWorker').BaseWorker>>) {\n        const Worker = this.getWorkerType(mode);\n        const createWorker = () => {\n            try {\n                perf.log('before new Worker', mode);\n                return new Worker(queue, ...args);\n            } finally {\n                perf.log('after new Worker', mode);\n            }\n        };\n\n        return Array.from(new Array(count), createWorker);\n    }\n\n    async runTests(\n        testList: ExecutionList,\n        testStatus: TestRunStatus,\n        executionId: string,\n        executionName: string,\n        options: RunnerOptions,\n        branchToUse: string,\n        authData: Partial<testimCustomToken.TokenUserData>,\n        workerCount: number,\n        stopOnError: boolean,\n    ) {\n        if (testList && testList.length === 0) {\n            return undefined;\n        }\n\n        let stoppedOnError = false;\n        let runningTests = 0;\n        const runAndWaitToComplete = (token: string) => new Promise<{ [testResultId: string]: any }>((resolve) => {\n            const projectId = options.project;\n            const executionQueue = new ExecutionQueue(executionId, executionName, testList, options, branchToUse, testStatus);\n\n            const combinedTestResults: { [testResultId: string]: any } = {};\n            const testCount = testList.length;\n\n            const companyId = options.company?.companyId;\n            const companyName = options.company?.name;\n            const source = options.source || 'cli';\n            const user = options.user;\n            const companyPlan = options.company?.planType;\n            const isStartUp = options.company?.isStartUp;\n            const projectName = options.projectData?.name;\n            const projectType = options.projectData?.type;\n            const lightweightMode = options.lightweightMode;\n            const sessionType = utils.getSessionType(options);\n\n            const onTestStarted = (wid: number, testId: string, resultId: string, isRerun: boolean | undefined, testRetryKey: `${number}:${number}`, appSource?: string) => {\n                runningTests++;\n                analyticsService.analyticsTestStart({\n                    executionId,\n                    projectId,\n                    testId,\n                    resultId,\n                    companyId,\n                    companyName,\n                    projectName,\n                    companyPlan,\n                    sessionType,\n                    source,\n                    user,\n                    lightweightMode,\n                    isStartUp,\n                    projectType,\n                    appSource,\n                });\n                return testStatus.testStartAndReport(wid, executionId, resultId, isRerun, testRetryKey);\n            };\n\n            const onTestCompleted = async (wid: number, testId: string, testResult: any, sessionId: string, isRerun: boolean | undefined, appSource?: string) => {\n                runningTests--;\n                const update: TestResultUpdates = {\n                    ...(lightweightMode?.onlyTestIdsNoSuite && { show: true }),\n                    ...(testResult.seleniumStats && { seleniumStats: testResult.seleniumStats }),\n                    ...(testResult.gridIssues && { gridIssues: testResult.gridIssues }),\n                    ...(testResult.keepAliveIssue && { keepAliveIssue: testResult.keepAliveIssue }),\n                    ...(options.host && { gridHost: options.host }),\n                };\n                if (testResult.seleniumPerfMarks) {\n                    testStatus.concatSeleniumPerfMarks(testResult.seleniumPerfMarks);\n                    delete testResult.seleniumPerfMarks;\n                }\n                if (options.grid || options.gridId) {\n                    update.gridName = options.grid || options.gridData?.name;\n                    update.gridType = options.gridData?.type;\n                    update.gridProvider = options.gridData?.provider;\n                } else if (options.useLocalChromeDriver) {\n                    update.gridName = 'local-chrome-driver-from-options';\n                    update.gridType = 'local-chrome';\n                } else if (options.useChromeLauncher) {\n                    update.gridName = 'chrome-launcher-from-options';\n                    update.gridType = 'local-chrome';\n                } else if (options.browserstack) {\n                    update.gridName = 'browserstack-from-options';\n                } else if (options.saucelabs) {\n                    update.gridName = 'saucelabs-from-options';\n                }\n\n                await testStatus.testEndAndReport(wid, testResult, executionId, sessionId, isRerun, update)\n                    .catch(err => logger.error('testEndAndReport threw an error', { err }));\n\n                if (isRerun) {\n                    return;\n                }\n                combinedTestResults[testResult.resultId] = testResult;\n                analyticsService.analyticsTestEnd({\n                    executionId,\n                    projectId,\n                    testId,\n                    resultId: testResult.resultId,\n                    result: testResult,\n                    companyId,\n                    companyName,\n                    projectName,\n                    companyPlan,\n                    sessionType,\n                    source,\n                    user,\n                    lightweightMode,\n                    logger,\n                    isStartUp,\n                    projectType,\n                    appSource,\n                });\n                if (stopOnError && !testResult.success) {\n                    executionQueue.stop();\n                    stoppedOnError = true;\n                }\n                const completedTests = Object.keys(combinedTestResults).length;\n                if (completedTests === testCount || (stoppedOnError && runningTests === 0)) {\n                    resolve(combinedTestResults);\n                }\n            };\n\n            const onTestIgnored = (wid: number, testResult: IgnoredTestResult) => {\n                combinedTestResults[testResult.resultId] = testResult;\n                testStatus.onTestIgnored(wid, testResult.resultId);\n                runningTests--;\n                const completedTests = Object.keys(combinedTestResults).length;\n                if (completedTests === testCount || (stoppedOnError && runningTests === 0)) {\n                    resolve(combinedTestResults);\n                }\n            };\n\n            const onGridSlot = (resultId: string, gridInfo: SerializedGrid) => testStatus.onGridSlot(resultId, gridInfo);\n\n            options.userData = {\n                loginData: Object.assign({}, testimCustomToken.getTokenV3UserData(), {\n                    refreshToken: testimCustomToken.getRefreshToken()!,\n                    authData: testimCustomToken.getTokenV3UserData(),\n                    token,\n                }),\n                projectId: options.project,\n                company: options.company,\n                servicesUrl: config.SERVICES_HOST,\n            };\n            perf.log('in localStrategy before createWorker');\n            this.createWorkers(\n                workerCount,\n                executionQueue,\n                options.mode,\n                options,\n                this.customExtensionLocalLocation,\n                executionId,\n                onTestStarted,\n                onTestCompleted,\n                onGridSlot,\n                onTestIgnored,\n            ).forEach((worker, index) => {\n                perf.log('before schedule worker.run after createWorkers');\n                schedule(() => {\n                    perf.log('right before worker.run');\n                    worker.run();\n                }, index);\n            });\n        });\n\n        try {\n            const token = await testimCustomToken.getCustomTokenV3();\n            const result = await runAndWaitToComplete(token);\n            if (stoppedOnError) {\n                throw new StopRunOnError();\n            }\n            return result;\n        } catch (err) {\n            logger.error('failed running parallel workers', { executionId, err });\n            throw err;\n        }\n    }\n}\n\nfunction schedule(fn: () => void, index: number) {\n    if (index === 0) {\n        fn();\n    } else {\n        setTimeout(fn, index * config.START_WORKER_DELAY_MS);\n    }\n}\n", "import { BaseSocketService } from './baseSocketServiceSocketIO';\nimport type { RawTestResult } from 'services/src/commons/mongo/models/testResult';\n\nexport class RealDataServiceSocketIO extends BaseSocketService {\n    override init(projectId: string) {\n        return super.initNewSocket(projectId, 'real-data');\n    }\n\n    override emitJoinRoom(runId: string, projectId: string) {\n        this._socket!.emit('testResult:listen', { query: `projectId=${projectId}&runId=${runId}` });\n    }\n\n    joinToTestResultsByRunId(runId: string, projectId: string) {\n        this.joinRoom(runId, projectId);\n        this.emitJoinRoom(runId, projectId);\n    }\n\n    stopListenToTestResultsByRunId(runId: string) {\n        this.leaveRoom(runId);\n        this._socket!.emit('testResult:listen:stop', {});\n    }\n\n    listenToTestResultsByRunId(cb: (testResult: Partial<RawTestResult> & { id: string }) => void) {\n        function onDone(data: { operationType: string; data: Partial<RawTestResult> & { id: string } }) {\n            cb(data.data);\n        }\n\n        this._socket!.on('testResult:changes', onDone.bind(this));\n    }\n}\n\n/**\n * Long comment for file rename history!\n * Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n * Aenean et massa nisi.\n * Morbi pellentesque, nisi a interdum dapibus, lacus massa laoreet neque, vel dapibus erat nibh in dui.\n * Donec mollis ac velit nec tincidunt.\n * Nunc nisi ligula, fermentum vel metus lacinia, tempus dapibus mi.\n * Nullam mollis posuere hendrerit.\n * Cras semper justo in suscipit scelerisque.\n * Maecenas eu fringilla felis, nec rutrum libero.\n * Suspendisse rutrum dictum mi in maximus.\n * Sed vel metus ut dolor tristique commodo.\n * Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n * Nulla facilisi.\n * Duis ultrices sollicitudin ex, ac efficitur leo rutrum sed.\n * Quisque dapibus, diam eleifend tristique pulvinar, turpis neque varius lacus, in auctor ipsum nisl at ligula.\n * In dictum convallis eros et hendrerit.\n * In enim sem, tempus ac finibus nec, fringilla a neque.\n * Duis sodales, elit ac pharetra fermentum, velit risus ultrices lectus, sit amet sollicitudin sapien mi ac dolor.\n * Nullam urna dui, pharetra eu finibus id, congue ac lectus.\n * Sed eu vulputate mi.\n * Maecenas sit amet sapien egestas, iaculis lorem sed, hendrerit massa.\n * Etiam eget risus viverra, mollis nisi eget, pellentesque nisi.\n * Phasellus consequat, lacus eget viverra hendrerit, purus risus lobortis elit, a volutpat magna lorem faucibus sapien.\n * Maecenas fringilla imperdiet nisi ut iaculis.\n * Vestibulum laoreet erat eget mi aliquam, et luctus metus tincidunt.\n * Phasellus rhoncus purus in tincidunt ullamcorper.\n */\n", "import { socketService } from './socketService';\nimport { socketEventTypes } from '../constants';\nimport { featureFlagsService } from '../featureFlagsService';\nimport { RealDataServiceSocketIO } from './realDataServiceSocketIO';\nimport type { RawTestResult } from 'services/src/commons/mongo/models/testResult';\n\nconst { TEST_RESULT_CREATED, TEST_RESULT_UPDATED } = socketEventTypes;\n\nexport class RealDataService {\n    private realDataServiceSocketIO?: RealDataServiceSocketIO;\n\n    constructor() {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return;\n        }\n        this.realDataServiceSocketIO = new RealDataServiceSocketIO();\n    }\n\n    init(projectId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return Promise.resolve();\n        }\n        return this.realDataServiceSocketIO!.init(projectId);\n    }\n\n    joinToTestResultsByRunId(runId: string, projectId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            return socketService.addFilter(runId, { runId }, [\n                TEST_RESULT_UPDATED,\n                TEST_RESULT_CREATED,\n            ], true);\n        }\n        this.realDataServiceSocketIO!.joinToTestResultsByRunId(runId, projectId);\n        return undefined;\n    }\n\n    stopListenToTestResultsByRunId(runId: string) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.removeFilter(runId, [TEST_RESULT_UPDATED, TEST_RESULT_CREATED]);\n            return;\n        }\n        this.realDataServiceSocketIO!.stopListenToTestResultsByRunId(runId);\n    }\n\n    listenToTestResultsByRunId(runId: string, cb: (testResult: Partial<RawTestResult> & { id: string }) => void) {\n        if (featureFlagsService.flags.useNewWSCLI.isEnabled()) {\n            socketService.listenTo(\n                runId,\n                [TEST_RESULT_UPDATED, TEST_RESULT_CREATED],\n                data => data.runId === runId,\n                data => cb(data),\n            );\n            return;\n        }\n        this.realDataServiceSocketIO!.listenToTestResultsByRunId(cb);\n    }\n}\n", "import * as _ from 'lodash';\nimport * as path from 'path';\nimport * as utils from '../utils';\nimport * as analytics from '../commons/testimAnalytics';\nimport * as servicesApi from '../commons/testimServicesApi';\nimport { ArgError } from '../errors';\nimport type { TDKSuite } from './buildCodeTests';\nimport type { RunnerOptions } from 'src/runOptions';\nimport type { ExecutionList } from './TestPlanRunner';\nimport type { RunListResult } from 'services/src/suite/service';\nimport type { TestWithCustomTestDataAndRunConfig } from 'services/src/commons/testListBuilder';\n\ninterface LightweightOnlyTestIdsTest { testId: string; testConfig: {}; resultId: string }\ninterface LightweightOnlyTestIdsSuite { tests: LightweightOnlyTestIdsTest[][] }\n\nexport async function getSuite(options: RunnerOptions, branchToUse: string): Promise<LightweightOnlyTestIdsSuite | TDKSuite | RunListResult> {\n    if (options.lightweightMode?.onlyTestIdsNoSuite && options.testId) {\n        const tests = [options.testId.map<LightweightOnlyTestIdsTest>(testId => ({ testId, testConfig: {}, resultId: utils.guid() }))];\n        return { tests };\n    }\n    // local code test\n    if (options.files.length > 0) {\n        const { buildCodeTests } = await import('./buildCodeTests');\n        let webpackConfig = {};\n        if (options.webpackConfig) {\n            const webpackConfigPath = path.join(process.cwd(), options.webpackConfig);\n            webpackConfig = require(webpackConfigPath); // eslint-disable-line import/no-dynamic-require\n        }\n\n        return buildCodeTests(options.files, webpackConfig, { baseUrl: options.baseUrl });\n    }\n    // regular test\n    return await servicesApi.getSuiteTestList({\n        projectId: options.project,\n        labels: options.label,\n        testIds: options.testId,\n        testNames: options.name,\n        testConfigNames: options.testConfigNames,\n        suiteNames: options.suites,\n        suiteIds: options.suiteIds,\n        branch: branchToUse,\n        rerunFailedByRunId: options.rerunFailedByRunId,\n        testConfigIds: options.testConfigIds,\n        intersections: options.intersections,\n    });\n}\n\n\nexport function calcTestResultStatus(tests: { [testResultId: string]: { success: boolean } }) {\n    const total = Object.keys(tests).length;\n    const passed = Object.keys(tests).reduce((count, resultId) => count + (tests[resultId].success === true ? 1 : 0), 0);\n    return total === passed;\n}\n\n\nexport async function validateConfig(options: RunnerOptions, testList: ExecutionList) {\n    const supportedBrowsers = options.mode === 'extension' ? [\n        'edge-chromium', 'chrome',\n    ] : [\n        'firefox', 'chrome', 'edge-chromium', 'safari', 'safari technology preview', 'browser', 'android', 'ios', 'iphone', 'ipad',\n    ];\n    const diff = _.difference(utils.getUniqBrowsers(options, testList as TestWithCustomTestDataAndRunConfig[]), supportedBrowsers);\n\n    if (diff.length > 0) {\n        analytics.trackWithCIUser('invalid-config-run', {\n            browser: diff.join(', '),\n            mode: 'runner',\n        });\n        throw new ArgError(`browser type <${diff}> is not supported in ${options.mode} mode.`);\n    }\n\n    return testList;\n}\n", "import _ from 'lodash';\nimport * as utils from '../utils';\nimport * as Logger from '../commons/logger';\nimport * as config from '../commons/config';\nimport * as constants from '../commons/constants';\nimport * as perf from '../commons/performance-logger';\nimport * as gridService from '../services/gridService';\nimport * as branchService from '../services/branchService';\nimport * as analyticsService from '../services/analyticsService';\nimport * as testimServicesApi from '../commons/testimServicesApi';\nimport * as testimCustomToken from '../commons/testimCustomToken';\nimport { reporter } from '../reports/reporter';\nimport { TestRunStatus } from '../testRunStatus';\nimport { StopRunOnError, ArgError } from '../errors';\nimport { ParallelWorkerManager } from './ParallelWorkerManager';\nimport { RealDataService } from '../commons/socket/realDataService';\nimport { getSuite, calcTestResultStatus, validateConfig } from './runnerUtils';\nimport type { RunnerOptions } from 'src/runOptions';\nimport type { RunListResult } from 'services/src/suite/service';\n\n\nconst { testRunStatus: TESTIM_RUN_STATUS, CLI_MODE } = constants;\nconst logger = Logger.getLogger('test-plan-runner');\nconst TDK_CHILD_RESULTS_TIMEOUT = 1000 * 60 * 5;\n\nexport type ExecutionList = Awaited<ReturnType<typeof getSuite>>['tests'][number];\n\nexport class TestPlanRunner {\n    workerManager: ParallelWorkerManager;\n    startTime = Date.now();\n    constructor(customExtensionLocalLocation: string | undefined) {\n        this.workerManager = new ParallelWorkerManager(customExtensionLocalLocation);\n    }\n\n    private async runTestAllPhases(\n        beforeTests: ExecutionList,\n        tests: ExecutionList,\n        afterTests: ExecutionList,\n        branchToUse: string,\n        tpOptions: RunnerOptions,\n        executionId: string,\n        executionName: string,\n        testStatus: TestRunStatus,\n    ) {\n        const executionResults: { [testResultId: string]: any } = {};\n        const authData = testimCustomToken.getTokenV3UserData();\n\n        const runBeforeTests = async () => {\n            const workerCount = tpOptions.beforeParallel || 1;\n            const stopOnError = true;\n            const beforeTestsResults = await this.workerManager.runTests(beforeTests, testStatus, executionId, executionName, tpOptions, branchToUse, authData, workerCount, stopOnError);\n            Object.assign(executionResults, beforeTestsResults);\n        };\n\n        const runTestPlanTests = async () => {\n            const workerCount = config.TESTIM_CONCURRENT_WORKER_COUNT || tpOptions.parallel;\n            const stopOnError = false;\n            perf.log('right before this.workerManager.runTests');\n            const testsResults = await this.workerManager.runTests(tests, testStatus, executionId, executionName, tpOptions, branchToUse, authData, workerCount, stopOnError);\n            perf.log('right after this.workerManager.runTests');\n            Object.assign(executionResults, testsResults);\n        };\n\n        const runAfterTests = async () => {\n            const workerCount = tpOptions.afterParallel || 1;\n            const stopOnError = false;\n            const afterTestsResults = await this.workerManager.runTests(afterTests, testStatus, executionId, executionName, tpOptions, branchToUse, authData, workerCount, stopOnError);\n            Object.assign(executionResults, afterTestsResults);\n        };\n\n        const sessionType = utils.getSessionType(tpOptions);\n        analyticsService.analyticsExecsStart({ executionId, projectId: tpOptions.project, sessionType });\n        perf.log('right before runBeforeTests');\n        try {\n            await runBeforeTests();\n            perf.log('right before runTestPlanTests');\n            await runTestPlanTests();\n            perf.log('right after runTestPlanTests');\n            await runAfterTests();\n            return executionResults;\n        } catch (err) {\n            logger.error('error running test plan', { err });\n            if (err instanceof StopRunOnError) {\n                return testStatus.markAllQueuedTests(executionId, constants.runnerTestStatus.ABORTED, 'aborted', false);\n            }\n            throw err;\n        } finally {\n            await handlePixelValidationBatches();\n        }\n\n        async function handlePixelValidationBatches() {\n            if (tpOptions.lightweightMode?.disablePixelValidation) {\n                return;\n            }\n            // When sessionPlayer is available, use it - as it only attempts to close batches that exist.\n            if (tpOptions.mode === CLI_MODE.SELENIUM) {\n                const { EyeSdkBuilder } = (await import('../commons/getSessionPlayerRequire')).getSessionPlayer();\n                await EyeSdkBuilder.closeBatch(executionId);\n                return;\n            }\n            let applitoolsIntegrationData: Awaited<ReturnType<typeof testimServicesApi['getApplitoolsIntegrationData']>> | undefined;\n            try {\n                if (!tpOptions.company?.activePlan?.premiumFeatures?.applitools) {\n                    return;\n                }\n                applitoolsIntegrationData = await testimServicesApi.getApplitoolsIntegrationData(tpOptions.project);\n                if (_.isEmpty(applitoolsIntegrationData) || !executionId) {\n                    return;\n                }\n                const { runKey: apiKey, url: serverUrl } = applitoolsIntegrationData;\n                const tmpSDK = require('@applitools/eyes-sdk-core').makeSDK({ name: 'Testim.io', version: '4.0.0', spec: {} });\n                await tmpSDK.closeBatches({ settings: { batchIds: [executionId], serverUrl, apiKey } });\n            } catch {\n                // No need to log\n            }\n        }\n    }\n\n    private async initRealDataService(projectId: string) {\n        const realDataService = new RealDataService();\n        await realDataService.init(projectId);\n        return realDataService;\n    }\n\n    private async listenToTestCreatedInFile(realDataService: RealDataService, projectId: string, runId: string, testStatus: TestRunStatus) {\n        const childTestResults: { [testResultId: string]: any } = {};\n        realDataService.joinToTestResultsByRunId(runId, projectId);\n        let isPromisePending = true;\n        const promise = new Promise<any[]>(_resolve => {\n            const resolve = (val: any[]) => {\n                isPromisePending = false;\n                _resolve(val);\n            };\n            realDataService.listenToTestResultsByRunId(runId, testResult => {\n                const resultId = testResult.id;\n                if (!testStatus.getTestResult(resultId)) {\n                    const prevTestResult = childTestResults[resultId];\n                    const mergedTestResult = _.merge({}, prevTestResult, testResult, { resultId });\n                    childTestResults[resultId] = mergedTestResult;\n                    if (!prevTestResult || prevTestResult.status !== testResult.status) {\n                        const parentTestResult = testStatus.getTestResult(mergedTestResult.parentResultId) || { workerId: 1 };\n                        const workerId = parentTestResult.workerId!;\n                        // @ts-expect-error array includes is not TS friendly\n                        if ([TESTIM_RUN_STATUS.RUNNING].includes(testResult.status)) {\n                            reporter.onTestStarted(mergedTestResult, workerId);\n                        }\n                        // @ts-expect-error array includes is not TS friendly\n                        if ([TESTIM_RUN_STATUS.COMPLETED].includes(testResult.status)) {\n                            mergedTestResult.duration = (mergedTestResult.endTime - mergedTestResult.startTime) || 0;\n                            reporter.onTestFinished(mergedTestResult, workerId);\n                        }\n                    }\n                }\n\n                const allChildTestResultCompleted = !(Object.values(childTestResults)\n                    .some(result => ['QUEUED', 'RUNNING'].includes(result.runnerStatus)));\n\n                const allParentTestResultCompleted = !(Object.values(testStatus.getAllTestResults())\n                    .some(result => ['QUEUED', 'RUNNING'].includes(result.status)));\n\n                if (allChildTestResultCompleted && allParentTestResultCompleted) {\n                    return resolve(Object.values(childTestResults));\n                }\n\n                if (allParentTestResultCompleted && !allChildTestResultCompleted) {\n                    // wait 10 sec to handle race condition when parent test result (file) finished before child test result\n                    return utils.delay(10000)\n                        .then(() => {\n                            if (isPromisePending) {\n                                // TODO(Benji) we are missing the child test results here.\n                                // we are resolving here with partial data - we should consider fetching it\n                                // from the server\n                                // @ts-expect-error Clearly this is wrong, as this should resolve an array. but this is the TDK, so be it.\n                                resolve(childTestResults);\n                            }\n                        });\n                }\n                return undefined;\n            });\n        });\n\n        return await promise;\n    }\n\n    private async initRealDataServiceAndListenToTestsCreatedInFile(projectId: string, executionId: string, testStatus: TestRunStatus) {\n        const realDataService = await this.initRealDataService(projectId);\n        return this.listenToTestCreatedInFile(realDataService, projectId, executionId, testStatus);\n    }\n\n    private async runTestPlan(\n        beforeTests: ExecutionList,\n        tests: ExecutionList,\n        afterTests: ExecutionList,\n        tpOptions: RunnerOptions,\n        testPlanName: string,\n        testPlanId: string | null,\n        branch: string,\n        isAnonymous?: boolean,\n    ) {\n        const executionId = utils.guid();\n        const projectId = tpOptions.project;\n        Logger.setExecutionId(executionId);\n        beforeTests.forEach(test => Object.assign(test, { isBeforeTestPlan: true }));\n        afterTests.forEach(test => Object.assign(test, { isAfterTestPlan: true }));\n        const fullTestList = [...beforeTests, ...tests, ...afterTests] as ExecutionList;\n        const testStatus = new TestRunStatus(fullTestList, tpOptions, testPlanId, branch);\n\n        const configs = _.chain(fullTestList)\n            .map<string>(test => (test as any).overrideTestConfig?.name || '')\n            .uniq()\n            .compact()\n            .value();\n        const configName = configs?.length === 1 ? configs[0] : null;\n\n        const isCodeMode = tpOptions.files.length > 0;\n        const testNames = tpOptions.lightweightMode?.onlyTestIdsNoSuite ? [] : fullTestList.map(test => (test as { name: string }).name);\n\n        const testListInfoPromise = tpOptions.lightweightMode?.onlyTestIdsNoSuite ?\n            { beforeTests, tests, afterTests } :\n            testStatus.executionStart(executionId, projectId, this.startTime, testPlanName, testNames);\n        let childTestResults: ReturnType<TestPlanRunner['initRealDataServiceAndListenToTestsCreatedInFile']> | undefined;\n        if (isCodeMode) {\n            childTestResults = this.initRealDataServiceAndListenToTestsCreatedInFile(projectId, executionId, testStatus);\n        }\n        perf.log('before testListInfoPromise');\n        const testListInfo = await testListInfoPromise;\n        if (!tpOptions.lightweightMode?.onlyTestIdsNoSuite) {\n            reporter.onTestPlanStarted(testListInfo.beforeTests, testListInfo.tests, testListInfo.afterTests, testPlanName, executionId, isAnonymous, configName, isCodeMode);\n        }\n\n        perf.log('before runTestAllPhases');\n        const results = await this.runTestAllPhases(testListInfo.beforeTests, testListInfo.tests, testListInfo.afterTests, branch, tpOptions, executionId, testPlanName || 'All Tests', testStatus);\n        const childResults = await utils.promiseTimeout(childTestResults, TDK_CHILD_RESULTS_TIMEOUT)\n            .catch(async () => {\n                logger.warn('timed out waiting for child results on websocket. using REST fallback', { projectId, executionId });\n                const testResults = await testimServicesApi.getRealData(projectId, 'testResult', `runId=${executionId}&sort=runOrder`);\n                return _.chain((testResults?.data?.docs) || [])\n                    .groupBy('parentResultId')\n                    .omit('undefined')\n                    .values()\n                    .flatten()\n                    .value();\n            });\n        perf.log('before executionEnd');\n        await testStatus.executionEnd(executionId);\n        perf.log('after executionEnd');\n        return { results, executionId, testPlanName, configName, childTestResults: childResults };\n    }\n\n    private async runTestPlans(options: RunnerOptions, branchToUse: string) {\n        logger.info('start to run test plan', {\n            options: Object.assign({}, options, { token: undefined, userParamsData: undefined }),\n            branchToUse,\n        });\n\n        type TestPlansData = Awaited<ReturnType<typeof testimServicesApi['getTestPlanTestList']>>['testPlansData'];\n        type TestPlansDataTests = TestPlansData[string][number]['tests'];\n        function flattenTestListData(testPlansData: TestPlansData) {\n            return _.flattenDeep(Object.values(testPlansData)).reduce((all, testRun) => all.concat(testRun.beforeTests, testRun.tests, testRun.afterTests), [] as TestPlansDataTests);\n        }\n\n        const testPlansResults: { [testPlanId: string]: { [executionId: string]: { [testResultId: string]: any } } } = {};\n        const testPlansTests = {};\n        const projectId = options.project;\n\n        const data = await testimServicesApi.getTestPlanTestList(projectId, options.testPlan, options.testPlanIds, branchToUse, options.intersections);\n        const testPlans = data.testPlans;\n        const testPlansData = data.testPlansData;\n        if (!testPlans || testPlans.length === 0) {\n            throw new ArgError(`no test plan to run ${options.testPlan}`);\n        }\n        if (!testPlansData || Object.keys(testPlansData).length === 0) {\n            if (options.passZeroTests) {\n                return [];\n            }\n            throw new ArgError(`no test to run in test plan ${options.testPlan}`);\n        }\n        await validateConfig(options, flattenTestListData(testPlansData));\n        return await utils.promiseMap(testPlans, async testPlan => {\n            const id = testPlan.testPlanId;\n            testPlansResults[id] = {};\n\n            const tpOptions = Object.assign({}, options);\n            tpOptions.baseUrl = options.baseUrl || testPlan.startUrl;\n            tpOptions.host = options.host;\n            tpOptions.port = options.port;\n            tpOptions.gridId = options.gridId || testPlan.gridId;\n\n            //if user pass --grid with test plan we want to use grid option instead of host and port\n            if (options.grid) {\n                delete tpOptions.gridId;\n            }\n\n\n            tpOptions.gridData = await gridService.getTestPlanGridData(options, testPlan);\n\n            const testPlanName = tpOptions.overrideExecutionName || testPlan.name;\n            return await utils.promiseMap(testPlansData[id], async testPlanTests => {\n                const res = await this.runTestPlan(testPlanTests.beforeTests, testPlanTests.tests, testPlanTests.afterTests, tpOptions, testPlanName, id, branchToUse);\n                const isCodeMode = options.files.length > 0;\n                reporter.onTestPlanFinished(res.results, testPlan.name, this.startTime, res.executionId, false, isCodeMode, res.childTestResults);\n                testPlansResults[id][res.executionId] = res.results;\n                // TODO: looks like everything below this line, should happen outside of this promiseMap (as it handles the result of all plan-data, but happens on each occurrence)\n                const executions = Object.keys(testPlansResults[id]).map(exeId => ({\n                    executionId: exeId,\n                    status: calcTestResultStatus(testPlansResults[id][exeId]),\n                }));\n                const tests = Object.keys(testPlansResults[id]).map(exeId => testPlansResults[id][exeId]).reduce((testResult, test) => Object.assign(testResult, test), {});\n                const success = calcTestResultStatus(tests);\n                Object.assign(testPlansTests, tests);\n                const executionId = success ? executions[0].executionId : executions.find(exec => !exec.status)!.executionId;\n                await testimServicesApi.saveTestPlanResult(projectId, id, { success, executions, executionId });\n                return res;\n            });\n        });\n    }\n\n    private async runAnonymousTestPlan(options: RunnerOptions, branchToUse: string) {\n        logger.info('start to run anonymous', {\n            options: Object.assign({}, options, { token: undefined }),\n            branchToUse,\n        });\n\n        perf.log('before getSuite');\n        const suiteResult = await getSuite(options, branchToUse);\n        perf.log('after getSuite');\n\n        if (!suiteResult?.tests[0]?.length) {\n            if (options.rerunFailedByRunId) {\n                throw new ArgError('No failed tests found in the provided run');\n            }\n            if (options.passZeroTests) {\n                return [];\n            }\n            throw new ArgError('No tests to run');\n        }\n        branchToUse = ('branch' in suiteResult && suiteResult.branch) || branchToUse;\n        const runListResult = suiteResult as RunListResult;\n        if (options.rerunFailedByRunId && !runListResult.runName) {\n            if (!runListResult.runExists) {\n                throw new ArgError('Invalid run ID - no such run.');\n            }\n            const isAnonymouslyNamedRun = runListResult.runName === '';\n            if (isAnonymouslyNamedRun) {\n                runListResult.runName = `rerun-${options.rerunFailedByRunId}`;\n            }\n        }\n        const testPlanName = options.overrideExecutionName || runListResult.runName || ([] as string[]).concat(options.label, options.name, options.suites).join(' ');\n        const isAnonymous = true;\n        perf.log('Right before validateConfig + runAnonymousTestPlan tests map');\n        return await utils.promiseMap(suiteResult.tests, async suiteTests => { // array of results per execution\n            //override result id for remote run mode and run only the first test data\n            if (options.resultId) {\n                const firstTest = suiteTests[0];\n                firstTest.resultId = options.resultId;\n                suiteTests = [firstTest];\n            }\n            await validateConfig(options, suiteTests);\n            perf.log('right before runTestPlan');\n            const res = await this.runTestPlan([], suiteTests, [], options, testPlanName, null, branchToUse, isAnonymous);\n            perf.log('right after runTestPlan');\n            const isCodeMode = options.files.length > 0;\n            await reporter.onTestPlanFinished(res.results, testPlanName, this.startTime, res.executionId, isAnonymous, isCodeMode, res.childTestResults);\n            return res;\n        });\n    }\n\n    async run(options: RunnerOptions) {\n        const branchToUse = branchService.getCurrentBranch();\n        let results = [];\n        if (utils.hasTestPlanFlag(options)) {\n            results = await this.runTestPlans(options, branchToUse);\n        } else {\n            results = await this.runAnonymousTestPlan(options, branchToUse);\n        }\n        const flattenResults = _.flattenDeep(results);\n        perf.log('right before onAllTestPlansFinished');\n        await reporter.onAllTestPlansFinished(flattenResults);\n        perf.log('right after onAllTestPlansFinished');\n        return flattenResults.map(res => res.results).reduce((total, cur) => Object.assign(total, cur), {});\n    }\n}\n", "/* eslint-disable no-console */\nimport * as _ from 'lodash';\nimport * as utils from './utils';\nimport * as npmDriver from './testimNpmDriver';\nimport * as tunnel from './commons/testimTunnel';\nimport * as perf from './commons/performance-logger';\nimport * as gridService from './services/gridService';\nimport * as analytics from './commons/testimAnalytics';\nimport * as branchService from './services/branchService';\nimport * as servicesApi from './commons/testimServicesApi';\nimport * as testimCustomToken from './commons/testimCustomToken';\nimport { getLogger } from './commons/logger';\nimport { reporter } from './reports/reporter';\nimport { EDITOR_URL } from './commons/config';\nimport { CLI_MODE } from './commons/constants';\nimport { ArgError, QuotaDepletedError } from './errors';\nimport { TestPlanRunner } from './runners/TestPlanRunner';\nimport { socketService } from './commons/socket/socketService';\nimport { labFeaturesService } from './services/labFeaturesService';\nimport { featureFlagsService } from './commons/featureFlagsService';\nimport { featureAvailabilityService } from './commons/featureAvailabilityService';\nimport { prepareMockNetwork, initializeUserWithAuth } from './commons/prepareRunner';\nimport type { RunnerOptions, TunnelOptions } from './runOptions';\n\nconst FREE_PLAN_MINIMUM_BROWSER_TIMEOUT = 30 * 60 * 1000;\n\n\nconst logger = getLogger('runner');\n\nfunction validateCLIRunsAreAllowed(options: RunnerOptions) {\n    const hasCliAccess = _.get(options, 'company.activePlan.premiumFeatures.allowCLI');\n\n    if (!hasCliAccess) {\n        const projectId = options.project;\n        analytics.track(options.authData!.uid, 'cli-not-supported', { projectId });\n        console.warn('Testim CLI is not supported in this plan');\n        // TODO: shouldn't this throw an error? \uD83E\uDD14\n    }\n}\n\nasync function validateProjectQuotaNotDepleted(options: RunnerOptions) {\n    const projectId = options.project;\n\n    const usage = await servicesApi.getUsageForCurrentBillingPeriod(projectId);\n    const isExecutionBlocked = usage?.isExecutionBlocked;\n    if (!isExecutionBlocked) {\n        return;\n    }\n\n    console.error('You have reached the limit of runs for the billing month, please upgrade your plan at https://www.testim.io/upgrade-contact-us?source=cli');\n    analytics.track(options.authData!.uid, 'execution-quota-surpassed', { projectId });\n    throw new QuotaDepletedError();\n}\n\nfunction validateOptionsForCompany(options: CommonSharedOptions, company: servicesApi.InitializedUserWithAuth['companyByProjectId']) {\n    const planType = utils.getPlanType(company.activePlan);\n    if (planType === 'free') {\n        const optionsParallel = options.parallel || 1;\n        const companyParallelValue = company.activePlan?.premiumFeatures?.concurrency || 1;\n        if (optionsParallel > companyParallelValue) {\n            throw new ArgError(`Cannot run with parallel ${options.parallel}. Max parallel value is ${companyParallelValue}`);\n        }\n    }\n\n    const optionsRetention = options.retentionDays;\n    if (!optionsRetention) {\n        return;\n    }\n\n    const companyRetention = company.activePlan?.premiumFeatures?.resultRetention;\n    if (optionsRetention > companyRetention) {\n        throw new ArgError(`Retention days (${optionsRetention}) cannot be greater than the company's retention days (${companyRetention}). Run aborted`);\n    }\n}\n\nasync function validateCliAccount(options: RunnerOptions) {\n    if (options.lightweightMode?.disableQuotaBlocking) {\n        return;\n    }\n    try {\n        await Promise.all([\n            validateProjectQuotaNotDepleted(options),\n            validateCLIRunsAreAllowed(options),\n        ]);\n    } catch (err) {\n        if ([ArgError, QuotaDepletedError].some(errType => err instanceof errType)) {\n            throw err;\n        }\n        logger.error('could not validate cli account', { err });\n    }\n}\n\nfunction analyticsIdentify(projectId: string) {\n    const authData = testimCustomToken.getTokenV3UserData();\n    return analytics.identify({\n        userId: authData.uid,\n        // @ts-expect-error seems wrong?\n        name: authData.uid!,\n        traits: {\n            projectId,\n            company: {\n                id: projectId,\n                lastCIRun: Math.floor(Date.now() / 1000), // unix timestamp\n            },\n        },\n    });\n}\n\nasync function initSocketServices(projectId: string, { disableResults = false, disableRemoteStep = false }) {\n    if (featureFlagsService.flags.useNewWSCLI.isEnabled() && !disableResults && !disableRemoteStep) {\n        return socketService.connect(projectId);\n    }\n    if (!disableRemoteStep) {\n        const { remoteStepService } = await import('./commons/socket/remoteStepService');\n        await remoteStepService.init(projectId);\n    }\n    if (!disableResults) {\n        const { testResultService } = await import('./commons/socket/testResultService');\n        testResultService.init(projectId);\n    }\n    return undefined;\n}\n\nfunction setBranch(options: CommonSharedOptions, branchInfoFromServer: servicesApi.InitializedUserWithAuth['branchName']) {\n    const { branch, autoDetect } = options;\n    branchService.setCurrentBranch(branchInfoFromServer, autoDetect);\n    if (!branchInfoFromServer && !autoDetect) {\n        throw new ArgError(`branch ${branch} does not exist, run aborted.`);\n    }\n}\n\nasync function setSfdcCredential(options: CommonSharedOptions) {\n    const { project: projectId } = options;\n    const branch = branchService.getCurrentBranch();\n    if (_.get(options, 'company.activePlan.premiumFeatures.ttaForSalesforce')) {\n        options.sfdcCredential = await servicesApi.loadSfdcCredential({ projectId, branch });\n    }\n}\n\nfunction setCompany(options: CommonSharedOptions, company: servicesApi.InitializedUserWithAuth['companyByProjectId']) {\n    const { onprem, id, storageBaseUrl, storageType, name, activePlan = {} } = company;\n    if (onprem) {\n        const { mode, extensionPath, ext, playerPath } = options;\n        if ([CLI_MODE.SELENIUM].includes(mode as any) && !playerPath) {\n            throw new ArgError('in selenium on prem mode --player-path must be provided');\n        }\n        if (mode === 'extension' && !extensionPath && !ext) {\n            throw new ArgError('In extension on prem mode --ext or --extension-path must be provided');\n        }\n    }\n    const isPOC = Boolean(activePlan.isPoc);\n    const isStartUp = Boolean(activePlan.isStartUp);\n    const planType = utils.getPlanType(activePlan);\n    if (planType === 'free') {\n        options.newBrowserWaitTimeout = options.newBrowserWaitTimeout! < FREE_PLAN_MINIMUM_BROWSER_TIMEOUT ? FREE_PLAN_MINIMUM_BROWSER_TIMEOUT : options.newBrowserWaitTimeout;\n    }\n    featureFlagsService.setCompanyId(id);\n    featureFlagsService.setIsPOC(isPOC);\n    featureFlagsService.setIsStartUp(isStartUp);\n    featureFlagsService.setPlanType(planType);\n    featureAvailabilityService.setPlanType(planType);\n    options.company = {\n        companyId: id,\n        onprem,\n        storageBaseUrl,\n        storageType,\n        name,\n        planType,\n        isPOC,\n        isStartUp,\n        activePlan,\n    };\n}\n\nfunction setSystemInfo(options: CommonSharedOptions, editorConfig: servicesApi.InitializedUserWithAuth['editorConfig']) {\n    if (EDITOR_URL) {\n        options.editorUrl = EDITOR_URL;\n        return;\n    }\n    options.editorUrl = editorConfig.editorUrl;\n}\n\nfunction setAllGrids(options: CommonSharedOptions, allGrids: servicesApi.InitializedUserWithAuth['allGrids']) {\n    options.allGrids = allGrids;\n}\n\nfunction setAuthData(options: CommonSharedOptions, authData: servicesApi.InitializedUserWithAuth['authData']) {\n    options.authData = authData;\n}\n\nfunction setProject(options: CommonSharedOptions, project: servicesApi.InitializedUserWithAuth['projectById']) {\n    const { id, name, type, defaults } = project;\n    featureFlagsService.setProjectId(id);\n    featureFlagsService.setProjectType(type);\n    options.projectData = {\n        projectId: id,\n        type,\n        name,\n        defaults,\n    };\n}\n\nasync function setGrid(options: CommonSharedOptions) {\n    options.gridData = await gridService.getGridData(options);\n}\n\nasync function setMockNetworkRules(options: CommonSharedOptions) {\n    const { project } = options;\n    const props = { projectId: project };\n\n    if (options.overrideMappingFile) {\n        analytics.trackWithCIUser('user-override-file', props);\n        options.mockNetworkRules = await prepareMockNetwork(options.overrideMappingFile);\n    }\n}\n\nasync function runRunner(options: RunnerOptions, customExtensionLocalLocation?: string) {\n    perf.log('in runner.js runRunner');\n\n    const { project, remoteRunId, useLocalChromeDriver, useChromeLauncher } = options;\n\n    if (!remoteRunId) {\n        options.source = (useLocalChromeDriver || useChromeLauncher) ? 'cli-local' : 'cli';\n    }\n\n    await npmDriver.checkNpmVersion();\n    perf.log('in runner.js after checkNpmVersion');\n\n    await validateCliAccount(options);\n\n    perf.log('in runRunner before tunnel.connect');\n    await tunnel.connect(options);\n    perf.log('in runRunner after tunnel.connect');\n\n    const testPlanRunner = new TestPlanRunner(customExtensionLocalLocation);\n    const results = await testPlanRunner.run(options);\n\n    perf.log('before tunnel.disconnect');\n    await tunnel.disconnect(options);\n    await gridService.keepAlive.end(project);\n    perf.log('after tunnel.disconnect and gridService.keepAlive.end');\n\n    return results;\n}\nexport const run = runRunner;\n\nfunction showFreeGridRunWarningIfNeeded(options: CommonSharedOptions) {\n    if (featureAvailabilityService.shouldShowFreeGridRunWarning(options.gridData?.type)) {\n        const CYAN = '\\x1b[36m';\n        const UNDERSCORE = '\\x1b[4m';\n        const RESET = '\\x1b[0m';\n        const MESSAGE = 'Our Free grid offers basic service performance.\\nIf you need faster results, contact us to upgrade your plan and dramatically improve your tests\u2019 run times.';\n        console.log(`\\n${UNDERSCORE}${CYAN}${MESSAGE}${RESET}\\n`);\n    }\n}\n\ntype PartialKeysFromRunOptions =\n    | 'branch'\n    | 'lightweightMode'\n    | 'useChromeLauncher'\n    | 'useLocalChromeDriver'\n    | 'mode'\n    | 'disableSockets'\n    | 'retentionDays'\n    | 'browser'\n    | 'parallel'\n    | 'editorUrl'\n    | 'extensionPath'\n    | 'ext'\n    | 'playerPath'\n    | 'newBrowserWaitTimeout'\n    | 'company'\n    | 'projectData'\n    | 'autoDetect'\n    | 'sfdcCredential'\n    | 'allGrids'\n    | 'authData'\n    | 'gridData'\n    | 'overrideMappingFile'\n    | 'mockNetworkRules'\n    | 'testPlan'\n    | 'testPlanIds'\n    | 'host'\n    | 'gridId'\n    | 'grid'\n    | 'port'\n    | 'path'\n    | 'testobjectSauce'\n    | 'saucelabs'\n    | 'perfecto'\n    | 'protocol';\nexport type CommonSharedOptions =\n    Pick<RunnerOptions, 'project' | 'token'> &\n    Partial<Pick<TunnelOptions, 'tunnelOnlyMode'>> &\n    Partial<Pick<RunnerOptions, PartialKeysFromRunOptions>>;\n\n/**\n * This method initializes the Testim CLI with all the information it needs to start executing, it takes care of:\n *\n * - Reporting the user to analytics\n * - Authenticating the user and exchanging their token for a jwt\n * - Sets the grids for the company and validates the user has permission to run the CLI\n * @param options - the run options passed to the CLI, namely the project and token\n */\nexport async function init(options: CommonSharedOptions) {\n    perf.log('start runner init');\n    const { project, lightweightMode, useChromeLauncher, mode, disableSockets } = options;\n    const featureFlagsReady = featureFlagsService.fetch();\n    const socketConnected = initSocketServices(project, {\n        disableResults: disableSockets || Boolean(lightweightMode?.disableResults && (useChromeLauncher || mode !== 'extension')),\n        disableRemoteStep: disableSockets || Boolean(lightweightMode?.disableRemoteStep),\n    });\n\n    featureFlagsReady.catch(() => { /* suppress unhandled rejection */ });\n    socketConnected.catch(() => { /* ignore */ });\n\n    const { authData, editorConfig, companyByProjectId, projectById, branchName, allGrids } = await initializeUserWithAuth(options);\n\n    validateOptionsForCompany(options, companyByProjectId);\n    await Promise.all([featureFlagsReady, socketConnected]);\n\n    if (options.browser && featureFlagsService.flags.dec2022eolBrowsers.isEnabled()) {\n        const browser = utils.getBrowserInfo(options.browser)!;\n        if (browser.eol) {\n            throw new ArgError(`Unsupported browser: ${browser.browserName}`);\n        }\n    }\n\n    perf.log('after featureFlagsReady and socketConnected');\n    setSystemInfo(options, editorConfig);\n    setCompany(options, companyByProjectId);\n    setProject(options, projectById);\n    setBranch(options, branchName);\n    setAllGrids(options, allGrids);\n    setAuthData(options, authData);\n    await setSfdcCredential(options);\n\n    if (!options.lightweightMode?.disableLabs) {\n        await labFeaturesService.loadLabFeatures(projectById.id, companyByProjectId.activePlan);\n    }\n\n    if (options.lightweightMode?.type === 'turboMode' && (featureFlagsService.flags.highSpeedMode.getValue() === 'disabled' || options.company!.planType === 'free')) {\n        delete options.lightweightMode;\n    }\n\n    if (options.lightweightMode?.type === 'turboMode') {\n        // eslint-disable-next-line max-len\n        console.log('\\nTurbo mode will ignore step delays. Test artifacts like screenshots and logs will only be saved for failed runs. For more information see our docs: https://help.testim.io/docs/turbo-mode');\n    }\n\n    gridService.keepAlive.start(project);\n    analyticsIdentify(project);\n    await setMockNetworkRules(options);\n    await setGrid(options);\n    showFreeGridRunWarningIfNeeded(options);\n\n    const branchToUse = branchService.getCurrentBranch();\n    await reporter.setOptions(options as RunnerOptions, branchToUse);\n}\n", "import { doLogin } from '../../../credentialsManager';\nimport { getStartedWithStart } from '../../../cliAgentMode';\nimport { getPackageVersion } from '../../../testimNpmDriver';\nimport type { Express } from 'express';\n\n\nexport function orchestrateGeneralRoutes(app: Express) {\n    /** root endpoint */\n    app.get('/', (req, res) => {\n        const isStartMode = getStartedWithStart();\n\n        return res.status(200).json({ success: true, isTestimAgent: true, startMode: isStartMode });\n    });\n\n    /** Get version route */\n    app.get('/version', (req, res) => {\n        res.status(200).json({\n            node: process.version,\n            app: getPackageVersion(),\n        });\n    });\n\n    app.get<never, never, never, { info: string }>('/loginInfo', (req, res) => {\n        try {\n            const projects = JSON.parse(Buffer.from(req.query.info, 'base64').toString());\n            doLogin({ overwriteExisting: false, projects });\n            res.status(200).end();\n        } catch (err) {\n            res.status(400).end();\n        }\n    });\n}\n", "import * as service from '../../../stepPlayers/hybridStepPlayback';\nimport { Router } from 'express';\nimport { getLogger } from '../../../commons/logger';\nimport type { StandaloneBrowser } from '../../../cliAgentMode';\n\nconst logger = getLogger('hybrid-router');\n\nexport function hybridRoutes(testimStandaloneBrowser: StandaloneBrowser | undefined) {\n    const router = Router();\n\n    router.post('/run', (req, res) => {\n        if (!req.body?.step) {\n            res.status(400).send({\n                error: 'Missing step',\n            });\n            return;\n        }\n\n        const {\n            step,\n            context,\n            loginData, // is this safe to pass here?\n        } = req.body;\n        if (!testimStandaloneBrowser?.webdriverApi) {\n            res.status(503).send({ success: false, reason: 'Testim Agent was not started with Testim Start.' });\n            return;\n        }\n\n        // The step run might take very long time, and it will still be valid\n        // so we set here unlimited timeout\n        req.setTimeout(0);\n\n        service.execute(\n            step,\n            context,\n            testimStandaloneBrowser.webdriverApi,\n            loginData,\n            undefined, // don't pass frameManager,\n            'agent',\n        ).then((result) => {\n            res.status(200).send(result);\n        }).catch(e => {\n            logger.error('failed to run hybrid code', { e });\n            res.status(500).send(Object.assign({ success: false, error: e }));\n        });\n    });\n\n    router.post('/abort', (req, res) => {\n        if (!req.body?.stepResultId) {\n            res.status(400).send({\n                error: 'missing stepResultId',\n            });\n\n            return;\n        }\n\n        try {\n            service.abort(req.body.stepResultId);\n            res.status(204).end();\n        } catch (e) {\n            if (e && e.message === 'No such stepResultId') {\n                res.status(400).send({\n                    error: 'No such stepResultId',\n                });\n                return;\n            }\n\n            logger.error('hybrid code abort unexpected error', { e });\n            res.status(500).send({\n                error: 'unexpected error',\n                info: `${e ? e.message : 'N/A'}`,\n            });\n        }\n    });\n\n    return router;\n}\n", "import { Router } from 'express';\nimport { getLogger } from '../../../commons/logger';\nimport {\n    findTests,\n    getLocalLocators,\n    getLocalLocatorContents,\n    saveTest,\n    saveLocators,\n    compileFunctionsLibrary,\n} from './service';\n\nexport const router = Router();\nconst logger = getLogger('codim-router');\n\n\nrouter.get('/tests', async (req, res) => {\n    const tests = await findTests();\n    res.json({ tests, success: true });\n});\nrouter.get<never, { locators: { [key: string]: any }; contents: Record<string, object>; success: true }, never, { full?: string }>('/locators', async (req, res) => {\n    const locators = await getLocalLocators();\n    const contents = await getLocalLocatorContents(locators, Boolean(req.query.full));\n    res.json({ locators, contents, success: true });\n});\nrouter.post('/locators', async (req, res) => {\n    if (!req.body) {\n        res.status(400).send({ success: false, reason: 'missing body' });\n        return;\n    }\n    if (!req.body.locators) {\n        res.status(400).send({ success: false, reason: 'missing locators' });\n        return;\n    }\n\n    const { locators, mergeIntoExisting } = req.body;\n\n    await saveLocators(locators, { mergeIntoExisting: mergeIntoExisting || false });\n    res.status(200).send({ success: true });\n});\n\nrouter.get('/compile', async (req, res) => {\n    try {\n        const code = await compileFunctionsLibrary(req.body.name);\n        res.send({ success: true, code });\n    } catch (e) {\n        logger.error(e);\n        res.json({ success: false, reason: e.message });\n    }\n});\n\nrouter.post('/saveTest', async (req, res) => {\n    if (!req.body) {\n        res.status(400).send({ success: false, reason: 'missing body' });\n        return;\n    }\n    try {\n        await saveTest(req.body);\n        res.send({ success: true });\n    } catch (e) {\n        res.json({ success: false, reason: e.message });\n        logger.error(e);\n    }\n});\n", "/* eslint-disable no-console */\n\nimport chalk from 'chalk';\nimport * as service from './service';\nimport { Router } from 'express';\nimport { getLogger } from '../../../commons/logger';\nimport { NpmPackageError, TimeoutError } from '../../../errors';\nimport type { AwaitedReturnType } from 'src/utils';\nimport type { IncomingParams } from 'clickim/src/background/playbackContext';\n\nconst logger = getLogger('cli-router');\n\nexport const router = Router();\n\ntype RunStepResBody = { success: false; code: string } | { success: true; data?: AwaitedReturnType<typeof service['runCodeWithPackages']> };\ninterface RunStepReqBody {\n    code?: string;\n    stepId?: string;\n    testResultId?: string;\n    stepResultId?: string;\n    retryIndex?: number;\n    timeout?: number;\n    fileDataUrl?: string;\n    incomingParams: Pick<IncomingParams, 'as' | 'nodePackageParams'>;\n    context: object;\n}\nrouter.post<never, RunStepResBody, RunStepReqBody>('/run', async (req, res) => {\n    const { code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, timeout, fileDataUrl } = req.body;\n\n    if (typeof code !== 'string' || !stepId || !incomingParams || !context || !testResultId || typeof retryIndex !== 'number' || !stepResultId || typeof timeout !== 'number') {\n        res.status(400).json({ success: false, code: 'invalid-params' });\n        return;\n    }\n\n    try {\n        const data = await service.runCodeWithPackages(code, stepId, incomingParams, context, testResultId, retryIndex, stepResultId, timeout, fileDataUrl);\n        if (!data.success) {\n            console.log(chalk.red(data.result.resultValue));\n            logger.error('CLI Action Failure', { message: data.result.resultValue });\n        }\n        res.status(200).json({ success: true, data });\n    } catch (err) {\n        logger.error('failed to run cli code', { err });\n        console.log(chalk.red('failed to run cli code', err));\n        res.status(500).json({ success: false, code: 'internal-error' });\n    }\n});\n\ntype InstallPkgsResBody = { success: false; code: string; message?: string } | { success: true; data?: AwaitedReturnType<typeof service['installPackage']> };\ninterface InstallPkgsReqBody { stepId?: string; testResultId?: string; stepResultId?: string; retryIndex?: number; timeout?: number; packageData?: { packageName: string; packageVersion: string }[] }\nrouter.post<never, InstallPkgsResBody, InstallPkgsReqBody>('/install', async (req, res) => {\n    const { stepId, testResultId, retryIndex, packageData, stepResultId, timeout } = req.body;\n\n    if (!stepId || typeof packageData !== 'object' || !testResultId || typeof retryIndex !== 'number' || !stepResultId || typeof timeout !== 'number') {\n        res.status(400).json({ success: false, code: 'invalid-params' });\n        return;\n    }\n\n    try {\n        const data = await service.installPackage(stepId, testResultId, retryIndex, packageData, stepResultId, timeout);\n        logger.info('installed packages successfully');\n        res.status(200).json({ success: true, data });\n    } catch (err) {\n        if (err instanceof NpmPackageError) {\n            logger.error('failed to install node packages', { err });\n            res.status(200).json({ success: false, code: 'invalid-node-package', message: err.message });\n            return;\n        }\n        if (err instanceof TimeoutError) {\n            logger.error('timeout installing node package');\n            res.status(200).json({ success: false, code: 'timeout' });\n            return;\n        }\n        logger.error('failed to install node packages', { err });\n        res.status(500).json({ success: false, code: 'internal-error' });\n    }\n});\n", "import * as service from './service';\nimport { getLogger } from '../../../commons/logger';\n\nconst logger = getLogger('cli-service');\n\n// clean local\nservice.cleanLocalPackageInstallFolder()\n    .catch(err => logger.warn('failed to clean local package folder', { err }));\n\nexport * from './router';\n", "import * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\nimport { fork } from 'child_process';\nimport { ClientError, PlaygroundCodeError } from '../../../errors';\n\nexport const CODE_TYPES = ['playwright', 'selenium', 'puppeteer'];\n\nconst runForks = {};\n\nasync function createTempFile(fileName, data, encoding = 'utf8') {\n    const fullPath = path.join(os.tmpdir(), fileName);\n    await fs.promises.writeFile(fullPath, data, encoding);\n    return fullPath;\n}\n\nconst forkAsync = (fileFullPath) => {\n    let gotResolved;\n    const promise = new Promise(resolve => { gotResolved = resolve; });\n\n    const child = fork(fileFullPath, { stdio: ['inherit', 'inherit', 'inherit', 'ipc'] });\n    promise.child = child;\n    child.on('message', (message) => {\n        if (!message) {\n            return;\n        }\n        const { type, error } = message;\n        if (error && ['uncaughtException', 'unhandledRejection'].includes(type)) {\n            gotResolved({ error: Object.assign(new PlaygroundCodeError(), { innerStack: message.error.stack }) });\n        }\n    });\n    child.on('error', (error) => {\n        gotResolved({ error });\n    });\n    child.on('exit', (exitCode) => {\n        gotResolved({ exitCode });\n    });\n\n    return promise;\n};\n\nasync function runCodeLocally({ code }) {\n    const forkId = Date.now();\n    try {\n        const codeWithExtra = `\n        module.paths = ${JSON.stringify(module.paths)};\n        process.on('unhandledRejection', (error) => {\n            process.send({type: 'unhandledRejection', error: {message: error.message, stack: error.stack}});\n            process.exit(1);\n        });\n        process.on('uncaughtException', (error) => {\n            process.send({type: 'uncaughtException', error: {message: error.message, stack: error.stack}});\n            process.exit(1);\n        });\n        ${code};\n    `;\n        const fileFullPath = await createTempFile(`tst-playground-${Date.now()}.js`, codeWithExtra);\n        const promiseExec = forkAsync(fileFullPath);\n        runForks[forkId] = promiseExec.child;\n        const { error, exitCode } = await promiseExec;\n        if (error) {\n            throw error;\n        }\n        if (exitCode !== 0) {\n            throw new Error(`Process exited with exit code: ${exitCode}`);\n        }\n        return undefined;\n    } finally {\n        if (runForks[forkId]) {\n            runForks[forkId].kill();\n            delete runForks[forkId];\n        }\n    }\n}\n\nexport async function runPlaygroundTest({ code, type }) {\n    if (['playwright', 'puppeteer', 'selenium'].includes(type)) {\n        return runCodeLocally({ code });\n    }\n    throw new ClientError();\n}\n\nexport async function stopPlaygroundTest() {\n    Object.keys(runForks).forEach((forkId) => {\n        runForks[forkId].kill();\n        delete runForks[forkId];\n    });\n}\n", "import { Router } from 'express';\nimport { getLogger } from '../../../commons/logger';\nimport { ClientError, PlaygroundCodeError } from '../../../errors';\nimport { DISABLE_AGENT_ORIGIN_CHECK } from '../../../commons/config';\nimport { runPlaygroundTest, stopPlaygroundTest, CODE_TYPES } from './service';\n\nexport const router = Router();\nconst logger = getLogger('playground-router');\n\nconst VALID_HOSTS = ['localhost', 'app.testim.io', 'playground.testim.io', 'staging.testim.io', 'app.staging.testim.cc', 'tta-crm.tricentis.com'];\n\nconst parseUrl = (url) => {\n    if (!url) {\n        return {};\n    }\n    try {\n        return new URL(url);\n    } catch (e) {\n        return {};\n    }\n};\n\nconst checkReferer = (req, res, next) => {\n    if (DISABLE_AGENT_ORIGIN_CHECK) {\n        return next();\n    }\n    const referer = req.headers.referer;\n    const origin = req.headers.origin;\n    if (!referer && !origin) {\n        return res.status(400).send();\n    }\n    const refererUrl = parseUrl(referer);\n    const originUrl = parseUrl(origin);\n    if (!VALID_HOSTS.includes(refererUrl.hostname) && !VALID_HOSTS.includes(originUrl.hostname)) {\n        return res.status(400).send();\n    }\n    return next();\n};\n\nrouter.post('/run', [checkReferer], async (req, res) => {\n    const body = req.body || {};\n    const { code, type } = body;\n\n    if (!code || !CODE_TYPES.includes(type)) {\n        res.status(400).send({ success: false, reason: 'missing arguments' });\n        return;\n    }\n\n    try {\n        await runPlaygroundTest(body);\n        res.send({ success: true });\n    } catch (e) {\n        if (e instanceof ClientError) {\n            res.status(404).send({ success: false });\n            return;\n        }\n        if (e instanceof PlaygroundCodeError) {\n            res.json({ success: false, type: 'playground-error', stack: e.innerStack });\n            return;\n        }\n        res.json({ success: false, reason: e.message });\n        logger.error(e);\n    }\n});\n\nrouter.post('/stop', (req, res) => {\n    try {\n        stopPlaygroundTest();\n        res.send({ success: true });\n    } catch (e) {\n        res.json({ success: false, reason: e.message });\n        logger.error(e);\n    }\n});\n", "import { Router } from 'express';\nimport type { StandaloneBrowser } from 'src/cliAgentMode';\n\nexport function standaloneBrowserRoutes(testimStandaloneBrowser?: StandaloneBrowser) {\n    const router = Router();\n\n    router.get('/cdp-url', (req, res) => {\n        if (!testimStandaloneBrowser) {\n            res.status(503).send({\n                error: 'Testim standalone browser is not running',\n            });\n\n            return;\n        }\n\n        res.status(200).send({\n            url: testimStandaloneBrowser.webdriverApi.cdpUrl,\n        });\n    });\n\n    router.get('/status', (req, res) => {\n        if (!testimStandaloneBrowser) {\n            res.status(503).send({\n                ok: false,\n            });\n            return;\n        }\n\n        res.status(200).send({\n            ok: true,\n        });\n    });\n\n    return router;\n}\n", "import cors from 'cors';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport compression from 'compression';\nimport { orchestrateGeneralRoutes } from './general';\nimport { hybridRoutes } from './hybrid/registerRoutes';\nimport { router as codimRouter } from './codim/router';\nimport { router as cliJsCodeRouter } from './cliJsCode';\nimport { router as playgroundRouter } from './playground/router';\nimport { standaloneBrowserRoutes } from './standalone-browser/registerRoutes';\nimport { IS_ON_PREM, DISABLE_AGENT_ORIGIN_CHECK } from '../../commons/config';\nimport type { Express } from 'express';\nimport type { StandaloneBrowser } from '../../cliAgentMode';\n\n\nexport function orchestrateRoutes(beforeMiddleware: (app: Express) => void, standaloneBrowserInfo: StandaloneBrowser | undefined) {\n    const app = express();\n    beforeMiddleware(app);\n\n    // view engine setup\n    app.use(bodyParser.urlencoded({ extended: false, limit: '50mb' }));\n    app.use(compression());\n    app.use(bodyParser.json({ limit: '50mb' }));\n\n    /**\n     * set cors options\n     */\n\n    const whitelist = ['http://localhost:3000', 'https://app.testim.io', 'https://staging.testim.io', 'https://playground.testim.io',\n        'https://app.staging.testim.cc', 'chrome-extension://pebeiooilphfmbohdbhbomomkkoghoia', 'https://tta-crm.tricentis.com'];\n    const corsOptions = {\n        methods: ['GET', 'PUT', 'POST', 'DELETE', 'OPTIONS'],\n        allowedHeaders: ['Content-Type', 'Authorization'],\n        credentials: true,\n        maxAge: 86400,\n        origin: (IS_ON_PREM || DISABLE_AGENT_ORIGIN_CHECK) ? '*' : whitelist,\n    };\n    app.use('*', cors(corsOptions));\n\n    // Routes\n    orchestrateGeneralRoutes(app);\n\n    app.use('/files', codimRouter);\n    app.use('/playground', playgroundRouter);\n    app.use('/cliJs', cliJsCodeRouter);\n\n    app.use('/standalone-browser', standaloneBrowserRoutes(standaloneBrowserInfo));\n    app.use('/hybrid', hybridRoutes(standaloneBrowserInfo));\n\n    // catch 404\n    app.use((req, res) => {\n        res.status(404).send('Endpoint Not Found');\n    });\n\n    return app;\n}\n", "import * as http from 'http';\nimport * as testimCustomToken from '../commons/testimCustomToken';\nimport { ArgError } from '../errors';\nimport { lazyRequire } from '../commons/lazyRequire';\nimport { prepareChromeDriver } from '../commons/prepareRunnerAndTestimStartUtils';\nimport type { Express } from 'express';\nimport type { AddressInfo } from 'net';\nimport type { AgentModeOptions } from '../runOptions';\nimport type { StandaloneBrowser } from '../cliAgentMode';\n\nexport async function init({\n    agentPort,\n    agentBind,\n    project,\n    token,\n    installPlaygroundPlaywrightDeps,\n    installPlaygroundPuppeteerDeps,\n    installPlaygroundSeleniumDeps,\n}: AgentModeOptions, testimStandaloneBrowser: StandaloneBrowser | undefined) {\n    await installExternalPackages({\n        installPlaygroundPlaywrightDeps,\n        installPlaygroundPuppeteerDeps,\n        installPlaygroundSeleniumDeps,\n        project,\n    });\n    await initServer({\n        agentPort,\n        agentBind,\n        project,\n        token,\n    }, testimStandaloneBrowser);\n}\n\nasync function initServer({\n    agentPort, agentBind, project, token,\n}: Pick<AgentModeOptions, 'agentPort' | 'agentBind' | 'project' | 'token'>, testimStandaloneBrowser: StandaloneBrowser | undefined) {\n    const { orchestrateRoutes } = await import('./routers');\n    // TODO: no need for all of this code to be inside of a Promise ctor. can simply return a never ending promise without nesting all this code\n    return new Promise((resolve, reject) => {\n        /**\n         * Init testim auth for making services request.\n         */\n        let initFn: (app: Express) => void = () => undefined;\n        if (project) {\n            testimCustomToken.init(project, token!);\n            initFn = (app) => {\n                app.use((req, res, next) => {\n                    Object.assign(req, { project });\n                    next();\n                });\n            };\n        }\n\n        const app = orchestrateRoutes(initFn, testimStandaloneBrowser);\n\n        /**\n         * Create HTTP server.\n         */\n\n        const server = http.createServer(app);\n\n        /**\n         * Listen on provided port, on all network interfaces.\n         */\n        server.listen(agentPort, agentBind);\n\n        // logger.info('Node Version', process.version);\n\n        server.on('error', onError);\n        server.on('listening', onListening);\n\n        /**\n         * Event listener for HTTP server \"error\" event.\n         */\n\n        function onError(error: Error & { syscall?: string; code?: string }) {\n            if (error.syscall !== 'listen') {\n                return reject(error);\n            }\n\n            // handle specific listen errors with friendly messages\n            switch (error.code) {\n                case 'EACCES':\n                case 'EPERM':\n                    return reject(new ArgError(`Port ${agentPort} requires elevated privileges`));\n                case 'EADDRINUSE':\n                    return reject(new ArgError(`Port ${agentPort} is already in use, is another Testim instance running?`));\n                default:\n                    return reject(error);\n            }\n        }\n\n        /**\n         * Event listener for HTTP server \"listening\" event.\n         */\n\n        function onListening() {\n            const { port } = server.address() as AddressInfo;\n            // eslint-disable-next-line no-console\n            console.log(`Running on port: ${port}`);\n            showStartStopOptions();\n        }\n    });\n}\n\ntype ExternalPackageParams = Pick<AgentModeOptions, 'installPlaygroundPlaywrightDeps' | 'installPlaygroundPuppeteerDeps' | 'installPlaygroundSeleniumDeps' | 'project'>;\nfunction installExternalPackages({ installPlaygroundPlaywrightDeps, installPlaygroundPuppeteerDeps, installPlaygroundSeleniumDeps, project }: ExternalPackageParams) {\n    const all: Promise<void>[] = [];\n    if (installPlaygroundPlaywrightDeps) {\n        all.push(lazyRequire('playwright'));\n    }\n\n    if (installPlaygroundPuppeteerDeps) {\n        all.push(lazyRequire('puppeteer'));\n    }\n\n    if (installPlaygroundSeleniumDeps) {\n        all.push(lazyRequire('selenium-webdriver'), prepareChromeDriver({ projectId: project }));\n    }\n\n    return Promise.all(all);\n}\n\n\nasync function showStartStopOptions() {\n    const prompts = require('prompts') as typeof import('prompts');\n    const sigint = 'Ctrl + C';\n    await prompts({\n        name: '',\n        type: 'text',\n        message: `Type the word \"stop\" or Press ${sigint}.`,\n        validate: x => x.toUpperCase().trim() === 'STOP',\n    });\n    // eslint-disable-next-line no-console\n    console.log('Exiting Testim CLI');\n    process.exit(0);\n}\n", "/* eslint-disable camelcase */\nimport ms from 'ms';\nimport ora from 'ora';\nimport WebSocket from 'ws';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as ChromeLauncher from 'chrome-launcher';\nimport * as config from './commons/config';\nimport * as prepareUtils from './commons/prepareRunnerAndTestimStartUtils';\nimport { ArgError } from './errors';\nimport { lazyRequire } from './commons/lazyRequire';\nimport { downloadAndInstallChromium, CHROMIUM_VERSION } from './chromiumInstaller';\nimport {\n    downloadAndSave, unzipFile, getCdpAddressForHost, TESTIM_BROWSER_DIR, promiseFromCallback, doesPathExist,\n} from './utils';\nimport type { WebDriver } from './player/webdriver';\nimport type { AgentModeOptions } from './runOptions';\n\nconst LOG_LEVEL = config.WEBDRIVER_DEBUG ? 'verbose' : 'silent';\nconst EXTENSION_CACHE_TIME = ms('1h');\nconst USER_DATA_DIR = path.join(TESTIM_BROWSER_DIR, 'profile');\n\n// https://github.com/bayandin/chromedriver/blob/5013f2124888c50fff15dc2ff8287288f780b046/chrome_launcher.cc#L105\nconst CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILENAME = 'DevToolsActivePort';\nconst CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH = path.join(USER_DATA_DIR, CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILENAME);\n\nexport interface StandaloneBrowser { webdriverApi: WebDriver | { port: number; pid: number; cdpUrl: string } }\nexport async function runAgentMode(options: AgentModeOptions) {\n    let testimStandaloneBrowser: StandaloneBrowser | undefined;\n\n    await prepareUtils.preparePlayer(options.playerLocation, options.canary);\n\n    if (options.startTestimBrowser) {\n        await getRidOfPossiblyRunningChromeWithOurDataDir();\n        try {\n            // Consider moving that into the agent server and add endpoint to start browser?\n            testimStandaloneBrowser = await startTestimStandaloneBrowser(options);\n        } catch (e) {\n            if (e?.message?.includes('user data directory is already in use')) {\n                throw new ArgError('Please close all chrome browsers that were opened with \"testim start\" and try again');\n            }\n            throw e;\n        }\n    }\n\n    const agentServer = await import('./agent/server');\n\n    if (testimStandaloneBrowser?.webdriverApi) {\n        // if we're starting the agent here, pre-load the sessionPlayer so it loads faster\n        // on first play\n        const LOAD_PLAYER_DELAY = 6000;\n        setTimeout(async () => {\n            setTimeout(() => require('./player/seleniumTestPlayer'));\n\n            const packages = [\n                'webpack',\n                // We may build/static analyze functions file to do it here\n                // silent full-blown build will require additional work,\n                // But actually can be valuable as general speedup if we cache the webpack instance\n                // \"puppeteer\",\n                // \"selenium-webdriver\"\n                // \"playwright\"\n            ];\n\n            for (const packageToInstall of packages) {\n                await lazyRequire(packageToInstall, { silent: true }).catch(() => null);\n            }\n        }, LOAD_PLAYER_DELAY);\n    }\n\n    return agentServer.init(options, testimStandaloneBrowser);\n}\n\nlet startedWithStart = false;\n\nexport function getStartedWithStart() {\n    return startedWithStart;\n}\n\nfunction isPidRunning(pid: number) {\n    try {\n        return process.kill(pid, 0);\n    } catch {\n        return false;\n    }\n}\n\nasync function startFixedVersionChromium(options: AgentModeOptions, extensionBase64: string | null, downloadedExtensionPathUnzipped: string) {\n    const CHROMIUM_PROCESS_INFO_FILE = path.join(TESTIM_BROWSER_DIR, `chrome-${CHROMIUM_VERSION}-process`);\n    const CHECK_CHROMIUM_RUNNING_INTERVAL = 3000;\n\n    const onBrowserClosed = () => {\n        fs.rmSync(CHROMIUM_PROCESS_INFO_FILE, { recursive: true });\n        // eslint-disable-next-line no-console\n        console.log('\\n\\nBrowser session ended');\n        process.exit(0);\n    };\n\n\n    if (await doesPathExist(CHROMIUM_PROCESS_INFO_FILE)) {\n        // @ts-expect-error JSON.parse handles buffers as well, the types are not smart enough :(\n        const processInfo = JSON.parse(fs.readFileSync(CHROMIUM_PROCESS_INFO_FILE)) as { port: number; pid: number; cdpUrl: string };\n        if (isPidRunning(processInfo.pid)) { // if a previous instance of our browser is still running, use it and exit if it does\n            const monitorPidForExit = (): NodeJS.Timeout => (isPidRunning(processInfo.pid) ? setTimeout(monitorPidForExit, CHECK_CHROMIUM_RUNNING_INTERVAL) : onBrowserClosed());\n            monitorPidForExit();\n            return {\n                webdriverApi: processInfo,\n            };\n        }\n    }\n    const chromeBinary = await downloadAndInstallChromium();\n\n    if (!(await doesPathExist(USER_DATA_DIR))) {\n        await fs.promises.mkdir(USER_DATA_DIR, { recursive: true });\n    }\n    const capabilities = buildSeleniumOptions(USER_DATA_DIR, extensionBase64, downloadedExtensionPathUnzipped, chromeBinary);\n    const chromeFlags = [\n        ...capabilities.desiredCapabilities.chromeOptions.args,\n        ...ChromeLauncher.Launcher.defaultFlags().filter(flag => ![\n            '--disable-extensions',\n            '--disable-component-extensions-with-background-pages', // causes google connect to disallow some accounts (eg gmail accounts get a \"This browser or app may not be secure\" error)\n        ].includes(flag)),\n    ];\n    // Chromium needs API keys to communicate with google APIs (https://www.chromium.org/developers/how-tos/api-keys/)\n    // These are keys are keys that were included in some chrome builds\n    const envVars = {\n        GOOGLE_API_KEY: 'AIzaSyCkfPOPZXDKNn8hhgu3JrA62wIgC93d44k',\n        GOOGLE_DEFAULT_CLIENT_ID: '811574891467.apps.googleusercontent.com',\n        GOOGLE_DEFAULT_CLIENT_SECRET: 'kdloedMFGdGla2P1zacGjAQh',\n    };\n    const appUrl = `${options.extensionPath ? 'http://localhost:3000/app/' : 'https://app.testim.io'}?startMode=true`;\n    const chrome = await ChromeLauncher.launch({ chromeFlags, startingUrl: appUrl, ignoreDefaultFlags: true, userDataDir: USER_DATA_DIR, chromePath: chromeBinary, envVars });\n    const processInfo = { port: chrome.port, pid: chrome.pid, cdpUrl: await getCdpAddressForHost(`localhost:${chrome.port}`) };\n    fs.writeFileSync(CHROMIUM_PROCESS_INFO_FILE, JSON.stringify(processInfo));\n    chrome.process.once('exit', onBrowserClosed);\n    chrome.process.once('close', onBrowserClosed);\n    return {\n        webdriverApi: processInfo,\n    };\n}\n\nasync function startTestimStandaloneBrowser(options: AgentModeOptions) {\n    // After next clickim release we will have also testim-full.zip\n    // const fullExtensionUrl = \"https://testimstatic.blob.core.windows.net/extension/testim-full-master.zip\";\n    // CDN url\n    const fullExtensionUrl = `${config.EDGE_URL}/extension/testim-full-master.zip`;\n    const extensionFilename = path.basename(fullExtensionUrl);\n\n    const downloadedExtensionPath = path.join(TESTIM_BROWSER_DIR, extensionFilename);\n    const downloadedExtensionPathUnzipped = path.join(TESTIM_BROWSER_DIR, `${extensionFilename}__unzipped__`);\n\n    let shouldDownloadExtension = !(options.ext || options.extensionPath);\n\n    if (shouldDownloadExtension && await doesPathExist(downloadedExtensionPath)) {\n        const stat = await fs.promises.stat(downloadedExtensionPath);\n        shouldDownloadExtension = (Date.now() - EXTENSION_CACHE_TIME > stat.mtimeMs);\n    }\n    await fs.promises.mkdir(TESTIM_BROWSER_DIR, { recursive: true });\n\n    if (shouldDownloadExtension) {\n        const spinner = ora('Downloading Testim Editor').start();\n        await downloadAndSave(fullExtensionUrl, downloadedExtensionPath);\n\n        try {\n            // Ensure the zip is ok\n            await unzipFile(downloadedExtensionPath, downloadedExtensionPathUnzipped);\n        } catch (e) {\n            // The downloaded zip is corrupted, try re download once\n            await fs.promises.rm(downloadedExtensionPath, { recursive: true, force: true });\n            await downloadAndSave(fullExtensionUrl, downloadedExtensionPath);\n            try {\n                await unzipFile(downloadedExtensionPath, downloadedExtensionPathUnzipped);\n            } catch (err) {\n                // zip is bad again.\n                await fs.promises.rm(downloadedExtensionPath, { recursive: true, force: true });\n                spinner.fail('Failed to download Testim Editor');\n                throw new Error('Failed to download Testim Editor');\n            }\n        } finally {\n            if (!options.downloadBrowser) {\n                await fs.promises.rm(downloadedExtensionPathUnzipped, { recursive: true, force: true });\n            }\n        }\n\n        spinner.succeed();\n    }\n\n    const extensionBase64 = options.extensionPath ? null : (await fs.promises.readFile(options.ext || downloadedExtensionPath)).toString('base64');\n    if (options.downloadBrowser) {\n        return await startFixedVersionChromium(options, extensionBase64, downloadedExtensionPathUnzipped);\n    }\n    await prepareUtils.prepareChromeDriver(\n        { projectId: options.project },\n        // @ts-expect-error not clear where chromeBinaryLocations comes from\n        { chromeBinaryLocation: options.chromeBinaryLocations },\n    );\n\n    // @ts-expect-error not clear where chromeBinaryLocations comes from\n    const seleniumOptions = buildSeleniumOptions(USER_DATA_DIR, extensionBase64, options.extensionPath, options.chromeBinaryLocations);\n\n    const { WebDriver } = require('./player/webdriver') as typeof import('./player/webdriver');\n    const { SeleniumPerfStats } = require('./commons/SeleniumPerfStats') as typeof import('./commons/SeleniumPerfStats');\n\n    const webdriverApi = new WebDriver();\n    webdriverApi.seleniumPerfStats = new SeleniumPerfStats();\n\n    // starts chrome via selenium, note this is intentionally initClient and not init to bypass desired capabilities parsing\n    const webdriverInitResponse = await webdriverApi.initClient(seleniumOptions);\n\n    // example values from webdriverInitResponse\n    // webdriverInitResponse.sessionId\n    // webdriverInitResponse.value[\"goog:chromeOptions\"].debuggerAddress\n    // webdriverInitResponse.chrome.userDataDir;\n\n    // require user token, so we can't use it for now\n    // const { getEditorUrl } = require('./commons/testimServicesApi');\n\n    startedWithStart = true;\n    const appUrl = `${options.extensionPath ? 'http://localhost:3000/app/' : 'https://app.testim.io'}?startMode=true`;\n\n    await webdriverApi.url(appUrl);\n    // save the initial URL we navigated to so we don't consider it the AuT\n    Object.assign(webdriverApi, { initialUrl: appUrl });\n    try {\n        //TODO(Benji) do we want this to be exactly getCdpAddressForHost or should this fail less gracefully indicating the agent did not start correctly?\n        // @ts-expect-error something here is off. the type of webdriverInitResponse is void\n        webdriverApi.cdpUrl = await getCdpAddressForHost(webdriverInitResponse.value['goog:chromeOptions'].debuggerAddress);\n    } catch (e) {\n        // ignore error\n    }\n\n    return {\n        webdriverApi,\n    };\n}\n\nfunction buildSeleniumOptions(userDataDir: string, fullExtensionPath: string | null, unpackedExtensionPath: string, chromeBinaryPath: string) {\n    const extensions = fullExtensionPath ? [fullExtensionPath] : [];\n    const args = [\n        `--user-data-dir=${userDataDir}`, // crashes chromium, re-enable if using chrome\n        '--log-level=OFF',\n        '--silent-debugger-extension-api',\n        '--no-first-run',\n    ];\n    if (unpackedExtensionPath) {\n        args.push(`--load-extension=${unpackedExtensionPath}`);\n    }\n\n    return {\n        logLevel: LOG_LEVEL,\n        desiredCapabilities: {\n            chromeOptions: {\n                args,\n                extensions,\n                binary: chromeBinaryPath,\n            },\n            browserName: 'chrome',\n        },\n        host: 'localhost',\n        port: 9515, // chromedriver port\n    };\n}\n\n/**\n * Overview of what we do here:\n * we check if CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH is exists\n * If we can read the port & CDP url info from that file.\n * If we can read, but we can't send http request to the devtools server we assume it's closed and just delete the file\n * If we can read and send HTTP request, send CDP command of Browser.close to CDP, and delete the file.\n * If any of these fails we assume we couldn't kill the browser, and the user will get the \"close the running chromes errors down the line\"\n */\nasync function getRidOfPossiblyRunningChromeWithOurDataDir() {\n    if (!await doesPathExist(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH)) {\n        return;\n    }\n\n    try {\n        const { webSocketDebuggerUrl } = await readAndValidateChromedriverDevToolsActivePortFile();\n        await tryToCloseBrowserWithCDPUrl(webSocketDebuggerUrl);\n        await fs.promises.unlink(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH);\n    } catch (e) {\n        // chrome is probably not really running, we are cool\n        if (e && e.message === 'unable to connect to devtools http server') {\n            await fs.promises.unlink(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH);\n        }\n    }\n}\n\nasync function readAndValidateChromedriverDevToolsActivePortFile() {\n    /**\n     * file content example:\n\n    58938\n    /devtools/browser/d4290379-ec08-4d03-a41a-ab9d9d4c36ac\n\n    */\n\n    const fileContent = await fs.promises.readFile(CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH, { encoding: 'utf8' });\n\n    const [portLine, browserCDPURLLine] = fileContent.split('\\n').map(line => line.trim());\n\n    const port = Number.parseInt(portLine, 10);\n\n    if (!Number.isInteger(port) || port < 1 || port > 65535) {\n        throw new Error('invalid port number');\n    }\n\n    if (!browserCDPURLLine.startsWith('/devtools/browser/')) {\n        throw new Error('invalid devtools browser url');\n    }\n\n    const webSocketDebuggerUrl = await getCdpAddressForHost(`localhost:${port}`, 500);\n    // invariant check\n    if (!webSocketDebuggerUrl.endsWith(browserCDPURLLine)) {\n        throw new Error('invariant webSocketDebuggerUrl miss match');\n    }\n\n    return {\n        port,\n        webSocketDebuggerUrl,\n    };\n}\n\n\nasync function tryToCloseBrowserWithCDPUrl(webSocketDebuggerUrl: string | URL, timeout = 100) {\n    const websocketConnection = await wsConnectAndOpen(webSocketDebuggerUrl, timeout);\n\n    return promiseFromCallback<Error | undefined, never>(cb => {\n        websocketConnection.send(JSON.stringify({\n            id: 0,\n            method: 'Browser.close',\n        }), cb);\n    });\n}\n\nasync function wsConnectAndOpen(webSocketDebuggerUrl: string | URL, timeout = 100) {\n    const websocket = new WebSocket(webSocketDebuggerUrl, { timeout });\n\n    const openPromise = promiseFromCallback((cb) => {\n        websocket.once('open', cb);\n    }).then(() => {\n        websocket.removeAllListeners();\n    });\n\n    const errorPromise = promiseFromCallback((cb) => {\n        websocket.once('error', cb);\n    }).catch(() => {\n        websocket.close();\n        websocket.removeAllListeners();\n    });\n\n    return Promise.race([openPromise, errorPromise]).then(() => websocket);\n}\n\n", "#! /usr/bin/env node\n/* eslint-disable no-console */\n\nimport 'source-map-support/register';\nimport './polyfills';\nimport * as semver from 'semver';\nimport * as perf from './commons/performance-logger';\nimport * as prepareRunner from './commons/prepareRunner';\nimport * as runnerFileCache from './commons/runnerFileCache';\nimport * as prepareRunnerAndTestimStartUtils from './commons/prepareRunnerAndTestimStartUtils';\nimport chalk from 'chalk';\nimport { EventEmitter } from 'events';\nimport { CLI_MODE } from './commons/constants';\nimport { registerProcessForCleanup } from './processHandler';\nimport { NoArgsError, SeleniumError, ArgError } from './errors';\nimport { onExit, ignoreFailingTestsInExitCode } from './cli/onExit';\nimport { updateRemoteRunFailure } from './commons/testimServicesApi';\nimport { getLogger, setProxyUri, setProjectId } from './commons/logger';\nimport type { RunnerOptions } from './runOptions';\n\nconst logger = getLogger('cli-entry');\n\ndeclare global {\n    /* eslint-disable no-var */\n    /** Meta parameters defined globally in build-time */\n    var meta: {\n        readonly IS_LOCAL: false;\n        readonly IS_RELEASE: boolean;\n        readonly BRANCH_NAME: string;\n    } | undefined;\n    var caFileContent: Buffer | string | undefined;\n    var proxyUri: string | undefined;\n    var SuperagentProxy: typeof import('superagent-proxy') | undefined;\n    var ProxyAgent: typeof import('proxy-agent') | undefined;\n    /* eslint-enable no-var */\n}\n\nfunction checkNodeVersion(engineVersion: string) {\n    if (!semver.satisfies(process.version, engineVersion)) {\n        throw new ArgError(`Required node version ${engineVersion} not satisfied with current version ${process.version}`);\n    }\n\n    const currentMinimalNodeVersion = 14;\n    const nextMinimalNodeVersion = 16;\n    const majorVersion = Number(process.versions.node.split('.')[0]);\n    const dateHasPassed = new Date('2023-04-30T00:00:00.000Z') <= new Date();\n\n    if (majorVersion < currentMinimalNodeVersion) {\n        throw new ArgError(`Testim.io CLI supports Node.js ${currentMinimalNodeVersion} and above, please upgrade to a newer Node.js version`);\n    }\n\n    if (majorVersion < nextMinimalNodeVersion && dateHasPassed) {\n        throw new ArgError(`Testim.io CLI supports Node.js ${nextMinimalNodeVersion} and above, please upgrade to a newer Node.js version`);\n    }\n\n    if (majorVersion < nextMinimalNodeVersion) {\n        console.log('\\x1b[33m%s\\x1b[0m', `Testim.io CLI will stop supporting Node.js < ${nextMinimalNodeVersion} on April 30 2023, please upgrade to a newer Node.js version`);\n    }\n}\n\nasync function main() {\n    console.log('Starting Testim.io CLI');\n    // Lazy load some dependencies which are slow to load, so the UX is not of a slow starting CLI tool\n    const [utils, options] = await Promise.all([\n        import('./utils'),\n        import('./runOptions'),\n        import('./fixLocalBuild').catch(() => { /* :( */ }),\n    ]);\n    perf.log('Starting Testim.io CLI');\n    registerProcessForCleanup(onExit);\n\n    try {\n        checkNodeVersion(utils.getEnginesVersion());\n    } catch (err) {\n        console.log('Argument Error:', err.message);\n        process.exit(1);\n    }\n\n    try {\n        const processedOptions = await options.process();\n        perf.log('in main, after options.process');\n        setProxyUri(global.proxyUri);\n        if ('parallel' in processedOptions && processedOptions.parallel > 5) {\n            EventEmitter.defaultMaxListeners = processedOptions.parallel * 2;\n        }\n        setProjectId((processedOptions as RunnerOptions).project);\n        runnerFileCache.setEncryptKey!('token' in processedOptions && typeof processedOptions.token === 'string' ? processedOptions.token : 'anonymous_encrypt_key');\n\n        if (utils.isInstallLazyDepsMode(processedOptions)) {\n            console.log('Lazy dependency installation started');\n            const { installAllLazyDependencies } = await import('./commons/lazyRequire');\n            return await installAllLazyDependencies();\n        }\n        if (utils.isInitCodimMode(processedOptions)) {\n            const { init } = await import('./codim/codim-cli');\n            return init(processedOptions.initTestProject);\n        }\n        if (utils.isLoginMode(processedOptions)) {\n            return undefined;\n        }\n        if (utils.isCreatePrefetchedDataMode(processedOptions)) {\n            await runnerFileCache.clear();\n            await prepareRunner.initializeUserWithAuth(processedOptions);\n            const { preloadTests } = await import('./commons/preloadTests');\n            await preloadTests(processedOptions);\n            if (!processedOptions.playerRequirePath && processedOptions.mode !== CLI_MODE.EXTENSION) {\n                await prepareRunnerAndTestimStartUtils.preparePlayer(processedOptions.playerLocation, processedOptions.canary);\n            }\n            const res = await runnerFileCache.waitForSave();\n            if (res.success) {\n                console.log(`created prefetched data at ${runnerFileCache.getCacheFileLocation()}`);\n            } else {\n                console.error('failed to create prefetch data', res.error);\n            }\n            return undefined;\n        }\n\n        const testRunner = await import('./runner');\n        if (utils.isTunnelOnlyMode(processedOptions)) {\n            await testRunner.init(processedOptions);\n            const { serveTunneling } = await import('./commons/testimTunnel');\n            await serveTunneling(processedOptions);\n            return undefined;\n        }\n\n        if (utils.isAgentMode(processedOptions)) {\n            const { runAgentMode } = await import('./cliAgentMode');\n            return runAgentMode(processedOptions);\n        }\n\n        if (processedOptions.saveRCALocally) {\n            const { initServer } = await import('./services/localRCASaver');\n            const { port } = await initServer(processedOptions);\n            processedOptions.localRCASaver = `http://localhost:${port}`;\n        }\n\n        if (processedOptions.exitCodeIgnoreFailingTests) {\n            ignoreFailingTestsInExitCode();\n        }\n\n        perf.log('right before testRunner.init/prepareRunner.prepare');\n        const [customExtensionLocalLocation] = await Promise.all([\n            prepareRunner.prepare(processedOptions),\n            testRunner.init(processedOptions),\n        ]);\n        perf.log('right after testRunner.init/prepareRunner.prepare');\n        return await testRunner.run(processedOptions, customExtensionLocalLocation);\n    } catch (err) {\n        if (err instanceof NoArgsError) {\n            // display help by default\n            return undefined;\n        }\n        const argsForRemoteRunFailure = utils.getArgsOnRemoteRunFailure();\n        if (argsForRemoteRunFailure) {\n            await updateRemoteRunFailure({ ...argsForRemoteRunFailure, error: err.message }).catch(() => { /* */ });\n        }\n        if (err instanceof ArgError) {\n            console.log(chalk.red('Argument Error:', err.message));\n            return err;\n        }\n        if (err instanceof SeleniumError) {\n            console.log('Selenium Error:', err.message);\n            return err;\n        }\n        console.log('Error:', err.message);\n        logger.error('runner ended with unexpected error', { err });\n        return err;\n    }\n}\n\nmain().then(result => {\n    if (Array.isArray(result) && result.length === 0) {\n        console.log('No tests ran');\n    }\n    onExit(result);\n});\n\n", "/* eslint-disable no-extend-native */\n\nArray.prototype.at ||= function<T> (this: Array<T>, index: number) {\n    const relativeIndex = Number.isInteger(index) ? index : 0;\n\n    const indexToRead = relativeIndex >= 0 ? relativeIndex : this.length + relativeIndex;\n\n    if (indexToRead < 0 || indexToRead >= this.length) {\n        return undefined;\n    }\n\n    return this[indexToRead];\n};\n", "import './Array.prototype.at';\nimport { performance } from 'perf_hooks';\nimport { XMLHttpRequest } from '../commons/xhr2';\n\nObject.assign(global, {\n    xhr2: XMLHttpRequest,\n    XMLHttpRequest,\n    // TODO [engine:node@>=16.6.0]: can be removed once we support 16+\n    performance,\n    ...(typeof Blob === 'undefined' && { Blob: require('buffer').Blob }),\n});\n", "import * as os from 'os';\nimport * as url from 'url';\nimport * as http from 'http';\nimport * as https from 'https';\nimport FormData from 'form-data';\n\n\n/** The DOM EventTarget subclass used by XMLHttpRequest. */\nclass XMLHttpRequestEventTarget {\n    onloadstart = null;\n    onprogress = null;\n    onabort = null;\n    onerror = null;\n    onload = null;\n    ontimeout = null;\n    onloadend = null;\n    _listeners: { [eventName: string]: ((e: ProgressEvent) => void)[] } = {};\n\n    addEventListener(eventType: string, listener: (e: ProgressEvent) => void) {\n        eventType = eventType.toLowerCase();\n        this._listeners[eventType] ||= [];\n        this._listeners[eventType].push(listener);\n    }\n    removeEventListener(eventType: string, listener: (e: ProgressEvent) => void) {\n        let index;\n        eventType = eventType.toLowerCase();\n        if (this._listeners[eventType]) {\n            index = this._listeners[eventType].indexOf(listener);\n            if (index !== -1) {\n                this._listeners[eventType].splice(index, 1);\n            }\n        }\n    }\n    dispatchEvent(event: ProgressEvent) {\n        event.currentTarget = this;\n        event.target = this;\n        const eventType = event.type;\n        const listeners = this._listeners[eventType] || [];\n        for (const listener of listeners) {\n            listener?.call(this, event);\n        }\n        (this[`on${eventType}` as keyof typeof this] as (e: ProgressEvent) => void)?.call(this, event);\n    }\n}\nclass XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    _contentType: string | null = null;\n    _body: Buffer | null = null;\n    constructor(private readonly _request: XMLHttpRequest) {\n        super();\n    }\n    _reset() {\n        this._contentType = null;\n        this._body = null;\n    }\n    _setData(data?: string | Buffer | ArrayBufferView | FormData | null) {\n        if (typeof data === 'undefined' || data === null) {\n            return;\n        }\n        if (typeof data === 'string') {\n            if (data.length !== 0) {\n                this._contentType = 'text/plain;charset=UTF-8';\n            }\n            this._body = Buffer.from(data, 'utf8');\n        } else if (Buffer.isBuffer(data)) {\n            this._body = data;\n        } else if (data instanceof ArrayBuffer) {\n            const body = Buffer.alloc(data.byteLength);\n            const view = new Uint8Array(data);\n            for (let i = 0; i < data.byteLength; i++) {\n                body[i] = view[i];\n            }\n            this._body = body;\n        } else if ('buffer' in data && data.buffer instanceof ArrayBuffer) {\n            const body = Buffer.alloc(data.byteLength);\n            const offset = data.byteOffset;\n            const view = new Uint8Array(data.buffer);\n            for (let i = 0; i < data.byteLength; i++) {\n                body[i] = view[i + offset];\n            }\n            this._body = body;\n        } else if (typeof data === 'object' && data instanceof FormData) {\n            this._body = null;\n        } else {\n            throw new Error(`Unsupported send() data ${data}`);\n        }\n    }\n    _finalizeHeaders(headers: { [key: string]: string | undefined }, loweredHeaders: { [key: string]: string | undefined }) {\n        if (this._contentType && !('content-type' in loweredHeaders)) {\n            headers['Content-Type'] = this._contentType;\n        }\n        if (this._body) {\n            headers['Content-Length'] = this._body.length.toString();\n        }\n    }\n    _startUpload(request: http.ClientRequest) {\n        if (this._body) {\n            request.write(this._body);\n        }\n        request.end();\n    }\n}\nclass ProgressEvent {\n    /** the request that caused this event */\n    target: XMLHttpRequestEventTarget | null = null;\n    currentTarget: XMLHttpRequestEventTarget | null = null;\n    /** true if the Content-Length response header is available and the value of the event's total property is meaningful */\n    lengthComputable = false;\n    /** number of bytes that have already been downloaded or uploaded */\n    loaded = 0;\n    /** number of bytes that will be downloaded or uploaded by the request that fired the event*/\n    total = 0;\n    /** for compatibility with DOM events */\n    bubbles = false;\n    /** for compatibility with DOM events */\n    cancelable = false;\n\n    /** @param type type the event type, e.g. 'readystatechange'; must be lowercased */\n    constructor(public readonly type: string) {\n    }\n}\n/** Thrown if parsing URLs errors out. */\nclass SyntaxError extends Error {}\n/** Thrown if there is a problem with the URL passed to the XHR. */\nclass NetworkError extends Error {}\n/** Thrown if the XHR security policy is violated. */\nclass SecurityError extends Error {}\n/** Usually thrown if the XHR is in the wrong readyState for an operation. */\nclass InvalidStateError extends Error {}\nexport class XMLHttpRequest extends XMLHttpRequestEventTarget {\n    static SyntaxError = SyntaxError;\n    static ProgressEvent = ProgressEvent;\n    static SecurityError = SecurityError;\n    static XMLHttpRequest = XMLHttpRequest;\n    static InvalidStateError = InvalidStateError;\n    static XMLHttpRequestUpload = XMLHttpRequestUpload;\n\n    UNSENT = 0;\n    OPENED = 1;\n    HEADERS_RECEIVED = 2;\n    LOADING = 3;\n    DONE = 4;\n    static UNSENT = 0;\n    static OPENED = 1;\n    static HEADERS_RECEIVED = 2;\n    static LOADING = 3;\n    static DONE = 4;\n\n    nodejsHttpAgent = http.globalAgent;\n    nodejsHttpsAgent = https.globalAgent;\n    nodejsBaseUrl: string | null = null;\n    private _restrictedMethods = { CONNECT: true, TRACE: true, TRACK: true };\n    private _restrictedHeaders = {\n        'accept-charset': true,\n        'accept-encoding': true,\n        'access-control-request-headers': true,\n        'access-control-request-method': true,\n        connection: true,\n        'content-length': true,\n        cookie: true,\n        cookie2: true,\n        date: true,\n        dnt: true,\n        expect: true,\n        host: true,\n        'keep-alive': true,\n        origin: true,\n        referer: true,\n        te: true,\n        trailer: true,\n        'transfer-encoding': true,\n        upgrade: true,\n        'user-agent': true,\n        via: true,\n    };\n    private _privateHeaders = { 'set-cookie': false, 'set-cookie2': false };\n    private _userAgent = `Mozilla/5.0 (${os.type()} ${os.arch()}) node.js/${process.versions.node} v8/${process.versions.v8}`;\n\n    onreadystatechange = null;\n    readyState = XMLHttpRequest.UNSENT;\n    response: string | Buffer | ArrayBuffer | null = null;\n    responseText: string | null = '';\n    responseType: string | null = '';\n    status: number | undefined = 0;\n    statusText: string | undefined = '';\n    timeout = 0;\n    upload = new XMLHttpRequestUpload(this);\n    _method: string | null = null;\n    _url: url.UrlWithStringQuery | null = null;\n    _sync = false;\n    _headers: { [header: string]: string | undefined } | null = null;\n    _loweredHeaders: { [header: string]: string | undefined } | null = null;\n    _mimeOverride: string | null = null;\n    _request: http.ClientRequest | null = null;\n    _response: http.IncomingMessage | null = null;\n    _responseParts: Uint8Array[] | null = null;\n    _responseHeaders: { [header: string]: string | undefined } | null = null;\n    _aborting = null;\n    _error = null;\n    _loadedBytes = 0;\n    _totalBytes = 0;\n    _lengthComputable = false;\n    _anonymous;\n\n    constructor(options?: { anon?: boolean }) {\n        super();\n        this._anonymous = options?.anon;\n    }\n    static nodejsSet(options: { httpAgent?: http.Agent; httpsAgent?: https.Agent; baseUrl?: string | null }) {\n        XMLHttpRequest.prototype.nodejsSet(options);\n    }\n\n    nodejsSet(options: { httpAgent?: http.Agent; httpsAgent?: https.Agent; baseUrl?: string | null }) {\n        if ('httpAgent' in options) {\n            this.nodejsHttpAgent = options.httpAgent!;\n        }\n        if ('httpsAgent' in options) {\n            this.nodejsHttpsAgent = options.httpsAgent!;\n        }\n        if ('baseUrl' in options) {\n            const baseUrl = options.baseUrl;\n            if (baseUrl !== null) {\n                const parsedUrl = url.parse(baseUrl!, false, true);\n                if (!parsedUrl.protocol) {\n                    throw new SyntaxError('baseUrl must be an absolute URL');\n                }\n            }\n            this.nodejsBaseUrl = baseUrl!;\n        }\n    }\n    open(method: string, _url: string, async?: boolean) {\n        method = method.toUpperCase();\n        if (method in this._restrictedMethods) {\n            throw new SecurityError(`HTTP method ${method} is not allowed in XHR`);\n        }\n        const xhrUrl = this._parseUrl(_url);\n        if (async === undefined) {\n            async = true;\n        }\n        this._method = method;\n        this._url = xhrUrl;\n        this._sync = !async;\n        this._headers = {};\n        this._loweredHeaders = {};\n        this._mimeOverride = null;\n        this._setReadyState(XMLHttpRequest.OPENED);\n        this._request = null;\n        this._response = null;\n        this.status = 0;\n        this.statusText = '';\n        this._responseParts = [];\n        this._responseHeaders = null;\n        this._loadedBytes = 0;\n        this._totalBytes = 0;\n        this._lengthComputable = false;\n    }\n    public setRequestHeader(name: string, value: string) {\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n            throw new InvalidStateError('XHR readyState must be OPENED');\n        }\n        const loweredName = name.toLowerCase() as keyof typeof this._restrictedHeaders;\n        if (this._restrictedHeaders![loweredName] || /^sec-/.test(loweredName) || /^proxy-/.test(loweredName)) {\n            return;\n        }\n        value = value.toString();\n        if (loweredName in this._loweredHeaders!) {\n            name = this._loweredHeaders![loweredName]!;\n            this._headers![name] = `${this._headers![name]}, ${value}`;\n        } else {\n            this._loweredHeaders![loweredName] = name;\n            this._headers![name] = value;\n        }\n    }\n    public send(data: string | FormData | ArrayBufferView | null | undefined) {\n        if (this.readyState !== XMLHttpRequest.OPENED) {\n            throw new InvalidStateError('XHR readyState must be OPENED');\n        }\n        if (this._request) {\n            throw new InvalidStateError('send() already called');\n        }\n        switch (this._url!.protocol) {\n            case 'file:':\n                this._sendFile();\n                break;\n            case 'http:':\n            case 'https:':\n                this._sendHttp(data);\n                break;\n            default:\n                throw new NetworkError(`Unsupported protocol ${this._url!.protocol}`);\n        }\n    }\n    public abort() {\n        if (!this._request) {\n            return;\n        }\n        this._request.abort();\n        this._setError();\n        this._dispatchProgress('abort');\n        this._dispatchProgress('loadend');\n    }\n    public getResponseHeader(name: string) {\n        const loweredName = name.toLowerCase();\n        return this._responseHeaders?.[loweredName] || null;\n    }\n    public getAllResponseHeaders() {\n        if (!this._responseHeaders) {\n            return '';\n        }\n        return Object.entries(this._responseHeaders).map(([name, value]) => `${name}: ${value}`).join('\\r\\n');\n    }\n    public overrideMimeType(newMimeType: string) {\n        if ([XMLHttpRequest.LOADING, XMLHttpRequest.DONE].includes(this.readyState)) {\n            throw new InvalidStateError('overrideMimeType() not allowed in LOADING or DONE');\n        }\n        this._mimeOverride = newMimeType.toLowerCase();\n    }\n    private _setReadyState(newReadyState: number) {\n        this.readyState = newReadyState;\n        const event = new ProgressEvent('readystatechange');\n        this.dispatchEvent(event);\n    }\n    private _sendFile() {\n        if ((this._url as any).method !== 'GET') {\n            throw new NetworkError('The file protocol only supports GET');\n        }\n        throw new Error('Protocol file: not implemented');\n    }\n    private _sendHttp(data?: string | FormData | ArrayBufferView | null) {\n        if (this._sync) {\n            throw new Error('Synchronous XHR processing not implemented');\n        }\n        if ((data != null) && (this._method === 'GET' || this._method === 'HEAD')) {\n            data = null;\n        } else {\n            data ||= '';\n        }\n        this.upload._setData(data);\n        this._finalizeHeaders(data);\n        this._sendHxxpRequest(data);\n    }\n    private _sendHxxpRequest(data?: string | FormData | ArrayBufferView | null) {\n        const agent = this._url!.protocol === 'http:' ? this.nodejsHttpAgent : this.nodejsHttpsAgent;\n        const hxxp = this._url!.protocol === 'http:' ? http : https;\n        const request = hxxp.request({\n            hostname: this._url!.hostname,\n            port: this._url!.port,\n            path: this._url!.path,\n            auth: this._url!.auth,\n            method: this._method!,\n            headers: this._headers!,\n            agent,\n        });\n\n        if (typeof data === 'object' && data instanceof FormData) {\n            data.pipe(request);\n        }\n\n        this._request = request;\n        if (this.timeout) {\n            request.setTimeout(this.timeout, () => this._onHttpTimeout(request));\n        }\n        request.on('response', response => this._onHttpResponse(request, response));\n        request.on('error', () => this._onHttpRequestError(request));\n        this.upload._startUpload(request);\n        if (this._request === request) {\n            this._dispatchProgress('loadstart');\n        }\n    }\n    private _finalizeHeaders(data?: string | FormData | ArrayBufferView | null) {\n        if (typeof data === 'object' && data instanceof FormData) {\n            Object.assign(this._headers!, data.getHeaders());\n        }\n        this._headers!.Connection = 'keep-alive';\n        this._headers!.Host = this._url!.host!;\n        if (this._anonymous) {\n            this._headers!.Referer = 'about:blank';\n        }\n        this._headers!['User-Agent'] = this._userAgent;\n        this.upload._finalizeHeaders(this._headers!, this._loweredHeaders!);\n    }\n    private _onHttpResponse(request: http.ClientRequest, response: http.IncomingMessage) {\n        if (this._request !== request) {\n            return;\n        }\n        if ([301, 302, 303, 307, 308].includes(response.statusCode!)) {\n            this._url = this._parseUrl(response.headers.location!);\n            this._method = 'GET';\n            if ('content-type' in this._loweredHeaders!) {\n                delete this._headers![this._loweredHeaders['content-type']!];\n                delete this._loweredHeaders['content-type'];\n            }\n            if ('Content-Type' in this._headers!) {\n                delete this._headers['Content-Type'];\n            }\n            delete this._headers!['Content-Length'];\n            this.upload._reset();\n            this._finalizeHeaders();\n            this._sendHxxpRequest();\n            return;\n        }\n        this._response = response;\n        this._response!.on('data', data => this._onHttpResponseData(response, data));\n        this._response!.on('end', () => this._onHttpResponseEnd(response));\n        this._response!.on('close', () => this._onHttpResponseClose(response));\n        this.status = this._response.statusCode;\n        this.statusText = http.STATUS_CODES[this.status!];\n        this._parseResponseHeaders(response);\n        const lengthString = this._responseHeaders!['content-length'] as string | undefined;\n        if (lengthString) {\n            this._totalBytes = parseInt(lengthString, 10);\n            this._lengthComputable = true;\n        } else {\n            this._lengthComputable = false;\n        }\n        this._setReadyState(XMLHttpRequest.HEADERS_RECEIVED);\n    }\n    private _onHttpResponseData(response: http.IncomingMessage, data: Buffer) {\n        if (this._response !== response) {\n            return undefined;\n        }\n        this._responseParts!.push(data);\n        this._loadedBytes += data.length;\n        if (this.readyState !== XMLHttpRequest.LOADING) {\n            this._setReadyState(XMLHttpRequest.LOADING);\n        }\n        return this._dispatchProgress('progress');\n    }\n    private _onHttpResponseEnd(response: http.IncomingMessage) {\n        if (this._response !== response) {\n            return undefined;\n        }\n        this._parseResponse();\n        this._request = null;\n        this._response = null;\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('load');\n        return this._dispatchProgress('loadend');\n    }\n    private _onHttpResponseClose(response: http.IncomingMessage) {\n        if (this._response !== response) {\n            return undefined;\n        }\n        const request = this._request;\n        this._setError();\n        request!.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        return this._dispatchProgress('loadend');\n    }\n    private _onHttpTimeout(request: http.ClientRequest) {\n        if (this._request !== request) {\n            return undefined;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('timeout');\n        return this._dispatchProgress('loadend');\n    }\n    private _onHttpRequestError(request: http.ClientRequest) {\n        if (this._request !== request) {\n            return undefined;\n        }\n        this._setError();\n        request.abort();\n        this._setReadyState(XMLHttpRequest.DONE);\n        this._dispatchProgress('error');\n        return this._dispatchProgress('loadend');\n    }\n    private _dispatchProgress(eventType: string) {\n        const event = new ProgressEvent(eventType);\n        event.lengthComputable = this._lengthComputable;\n        event.loaded = this._loadedBytes;\n        event.total = this._totalBytes;\n        this.dispatchEvent(event);\n    }\n    private _setError() {\n        this._request = null;\n        this._response = null;\n        this._responseHeaders = null;\n        this._responseParts = null;\n    }\n    private _parseUrl(urlString: string) {\n        let index; let password; let user;\n        const absoluteUrlString = this.nodejsBaseUrl === null ? urlString : url.resolve(this.nodejsBaseUrl, urlString);\n        const xhrUrl = url.parse(absoluteUrlString, false, true);\n        xhrUrl.hash = null!;\n        if (xhrUrl.auth && ((typeof user !== 'undefined' && user !== null) || (typeof password !== 'undefined' && password !== null))) {\n            index = xhrUrl.auth.indexOf(':');\n            if (index === -1) {\n                if (!user) {\n                    user = xhrUrl.auth;\n                }\n            } else {\n                if (!user) {\n                    // @ts-expect-error We just defined this as a URL, which doesn't have this function \uD83D\uDE33\n                    user = xhrUrl.substring(0, index);\n                }\n                if (!password) {\n                    // @ts-expect-error We just defined this as a URL, which doesn't have this function \uD83D\uDE33\n                    password = xhrUrl.substring(index + 1);\n                }\n            }\n        }\n        if (user || password) {\n            xhrUrl.auth = `${user}:${password}`;\n        }\n        return xhrUrl;\n    }\n    private _parseResponseHeaders(response: http.IncomingMessage) {\n        this._responseHeaders = {};\n        Object.entries(response.headers).forEach(([name, value]) => {\n            const loweredName = name.toLowerCase();\n            if (this._privateHeaders[loweredName as keyof typeof this._privateHeaders]) {\n                return;\n            }\n            if (this._mimeOverride !== null && loweredName === 'content-type') {\n                value = this._mimeOverride;\n            }\n            this._responseHeaders![loweredName] = value as string | undefined;\n        });\n        if (this._mimeOverride !== null && !('content-type' in this._responseHeaders)) {\n            this._responseHeaders['content-type'] = this._mimeOverride;\n        }\n    }\n    private _parseResponse() {\n        let buffer = Buffer.concat(this._responseParts!);\n        // temporary workaround for transport encoding parsing\n        if (this._responseHeaders!['content-encoding'] === 'gzip') {\n            buffer = require('zlib').gunzipSync(buffer);\n        }\n        this._responseParts = null;\n        switch (this.responseType) {\n            case 'text':\n                this._parseTextResponse(buffer);\n                break;\n            case 'json':\n                this.responseText = null;\n                try {\n                    this.response = JSON.parse(buffer.toString('utf-8'));\n                } catch {\n                    this.response = null;\n                }\n                break;\n            case 'buffer':\n                this.responseText = null;\n                this.response = buffer;\n                break;\n            case 'arraybuffer': {\n                this.responseText = null;\n                const arrayBuffer = new ArrayBuffer(buffer.length);\n                const view = new Uint8Array(arrayBuffer);\n                for (let i = 0; i < buffer.length; i++) {\n                    view[i] = buffer[i];\n                }\n                this.response = arrayBuffer;\n                break;\n            }\n            default:\n                this._parseTextResponse(buffer);\n        }\n    }\n    private _parseTextResponse(buffer: Buffer) {\n        try {\n            this.responseText = buffer.toString(this._parseResponseEncoding() as BufferEncoding);\n        } catch {\n            this.responseText = buffer.toString('binary');\n        }\n        this.response = this.responseText;\n    }\n    private _parseResponseEncoding() {\n        const contentType = this._responseHeaders!['content-type'];\n        const match = /;\\s*charset=(.*)$/.exec(contentType as string);\n        if (contentType && match) {\n            return match[1];\n        }\n        return 'utf-8';\n    }\n}\n", "import * as constants from '../commons/constants';\nimport { isCi } from './isCiRun';\nimport { getLogger } from '../commons/logger';\nimport { writeStackTrace } from './writeStackTrace';\nimport { requireWithFallback } from '../commons/requireWithFallback';\n\nconst logger = getLogger('process-handler');\n\nlet exitCodeIgnoreFailingTests = false;\n\ninterface RunnerResult { runnerStatus?: string; success?: boolean; testStatus?: typeof constants['testStatus'][keyof typeof constants['testStatus']]; status?: string }\n\nfunction getExitCode(result: Error | RunnerResult | number | undefined) {\n    if (result instanceof Error) {\n        return 1;\n    }\n\n    if (exitCodeIgnoreFailingTests) {\n        return 0;\n    }\n\n    result ||= {};\n    const hasFailedTests = Object.values(result).some(\n        ({ runnerStatus, success, testStatus, status }) => {\n            if (\n                [runnerStatus, status].includes(constants.runnerTestStatus.SKIPPED) ||\n                ([runnerStatus, status].includes(constants.runnerTestStatus.FAILED) &&\n                    testStatus === constants.testStatus.EVALUATING)\n            ) {\n                return false;\n            }\n            return success !== true;\n        },\n    );\n\n    return hasFailedTests ? 1 : 0;\n}\n\nfunction closeChromeDriverIfRunning() {\n    try {\n        const chromedriver = requireWithFallback('chromedriver');\n        chromedriver.stop();\n    } catch (err) { /* ignore */ }\n}\n\nexport function ignoreFailingTestsInExitCode() {\n    exitCodeIgnoreFailingTests = true;\n}\n\n\nexport async function onExit(exitValue?: Error | RunnerResult | number) {\n    if ((exitValue as any)?.stack) {\n        if (!isCi) {\n            writeStackTrace(exitValue as Error);\n        } else {\n            // eslint-disable-next-line no-console\n            console.error(exitValue, (exitValue as any).stack);\n        }\n    }\n\n    closeChromeDriverIfRunning();\n\n    await logger.waitForFlush();\n\n    process.exit(getExitCode(exitValue));\n}\n", "/* eslint-disable no-console */\nimport * as os from 'os';\nimport * as path from 'path';\nimport chalk from 'chalk';\nimport { writeFileSync, mkdirSync } from 'fs';\n\nexport function writeStackTrace(err?: Error) {\n    if (err?.message?.includes('SIGINT')) {\n        return; // no need to generate a log file for a sigint.\n    }\n    try {\n        const homedir = os.homedir();\n\n        mkdirSync(path.resolve(homedir, '.testim_logs'), { recursive: true });\n        const logFileName = path.resolve(homedir, '.testim_logs', `${new Date().toISOString().replace(/:|\\./g, '_')}.log`);\n        console.log('Oops :( The test runner has encountered an unexpected error. A complete log of this run can be found in:');\n        console.log(`\\t${logFileName}`);\n\n        if (err?.message?.includes('Unable to compile TypeScript') && err.stack?.includes('runner/src') && process.argv.some(x => x.includes('player-require-path'))) {\n            console.log(chalk.red('Looks like you got a TypeScript compile error champ - but it\\'s not a very good one because we use TypeScript in transpile-only mode'));\n            console.log(chalk.red('change require(\\'ts-node/register/transpile-only\\'); to require(\\'ts-node/register\\'); for better errors'));\n        }\n\n        writeFileSync(logFileName, `${err}\\n${err?.stack}\\n\\n${JSON.stringify(err, Object.getOwnPropertyNames(err), 2)}`);\n    } catch { /* noop */ }\n}\n"],
  "mappings": "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",
  "names": ["performance_logger_exports", "__export", "log", "measure", "args", "MEASURE_TESTIM_CLI_PERFORMANCE", "time", "epoch", "last", "fn", "fnName", "start", "init_performance_logger", "__esmMin", "UNICODE_CHARACTERS", "W3C_ELEMENT_ID", "EDGE_CHROMIUM_MIN_VERSION", "init_constants", "__esmMin", "guid", "length", "a", "result", "i", "index", "getTestUrl", "editorUrl", "projectId", "testId", "resultId", "branch", "testUrl", "buildBasicHeader", "userName", "password", "isURL", "path", "legacyPattern", "pattern", "init_stringUtils", "__esmMin", "lazyDependencies", "dependencies", "engines", "init_package", "__esmMin", "_SERVICES_HOST", "canonicalBlobURL", "canonicalEdgeUrl", "DISABLE_AGENT_ORIGIN_CHECK", "DISABLE_DEBUGGER_INFINITE_TIMEOUT", "OVERRIDE_TIMEOUTS", "EDITOR_URL", "WEBSOCKET_HOST", "SERVICES_HOST", "LOGGER_CONSOLE", "LOGGER_DEBUG", "WEBDRIVER_DEBUG", "IS_ON_PREM", "REQUESTS_QUEUE_SIZE", "DEBUG_MODE", "TESTIM_CONCURRENT_WORKER_COUNT", "ROLLOUT_KEY", "DF_ENABLE_VIDEO", "START_WORKER_DELAY_MS", "APPIUM_VERSION", "GATEWAY_URL", "EXTENSION_SERVICES_HOST", "BLOB_URL", "EDGE_URL", "CANONICAL_BLOB_URL", "CANONICAL_EDGE_URL", "init_config", "__esmMin", "coralogix_winston_transport_exports", "__export", "CoralogixTransport", "import_coralogix_logger", "import_winston_transport", "severityMap", "errorProps", "init_coralogix_winston_transport", "__esmMin", "TransportStream", "options", "info", "callback", "category", "level", "msg", "infoMeta", "restMeta", "meta", "log", "errorOverride", "prop", "config", "logger_exports", "__export", "getLogger", "setExecutionId", "setProjectId", "setProxyUri", "getStreamsAndWaitForFlushPromise", "transports", "waitForFlush", "IS_ON_PREM", "CoralogixTransport", "loggerConfig", "loggerInstance", "LOGGER_CONSOLE", "execId", "executionId", "projId", "projectId", "proxyUri", "addExecutionMetadata", "dataExecutionId", "loggerName", "Logger", "winstonMainLogger", "os", "winston", "hostname", "runnerVersion", "level", "defaultMeta", "init_logger", "__esmMin", "init_config", "init_utils", "getRunnerVersion", "LOGGER_DEBUG", "_logger", "msg", "data", "logLevel", "err", "errors_exports", "__export", "AbortError", "ArgError", "ClientError", "GetBrowserError", "GridConcurrencyError", "GridError", "NoArgsError", "NotImplementedError", "NpmPackageError", "NpmPermissionsError", "PageNotAvailableError", "PlaygroundCodeError", "QuotaDepletedError", "SeleniumCrashError", "SeleniumError", "StopRunOnError", "TimeoutError", "import_p_retry", "init_errors", "__esmMin", "message", "seleniumStack", "type", "_AbortError", "path", "descendant", "isPromise", "obj", "delay", "time", "resolve", "promiseTimeout", "promise", "timeout", "errMsg", "OVERRIDE_TIMEOUTS", "warnedAboutDebugger", "timeoutErr", "TimeoutError", "promiseMap", "arr", "handler", "concurrency", "pLimit", "limit", "item", "index", "promiseFromCallback", "resolver", "reject", "err", "result", "init_promiseUtils", "__esmMin", "init_errors", "init_config", "_", "import_dns", "logger", "networkConnectivityTestFailed", "testNetworkConnectivity", "throttledTestNetworkConnectivity", "ttl", "makeCounters", "init_httpRequestCounters", "__esmMin", "init_config", "init_logger", "init_promiseUtils", "getLogger", "IS_ON_PREM", "hostnames", "result", "promiseMap", "host", "dns", "counters", "update", "counter", "key", "_result", "wrapWithMonitoring", "fn", "name", "args", "e", "isNetworkHealthy", "allFailed", "allCalls", "httpRequest_exports", "__export", "deleteFullRes", "deleteReq", "didNetworkConnectivityTestFail", "download", "get", "getFullRes", "getText", "head", "isNetworkHealthy", "post", "postForm", "postFullRes", "put", "getCaFile", "binaryParser", "res", "fn", "data", "chunk", "getProxy", "superagent", "attachCaFileAndProxyToRequest", "request", "skipProxy", "caFile", "proxy", "_delete", "url", "body", "headers", "timeout", "DEFAULT_REQUEST_TIMEOUT", "_post", "retry", "err", "_get", "query", "isBinary", "import_superagent", "logger", "wrapWithMonitoring", "DOWNLOAD_REQUEST_TIMEOUT", "logErrorAndRethrow", "init_httpRequest", "__esmMin", "init_logger", "init_httpRequestCounters", "getLogger", "makeCounters", "logMsg", "error", "fields", "files", "file", "options", "getCliLocation", "cliLocation", "getSourcePath", "location", "fileName", "isURL", "getRunnerVersion", "getEnginesVersion", "engines", "copyDir", "src", "dest", "createParentDirs", "dirents", "fsPromises", "item", "srcPath", "destPath", "doesPathExist", "_path", "err", "path", "import_p_retry", "import_decompress", "import_fs", "DOWNLOAD_RETRY", "download", "downloadAndSave", "copy", "getSource", "getSourceAsBuffer", "unzipFile", "getLocalFileSizeInMB", "init_fsUtils", "__esmMin", "init_stringUtils", "init_package", "url", "httpRequest", "pRetry", "saveToLocation", "res", "readFile", "destFile", "resolve", "reject", "file", "srcZipFile", "destZipPath", "decompress", "fileLocation", "constants_exports", "__export", "CLI_MODE", "MOBILE_APP_SOURCE", "gridMessages", "gridTypes", "mobileWeb", "runnerStatus", "runnerTestStatus", "sessionType", "socketEventTypes", "stepResult", "test", "testRunStatus", "testStatus", "timeoutMessages", "init_constants", "__esmMin", "getSessionType", "options", "sessionType", "getUniqBrowsers", "testList", "_a", "_b", "_c", "t", "getArgsOnRemoteRunFailure", "args", "hasTestPlanFlag", "isRemoteRun", "isQuarantineAndNotRemoteRun", "isInitCodimMode", "isLoginMode", "isTunnelOnlyMode", "isCreatePrefetchedDataMode", "isInstallLazyDepsMode", "isAgentMode", "replaceArgsWithNoDashes", "init_argsUtils", "__esmMin", "init_constants", "test", "testStatus", "nonDashFlags", "arg", "i", "getDuration", "ms", "duration", "moment", "getDurationSec", "import_moment", "init_timeUtils", "__esmMin", "isAppFromDevice", "isAppForVirtualIosDevice", "isMobileProject", "init_mobileUtils", "__esmMin", "nativeApp", "_a", "options", "_b", "utils_exports", "__export", "TESTIM_BROWSER_DIR", "TimeoutError", "buildBasicHeader", "calcPercentile", "copy", "copyDir", "delay", "doesPathExist", "download", "downloadAndSave", "extractElementId", "getArgsOnRemoteRunFailure", "getBrowserInfo", "getCdpAddressForHost", "getCliLocation", "getDuration", "getDurationSec", "getEnginesVersion", "getEnvironmentGitBranch", "getLocalFileSizeInMB", "getPlanType", "getRunConfigByBrowserName", "getRunnerVersion", "getSessionType", "getSource", "getSourceAsBuffer", "getSourcePath", "getTestUrl", "getUniqBrowsers", "groupTestsByRetries", "guid", "hasTestPlanFlag", "isAgentMode", "isAppForVirtualIosDevice", "isAppFromDevice", "isCreatePrefetchedDataMode", "isInitCodimMode", "isInstallLazyDepsMode", "isLoginMode", "isMobileProject", "isPromise", "isQuarantineAndNotRemoteRun", "isRemoteRun", "isTunnelOnlyMode", "isURL", "promiseFromCallback", "promiseMap", "promiseTimeout", "removePropertyFromObject", "replaceArgsWithNoDashes", "unzipFile", "browserValue", "BROWSERS", "b", "browser", "saucelabs", "browserstack", "selectedBrowser", "selectedOS", "OSS", "x", "obj", "propName", "cmpFunction", "prop", "element", "W3C_ELEMENT_ID", "plan", "now", "expirationDate", "testResults", "tr", "all", "current", "sorted", "last", "browserInstanceHost", "timeout", "httpRequest", "os", "_", "path", "HOMEDIR", "init_utils", "__esmMin", "init_constants", "init_fsUtils", "init_argsUtils", "init_timeUtils", "init_stringUtils", "init_promiseUtils", "init_mobileUtils", "arr", "percentile", "a", "index", "mockNetworkRuleFileSchema_exports", "__export", "$schema", "mockNetworkRuleFileSchema_default", "definitions", "properties", "required", "type", "init_mockNetworkRuleFileSchema", "__esmMin", "getLocalRunnerCache", "promiseTimeout", "getCacheFileLocation", "buffer", "key", "_encryptKeyPromise", "decrypt", "iv", "encryptedText", "keyBuffer", "decipher", "decrypted", "memoize", "fn", "fnName", "duration", "THREE_HOURS", "parameters", "cacheEnabled", "originalFnName", "cached", "get", "logger", "cacheMissAllowed", "value", "set", "valueExpiry", "localRunnerCache", "expiry", "ttl", "waitingForSave", "obj", "_encryptAndSavePromise", "resolve", "encryptAndSaveResolve", "encryptAndSave", "clear", "setEnabled", "enabled", "_enableCacheMiss", "waitForSave", "setCacheLocation", "location", "cacheLocation", "fs", "path", "crypto", "import_lodash", "encryptKeyResolve", "setEncryptKey", "disable", "enable", "disableCacheMiss", "init_runnerFileCache", "__esmMin", "init_utils", "init_logger", "getLogger", "getCliLocation", "object", "error", "objStr", "cipher", "result", "doesPathExist", "err", "additionalLogDetails", "getCliLocation", "os", "init_logUtils", "__esmMin", "init_utils", "getMainPath", "packageName", "err", "requireWithFallback", "mainPath", "path", "init_requireWithFallback", "__esmMin", "getLatestPackageVersion", "packageName", "exec", "getPackageIfInstalledLocally", "requireWithFallback", "getLocallyInstalledPackageVersion", "rootPath", "installPackageLocally", "execOptions", "getPathWithMissingPermissions", "error", "regexResult", "npmSevenAndEightMissingPermissions", "oldShrinkwrap", "newShrinkwrap", "renamed", "doesPathExist", "err", "pathWithMissingPermissions", "npmEightMissingPermissions", "logger", "additionalLogDetails", "NpmPermissionsError", "installPackages", "prefix", "packageNames", "proxyUri", "timeoutMs", "resolve", "reject", "proxyFlag", "envVars", "stdout", "stderr", "ops", "npmInstall", "localNpmLocation", "data", "code", "_a", "errorString", "packageVersion", "NpmPackageError", "TimeoutError", "fs", "path", "import_util", "import_child_process", "init_npmWrapper", "__esmMin", "init_utils", "init_logger", "init_logUtils", "init_requireWithFallback", "init_errors", "_exec", "getLogger", "chromedriverWrapper_exports", "__export", "install", "isReady", "start", "import_fkill", "import_p_retry", "PACKAGE_NAME", "DRIVER_PORT", "DRIVER_BASE_URL", "DEFAULT_DRIVER_ARGS", "init_chromedriverWrapper", "__esmMin", "init_npmWrapper", "init_httpRequest", "init_utils", "init_requireWithFallback", "installPackageLocally", "getCliLocation", "fkill", "requireWithFallback", "chromeBinaryLocation", "pRetry", "_a", "statusResponse", "get", "chromeOptions", "sessionResponse", "post", "deleteReq", "prepareRunnerAndTestimStartUtils_exports", "__export", "getSessionPlayerFolder", "prepareChromeDriver", "prepareCustomExtension", "prepareExtension", "preparePlayer", "location", "unlimitedSize", "isURL", "destFile", "getRemoteFileSizeInMB", "MAX_CUSTOM_EXT_SIZE_MB", "ArgError", "MAX_CUSTOM_SIZE_ERROR_MSG", "downloadAndSave", "getLocalFileSizeInMB", "url", "httpRequest", "contentLengthHeader", "err", "logger", "locations", "fullLocations", "getSourcePath", "memoize", "promiseMap", "_path", "getSource", "MSEC_IN_HALF_DAY", "userDetails", "driverOptions", "skipIsReadyCheck", "spinner", "chromedriverWrapper", "error", "errorMsg", "NpmPermissionsError", "additionalLogDetails", "getPlayerVersion", "BLOB_URL", "download", "getPlayerLocation", "canary", "IS_ON_PREM", "ver", "cliLocation", "getCliLocation", "getPlayerDestination", "testimAppData", "downloadAndUnzip", "loc", "playerFileName", "isRetry", "unzipFile", "import_ms", "fs", "path", "import_serialize_error", "init_prepareRunnerAndTestimStartUtils", "__esmMin", "init_config", "init_runnerFileCache", "init_logger", "init_logUtils", "init_errors", "init_utils", "getLogger", "ms", "getCurrentPlatform", "osType", "downloadAndInstallChromium", "platform", "storageBaseUrl", "platformFolder", "ArgError", "winArchiveName", "CHROMIUM_VERSION", "platformArchiveName", "binaryPaths", "downloadUrl", "downloadArchivePath", "DOWNLOAD_CHROME_FOLDER", "downloadedZipFile", "binaryPath", "doesPathExist", "downloadSpinner", "ora", "downloadAndSave", "e", "errorMessage", "extractSpinner", "unzipFile", "fs", "os", "path", "import_ora", "init_chromiumInstaller", "__esmMin", "init_errors", "init_utils", "TESTIM_BROWSER_DIR", "init", "projectId", "token", "_projectId", "_token", "generateToken", "initFromData", "authData", "_serverToken", "_serverTokenExp", "getTokenExp", "_refreshToken", "_ngrokToken", "_isNgrokWhitelisted", "getTokenV3", "memoize", "logger", "post", "SERVICES_HOST", "FIVE_MIN_IN_MS", "refreshToken", "customToken", "error", "ArgError", "getCustomTokenV3", "err", "getRefreshToken", "getTokenV3UserData", "init_testimCustomToken", "__esmMin", "init_config", "init_httpRequest", "init_runnerFileCache", "init_errors", "init_logger", "getLogger", "isCiRun_exports", "__export", "isCi", "init_isCiRun", "__esmMin", "testimServicesApi_exports", "__export", "addTestRetry", "clearTestResult", "deleteCloudflareTunnel", "fetchLambdatestConfig", "forceUpdateCloudflareTunnelRoutes", "getAllGrids", "getAppDetails", "getApplitoolsIntegrationData", "getCloudflareTunnel", "getEditorUrl", "getGridById", "getGridByName", "getHybridGridProvider", "getLabFeaturesByProjectId", "getMobileDevicesFromGrid", "getRealData", "getS3Artifact", "getSuiteTestList", "getTestPlan", "getTestPlanTestList", "getTestResults", "getUsageForCurrentBillingPeriod", "initializeUserWithAuth", "isTestResultCompleted", "keepAliveGrid", "loadSfdcCredential", "loadTest", "releaseGridSlot", "reportExecutionFinished", "reportExecutionStarted", "saveRemoteStep", "saveTestPlanResult", "updateExecutionTests", "updateRemoteRunFailure", "updateTestDataArtifact", "updateTestResult", "updateTestStatus", "uploadRunDataArtifact", "getTokenHeader", "bearerToken", "getCustomTokenV3", "postAuth", "url", "body", "headers", "timeout", "retry", "tokenHeaders", "finalHeaders", "post", "SERVICES_HOST", "postAuthFormData", "fields", "files", "postForm", "putAuth", "put", "deleteAuth", "deleteReq", "getWithAuth", "query", "options", "get", "pRetry", "DEFAULT_REQUEST_RETRY", "projectId", "testPlanNames", "parseProperty", "dataValue", "testConfigIds", "beforeAllLabels", "testLabels", "afterAllLabels", "testPlan", "branch", "branchData", "testId", "skipSharedSteps", "useBranchMap", "testPlanId", "result", "executionId", "resultId", "status", "data", "retries", "runnerVersion", "runnerStatuses", "reason", "success", "startTime", "endTime", "labels", "executions", "_config", "resultLabels", "remoteRunId", "localRunUserId", "isLocalRun", "intersections", "isCiRun", "tmsOptions", "resultExtraData", "names", "planIds", "testIds", "testNames", "testConfigNames", "suiteNames", "suiteIds", "rerunFailedByRunId", "appId", "error", "logger", "testRetryKey", "slots", "guid", "companyId", "slotId", "gridId", "browser", "gridName", "token", "branchName", "lightweightMode", "localGrid", "_a", "_b", "e", "ArgError", "EDITOR_URL", "channel", "testResult", "stepId", "remoteStep", "relativize", "uri", "getStorageRelativePath", "filePath", "bucket", "fullPath", "uploadArtifact", "testResultId", "content", "subType", "mimeType", "fileSuffix", "fileName", "path", "storagePath", "buffer", "runId", "newResultId", "originalTestResultId", "previousTestResultId", "err", "routes", "tunnelId", "projectType", "selectors", "GRID_PATH", "_", "pako", "import_p_retry", "import_object_hash", "init_testimServicesApi", "__esmMin", "init_utils", "init_config", "init_constants", "init_httpRequest", "init_testimCustomToken", "init_errors", "init_logger", "getRunnerVersion", "getLogger", "runData", "hash", "testData", "projectDefaults", "testDataValueClone", "hiddenParams", "param", "test", "getSessionPlayerRequire_exports", "__export", "getSessionPlayer", "options", "import_path", "sessionPlayerInit", "init_getSessionPlayerRequire", "__esmMin", "perf", "getSessionPlayerFolder", "testimAppDataFolder", "path", "sessionPlayer", "preloadSlowRequires", "mode", "CLI_MODE", "initializeUserWithAuth", "options", "project", "token", "lightweightMode", "useLocalChromeDriver", "useChromeLauncher", "lightweightModeGeneral", "localGrid", "memoizationTTL", "TEN_HOURS_MS", "FIVE_MINUTES_MS", "log", "result", "memoize", "initFromData", "init_initializeUserWithAuth", "__esmMin", "init_performance_logger", "init_testimServicesApi", "init_runnerFileCache", "init_testimCustomToken", "init_constants", "prepare", "options", "_a", "chromedriverPromise", "hasNoGrid", "isTdkRun", "downloadAndInstallChromium", "prepareChromeDriver", "CLI_MODE", "preparePlayer", "prepareExtension", "customExtensionLocation", "unlimitedSize", "prepareCustomExtension", "prepareMockNetwork", "location", "logger", "_rulesJson", "getSourceAsBuffer", "rulesJsonBuf", "MAX_RULE_FILE_SIZE_IN_MB", "PREPARE_MOCK_NETWORK_ERROR_PREFIX", "rulesJson", "error", "ajv", "Ajv", "mockNetworkRuleFileSchema_exports", "errors", "e", "i", "os", "import_ajv", "init_prepareRunner", "__esmMin", "init_utils", "init_mockNetworkRuleFileSchema", "init_prepareRunnerAndTestimStartUtils", "init_constants", "init_chromiumInstaller", "init_initializeUserWithAuth", "registerProcessForCleanup", "onExit", "_process", "cleanup", "err", "promiseTimeout", "promiseMap", "exitHooks", "hook", "logger", "reason", "_a", "msg", "e", "registerExitHook", "init_processHandler", "__esmMin", "init_logger", "init_utils", "getLogger", "getExtensionsUrl", "program", "useCanonicalURL", "zipFileSuffix", "firefox", "CANONICAL_BLOB_URL", "BLOB_URL", "chrome", "CANONICAL_EDGE_URL", "getResolvedExtensionUrl", "getPlayerUrl", "playerUrlPrefix", "init_runOptionsUtils", "__esmMin", "init_config", "identify", "data", "IS_ON_PREM", "anonymousId", "analytics", "trackWithCIUser", "eventName", "properties", "track", "userId", "id", "import_analytics_node", "init_testimAnalytics", "__esmMin", "init_config", "Analytics", "isAgentFlow", "program", "track", "runAgentFlow", "agentModes", "installPlaygroundPlaywrightDeps", "installPlaygroundPuppeteerDeps", "installPlaygroundSeleniumDeps", "startTestimBrowser", "ArgError", "mode", "selectedModes", "playerUrl", "getPlayerUrl", "init_runOptionsAgentFlow", "__esmMin", "init_runOptionsUtils", "init_testimAnalytics", "init_errors", "launchChrome", "url", "platform", "import_child_process", "init_chrome_launcher", "__esmMin", "credentialsManager_exports", "__export", "doLogin", "getProjectId", "getToken", "getCredentialProperty", "timeout", "promise", "ms", "delay", "TimeoutError", "getCredentialsFromChrome", "app", "loginInfoFromChrome", "resolve", "req", "res", "reject", "server", "err", "getEditorUrl", "editorUrl", "launchChrome", "overwriteExisting", "projects", "homedir", "testimCredentialsFile", "doesPathExist", "credentials", "prompts", "ora", "spinner", "writeCredentials", "response", "p", "fsPromises", "property", "isExist", "os", "path", "YAML", "import_fs", "init_credentialsManager", "__esmMin", "init_utils", "init_chrome_launcher", "runOptions_exports", "__export", "process", "import_ms", "import_chalk", "fs", "url", "_", "path", "import_commander", "camelizeHyphenValues", "collect", "cli", "list", "mergeValues", "allowedChromeFlags", "printUsage", "printDeprecationWarning", "CODE_COVERAGE_REPORTER_OPTIONS", "env", "argv", "stdout", "exit", "cwd", "LOG_LEVEL_OPTIONS", "program", "setHostAndPortForSauceLab", "setHostAndPortForBrowserStack", "init_runOptions", "__esmMin", "init_utils", "init_runOptionsUtils", "init_runOptionsAgentFlow", "init_runnerFileCache", "init_constants", "init_errors", "prop", "m", "w", "val", "col", "first", "second", "isDefaultHelpLine", "line", "isParamsJsonOption", "isExtOnlyOption", "isPlayerOption", "isScheduler", "isWebdriverTimeout", "isUserId", "isMonitorPerformance", "isSaveRCALocally", "isExitCodeIgnoreFailingTests", "isDeprecatedHighSpeed", "isUrls", "isTestStartTimeout", "isInstallLazyDeps", "txt", "ln", "deprecatedUsage", "newUsage", "newUsageString", "chalk", "replaceArgsWithNoDashes", "ms", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "userParamsData", "chromeExtraPrefs", "chromeExtraArgs", "seleniumCapsFileContent", "NoArgsError", "credentialsManager", "projectId", "token", "message", "version", "getRunnerVersion", "disable", "cacheLocationProvided", "location", "setCacheLocation", "disableCacheMiss", "fullPlayerPath", "projectFile", "tsNodeRegisterInstance", "Module", "originalRequire", "id", "ArgError", "isAgentFlow", "runAgentFlow", "options", "safePropName", "err", "isTestConfigSpecified", "isTestPlanSpecified", "isSuiteSpecified", "args", "arg", "argName", "sOptions", "isMobile", "browserName", "EDGE_CHROMIUM_MIN_VERSION", "isBadVersion", "bsOptions", "perfectoOptions", "DEFAULTS", "testobjectOptions", "timeoutWasGiven", "credentialToken", "CLI_MODE", "label", "invalidLabels", "getEnvironmentGitBranch", "extHeadlessUrl", "getResolvedExtensionUrl", "playerUrl", "getPlayerUrl", "glob", "files", "mockNetworkDeprecationMsg", "diff", "extensionOnlyOptions", "usedExtensionOptions", "key", "multi", "fileContent", "lightweightModeOptions", "fixLocalBuild_exports", "path", "import_fs", "import_child_process", "location", "isDevBuild", "init_fixLocalBuild", "__esmMin", "lazyRequire_exports", "__export", "installAllLazyDependencies", "lazyRequire", "dependency", "options", "packageLocally", "getPackageIfInstalledLocally", "spinner", "ora", "requiredModule", "memoizedLazyRequire", "error", "logger", "depVersionToInstall", "getVersionOfLazyDep", "depWithVersions", "globalFlag", "errorMessage", "identifier", "ongoingCalls", "lazyRequireImpl", "installPackageLocally", "getCliLocation", "requireWithFallback", "allLazyDependencies", "lazyDependencies", "dep", "dependencyToFind", "depEntry", "import_ora", "init_lazyRequire", "__esmMin", "init_npmWrapper", "init_logger", "init_utils", "init_package", "init_requireWithFallback", "getLogger", "codim_cli_exports", "__export", "init", "name", "_a", "_b", "typedName", "prompts", "value", "fullPath", "packageName", "nameValidity", "validateNpmPackageName", "message", "chalk", "e", "ArgError", "sourceFolder", "templatesPath", "source", "destDir", "spinner", "ora", "copyDir", "sourcePackageJson", "destPackageJson", "newPackageJson", "gitIgnore", "gitIgnoreFilePath", "exec", "fs", "path", "childProcess", "import_ora", "import_chalk", "import_prompts", "import_validate_npm_package_name", "import_util", "init_codim_cli", "__esmMin", "init_errors", "init_fsUtils", "preloadTests_exports", "__export", "preloadTests", "options", "opts", "memoize", "results", "promiseMap", "testId", "loadTest", "TEN_HOURS", "_", "init_preloadTests", "__esmMin", "init_runnerFileCache", "init_testimServicesApi", "init_utils", "getPackageVersion", "getRunnerVersion", "checkNpmVersion", "IS_ON_PREM", "latestVersion", "promiseTimeout", "getNpmVersion", "packVersion", "chalk", "err", "logger", "import_chalk", "semver", "init_testimNpmDriver", "__esmMin", "init_utils", "init_config", "init_npmWrapper", "init_runnerFileCache", "init_logger", "getLogger", "memoize", "getLatestPackageVersion", "logger", "WHITELISTED_TUNNEL_DOMAIN_SUFFIX", "ngrokTunnelUrl", "statsTimeout", "connectTunnel", "collectNgrokStats", "disconnectTunnel", "init_testimNgrok", "__esmMin", "init_utils", "init_errors", "init_logger", "init_lazyRequire", "getLogger", "options", "authData", "ArgError", "hostname", "guid", "connectOpt", "url", "lazyRequire", "rerun", "api", "tunnels", "tunnel", "t", "err", "os", "fs", "childProcess", "TUNNEL_BINARY_ORIGIN", "TUNNEL_BINARY_PATHNAME", "TUNNEL_BINARY_DIRECTORY", "TUNNEL_BINARY_LOCATION", "tunnelId", "tunnelProcess", "prepareTunnel", "connectTunnel", "disconnectTunnel", "init_testimCloudflare", "__esmMin", "init_utils", "init_testimServicesApi", "doesPathExist", "downloadUrl", "destination", "downloadAndSave", "unzipFile", "options", "tunnelBaseUrl", "tunnelRoutes", "result", "getCloudflareTunnel", "forceUpdateCloudflareTunnelRoutes", "promises", "deleteCloudflareTunnel", "resolve", "reject", "code", "import_rox_node", "logger", "USE_FEATURE_FLAGS", "FORCE_FETCH_TIMEOUT_MS", "SEC_IN_DAY", "LAB_FEATURE_FLAG_VALUES", "LabFeatureFlag", "FeatureFlagsService", "featureFlagsService", "init_featureFlagsService", "__esmMin", "init_logger", "init_utils", "init_config", "getLogger", "IS_ON_PREM", "GATEWAY_URL", "Rox", "initialValue", "value", "projectId", "projectType", "productType", "companyId", "planType", "isPOC", "isStartUp", "mode", "opts", "agent", "promiseTimeout", "ROLLOUT_KEY", "err", "import_ms", "import_p_retry", "os", "portfinder", "childProcess", "logger", "LT_TUNNEL_BINARY_ORIGIN", "LT_TUNNEL_BINARY_PATHNAME", "LT_TUNNEL_BINARY_DIRECTORY", "LT_TUNNEL_BINARY_LOCATION", "LT_MINIMUM_CONNECTION_RETRY_TIMEOUT", "LambdatestService", "init_lambdatestService", "__esmMin", "init_utils", "init_httpRequest", "init_testimServicesApi", "init_errors", "init_logger", "init_runOptionsUtils", "init_constants", "init_featureFlagsService", "getLogger", "ms", "gridData", "gridTypes", "fetchLambdatestConfig", "doesPathExist", "downloadUrl", "zipLocation", "downloadAndSave", "unzipFile", "runnerOptions", "infoAPIPort", "gridUsername", "gridPassword", "proxyUri", "guid", "tunnelArgs", "ArgError", "proxyUrl", "stdoutResult", "stderrResult", "data", "ltInfo", "pRetry", "get", "err", "resolve", "reject", "code", "browser", "executionId", "testResultId", "testName", "defaultBrowserCaps", "tunnelCaps", "loadExtension", "mode", "canary", "ext", "extensionPath", "installCustomExtension", "CLI_MODE", "extUrls", "getExtensionsUrl", "isURL", "featureFlagsService", "testimTunnel_exports", "__export", "connect", "disconnect", "serveTunneling", "import_ora", "logger", "shouldUseLambdatestTunnel", "shouldUseCloudflareTunnel", "init_testimTunnel", "__esmMin", "init_testimNgrok", "init_processHandler", "init_testimCloudflare", "init_testimCustomToken", "init_logger", "init_constants", "init_lambdatestService", "getLogger", "options", "_a", "gridTypes", "authData", "getTokenV3UserData", "spinner", "ora", "LambdatestService", "connectTunnel", "err", "msg", "disconnectTunnel", "waitFor", "registerExitHook", "extractProtocol", "grid", "gridTypes", "urlExtract", "urlExtractRegex", "extractHost", "hostUrl", "getSerializableObject", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "host", "port", "path", "protocol", "accessToken", "slotId", "tunnel", "user", "key", "type", "tunnelUser", "tunnelKey", "name", "gridId", "provider", "handleGetGridResponse", "projectId", "companyId", "workerId", "browser", "getFun", "res", "err", "logger", "gridMessages", "serGrid", "addItemToGridCache", "GridError", "GridConcurrencyError", "getHostAndPortById", "executionId", "getGridById", "getHostAndPortByName", "gridName", "options", "g", "getGridByName", "getAllGrids", "getGridDataByGridId", "allGrids", "ArgError", "getGridDataByGridName", "releaseGridSlot", "gridData", "gridCache", "_keepAlive", "slots", "keepAliveGrid", "startKeepAlive", "keepAliveTimer", "releaseAllSlots", "workerIds", "promiseMap", "endKeepAlive", "getVendorKeyFromOptions", "testobjectSauce", "saucelabs", "getVendorUserFromOptions", "getOptionGrid", "getTestPlanGridData", "testPlanData", "getGridData", "company", "useLocalChromeDriver", "useChromeLauncher", "hasTestPlanFlag", "getGridSlot", "project", "_", "keepAlive", "handleHybridOrVendorIfNeeded", "init_gridService", "__esmMin", "init_testimServicesApi", "init_logger", "init_utils", "init_constants", "init_errors", "getLogger", "runnerOptions", "gridInfo", "testRunConfig", "lambdatestService", "retryConfig", "usingTunnel", "maxRetries", "currentRetry", "response", "getHybridGridProvider", "getCurrentBranch", "currentBranch", "setCurrentBranch", "branchData", "acknowledgeAutoDetect", "init_branchService", "__esmMin", "isFailedTest", "isAbortedTest", "isPassedTest", "isSkippedTest", "isEvaluatingTest", "isContainer", "getSkippedCount", "getFailureEvaluatingCount", "getFailedTests", "getPassedTests", "getAbortedTests", "init_reporterUtils", "__esmMin", "init_utils", "init_constants", "testResult", "status", "sessionType", "success", "mobile", "runnerTestStatus", "runnerStatus", "testStatus", "isCodeMode", "testResults", "options", "_a", "_b", "isQuarantineAndNotRemoteRun", "stripTokenFromConsoleArguments", "args", "indexOfTokenFlag", "newArgs", "logger", "MASK_OPTIONS", "DebugReporter", "init_debugReporter", "__esmMin", "init_logger", "init_reporterUtils", "getLogger", "options", "test", "workerId", "gridData", "provider", "host", "gridId", "gridType", "failedGetBrowserAttempts", "beforeTests", "tests", "afterTests", "testPlanName", "executionId", "isAnonymous", "configName", "testResults", "duration", "isCodeMode", "passed", "getPassedTests", "failed", "FeatureAvailabilityService", "featureAvailabilityService", "init_featureAvailabilityService", "__esmMin", "init_constants", "planType", "gridType", "gridTypes", "consoleReporter_exports", "__export", "Reporter", "import_chalk", "_", "colorize", "CLI_MODE", "DEVICE", "ConsoleReporter", "init_consoleReporter", "__esmMin", "init_utils", "init_constants", "init_featureAvailabilityService", "init_reporterUtils", "chalk", "constants_exports", "options", "branchToUse", "workerId", "test", "isRerun", "isCodeMode", "type", "testIdLabel", "testUrlLabel", "getTestUrl", "testStatus", "runnerTestStatus", "color", "getDuration", "failedTests", "failedTestStrings", "failedTest", "testUrl", "testResults", "testPlanName", "duration", "executionId", "isAnonymous", "getFailedTests", "passedTests", "getPassedTests", "abortedTests", "getAbortedTests", "passed", "aborted", "failed", "failedEvaluatingString", "skippedString", "featureAvailabilityService", "failureEvaluatingCount", "getFailureEvaluatingCount", "getSkippedCount", "planName", "message", "executionStats", "suitesString", "labelsString", "namesString", "testIdString", "name", "beforeTests", "tests", "afterTests", "configName", "writeTestList", "testList", "index", "_a", "ds", "isQuarantineAndNotRemoteRun", "configString", "sfdcCredentialLog", "planStats", "browser", "gridNameOrId", "instanceType", "testName", "mode", "debuggerAddress", "projectId", "attempt", "gridType", "junitReporter_exports", "__export", "Reporter", "getPrintName", "testResult", "testData", "testDataNumber", "getVisitedUrlsList", "getVisitedUrlsJson", "report", "editorUrl", "testPlanResults", "projectId", "branch", "classname", "options", "createTestCaseObject", "testResultUrl", "getTestUrl", "testResultObject", "getDurationSec", "isFailedTest", "isAbortedTest", "prefixMessage", "message", "isSkippedTest", "isQuarantineAndNotRemoteRun", "featureAvailabilityService", "createTestSuiteObject", "testPlanResult", "results", "testPlanName", "configName", "testResults", "testSuiteAttributes", "getTestCount", "getFailedCount", "getSuiteTimestamp", "getSkippedCount", "failureEvaluatingCount", "getFailureEvaluatingCount", "resultId", "startTimeArr", "minTestStartTime", "getFailedTests", "getAbortedTests", "err", "createErrorjUnitReporter", "builder", "errorJunitObject", "xml2js", "import_fs", "JunitReporter", "init_junitReporter", "__esmMin", "init_utils", "init_featureAvailabilityService", "init_reporterUtils", "branchToUse", "reportFile", "reportText", "fsPromises", "teamCityReporter_exports", "__export", "Reporter", "tidy", "text", "logger", "TeamCityReporter", "init_teamCityReporter", "__esmMin", "init_logger", "getLogger", "options", "test", "testConfig", "testDataNumber", "teamCityName", "workerId", "isRerun", "isCodeMode", "resultId", "name", "failureReason", "testurl", "testId", "message", "beforeTests", "tests", "afterTests", "testPlanName", "testResults", "jsonReporter_exports", "__export", "Reporter", "JsonReporter", "init_jsonReporter", "__esmMin", "options", "test", "workerId", "beforeTests", "tests", "afterTests", "testPlanName", "executionId", "event", "testResults", "chromeReporter_exports", "__export", "Reporter", "ChromeReporter", "init_chromeReporter", "__esmMin", "init_utils", "init_chrome_launcher", "options", "branchToUse", "test", "workerId", "isRerun", "isCodeMode", "testUrl", "getTestUrl", "launchChrome", "logger", "Reporter", "reporter", "init_reporter", "__esmMin", "init_debugReporter", "init_logger", "getLogger", "options", "branchToUse", "optReporters", "DebugReporter", "ConsoleReporter", "JunitReporter", "reporterModule", "testResults", "testPlanName", "startTime", "executionId", "isAnonymous", "isCodeMode", "childTestResults", "results", "childValues", "child", "parent", "c", "duration", "testPlanResults", "result", "name", "preHookMutator", "args", "_a", "data", "setLightweightAnalytics", "properties", "lightweightMode", "analyticsTestStart", "executionId", "projectId", "testId", "resultId", "companyId", "companyName", "projectName", "companyPlan", "sessionType", "source", "user", "isStartUp", "projectType", "appSource", "calcSource", "trackWithCIUser", "analyticsTestEnd", "result", "logger", "err", "analyticsExecsStart", "init_analyticsService", "__esmMin", "init_testimAnalytics", "init_isCiRun", "isCi", "import_istanbul_lib_report", "init_SummaryToObjectReport", "__esmMin", "import_ora", "import_moment", "import_test_exclude", "fs", "path", "reports", "libReport", "logger", "collectAndMergeJsCoverageData", "calculateCoverage", "init_jsCoverage", "__esmMin", "init_testimServicesApi", "init_errors", "init_utils", "init_logger", "init_lazyRequire", "init_SummaryToObjectReport", "getLogger", "projectId", "branch", "runId", "mergeProcessCovs", "lazyRequire", "mergedCoverages", "covUrlMap", "testResults", "getRealData", "promiseMap", "testResult", "coverageURL", "data", "getS3Artifact", "cov", "text", "options", "branchToUse", "numOfTests", "spinner", "ora", "baseDir", "tempJsDir", "moment", "sourceMapDir", "libCoverage", "coverageMap", "sourceMaps", "url", "functions", "source", "sourceMapType", "sourceMap", "istanbulCoverage", "coverageSummary", "err", "baseMsg", "ArgError", "SeleniumPerfStats_exports", "__export", "SELENIUM_PERF_MARKS", "SeleniumPerfStats", "init_SeleniumPerfStats", "__esmMin", "init_utils", "key", "mark", "id", "guid", "markDuration", "entries", "samples", "calcPercentile", "localRCASaver_exports", "__export", "initServer", "mapFilesToLocalDrive", "test", "logger", "_a", "f", "stepFileMap", "resultFileMap", "type", "TYPE_RENAMES", "err", "agentPort", "agentBind", "saveRCALocally", "multer", "lazyRequire", "saveRCALocallyStr", "DEFUALT_PATH", "upload", "req", "file", "cb", "metadata", "destination", "fileName", "format", "app", "express", "res", "TYPES", "createServer", "resolve", "reject", "server", "onError", "error", "ArgError", "fs", "os", "path", "import_express", "init_localRCASaver", "__esmMin", "init_errors", "init_lazyRequire", "_", "logger", "OverrideTestDataBuilder", "init_OverrideTestDataBuilder", "__esmMin", "init_utils", "init_logger", "getLogger", "params", "testInfoList", "projectId", "param", "testName", "test", "testOverrideTestData", "uniqueMatchIds", "uniqTestId", "testUniqIds", "firstIndex", "lastIndex", "currentTest", "newTestDataItems", "newTestData", "index", "testResultId", "guid", "runHook", "fn", "args", "err", "logger", "ArgError", "_", "gitBranch", "gitCommit", "gitRepoUrl", "runnerVersion", "TestRunStatus", "init_testRunStatus", "__esmMin", "init_utils", "init_constants", "init_gridService", "init_testimServicesApi", "init_errors", "init_logger", "init_reporter", "init_processHandler", "init_jsCoverage", "init_SeleniumPerfStats", "init_localRCASaver", "init_config", "init_featureFlagsService", "init_OverrideTestDataBuilder", "init_featureAvailabilityService", "getLogger", "getEnvironmentGitBranch", "getRunnerVersion", "testInfoList", "options", "testPlanId", "branchToUse", "SeleniumPerfStats", "_a", "_b", "_c", "_d", "_e", "browserNames", "getUniqBrowsers", "runnerMode", "TESTIM_CONCURRENT_WORKER_COUNT", "test", "getSessionType", "resultId", "newResultId", "originalTestResultId", "previousTestResultId", "projectId", "executionId", "retryCount", "orgTestResult", "config", "isTestsContainer", "testId", "name", "testStatus", "testCreatorName", "testCreatorEmail", "testOwnerName", "testOwnerEmail", "testLabels", "testSuites", "allLabels", "newTestResult", "addTestRetry", "wid", "isRerun", "isCodeMode", "reporter", "testRetryKey", "remoteRunId", "projectData", "testDataUrl", "updateTestDataArtifact", "testConfig", "updateTestStatus", "isQuarantineAndNotRemoteRun", "globalParameters", "params", "gridInfo", "workerId", "result", "success", "featureAvailabilityService", "getTestUrl", "runnerTestStatus", "sessionId", "duration", "mapFilesToLocalDrive", "afterMerge", "testResultUpdates", "companyId", "entries", "testInfo", "runConfig", "getRunConfigByBrowserName", "featureFlagsService", "getBrowserInfo", "isAppFromDevice", "shouldSkipForMobile", "isMobileProject", "isAppForVirtualIosDevice", "shouldSkipTest", "data", "startTime", "testPlanName", "testNames", "registerExitHook", "keepAlive", "reportExecutionFinished", "runHooksProps", "overrideTestDataBuilder", "OverrideTestDataBuilder", "beforeTests", "tests", "afterTests", "reportExecutionStarted", "testResults", "promiseMap", "testResultId", "testData", "isLocalRun", "ret", "e", "marks", "key", "typedKey", "groupTestsByRetries", "total", "passed", "skipped", "failedInEvaluatingStatus", "status", "seleniumPerfMarks", "resultExtraData", "coverageSummary", "calculateCoverage", "failureReason", "queuedResultIds", "updateExecutionTests", "buildSafariOptions", "opts", "browserName", "safariOptions", "readFileToBase64", "fileLocation", "setCustomExtension", "customExtensionLocalLocation", "extensions", "lambdatestService", "isURL", "extStr", "logger", "getHash", "setTestimExtension", "browserOptions", "args", "predefinedTestimExtension", "extFromOptions", "ext", "loadExt", "zipFileSuffix", "filePath", "_buildChromiumOptions", "testRunConfig", "gridInfo", "_a", "_b", "DEFAULT_CHROME_OPTIONS_ARGS", "isW3CMode", "CLI_MODE", "chromiumOptions", "CONTENT_SETTING", "isDFGrid", "arg", "setMobileEmulationSettings", "mobileWeb", "optionsKey", "vendor", "LambdatestService", "buildFirefoxOptions", "fireFoxPrefs", "featureFlagsService", "FIREFOX_FILE_NEVER_ASK", "buildSaucelabs", "testName", "saucelabs", "buildBrowserstack", "buildPerfecto", "buildExperitest", "browser", "sessionTimeoutSec", "isSafari", "buildHeaders", "gridData", "gridUsername", "gridPassword", "username", "password", "headers", "buildBasicHeader", "buildSeleniumOptions", "executionId", "testResultId", "_c", "_d", "_e", "_f", "binaryLocation", "LOG_LEVEL", "driverRequestTimeout", "driverRequestRetries", "browserTimeoutSec", "buildChromiumOptions", "hostToProvider", "byGrid", "capabilities", "getTargetingGroup", "customCapabilities", "error", "convertToNewCapabilitiesFormat", "buildAppiumOptions", "projectType", "nativeApp", "options", "appPath", "androidActivityWait", "deviceModel", "osVersion", "deviceUdid", "fullReset", "resetAppData", "resetOnSessionStartOnly", "headspinSelector", "gridTypes", "connection", "appCaps", "fs", "path", "crypto", "_", "init_testimDesiredCapabilitiesBuilder", "__esmMin", "init_utils", "init_config", "init_logger", "init_featureFlagsService", "init_constants", "init_lambdatestService", "getLogger", "WEBDRIVER_DEBUG", "str", "desiredCapabilities", "stringOptsDesiredCapabilities", "stringBrowserOptions", "stringTestRunConfig", "stringGridInfoType", "isOldProtocol", "err", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "encodeForSafari", "url", "isSafari", "logger", "init_webDriverUtils", "__esmMin", "isElementDisplayed", "element", "nodeIsElement", "node", "parentElementForElement", "el", "enclosingNodeOrSelfMatchingPredicate", "targetNode", "predicate", "enclosingElementOrSelfMatchingPredicate", "targetElement", "cascadedStylePropertyForElement", "property", "computedStyleProperty", "parentElement", "elementSubtreeHasNonZeroDimensions", "boundingBox", "strokeWidth", "childNode", "elementOverflowsContainer", "isElementSubtreeHiddenByOverflow", "isElementInsideShadowRoot", "_a", "enclosingSelectElement", "e", "hasAncestorWithZeroOpacity", "hasAncestorWithDisplayNone", "init_isElementDisplayed", "__esmMin", "import_promise_queue", "webdriverio", "logger", "getViewportSizeHelper", "WebdriverioWebDriverApi", "init_WebdriverioWebDriverApi", "__esmMin", "init_config", "init_performance_logger", "init_utils", "init_logger", "init_constants", "init_isElementDisplayed", "init_webDriverUtils", "init_SeleniumPerfStats", "getLogger", "result", "err", "func", "testName", "testResultId", "crashingFunc", "maxConcurrent", "REQUESTS_QUEUE_SIZE", "maxQueue", "Queue", "perfId", "capabilities", "log", "SELENIUM_PERF_MARKS", "_a", "_b", "args", "script", "decorateErrorWithExecutedScript", "newEndpoint", "oldEndpoint", "isOldProtocol", "command", "parameters", "element", "extractElementId", "selector", "elementId", "isElementDisplayed", "W3C_ELEMENT_ID", "url", "encodeForSafari", "type", "ms", "xoffset", "yoffset", "scroll", "x", "y", "value", "prop", "res", "checkUnicode", "_value", "UNICODE_CHARACTERS", "key", "charSet", "keyDownActions", "keyUpActions", "button", "xOffset", "yOffset", "actions", "sourceSelector", "destinationSelector", "data", "localFileLocation", "windowHandle", "size", "requestOptions", "name", "domain", "httpOnly", "secure", "path", "expiry", "cookie", "id", "tabId", "attr", "keyCode", "text", "packageName", "isInstalled", "ret", "doubleClick", "init_doubleClick", "__esmMin", "eventData", "done", "POINTER_EVENTS", "element", "events", "successObject", "getEventPosition", "userEvent", "isWithinBounds", "start", "end", "point", "pointerPosition", "rect", "clientX", "clientY", "getPointerEventDictionary", "createPointerEvent", "eventType", "eventProperties", "createMouseEvent", "event", "findEffectiveActiveElement", "_a", "activeElement", "getEvent", "userEventData", "pos", "oldActiveElement", "e", "dispatchFocus", "targetElement", "oldActiveElement", "createFocusEvent", "eventName", "event", "findEffectiveActiveElement", "_a", "activeElement", "setFocus", "element", "currentActiveElement", "elementToFocus", "init_focusElement", "__esmMin", "webdriver_exports", "__export", "WebDriver", "getCdpAddress", "initResult", "_a", "_b", "debuggerHost", "getCdpAddressForHost", "e", "logger", "_", "import_ua_parser_js", "LEFT", "RIGHT", "extractElementId", "codeSnippets", "locatorBuilderUtils", "playerUtils", "init_webdriver", "__esmMin", "init_utils", "init_performance_logger", "init_testimDesiredCapabilitiesBuilder", "init_constants", "init_logger", "init_webDriverUtils", "init_WebdriverioWebDriverApi", "init_errors", "init_doubleClick", "init_focusElement", "init_featureFlagsService", "init_SeleniumPerfStats", "getLogger", "utils_exports", "WebdriverioWebDriverApi", "callback", "cb", "browserOptions", "testName", "testRunConfig", "gridInfo", "customExtensionLocalLocation", "executionId", "testResultId", "seleniumPerfStats", "SeleniumPerfStats", "fastInit", "lambdatestService", "_c", "_d", "_e", "capabilities", "buildSeleniumOptions", "driverDelay", "focus", "log", "delay", "err", "newError", "SeleniumError", "isFreeCompany", "isLambdatestRun", "slidingPairsWindow", "arr", "startTimeArray", "start", "timeGaps", "a", "b", "that", "keepAlive", "createKeepAliveRequestData", "id", "updateKeepAliveRequestData", "field", "item", "checkKeepAliveScript", "requestId", "guid", "innerErr", "CLOSED_BROWSER_THRESHOLD_COUNT", "locatedElement", "el", "elementId", "W3C_ELEMENT_ID", "SeleniumCrashError", "perfId", "SELENIUM_PERF_MARKS", "featureFlagsService", "fn", "args", "timeout", "target", "dynamicParentId", "frameHandler", "setDynamicParentAttribute", "data", "attributeName", "attributeValue", "element", "getLocationCode", "paddingTop", "paddingLeft", "rect", "extractTextCode", "ignoreHiddenTagsText", "clearTitleTags", "node", "children", "x", "child", "isTextElement", "tagName", "getFixedTextContent", "elem", "dupElement", "hiddenChildren", "getElementTextContent", "copyElement", "result", "locateStep", "getHTMLCode", "testimInternalError", "size", "type", "getViewportSizeScript", "_setViewportSize", "tryNo", "windowHandleSize", "viewportSize", "widthDiff", "heightDiff", "res", "width", "height", "parse", "getBrowserName", "ua", "browserDetails", "M", "tem", "userAgent", "rawUserAgent", "parser", "osDetails", "value", "offsets", "clickOffset", "inViewCenter", "left", "top", "frameOffset", "fallbackLeft", "fallbackTop", "button", "actions", "moveActions", "clickActions", "y", "eventData", "dispatchFocus", "doubleClick", "types", "isOldProtocol", "sourceSeleniumElement", "destinationSeleniumElement", "offset", "response", "seleniumElement", "center", "xOffset", "yOffset", "origin", "duration", "point", "events", "mouseEvents", "first", "last", "xDiff", "yDiff", "goToDrag", "startDrag", "doDrag", "endDrag", "targetRect", "xElementOffset", "yElementOffset", "midXRelative", "midYRelative", "coordinates", "startLeft", "startTop", "endLeft", "endTop", "sqr", "distance", "p1", "p2", "from", "to", "MOVE_EVENT_DIST", "eventCount", "moves", "newMoves", "relativeMove", "lastMove", "rectsAndOffsets", "fromRect", "fromX", "fromY", "toRect", "toX", "toY", "moveSequence", "movePosition", "startMovePositionActions", "pointerDownActions", "moveSequenceActions", "endMovePositionActions", "pointerUpActions", "r", "defaultLocation", "loc", "rectangle", "logger", "LabFeaturesService", "labFeaturesService", "init_labFeaturesService", "__esmMin", "init_logger", "init_featureFlagsService", "init_testimServicesApi", "getLogger", "projectId", "companyPlan", "labBatman", "features", "getLabFeaturesByProjectId", "err", "featureFlagName", "featureFlag", "featureFlagsService", "ffValue", "labFeature", "f", "featureEnabled", "_a", "msg", "convertWindowsBackslash", "input", "isExtendedLengthPath", "hasNonAscii", "runCode", "transactionId", "incomingParams", "context", "code", "packageLocalLocations", "timeout", "fileDataUrl", "requireCode", "all", "pMember", "fileDataUrlToFileBuffer", "dataUriToBuffer", "constructWithArguments", "constructor", "args", "F", "consoleOverride", "injectCode", "runFn", "isPromise", "testimConsoleLogDataAggregates", "thread", "threadSpawn", "promiseTimeout", "resolve", "message", "messageWithLogs", "logger", "logMessage", "err", "TimeoutError", "requireOrImportMethod", "_path", "pathModule", "path", "file", "packageJson", "runCodeWithWorkerThread", "workerThreads", "Worker", "data", "removeFolder", "installFolder", "getTransactionId", "stepResultId", "testResultId", "stepId", "retryIndex", "installPackage", "packageData", "runNpmInstall", "runCodeWithPackages", "s3filepath", "_a", "s3fileDataUrl", "getS3Artifact", "emptyFileDataUrl", "featureFlagsService", "res", "packages", "localPackageInstallFolder", "getLocalPackageInstallFolder", "proxyUri", "npmInstallation", "output", "installPackages", "pData", "version", "getLocallyInstalledPackageVersion", "packageFullName", "packageLocalLocation", "cleanLocalPackageInstallFolder", "fs", "os", "import_data_uri_to_buffer", "import_threads", "init_service", "__esmMin", "init_utils", "init_npmWrapper", "init_errors", "init_logger", "init_testimServicesApi", "init_featureFlagsService", "getLogger", "cliJsStepPlayback_exports", "__export", "run", "isExceedingMaxResultSize", "data", "project", "shouldEnforceMaxSize", "maximumJsResultSize", "featureFlagsService", "dataSizeExceeded", "init_cliJsStepPlayback", "__esmMin", "init_service", "init_errors", "init_featureFlagsService", "browser", "step", "projectData", "code", "stepId", "incomingParams", "context", "testResultId", "retryIndex", "stepResultId", "runTimeout", "fileDataUrl", "s3filepath", "runCodeWithPackages", "err", "TimeoutError", "logger", "CookieUtils", "init_cookieUtils", "__esmMin", "init_logger", "getLogger", "driver", "cookie", "domain", "err", "import_p_retry", "logger", "WindowUtils", "init_windowUtils", "__esmMin", "init_utils", "init_logger", "init_errors", "getLogger", "id", "driver", "x", "y", "elementFromPoint", "el", "result", "pos", "scrollWithoutAnimation", "position", "scrollBehaviorSupported", "scrollPosition", "location", "NAVIGATION_MAX_TIME", "that", "navigate", "retries", "err", "delay", "timeoutMSec", "fullPageSize", "body", "html", "height", "width", "size", "actualSize", "pageIsAvailable", "locationObj", "PageNotAvailableError", "osAndBrowser", "pRetry", "import_p_retry", "ScreenshotUtils", "init_screenshotUtils", "__esmMin", "tabId", "driver", "options", "str", "MAX_RETRY_COUNT", "SCREENSHOT_RETRY_DELAY", "devicePixelRatioPromise", "getScreenshot", "devicePixelRatio", "image", "pRetry", "base64", "elem", "getElemScreenshot", "devicePixelRatioJS", "result", "forceRatio", "cropImageFromImageData", "imageData", "imageInfo", "_image", "pixelRatio", "imageRegExMatch", "offset", "logger", "elementRect", "image", "Jimp", "x", "y", "width", "height", "imageWidth", "imageHeight", "RectIsOutsideOfImageError", "chromeStitchImage", "fullSize", "parts", "fullImage", "part", "partImage", "resolve", "reject", "err", "stitchImage", "uploadDataUrl", "uploadAllDataUrls", "imagesObject", "isImageUrl", "key", "updateKey", "imageUrl", "keyUrlList", "obj", "current", "getElementAbsoluteRectangle", "_", "import_jimp", "ImageCaptureUtils", "init_imageCaptureUtils", "__esmMin", "init_utils", "init_logger", "getLogger", "message", "_unusedId", "windowUtils", "screenshotUtils", "areas", "result", "elementId", "forceRatio", "useImprovedScreenshotStitching", "stabilize", "delay", "usingImprovedStitching", "createPart", "position", "crop", "cropResult", "takeAllParts", "positionsData", "allParts", "nextPos", "getPartsPositions", "fullPageSize", "viewPortSize", "FPW", "VPW", "FPH", "VPH", "Ws", "__", "i", "Hs", "w", "h", "createStitchImage", "originalPosition", "positions", "semver", "logger", "TabService", "init_tabService", "__esmMin", "init_utils", "init_logger", "init_windowUtils", "init_screenshotUtils", "init_imageCaptureUtils", "init_getSessionPlayerRequire", "getLogger", "driver", "sessionId", "allTabInfos", "tabId", "id", "addFrameHandlerCb", "tabInfo", "openerStepId", "options", "openerStep", "order", "tab", "infoId", "guid", "isMainTab", "tabService", "_windowUtils", "WindowUtils", "ImageCaptureUtils", "ScreenshotUtils", "uId", "infos", "nonMainTabs", "info", "sameTabs", "key", "first", "second", "allUrls", "exactUrlMatch", "url", "combinePartsFunction", "urlUtils", "getSessionPlayer", "firstUrlParts", "secondUrlParts", "firstPartsCombined", "secondPartsCombined", "allDomainAndPathMatches", "urlParts", "combinedParts", "tabMatcher", "allTopFrameUrls", "combineDomainAndPath", "combineDomainPathAndHash", "mainTabInfo", "forceSwitch", "tabCount", "mainTabPromise", "r", "title", "err", "newId", "delay", "tabInfos", "newTabId", "timeToWait", "that", "resolve", "checkPendingTabs", "step", "isOldVersion", "hasParams", "hasBadLocateParams", "param", "_a", "_b", "commonConstants", "mainTabId", "_tabId", "stepTabInfo", "windowClosedErrors", "errorString", "PortSelector", "portSelector", "init_portSelector", "__esmMin", "StepActionUtils", "init_stepActionUtils", "__esmMin", "init_cookieUtils", "init_getSessionPlayerRequire", "driver", "cookieUtils", "CookieUtils", "getSessionPlayer", "element", "locatorBuilderUtils", "testimIDFieldName", "result", "clickOffset", "rect", "utils", "context", "code", "target", "locatedElement", "id", "frameHandler", "name", "cookie", "cookieObject", "dynamicParentOptions", "res", "frameLocatorFactory", "driver", "FrameLocator", "frameManager", "locateElementPlayer", "seleniumGuid", "resultsUrl", "frameHandler", "guid", "_getGuidFromSeleniumElement", "result", "frameTree", "testimFrameId", "frameOffset", "locatedElement", "locatorBuilderUtils", "getSessionPlayer", "errorMsg", "logger", "el", "frameLocateResultUrl", "frameLocator", "frameDepth", "currentFrame", "context", "stepData", "location", "value", "frameLocators", "allowNoFrameSwitch", "featureFlagsService", "lastResult", "allowedRetries", "moreThanAllowedRetries", "currentFramePos", "x", "shorterPath", "frameIndex", "topFrameHandler", "SELENIUM_ELEMENT_KEY", "SELENIUM_GUID_KEY", "init_frameLocator", "__esmMin", "init_logger", "init_featureFlagsService", "init_getSessionPlayerRequire", "getLogger", "seleniumElement", "isDebuggerConnected", "init_detectDebugger", "__esmMin", "init_config", "DISABLE_DEBUGGER_INFINITE_TIMEOUT", "import_ws", "import_events", "logger", "WAIT_BETWEEN_RECONNECT_MS", "SocketService", "socketService", "init_socketService", "__esmMin", "init_utils", "init_testimCustomToken", "init_logger", "init_config", "getLogger", "guid", "projectId", "url", "event", "err", "wsBaseUrl", "WEBSOCKET_HOST", "getCustomTokenV3", "token", "resolve", "options", "WebSocket", "_a", "evObject", "msg", "eventName", "eventMatcher", "listener", "onEvent", "data", "key", "fireIfSameMatchEventMatcher", "name", "_b", "_listener", "filter", "query", "type", "returnFullDocument", "filterId", "typeArray", "listeners", "import_p_retry", "io", "MAX_SOCKET_RECONNECT_ATTEMPT", "MAX_RECONNECT_ATTEMPT_BEFORE_SWITCH", "EMIT_PROMISE_TIMEOUT", "POLLING_TRANSPORT_TIMEOUT_MS", "logger", "BaseSocketService", "init_baseSocketServiceSocketIO", "__esmMin", "init_config", "init_utils", "init_logger", "getLogger", "testResultIds", "resultId", "_a", "testId", "socketError", "method", "err", "transport", "attempt", "SERVICES_HOST", "projectId", "ns", "opts", "resolve", "eventName", "eventData", "errorneousEvents", "emitAndWait", "reject", "data", "pRetry", "promiseTimeout", "TestResultServiceSocketIO", "testResultServiceSocketIO", "init_testResultServiceSocketIO", "__esmMin", "init_baseSocketServiceSocketIO", "BaseSocketService", "projectId", "resultId", "testId", "onTestResultStatus", "data", "testResultService_exports", "__export", "testResultService", "import_events", "TestResultService", "init_testResultService", "__esmMin", "init_socketService", "init_constants", "init_featureFlagsService", "init_testResultServiceSocketIO", "projectId", "featureFlagsService", "socketService", "testResultServiceSocketIO", "resultId", "testId", "socketEventTypes", "onTestResultStatus", "data", "StepAction", "init_stepAction", "__esmMin", "init_getSessionPlayerRequire", "step", "context", "frameHandler", "exportsGlobal", "stepActionUtils", "locateElementPlayer", "exportsTest", "getSessionPlayer", "targetId", "stepActionFactory", "_a", "err", "errorMsg", "displayMsg", "createUtils", "driver", "target", "seleniumResponse", "frameHandler", "htmlString", "url", "nonBodyElements", "bodyTagName", "setDomTimeout", "virtualConsole", "jsdom", "window", "locateStep", "visibilityUtils", "positionUtils", "featureFlagsService", "targetElement", "rect", "allOffsets", "dom", "locatorBuilderUtils", "codeSnippets", "getSessionPlayer", "points", "code", "response", "err", "logger", "value", "elementVisibilityInfo", "DEFAULT_VISIBILITY_RESULT", "middleElementFromPoint", "clickElementFromPoint", "locatedElement", "import_jsdom", "LocateStepAction", "init_locateStepAction", "__esmMin", "init_stepAction", "init_logger", "init_featureFlagsService", "init_getSessionPlayerRequire", "getLogger", "StepAction", "args", "scroll", "init_scroll", "__esmMin", "elementToScrollOn", "elementToScrollTo", "isScrollToElement", "isDynamicScroll", "expectedX", "expectedY", "shouldScrollLeft", "shouldScrollTop", "doScroll", "expectedPosition", "element", "actualX", "actualY", "getExpectedPosition", "parentElement", "locatedElement", "target", "targetRect", "yScroll", "xScroll", "MAX_HEIGHT", "MAX_WIDTH", "isDocument", "positionBeforeScroll", "result", "actualXString", "actualYString", "actualScrollToElement", "rect", "ScrollStepAction", "init_scrollStepAction", "__esmMin", "init_scroll", "init_stepAction", "StepAction", "step", "expectedX", "expectedY", "actualX", "actualY", "failureMessage", "elementToScrollTo", "elementToScrollOn", "codeSnippets", "stepResult", "elementScrollTo", "element", "x", "y", "scrollCode", "scroll", "res", "success", "context", "html5dndAction", "init_html5dragAction", "__esmMin", "eventData", "data", "convertType", "type", "dataTransfer", "val", "fromElement", "toElement", "dispatchEvent", "element", "event", "doClick", "init_doClick", "__esmMin", "eventData", "done", "eventConstructorSupported", "resolve", "handleReactSelectFocusQuirk", "context", "event", "_a", "focusReactSelect", "element", "getReactSelectRoot", "_element", "getParents", "el", "getReactSelectInput", "root", "reactSelectInput", "isReactSelectElement", "handleCKEditorQuirk", "isCKEditorFrame", "result", "status", "reject", "dispatchMouseOver", "dispatchMouseMove", "modifiers", "rect", "clientX", "clientY", "createMouseEvent", "getEventPosition", "userEvent", "isWithinBounds", "start", "end", "point", "pointerPosition", "getEventDictionary", "createPointerEvent", "eventType", "eventProperties", "button", "getMouseEvent", "pointerEvents", "pos", "findEffectiveActiveElement", "activeElement", "executeSynchronousEventSequence", "oldActiveElement", "quirks", "e", "doDragPath", "init_doDragPath", "__esmMin", "eventData", "done", "eventConstructorSupported", "pointerEventConstructorSupported", "MAX_EVENT_TIMEOUT", "resolve", "result", "reject", "dispatchMouseOver", "element", "event", "dispatchMouseMove", "modifiers", "rect", "clientX", "clientY", "createMouseEvent", "getEventPosition", "userEvent", "isWithinBounds", "start", "end", "point", "pointerPosition", "context", "getEventDictionary", "createPointerEvent", "eventType", "button", "eventProperties", "getMouseEvent", "pointerEvents", "pos", "shouldSkipEvent", "currentEvent", "isClickInDragAndDrop", "executeAsyncNextEventRecursive", "index", "delay", "executeAsyncEventSequence", "html5dndAction", "init_html5dragActionV2", "__esmMin", "eventData", "done", "mouseEventConstructorSupported", "dragEventConstructorSupported", "pointerEventConstructorSupported", "data", "resolve", "result", "reject", "convertType", "type", "createDataTransfer", "val", "dragFromElementEvents", "pointerEvents", "dragEvents", "findClosestDraggable", "element", "current", "getElement", "event", "context", "currentEvent", "dispatchDragEventsOnClosestDraggable", "draggable", "getEventPosition", "userEvent", "isDrag", "isWithinBounds", "start", "end", "point", "pointerPosition", "rect", "clientX", "clientY", "getMouseEvent", "modifiers", "pos", "button", "eventType", "createPointerEvent", "createDragEvent", "createMouseEvent", "getEventDictionary", "eventProperties", "executeAsyncEvent", "shouldSkipEvent", "isClickInDragAndDrop", "nextAsyncEvent", "nextEvent", "delay", "executeAsyncNext", "err", "_", "MouseStepAction", "init_mouseStepAction", "__esmMin", "init_stepAction", "init_focusElement", "init_html5dragAction", "init_doClick", "init_doDragPath", "init_featureFlagsService", "init_html5dragActionV2", "StepAction", "target", "destTarget", "clickOffset", "toClickOffset", "fromOffsets", "toOffsets", "_a", "step", "context", "timeout", "events", "eventMessage", "doClickCode", "dispatchFocus", "doClick", "err", "start", "end", "point", "initialPosition", "targetElementRect", "isXWithinBounds", "isYWithinBounds", "xOffset", "yOffset", "offsetFromElement", "event", "baseEvent", "type", "cloneEvent", "downEvent", "mousedownEventIndex", "recordPointerMoveEvents", "mouseUpEvent", "lastMouseMoveEventIndex", "_b", "doDragPathCode", "doDragPath", "locatedElement", "seleniumElement", "rectWithoutFrameOffset", "rect", "offsets", "featureFlagsService", "eventData", "contextTarget", "html5DNDCode", "html5dndAction", "rectsAndOffsets", "useRightClickJS", "forceNativeEvent", "res", "dragendDefaultEvent", "dropOrEndEventIndex", "e", "oneBeforeLastEvent", "dragenterDefaultEvent", "withDragEnd", "fromElementLocatedElement", "toElementLocatedElement", "isOnToElement", "fromElement", "toElement", "TextValidationStepAction", "init_textValidationStepAction", "__esmMin", "init_stepAction", "StepAction", "stepActionFactory", "step", "context", "frameHandler", "paramEvaluator", "utils", "commonConstants", "target", "text", "actual", "expected", "evaluation", "res", "err", "_", "logger", "EvaluateExpressionStepAction", "init_evaluateExpressionStepAction", "__esmMin", "init_stepAction", "init_logger", "getLogger", "StepAction", "step", "context", "exportsGlobal", "exportsTest", "incomingParams", "params", "args", "code", "evaluatedText", "e", "stepResult", "setText", "init_setText", "__esmMin", "eventData", "done", "eventConstructorSupported", "element", "context", "resolve", "keyboardEventNames", "MAX_KEYBOARD_EVENT_TIMEOUT", "getTextInputEventObject", "userEvent", "event", "initTextInputEvent", "method", "locale", "getTextInputEvent", "createKeyboardEventObject", "eventType", "modifiers", "initKeyboardEvent", "createKeyboardEvents", "createKeyboardEvent", "getKeyboardEvent", "index", "getEvent", "shouldSkipEvent", "currentEvent", "_a", "getTextEventTimeout", "nextEvent", "getTimeBetweenFiringEvents", "maxTimeout", "handleReactFormFocus", "descriptor", "initialValue", "handleChangeEventIfNeeded", "nextAsyncEvent", "executeAsyncNext", "shouldDispatchOnParentElement", "getElement", "findTextNode", "offsetData", "child", "innerChild", "setSelection", "selection", "startNode", "sel", "range", "executeAsyncEvent", "err", "reject", "isFocusableInput", "target", "tagName", "isContentEditable", "executeSetValue", "inputEvent", "findEffectiveActiveElement", "activeElement", "result", "status", "oldActiveElement", "TextStepAction", "init_textStepAction", "__esmMin", "init_stepAction", "init_focusElement", "init_utils", "init_setText", "StepAction", "context", "target", "extractElementId", "_a", "step", "timeout", "events", "setTextDraftJs", "eventMessage", "setTextCode", "dispatchFocus", "setText", "result", "letters", "i", "delay", "keys", "forceJsEvent", "stepResult", "runCode", "init_runCode", "__esmMin", "eventData", "preCompiledCode", "_a", "appendToStorage", "name", "data", "sessionItem", "nativeFuncErrMsg", "isNativeFunction", "fn", "oldData", "newData", "err", "isQuotaExceededError", "isNativeFunctionError", "storage", "getExecutionArguments", "arg", "constructWithArguments", "constructor", "args", "F", "exportedData", "exportedTestData", "exportedGlobalData", "functionParams", "transactionId", "params", "result", "res", "e", "_", "logger", "BaseJsStepAction", "init_baseJsStepAction", "__esmMin", "init_utils", "init_stepAction", "init_logger", "init_runCode", "init_featureFlagsService", "getLogger", "StepAction", "data", "context", "shouldEnforceMaxSize", "maximumJsResultSize", "featureFlagsService", "dataSizeExceeded", "transactionId", "_transactionId", "sessionItem", "err", "storage", "eventData", "incomingParams", "params", "args", "arg", "removePropertyFromObject", "that", "retryInterval", "timeToPlayStep", "checkScriptStatus", "selRes", "res", "abortReason", "abortedStep", "delay", "eventMessage", "useExperimentalPreCompilation", "experimentalAsyncCustomCode", "rawParams", "hasLocateParams", "x", "funcToRunString", "paramNames", "codeSnippets", "runCode", "resp", "constants", "result", "tstConsoleLogs", "nodeVersion", "navigateToDifferentDomain", "resultObj", "message", "step", "browserAndOS", "endOfMessage", "reason", "JsCodeStepAction", "init_jsCodeStepAction", "__esmMin", "init_baseJsStepAction", "BaseJsStepAction", "resultValue", "JsConditionStepAction", "init_jsConditionStepAction", "__esmMin", "init_baseJsStepAction", "BaseJsStepAction", "resultValue", "keyMap", "SpecialKeyStepAction", "init_specialKeyStepAction", "__esmMin", "init_stepAction", "init_utils", "StepAction", "keys", "target", "extractElementId", "keyCode", "selectOption", "locatedElement", "dispatchEventOnSelectElement", "closest", "el", "selectors", "originalMatches", "matches", "optionEl", "selectEl", "userEvent", "event", "err", "init_selectOption", "__esmMin", "SelectOptionStepAction", "init_selectOptionStepAction", "__esmMin", "init_stepAction", "init_selectOption", "init_utils", "init_featureFlagsService", "StepAction", "_a", "_b", "target", "seleniumElement", "locatedElement", "browserMajor", "isSafari", "isShadowed", "extractElementId", "err", "safariSelectOptionDispatchEventOnSelectElement", "featureFlagsService", "selectOptionCode", "selectOption", "SubmitStepAction", "init_submitStepAction", "__esmMin", "init_stepAction", "StepAction", "toDOMRect", "HoverStepAction", "init_hoverStepAction", "__esmMin", "init_stepAction", "height", "width", "x", "y", "StepAction", "target", "seleniumElement", "rectWithoutFrameOffset", "rect", "clickOffsetX", "clickOffsetY", "offset", "offsets", "wheel", "init_wheel", "__esmMin", "eventData", "done", "getEventPosition", "userEvent", "element", "isWithinBounds", "start", "end", "point", "pointerPosition", "rect", "clientX", "clientY", "getWheelEvent", "pos", "modifiers", "dict", "executeEvents", "events", "event", "currentEvent", "timeout", "WheelStepAction", "init_wheelStepAction", "__esmMin", "init_stepAction", "init_wheel", "StepAction", "_a", "step", "context", "events", "eventMessage", "timeout", "wheelCode", "wheel", "downloadFileAndFireDropEvent", "init_dropEvent", "__esmMin", "locatedElement", "fileUrls", "element", "simpleBarrier", "callbackIndex", "doneCallbacks", "results", "instance", "curIndex", "result", "fn", "getBlob", "url", "name", "cb", "xhr", "barrier", "fileUrl", "blobs", "event", "logger", "DropFileStepAction", "init_dropFileStepAction", "__esmMin", "init_stepAction", "init_logger", "init_dropEvent", "init_featureFlagsService", "getLogger", "StepAction", "codeSnippets", "utils", "target", "overrideAzureStorageUrl", "featureFlagsService", "fileUrls", "dropFileCode", "downloadFileAndFireDropEvent", "getVisibleElementScript", "positionAndSize", "downloadFile", "fileUrl", "fileName", "body", "download", "err", "logger", "localFileLocation", "fsPromises", "downloadFiles", "fileUrls", "promiseMap", "file", "uploadFileToGrid", "uploadFileFn", "downloadFilesAndUploadToGrid", "filesOnDisk", "gridLocalFiles", "gridLocalFile", "os", "import_fs", "init_inputFileUtils", "__esmMin", "init_httpRequest", "init_utils", "init_logger", "getLogger", "downloadAndUpload", "logger", "InputFileStepAction", "init_inputFileStepAction", "__esmMin", "init_inputFileUtils", "init_stepAction", "init_logger", "init_utils", "init_featureFlagsService", "getLogger", "StepAction", "localFileLocation", "target", "visibleScriptOptions", "getVisibleElementCode", "getVisibleElementScript", "options", "err", "gridLocalFiles", "edgeErrorEditableMessage", "edgeErrorFocusableMessage", "safariErrorVisibleMessage", "elementNotInteractable", "elementNotPointerOrKeyboardInteractable", "invalidStateMsg", "mustBeVisibleMsg", "notReachableByKeyboard", "errorMsg", "file", "extractElementId", "overrideAzureStorageUrl", "featureFlagsService", "useJsInputCodeInSafari", "useJsInputCodeInFirefox", "downloadToBase64", "fileUrls", "isSafariJsInputCode", "isFirefoxJsInputCode", "name", "url", "res", "download", "downloadFilesAndUploadToGrid", "import_url", "NavigationStepAction", "init_navigationStepAction", "__esmMin", "init_stepAction", "StepAction", "location", "orgUrl", "baseLocation", "newBaseLocation", "url", "updatedUrl", "SleepStepAction", "init_sleepStepAction", "__esmMin", "init_stepAction", "init_utils", "StepAction", "delay", "RefreshStepAction", "init_RefreshStepAction", "__esmMin", "init_stepAction", "StepAction", "error", "ApiStepAction", "init_apiStepAction", "__esmMin", "init_stepAction", "StepAction", "eventData", "_a", "timeout", "apiCall", "autRes", "err", "resolve", "commonConstants", "step", "context", "resp", "result", "resultInfo", "ExtractTextStepAction", "init_extractTextStepAction", "__esmMin", "init_stepAction", "StepAction", "paramName", "extractedText", "TdkHybridStepAction", "init_tdkHybridStepAction", "__esmMin", "init_stepAction", "init_hybridStepPlayback", "StepAction", "execute", "extractElementId", "element", "W3C_ELEMENT_ID", "LEGACY_ELEMENT_ID", "_", "import_eyes_sdk_core", "EyesSpec", "EyeSdkService", "eyeSdkService", "init_eyeSdkService", "__esmMin", "init_constants", "init_package", "init_getSessionPlayerRequire", "driver", "elementToCheck", "selector", "target", "key", "elementId", "error", "errOrResult", "_browser", "element1", "element2", "elementId1", "elementId2", "script", "arg", "value", "parent", "size", "desiredCapabilities", "url", "offset", "keys", "align", "timeout", "EyeSdkBuilder", "getSessionPlayer", "sdkVersion", "dependencies", "useVisualGrid", "concurrency", "batchId", "applitoolsIntegrationData", "manager", "_", "logger", "PixelValidationStepAction", "init_pixelValidationStepAction", "__esmMin", "init_stepAction", "init_logger", "init_eyeSdkService", "getLogger", "StepAction", "_a", "_b", "shouldUseVisualGrid", "config", "applitoolsSdkLogger", "testResultId", "finalParams", "batchId", "eyeManager", "eyeSdkService", "targetElementData", "result", "openedEye", "settings", "err", "BaseCliJsStepAction", "init_baseCliJsStepAction", "__esmMin", "init_utils", "init_service", "init_baseJsStepAction", "BaseJsStepAction", "_a", "_b", "_c", "step", "context", "isMobile", "code", "id", "incomingParams", "testResultId", "retryIndex", "stepResultId", "contextData", "runTimeout", "data", "runCodeWithPackages", "err", "stepResult", "TimeoutError", "CliJsStepAction", "init_cliJsStepAction", "__esmMin", "init_baseCliJsStepAction", "BaseCliJsStepAction", "resultValue", "CliConditionStepAction", "init_cliConditionStepAction", "__esmMin", "init_baseCliJsStepAction", "BaseCliJsStepAction", "resultValue", "NodePackageStepAction", "init_nodePackageStepAction", "__esmMin", "init_utils", "init_service", "init_stepAction", "init_errors", "StepAction", "context", "stepId", "packageData", "resultId", "retryIndex", "stepResultId", "timeToPlayBeforeExec", "installPackage", "err", "NpmPackageError", "TimeoutError", "ExtensionOnlyStepAction", "init_extensionOnlyStepAction", "__esmMin", "init_stepAction", "StepAction", "SfdcStepAction", "init_sfdcStepAction", "__esmMin", "init_stepAction", "StepAction", "_a", "_b", "sfdc", "page", "level", "message", "actions", "err", "SfdcRecordedStepAction", "init_sfdcRecordedStepAction", "__esmMin", "init_stepAction", "StepAction", "_a", "_b", "sfdc", "page", "level", "message", "err", "register", "stepActionByType", "stepActionFactory", "type", "stepActionRegistrar", "driver", "STEP_ACTION_MAPPING", "LocateStepAction", "init_stepActionRegistrar", "__esmMin", "init_locateStepAction", "init_scrollStepAction", "init_mouseStepAction", "init_textValidationStepAction", "init_evaluateExpressionStepAction", "init_textStepAction", "init_jsCodeStepAction", "init_jsConditionStepAction", "init_specialKeyStepAction", "init_selectOptionStepAction", "init_submitStepAction", "init_hoverStepAction", "init_wheelStepAction", "init_dropFileStepAction", "init_inputFileStepAction", "init_navigationStepAction", "init_sleepStepAction", "init_RefreshStepAction", "init_apiStepAction", "init_extractTextStepAction", "init_tdkHybridStepAction", "init_pixelValidationStepAction", "init_cliJsStepAction", "init_cliConditionStepAction", "init_nodePackageStepAction", "init_extensionOnlyStepAction", "init_sfdcStepAction", "init_sfdcRecordedStepAction", "ScrollStepAction", "MouseStepAction", "SubmitStepAction", "TextStepAction", "SpecialKeyStepAction", "JsCodeStepAction", "JsConditionStepAction", "EvaluateExpressionStepAction", "TextValidationStepAction", "SelectOptionStepAction", "DropFileStepAction", "InputFileStepAction", "HoverStepAction", "NavigationStepAction", "WheelStepAction", "SleepStepAction", "RefreshStepAction", "ApiStepAction", "ExtractTextStepAction", "PixelValidationStepAction", "ExtensionOnlyStepAction", "CliJsStepAction", "CliConditionStepAction", "NodePackageStepAction", "TdkHybridStepAction", "SfdcRecordedStepAction", "SfdcStepAction", "WindowCreationListener", "windowCreationListener", "init_windowCreationListener", "__esmMin", "_", "COMMUNICATION_BUFFER_TIME", "UI_VERIFICATION_STEPS", "FULL_TIMEOUT_STEP_TYPES", "PlaybackTimeoutCalculator", "init_playbackTimeoutCalculator", "__esmMin", "isDebuggerConnected", "totalStepTime", "currentRetryTimes", "now", "stepPlayback", "getRetryTimeoutSuggestions", "timeToPlayStep", "MINIMAL_RETRY_TIME", "fallbackTimeout", "playTimeSoFar", "totalRetryTime", "timePerEvent", "SLEEP_ERROR_MARGIN_MS", "actionType", "MIN_ACTION_PLAYBACK_TIME", "actionTime", "phase", "totalTime", "seleniumTestPlayer_exports", "__export", "SeleniumTestPlayer", "init_seleniumTestPlayer", "__esmMin", "init_utils", "init_webdriver", "init_cookieUtils", "init_tabService", "init_portSelector", "init_stepActionUtils", "init_frameLocator", "init_detectDebugger", "init_getSessionPlayerRequire", "init_testResultService", "init_stepActionRegistrar", "init_windowCreationListener", "init_playbackTimeoutCalculator", "id", "userParamsData", "shouldMonitorPerformance", "automationMode", "driver", "WebDriver", "testRetryCount", "previousTestResultId", "Player", "commonConstants", "StepActionFactory", "getSessionPlayer", "stepActionUtils", "StepActionUtils", "stepActionRegistrar", "TabService", "windowCreationListener", "PlaybackTimeoutCalculator", "isDebuggerConnected", "FrameLocator", "frameLocatorFactory", "CookieUtils", "portSelector", "testResultService", "result", "testId", "resultId", "step", "END_DRIVER_TIMEOUT", "promiseTimeout", "error", "TimeoutError", "openerStepId", "options", "lastId", "blackList", "ids", "PROHIBITED_URLS", "tabInfo", "bad", "tabUtils", "buildCodeTests_exports", "__export", "buildCodeTests", "buildCodeTestsGuarded", "files", "webpackConfig", "runnerOptionsToMaybeCopyToTestEnvironment", "fileSystem", "optionalAbortSignal", "_buildCodeTests", "e", "state", "webpack", "lazyRequire", "webpackConfigBeforeOurChanges", "getEnvironmentVariables", "f", "fileHashes", "guid", "crypto", "originalCryptoCreateHash", "algorithm", "options", "filename", "hash", "info", "compiler", "mfs", "MemoryFS", "abortSignalPromise", "promiseFromCallback", "cb", "AbortError", "stats", "cantFindFile", "ArgError", "file", "i", "code", "name", "fromEnvironment", "key", "fromConfig", "stringifyValues", "object", "value", "_", "path", "import_memory_fs", "init_buildCodeTests", "__esmMin", "init_utils", "init_errors", "init_lazyRequire", "service_exports", "__export", "compileFunctionsLibrary", "findTestFolder", "findTests", "getLocalLocatorContents", "getLocalLocators", "saveLocators", "saveTest", "folder", "locatorsFilePath", "parseLocators", "buffer", "codeWithoutRequires", "locators", "fsPromises", "id", "testFolder", "filesWithStat", "excluded", "excludedFileTypes", "x", "type", "promiseFromProps", "propsObject", "entries", "values", "value", "resolvedValues", "i", "full", "originFolder", "props", "key", "e", "body", "name", "language", "filename", "_body", "locatorMap", "_name", "localLocatorMap", "writeLocators", "content", "mergeIntoExisting", "elementLocator", "fileSystem", "bypassWebpack", "optionalAbortSignal", "AbortError", "functionsFile", "Module", "originalRequire", "buildCodeTests", "_", "path", "import_fs", "init_service", "__esmMin", "init_errors", "init_buildCodeTests", "fromFolder", "hybrid_utils_exports", "__export", "getArgumentsFromContext", "step", "context", "locatorStrategy", "argsInCorrectOrder", "fixArgsOrdering", "p", "arg", "parametersInOrder", "incomingParamsAs", "finalList", "index", "init_hybrid_utils", "__esmMin", "seleniumHybridStepPlayback_exports", "__export", "execute", "executeSeleniumFunction", "player", "hybridFunction", "step", "context", "source", "abortSignal", "_a", "onAbort", "WebDriver", "lazyRequire", "AbortError", "Executor", "HttpClient", "webdriverOptions", "startPath", "seleniumUrl", "client", "webDriver", "fixSeleniumMainTab", "args", "getArgumentsFromContext", "arg", "fn", "e", "driver", "contexts", "init_seleniumHybridStepPlayback", "__esmMin", "puppeteerHybridStepPlayback_exports", "__export", "execute", "executePuppeteerFunction", "player", "hybridFunction", "step", "context", "source", "abortSignal", "_a", "onAbort", "puppeteer", "lazyRequire", "AbortError", "browser", "pages", "foundMainPage", "page", "args", "getArgumentsFromContext", "arg", "e", "init_puppeteerHybridStepPlayback", "__esmMin", "init_errors", "init_lazyRequire", "init_hybrid_utils", "playwrightHybridStepPlayback_exports", "__export", "execute", "executePlaywrightFunction", "player", "hybridFunction", "step", "testimContext", "source", "abortSignal", "_a", "onAbort", "playwright", "lazyRequire", "AbortError", "browser", "page", "args", "getArgumentsFromContext", "arg", "e", "init_playwrightHybridStepPlayback", "__esmMin", "init_errors", "init_lazyRequire", "init_hybrid_utils", "tdkHybridStepPlayback_exports", "__export", "execute", "executeTdkFunction", "player", "hybridFunction", "context", "loginData", "frameManager", "step", "source", "abortSignal", "onAbort", "getLocator", "arg", "locateStep", "param", "args", "getArgumentsFromContext", "fn", "testId", "guid", "executionId", "resultId", "baseUrl", "userData", "version", "getSessionPlayer", "isLocalRun", "overrideTestConfigId", "branch", "testName", "ignoreNavigation", "codeTest", "onlyLocalReporting", "log", "testResult", "resolve", "reject", "resolveOnTestResultAndNotAssetsUploaded", "_onAbort", "AbortError", "e", "commonConstants", "runnerStatus", "value", "_", "init_tdkHybridStepPlayback", "__esmMin", "init_performance_logger", "init_utils", "init_errors", "init_hybrid_utils", "init_getSessionPlayerRequire", "hybridStepPlayback_exports", "__export", "abort", "execute", "run", "step", "context", "driver", "loginData", "frameManager", "source", "abortController", "abortSignal", "runningStepsAbortControllersRegistry", "log", "SeleniumTestPlayer", "compileFunctionsLibrary", "functionName", "userParamsData", "shouldMonitorPerformance", "player", "sessionType", "stepsProxy", "bypassWebpack", "code", "mfs", "e", "hybridFunction", "seleniumPlayback", "puppeteerPlayback", "playwrightPlayback", "tdkPlayback", "err", "logger", "stepResultId", "import_memory_fs", "import_abort_controller", "init_hybridStepPlayback", "__esmMin", "init_performance_logger", "init_logger", "init_constants", "MemoryFS", "getLogger", "remoteStep", "projectData", "userData", "nodePackageStepPlayback_exports", "__export", "run", "init_nodePackageStepPlayback", "__esmMin", "init_utils", "init_service", "init_errors", "browser", "step", "stepId", "testResultId", "retryIndex", "stepResultId", "packageData", "timeout", "installPackage", "err", "NpmPackageError", "TimeoutError", "saveRemoteStep", "projectId", "resultId", "stepId", "remoteStepData", "logger", "onCompleted", "runResult", "sessionId", "onFailed", "failureReason", "executeStep", "options", "driver", "step", "projectData", "userData", "stepType", "playback", "playbacks", "err", "init_remoteStepPlayback", "__esmMin", "init_cliJsStepPlayback", "init_hybridStepPlayback", "init_testimServicesApi", "init_nodePackageStepPlayback", "init_logger", "getLogger", "cliJsStepPlayback_exports", "nodePackageStepPlayback_exports", "hybridStepPlayback_exports", "remoteStepServiceSocketIO_exports", "__export", "remoteStepServiceSocketIO", "RemoteStepServiceSocketIO", "init_remoteStepServiceSocketIO", "__esmMin", "init_baseSocketServiceSocketIO", "BaseSocketService", "projectId", "resultId", "onRemoteStep", "data", "remoteStepService_exports", "__export", "remoteStepService", "REMOTE_STEP_SAVED", "remoteStepServiceSocketIO", "RemoteStepService", "init_remoteStepService", "__esmMin", "init_socketService", "init_constants", "init_featureFlagsService", "socketEventTypes", "projectId", "featureFlagsService", "resultId", "socketService", "onRemoteStep", "data", "_", "import_p_retry", "import_url", "logger", "RETRIES_ON_TIMEOUT", "MAX_LIGHTWEIGHT_MODE_RUN_DATA_SIZE", "canSendRunDataOverUrl", "TestRunHandler", "init_testRunHandler", "__esmMin", "init_utils", "init_config", "init_performance_logger", "init_testimAnalytics", "init_testimCustomToken", "init_testimServicesApi", "init_remoteStepPlayback", "init_logger", "init_preloadTests", "init_SeleniumPerfStats", "init_constants", "init_remoteStepService", "init_testResultService", "init_featureFlagsService", "getLogger", "runData", "_executionId", "_executionName", "test", "_options", "_branch", "_testRunStatus", "SeleniumPerfStats", "_a", "_b", "shouldUpdateConfig", "getRunConfigByBrowserName", "baseUrl", "appData", "activity", "lastValue", "featureFlagsService", "isAppFromDevice", "isAppForVirtualIosDevice", "MOBILE_APP_SOURCE", "link", "SERVICES_HOST", "appId", "url", "packageName", "runRequestParams", "getCustomTokenV3", "getRefreshToken", "EXTENSION_SERVICES_HOST", "trackWithCIUser", "isRunDataSentInUrl", "stringifiedLength", "testId", "preloadedTests", "preloadTests", "sessionId", "CLI_MODE", "mustClearPreviousStepResults", "uploadRunDataArtifactAndFallbackToEmptyString", "uploadRunDataArtifact", "err", "clearTestResultFinished", "runDataUrl", "clearTestResult", "cdpTestRunner", "log", "targetInfos", "extensionTargetId", "target", "AUTTargetId", "extensionSession", "extensionSessionId", "pRetry", "result", "testResult", "browserValue", "parsedUrl", "username", "password", "startTimeout", "resolve", "reportedStart", "resolveResult", "timeLimit", "checkIfDone", "testResultId", "branch", "projectId", "restResult", "getTestResults", "testResultService", "expectedStatuses", "timeoutMessages", "onConnected", "res", "debounceDelay", "maxWait", "waitForTestEnd", "isComplete", "isTestResultCompleted", "browser", "remoteStepService", "step", "executeStep", "maxRetryCount", "_c", "guid", "ExecutionQueue", "init_executionQueue", "__esmMin", "init_testRunHandler", "executionId", "executionName", "testList", "options", "branchToUse", "testStatus", "testInfo", "TestRunHandler", "nextTestRunHandler", "logger", "releaseGridSlot", "releasePlayer", "init_workerUtils", "__esmMin", "init_gridService", "init_logger", "getLogger", "workerId", "releaseSlotOnTestFinished", "projectId", "player", "buildFailureResult", "testId", "testName", "resultId", "reason", "import_ms", "import_moment", "import_p_retry", "logger", "GET_BROWSER_TIMEOUT_MSG", "TEST_START_TIMEOUT_MSG", "TEST_COMPLETE_TIMEOUT_MSG", "SETUP_TIMEOUT", "NETWORK_ERROR", "GRID_ERROR", "BROWSER_CLOSED", "SELENIUM_ERROR", "UNKNOWN_ERROR", "DELAY_BETWEEN_TESTS", "ordinal", "BaseWorker", "init_BaseWorker", "__esmMin", "init_utils", "init_performance_logger", "init_gridService", "init_testimServicesApi", "init_logger", "init_workerUtils", "init_reporter", "init_lambdatestService", "init_featureFlagsService", "init_remoteStepService", "init_testResultService", "init_httpRequest", "init_constants", "init_errors", "getLogger", "timeoutMessages", "stepResult", "ms", "executionQueue", "options", "customExtensionLocalLocation", "executionId", "onTestStarted", "onTestCompleted", "onGridSlot", "onTestIgnored", "releaseSlotOnTestFinished", "LambdatestService", "browser", "testRunHandler", "slot", "getGridSlot", "browserValue", "reporter", "NotImplementedError", "player", "gridInfo", "isQuarantineAndNotRemoteRun", "testResult", "runnerTestStatus", "isAppFromDevice", "isAppForIosVirtualDevice", "CLI_MODE", "_a", "projectId", "testPlayer", "log", "failedGetSlotAttempts", "pRetry", "startTime", "promiseTimeout", "error", "logDetails", "GridConcurrencyError", "delay", "getBrowserRetriesNumber", "failedGetBrowserAttempts", "handleHybridOrVendorIfNeeded", "getSessionTimeout", "getBrowserRes", "grid", "instanceType", "PageNotAvailableError", "err", "releasePlayer", "GridError", "GetBrowserError", "shouldRerun", "quarantineResult", "mobileTestResult", "isMobileProject", "appSource", "test", "_b", "runNextTest", "onRunComplete", "sessionId", "isTimeoutError", "timeoutMsg", "isIgnoreErrors", "isTimeoutErrors", "testRetryKey", "runTestAndCalcResult", "StopRunOnError", "getNetworkErrorMessage", "didNetworkConnectivityTestFail", "buildError", "wasNetworkHealthy", "featureFlagsService", "msg", "duration", "moment", "minutesCount", "secondsCount", "minutesTimeoutStr", "secondsTimoutStr", "SeleniumError", "onRunError", "isNetworkHealthy", "errorType", "updateTestResult", "testRunStatus", "recoverTestResults", "runError", "branch", "getTestResults", "disableResults", "disableRemoteStep", "remoteStepService", "testResultService", "result", "WorkerSelenium_exports", "__export", "WorkerSelenium", "setupCliPerformanceMonitoring", "sessionPlayer", "playback", "getSessionPlayer", "monitorEvent", "event", "log", "logger", "NO_NAVIGATION_TIME_LIMIT", "init_WorkerSelenium", "__esmMin", "init_utils", "init_performance_logger", "init_BaseWorker", "init_logger", "init_reporter", "init_errors", "init_preloadTests", "init_constants", "init_windowUtils", "init_seleniumTestPlayer", "init_getSessionPlayerRequire", "getLogger", "BaseWorker", "testRunHandler", "SeleniumTestPlayer", "customExtensionLocalLocation", "seleniumTestPlayer", "gridInfo", "reporter", "driver", "WindowUtils", "browserValue", "baseUrl", "fastInit", "err", "firefoxPageNotAvailable", "invalidURL", "PageNotAvailableError", "_a", "sessionPlayerInit", "version", "preloadedTest", "preloadTests", "runSeleniumTest", "playTestByCodePromise", "resolve", "reject", "promiseTimeout", "testResult", "timeoutMessages", "TimeoutError", "INCOGNITO", "maxKeepAliveGap", "resultWithStats", "TabService", "init_tabServiceMock", "__esmMin", "driver", "sessionId", "tabId", "addFrameHandlerCb", "openerStepId", "options", "openerStep", "order", "id", "tabInfo", "first", "second", "allUrls", "combinePartsFunction", "forceSwitch", "step", "frameLocatorFactory", "driver", "FrameLocator", "frameManager", "locateElementPlayer", "result", "frameTree", "testimFrameId", "logger", "frameLocator", "frameDepth", "currentFrame", "context", "stepData", "frameLocators", "init_mobileFrameLocatorMock", "__esmMin", "init_logger", "getLogger", "webdriverio", "logger", "AppiumTestPlayer", "init_appiumTestPlayer", "__esmMin", "init_tabServiceMock", "init_portSelector", "init_logger", "init_stepActionUtils", "init_detectDebugger", "init_getSessionPlayerRequire", "init_testResultService", "init_stepActionRegistrar", "init_mobileFrameLocatorMock", "init_windowCreationListener", "init_playbackTimeoutCalculator", "getLogger", "id", "userParamsData", "shouldMonitorPerformance", "automationMode", "driver", "testRetryCount", "previousTestResultId", "Player", "commonConstants", "StepActionFactory", "MobileLocateElementPlayer", "getSessionPlayer", "stepActionUtils", "StepActionUtils", "stepActionRegistrar", "TabService", "windowCreationListener", "PlaybackTimeoutCalculator", "isDebuggerConnected", "FrameLocator", "frameLocatorFactory", "portSelector", "testResultService", "result", "testId", "resultId", "step", "error", "WorkerAppium_exports", "__export", "WorkerAppium", "jsdom", "logger", "init_WorkerAppium", "__esmMin", "init_config", "init_testimServicesApi", "init_testimDesiredCapabilitiesBuilder", "init_BaseWorker", "init_logger", "init_reporter", "init_appiumTestPlayer", "init_getSessionPlayerRequire", "getLogger", "BaseWorker", "testRunHandler", "AppiumTestPlayer", "customExtensionLocalLocation", "appiumTestPlayer", "gridInfo", "reporter", "driver", "projectType", "nativeApp", "androidActivityWait", "appPath", "projectId", "appId", "mobileApp", "getAppDetails", "SERVICES_HOST", "capabilities", "buildAppiumOptions", "activeSession", "err", "host", "port", "accessToken", "_a", "executionId", "testId", "testResultId", "companyId", "gridId", "selectedDeviceArr", "getMobileDevicesFromGrid", "device", "updateTestStatus", "activeSessionCapabilities", "protocol", "path", "sessionPlayerInit", "getSessionPlayer", "sessionPlayer", "version", "serverAddress", "DOMParser", "runAppiumTest", "testResult", "resolve", "reject", "ExtensionTestPlayer", "init_extensionTestPlayer", "__esmMin", "init_utils", "init_webdriver", "init_errors", "id", "WebDriver", "promiseTimeout", "error", "TimeoutError", "import_ws", "CDPTestRunner", "init_cdpTestRunner", "__esmMin", "init_utils", "cdpUrl", "timeout", "websocket", "WebSocket", "openPromise", "promiseFromCallback", "cb", "errorPromise", "message", "_a", "object", "callback", "method", "params", "sessionId", "id", "result", "resolve", "reject", "msg", "launcher", "LauncherDriver", "ChromeLauncherTestPlayer", "init_chromeLauncherTestPlayer", "__esmMin", "init_utils", "init_testimDesiredCapabilitiesBuilder", "init_cdpTestRunner", "init_processHandler", "sessionId", "CDPTestRunner", "browserOptions", "testName", "testRunConfig", "gridInfo", "customExtensionLocalLocation", "executionId", "testResultId", "chromeFlags", "buildSeleniumOptions", "flag", "webSocketDebuggerUrl", "getCdpAddressForHost", "registerExitHook", "id", "guid", "WorkerExtension_exports", "__export", "WorkerExtension", "logger", "init_WorkerExtension", "__esmMin", "init_performance_logger", "init_errors", "init_BaseWorker", "init_utils", "init_logger", "init_reporter", "init_constants", "init_extensionTestPlayer", "init_chromeLauncherTestPlayer", "getLogger", "BaseWorker", "ChromeLauncherTestPlayer", "ExtensionTestPlayer", "testRunHandler", "customExtensionLocalLocation", "player", "gridInfo", "_a", "driver", "err", "reporter", "testResultId", "executionId", "testId", "log", "runViaCdpOrFallbackToAPI", "testTimeout", "promiseTimeout", "timeoutMessages", "TimeoutError", "navigateChromeSessionToRunTestim", "url", "startStatusDetails", "res", "updateRunHandlerThatTestStartedAndChangeStatusDetails", "runExtTest", "onBrowserClosed", "stepResult", "testResult", "maxKeepAliveGap", "WorkerExtensionSingleBrowser_exports", "__export", "WorkerExtensionSingleBrowser", "logger", "DELAY_BETWEEN_TESTS", "init_WorkerExtensionSingleBrowser", "__esmMin", "init_performance_logger", "init_utils", "init_logger", "init_workerUtils", "init_reporter", "init_WorkerExtension", "getLogger", "WorkerExtension", "projectId", "releasePlayer", "testRunHandler", "customExtensionLocalLocation", "player", "gridInfo", "reporter", "shouldRerun", "quarantineResult", "log", "test", "testPlayer", "_a", "delay", "schedule", "fn", "index", "START_WORKER_DELAY_MS", "logger", "ParallelWorkerManager", "init_ParallelWorkerManager", "__esmMin", "init_webdriver", "init_utils", "init_config", "init_performance_logger", "init_analyticsService", "init_testimCustomToken", "init_labFeaturesService", "init_errors", "init_logger", "init_constants", "init_executionQueue", "getLogger", "customExtensionLocalLocation", "mode", "CLI_MODE", "labFeaturesService", "count", "queue", "args", "Worker", "createWorker", "log", "testList", "testStatus", "executionId", "executionName", "options", "branchToUse", "authData", "workerCount", "stopOnError", "stoppedOnError", "runningTests", "runAndWaitToComplete", "token", "resolve", "_a", "_b", "_c", "_d", "_e", "_f", "projectId", "executionQueue", "ExecutionQueue", "combinedTestResults", "testCount", "companyId", "companyName", "source", "user", "companyPlan", "isStartUp", "projectName", "projectType", "lightweightMode", "sessionType", "getSessionType", "onTestStarted", "wid", "testId", "resultId", "isRerun", "testRetryKey", "appSource", "analyticsTestStart", "onTestCompleted", "testResult", "sessionId", "update", "err", "analyticsTestEnd", "onTestIgnored", "onGridSlot", "gridInfo", "getTokenV3UserData", "getRefreshToken", "SERVICES_HOST", "worker", "getCustomTokenV3", "result", "StopRunOnError", "RealDataServiceSocketIO", "init_realDataServiceSocketIO", "__esmMin", "init_baseSocketServiceSocketIO", "BaseSocketService", "projectId", "runId", "cb", "onDone", "data", "TEST_RESULT_CREATED", "TEST_RESULT_UPDATED", "RealDataService", "init_realDataService", "__esmMin", "init_socketService", "init_constants", "init_featureFlagsService", "init_realDataServiceSocketIO", "socketEventTypes", "featureFlagsService", "RealDataServiceSocketIO", "projectId", "runId", "socketService", "cb", "data", "getSuite", "options", "branchToUse", "_a", "testId", "guid", "buildCodeTests", "webpackConfig", "webpackConfigPath", "getSuiteTestList", "calcTestResultStatus", "tests", "total", "passed", "count", "resultId", "validateConfig", "testList", "supportedBrowsers", "diff", "getUniqBrowsers", "trackWithCIUser", "ArgError", "_", "path", "init_runnerUtils", "__esmMin", "init_utils", "init_testimAnalytics", "init_testimServicesApi", "init_errors", "import_lodash", "TESTIM_RUN_STATUS", "CLI_MODE", "logger", "TDK_CHILD_RESULTS_TIMEOUT", "TestPlanRunner", "init_TestPlanRunner", "__esmMin", "init_utils", "init_logger", "init_config", "init_constants", "init_performance_logger", "init_gridService", "init_branchService", "init_analyticsService", "init_testimServicesApi", "init_testimCustomToken", "init_reporter", "init_testRunStatus", "init_errors", "init_ParallelWorkerManager", "init_realDataService", "init_runnerUtils", "constants_exports", "getLogger", "customExtensionLocalLocation", "ParallelWorkerManager", "beforeTests", "tests", "afterTests", "branchToUse", "tpOptions", "executionId", "executionName", "testStatus", "executionResults", "authData", "getTokenV3UserData", "runBeforeTests", "workerCount", "stopOnError", "beforeTestsResults", "runTestPlanTests", "TESTIM_CONCURRENT_WORKER_COUNT", "log", "testsResults", "runAfterTests", "afterTestsResults", "sessionType", "getSessionType", "analyticsExecsStart", "err", "StopRunOnError", "runnerTestStatus", "handlePixelValidationBatches", "_a", "_b", "_c", "_d", "EyeSdkBuilder", "applitoolsIntegrationData", "getApplitoolsIntegrationData", "_", "apiKey", "serverUrl", "projectId", "realDataService", "RealDataService", "runId", "childTestResults", "isPromisePending", "_resolve", "resolve", "val", "testResult", "resultId", "prevTestResult", "mergedTestResult", "workerId", "reporter", "allChildTestResultCompleted", "result", "allParentTestResultCompleted", "delay", "testPlanName", "testPlanId", "branch", "isAnonymous", "guid", "setExecutionId", "test", "fullTestList", "TestRunStatus", "configs", "configName", "isCodeMode", "testNames", "testListInfoPromise", "testListInfo", "results", "childResults", "promiseTimeout", "testResults", "getRealData", "options", "flattenTestListData", "testPlansData", "all", "testRun", "testPlansResults", "testPlansTests", "data", "getTestPlanTestList", "testPlans", "ArgError", "validateConfig", "promiseMap", "testPlan", "id", "getTestPlanGridData", "testPlanTests", "res", "executions", "exeId", "calcTestResultStatus", "success", "exec", "saveTestPlanResult", "suiteResult", "getSuite", "runListResult", "suiteTests", "firstTest", "getCurrentBranch", "hasTestPlanFlag", "flattenResults", "total", "cur", "runner_exports", "__export", "init", "run", "validateCLIRunsAreAllowed", "options", "projectId", "track", "validateProjectQuotaNotDepleted", "usage", "getUsageForCurrentBillingPeriod", "QuotaDepletedError", "validateOptionsForCompany", "company", "_a", "_b", "_c", "_d", "getPlanType", "optionsParallel", "companyParallelValue", "ArgError", "optionsRetention", "companyRetention", "validateCliAccount", "err", "errType", "logger", "analyticsIdentify", "authData", "getTokenV3UserData", "identify", "initSocketServices", "disableResults", "disableRemoteStep", "featureFlagsService", "socketService", "remoteStepService", "testResultService", "setBranch", "branchInfoFromServer", "branch", "autoDetect", "setCurrentBranch", "setSfdcCredential", "getCurrentBranch", "loadSfdcCredential", "setCompany", "onprem", "id", "storageBaseUrl", "storageType", "name", "activePlan", "mode", "extensionPath", "ext", "playerPath", "CLI_MODE", "isPOC", "isStartUp", "planType", "FREE_PLAN_MINIMUM_BROWSER_TIMEOUT", "featureAvailabilityService", "setSystemInfo", "editorConfig", "EDITOR_URL", "setAllGrids", "allGrids", "setAuthData", "setProject", "project", "type", "defaults", "setGrid", "getGridData", "setMockNetworkRules", "props", "trackWithCIUser", "prepareMockNetwork", "runRunner", "customExtensionLocalLocation", "log", "remoteRunId", "useLocalChromeDriver", "useChromeLauncher", "checkNpmVersion", "connect", "results", "TestPlanRunner", "disconnect", "keepAlive", "showFreeGridRunWarningIfNeeded", "lightweightMode", "disableSockets", "featureFlagsReady", "socketConnected", "companyByProjectId", "projectById", "branchName", "initializeUserWithAuth", "browser", "getBrowserInfo", "labFeaturesService", "branchToUse", "reporter", "_", "init_runner", "__esmMin", "init_utils", "init_testimNpmDriver", "init_testimTunnel", "init_performance_logger", "init_gridService", "init_testimAnalytics", "init_branchService", "init_testimServicesApi", "init_testimCustomToken", "init_logger", "init_reporter", "init_config", "init_constants", "init_errors", "init_TestPlanRunner", "init_socketService", "init_labFeaturesService", "init_featureFlagsService", "init_featureAvailabilityService", "init_prepareRunner", "getLogger", "orchestrateGeneralRoutes", "app", "req", "res", "isStartMode", "getStartedWithStart", "getPackageVersion", "projects", "doLogin", "init_general", "__esmMin", "init_credentialsManager", "init_cliAgentMode", "init_testimNpmDriver", "hybridRoutes", "testimStandaloneBrowser", "router", "req", "res", "_a", "step", "context", "loginData", "execute", "result", "e", "logger", "abort", "import_express", "init_registerRoutes", "__esmMin", "init_hybridStepPlayback", "init_logger", "getLogger", "import_express", "router", "logger", "init_router", "__esmMin", "init_logger", "init_service", "getLogger", "req", "res", "tests", "findTests", "locators", "getLocalLocators", "contents", "getLocalLocatorContents", "mergeIntoExisting", "saveLocators", "code", "compileFunctionsLibrary", "e", "saveTest", "import_chalk", "import_express", "logger", "router", "init_router", "__esmMin", "init_service", "init_logger", "init_errors", "getLogger", "req", "res", "code", "stepId", "incomingParams", "context", "testResultId", "retryIndex", "stepResultId", "timeout", "fileDataUrl", "data", "runCodeWithPackages", "chalk", "err", "packageData", "installPackage", "NpmPackageError", "TimeoutError", "logger", "init_cliJsCode", "__esmMin", "init_service", "init_logger", "init_router", "getLogger", "cleanLocalPackageInstallFolder", "err", "createTempFile", "fileName", "data", "encoding", "fullPath", "runCodeLocally", "code", "forkId", "codeWithExtra", "fileFullPath", "promiseExec", "forkAsync", "runForks", "error", "exitCode", "runPlaygroundTest", "type", "ClientError", "stopPlaygroundTest", "fs", "os", "path", "import_child_process", "CODE_TYPES", "init_service", "__esmMin", "init_errors", "gotResolved", "promise", "resolve", "child", "message", "PlaygroundCodeError", "import_express", "router", "logger", "VALID_HOSTS", "parseUrl", "checkReferer", "init_router", "__esmMin", "init_logger", "init_errors", "init_config", "init_service", "getLogger", "url", "req", "res", "next", "DISABLE_AGENT_ORIGIN_CHECK", "referer", "origin", "refererUrl", "originUrl", "body", "code", "type", "CODE_TYPES", "runPlaygroundTest", "e", "ClientError", "PlaygroundCodeError", "stopPlaygroundTest", "standaloneBrowserRoutes", "testimStandaloneBrowser", "router", "req", "res", "import_express", "init_registerRoutes", "__esmMin", "routers_exports", "__export", "orchestrateRoutes", "beforeMiddleware", "standaloneBrowserInfo", "app", "express", "bodyParser", "compression", "corsOptions", "IS_ON_PREM", "DISABLE_AGENT_ORIGIN_CHECK", "cors", "orchestrateGeneralRoutes", "router", "standaloneBrowserRoutes", "hybridRoutes", "req", "res", "import_cors", "import_express", "import_body_parser", "import_compression", "init_routers", "__esmMin", "init_general", "init_registerRoutes", "init_router", "init_cliJsCode", "init_config", "server_exports", "__export", "init", "agentPort", "agentBind", "project", "token", "installPlaygroundPlaywrightDeps", "installPlaygroundPuppeteerDeps", "installPlaygroundSeleniumDeps", "testimStandaloneBrowser", "installExternalPackages", "initServer", "orchestrateRoutes", "resolve", "reject", "initFn", "app", "req", "res", "next", "server", "onError", "onListening", "error", "ArgError", "port", "showStartStopOptions", "all", "lazyRequire", "prepareChromeDriver", "x", "http", "init_server", "__esmMin", "init_testimCustomToken", "init_errors", "init_lazyRequire", "init_prepareRunnerAndTestimStartUtils", "cliAgentMode_exports", "__export", "getStartedWithStart", "runAgentMode", "options", "_a", "testimStandaloneBrowser", "preparePlayer", "getRidOfPossiblyRunningChromeWithOurDataDir", "startTestimStandaloneBrowser", "e", "ArgError", "agentServer", "packages", "packageToInstall", "lazyRequire", "startedWithStart", "isPidRunning", "pid", "startFixedVersionChromium", "extensionBase64", "downloadedExtensionPathUnzipped", "CHROMIUM_PROCESS_INFO_FILE", "TESTIM_BROWSER_DIR", "CHROMIUM_VERSION", "CHECK_CHROMIUM_RUNNING_INTERVAL", "onBrowserClosed", "doesPathExist", "processInfo", "monitorPidForExit", "chromeBinary", "downloadAndInstallChromium", "USER_DATA_DIR", "chromeFlags", "buildSeleniumOptions", "flag", "envVars", "appUrl", "chrome", "getCdpAddressForHost", "fullExtensionUrl", "EDGE_URL", "extensionFilename", "downloadedExtensionPath", "shouldDownloadExtension", "stat", "EXTENSION_CACHE_TIME", "spinner", "ora", "downloadAndSave", "unzipFile", "prepareChromeDriver", "seleniumOptions", "WebDriver", "SeleniumPerfStats", "webdriverApi", "webdriverInitResponse", "userDataDir", "fullExtensionPath", "unpackedExtensionPath", "chromeBinaryPath", "extensions", "args", "LOG_LEVEL", "CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILE_PATH", "webSocketDebuggerUrl", "readAndValidateChromedriverDevToolsActivePortFile", "tryToCloseBrowserWithCDPUrl", "fileContent", "portLine", "browserCDPURLLine", "line", "port", "timeout", "websocketConnection", "wsConnectAndOpen", "promiseFromCallback", "cb", "websocket", "WebSocket", "openPromise", "errorPromise", "import_ms", "import_ora", "import_ws", "fs", "path", "ChromeLauncher", "CHOMEDRIVER_DEVTOOLS_ACTIVE_PORT_FILENAME", "init_cliAgentMode", "__esmMin", "init_config", "init_prepareRunnerAndTestimStartUtils", "init_errors", "init_lazyRequire", "init_chromiumInstaller", "init_utils", "WEBDRIVER_DEBUG", "ms", "import_register", "_a", "index", "relativeIndex", "indexToRead", "import_perf_hooks", "os", "url", "http", "https", "import_form_data", "XMLHttpRequestEventTarget", "eventType", "listener", "_a", "index", "event", "listeners", "XMLHttpRequestUpload", "_request", "data", "body", "view", "i", "offset", "FormData", "headers", "loweredHeaders", "request", "ProgressEvent", "type", "SyntaxError", "NetworkError", "SecurityError", "InvalidStateError", "_XMLHttpRequest", "options", "baseUrl", "method", "_url", "async", "xhrUrl", "name", "value", "loweredName", "newMimeType", "newReadyState", "agent", "response", "lengthString", "urlString", "password", "user", "absoluteUrlString", "buffer", "arrayBuffer", "contentType", "match", "XMLHttpRequest", "XMLHttpRequest", "semver", "init_performance_logger", "init_prepareRunner", "init_runnerFileCache", "init_prepareRunnerAndTestimStartUtils", "import_chalk", "import_events", "init_constants", "init_processHandler", "init_errors", "init_constants", "init_isCiRun", "init_logger", "os", "path", "import_chalk", "import_fs", "writeStackTrace", "err", "_a", "_b", "_c", "homedir", "logFileName", "x", "chalk", "init_requireWithFallback", "logger", "getLogger", "exitCodeIgnoreFailingTests", "getExitCode", "result", "runnerStatus", "success", "testStatus", "status", "runnerTestStatus", "closeChromeDriverIfRunning", "requireWithFallback", "ignoreFailingTestsInExitCode", "onExit", "exitValue", "isCi", "writeStackTrace", "init_testimServicesApi", "init_logger", "logger", "getLogger", "checkNodeVersion", "engineVersion", "ArgError", "currentMinimalNodeVersion", "nextMinimalNodeVersion", "majorVersion", "dateHasPassed", "main", "utils", "options", "log", "registerProcessForCleanup", "onExit", "err", "processedOptions", "setProxyUri", "setProjectId", "setEncryptKey", "installAllLazyDependencies", "init", "clear", "initializeUserWithAuth", "preloadTests", "CLI_MODE", "preparePlayer", "res", "waitForSave", "getCacheFileLocation", "testRunner", "serveTunneling", "runAgentMode", "initServer", "port", "ignoreFailingTestsInExitCode", "customExtensionLocalLocation", "prepare", "NoArgsError", "argsForRemoteRunFailure", "updateRemoteRunFailure", "chalk", "SeleniumError", "result"]
}
